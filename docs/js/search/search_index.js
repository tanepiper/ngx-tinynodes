var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppContainerComponent.html",[0,1.513,1,2.302]],["body/components/AppContainerComponent.html",[0,2.533,1,2.882,2,2,3,0.101,4,0.196,5,1.512,6,1.137,7,1.36,8,1.512,9,0.074,10,3.081,11,2.383,12,0.219,13,3.079,14,1.251,15,1.239,16,3.443,17,3.487,18,1.605,19,3.683,20,3.675,21,1.457,22,4.341,23,1.786,24,2.371,25,5.207,26,2.371,27,4.222,28,0.34,29,0.822,30,3.526,31,5.207,32,2.942,33,6.792,34,7.101,35,1.296,36,4.222,37,4.169,38,4.169,39,2.111,40,3.177,41,2.691,42,3.683,43,2.205,44,5.207,45,4.608,46,4.608,47,0.791,48,2.383,49,3.079,50,6.402,51,5.895,52,1.567,53,4.222,54,1.795,55,0.008,56,1.54,57,0.809,58,0.95,59,1.885,60,1.204,61,2.496,62,1.941,63,2.064,64,2.693,65,1.795,66,2.371,67,4.222,68,2.693,69,4.77,70,5.895,71,2,72,2.057,73,2.422,74,2.693,75,3.736,76,2.693,77,5.216,78,3.736,79,1.23,80,2.693,81,3.736,82,3.281,83,1.803,84,4.222,85,3.177,86,4.222,87,2.725,88,1.939,89,2.325,90,2.693,91,3.416,92,2.693,93,3.736,94,2.572,95,1.77,96,5.207,97,2.179,98,4.222,99,2.693,100,2.572,101,2.693,102,2.693,103,2.394,104,2.693,105,2.693,106,2.693,107,2.693,108,5.216,109,2.693,110,2.693,111,3.177,112,0.373,113,2.371,114,2.179,115,0.383,116,1.641,117,0.827,118,1.573,119,1.238,120,1.024,121,2.986,122,1.716,123,1.457,124,2.383,125,0.096,126,0.247,127,1.716,128,2.693,129,2.693,130,3.947,131,2.693,132,2.693,133,2.693,134,2.693,135,1.585,136,2.693,137,1.832,138,2.693,139,2.693,140,2.693,141,2.179,142,2.179,143,2.693,144,1.05,145,2.693,146,2.693,147,2.693,148,2.179,149,2.179,150,2.383,151,1.317,152,2.693,153,2.693,154,3.13,155,1.905,156,2.817,157,2.026,158,2.693,159,2.064,160,2.383,161,3.736,162,3.736,163,2.383,164,2.383,165,2.383,166,2.383,167,2.383,168,1.169,169,0.928,170,1.457,171,3.736,172,3.311,173,4.608,174,2.383,175,2.383,176,1.641,177,2.371,178,2.827,179,0.63,180,3.736,181,2.383,182,2.179,183,2.383,184,3.416,185,2.383,186,2.383,187,2.383,188,2.026,189,1.573,190,2.383,191,2.383,192,0.928,193,2.371,194,1.832,195,1.169,196,3.311,197,1.512,198,1.512,199,1.202,200,1.276,201,1.444,202,1.407,203,2.371,204,1.238,205,1.407,206,1.512,207,1.317,208,1.512,209,1.512,210,1.238,211,1.512,212,1.276,213,0.311,214,1.326,215,1.512,216,1.317,217,1.512,218,1.317,219,1.238,220,1.512,221,1.238,222,1.512,223,1.276,224,1.317,225,1.457,226,1.169,227,1.407,228,1.512,229,0.002,230,0.004,231,0.002]],["title/modules/AppModule.html",[232,0.859,233,3.33]],["body/modules/AppModule.html",[1,4.287,3,0.155,4,0.155,9,0.113,10,1.532,12,0.336,13,3.033,14,1.546,23,1.586,55,0.009,59,1.845,65,2.001,69,4.698,112,0.503,115,0.588,116,2.517,117,2.061,118,3.922,124,3.656,125,0.147,126,0.379,192,1.424,201,1.365,204,3.658,207,3.89,213,0.306,214,1.824,224,3.89,229,0.004,230,0.005,231,0.004,232,1.225,233,6.55,234,1.494,235,1.611,236,2.914,237,2.914,238,1.611,239,1.611,240,3.656,241,3.656,242,3.656,243,3.656,244,5.628,245,5.328,246,5.328,247,4.482,248,5.628,249,5.328,250,2.593,251,1.744,252,1.744,253,4.132,254,5.806,255,4.107,256,4.698,257,3.142,258,4.698,259,5.806,260,3.343,261,2.323,262,5.806,263,3.656,264,3.656,265,5.138,266,4.698,267,2.633,268,5.806,269,4.132,270,4.132,271,2.932,272,3.656,273,3.656,274,2.02,275,4.132,276,3.656,277,3.656,278,3.343,279,3.109,280,4.132,281,4.132,282,4.132,283,4.132,284,3.343,285,4.132,286,4.132,287,4.132,288,3.656,289,3.656,290,3.656,291,3.109,292,5.806,293,4.132,294,4.132,295,2.922,296,4.132,297,4.132,298,4.132,299,4.132,300,4.132]],["title/modules/AppRoutingModule.html",[232,0.859,244,3.33]],["body/modules/AppRoutingModule.html",[0,1.954,3,0.228,4,0.228,9,0.166,10,2.254,12,0.495,13,3.176,14,1.725,15,2.2,55,0.008,59,3.347,112,0.447,115,0.866,125,0.266,126,0.558,204,3.446,205,3.915,229,0.005,230,0.007,231,0.005,232,1.368,234,2.199,239,2.371,244,5.301,257,3.29,261,2.999,289,5.381,290,5.381,301,4.92,302,4.92,303,7.495,304,5.019,305,7.495,306,6.064,307,6.064,308,3.415,309,4.576,310,2.567,311,4.92,312,6.632,313,5.381,314,5.381,315,4.576,316,6.081]],["title/injectables/AppService.html",[49,2.459,317,0.999]],["body/injectables/AppService.html",[3,0.131,4,0.131,9,0.095,12,0.548,13,3.515,14,1.648,15,1.507,23,1.774,28,0.44,30,2.646,32,2.44,35,2.066,39,2.336,40,3.863,43,2.681,47,1.507,49,2.681,52,1.368,54,2.588,55,0.009,56,1.628,57,0.948,58,1.228,61,2.377,72,2.561,73,1.431,78,4.543,79,1.441,82,2.228,83,2.332,87,2.495,95,2.254,103,3.74,112,0.438,115,0.496,120,1.323,121,3.631,123,1.884,125,0.123,126,0.32,135,1.929,137,3.114,144,2.798,172,2.883,214,2.358,229,0.003,230,0.005,231,0.003,238,2.001,258,5.445,260,2.817,274,3.895,317,1.09,318,1.358,319,0.5,320,3.081,321,2.92,322,4.153,323,1.541,324,2.256,325,3.863,326,2.999,327,4.543,328,4.543,329,3.631,330,2.817,331,3.931,332,3.641,333,6.643,334,3.482,335,2.51,336,3.272,337,5.075,338,4.785,339,4.543,340,4.543,341,1.044,342,3.482,343,1.65,344,4.153,345,4.543,346,5.806,347,4.543,348,3.482,349,3.631,350,2.153,351,4.543,352,1.695,353,3.482,354,3.863,355,3.081,356,3.482,357,2.681,358,1.474,359,2.219,360,1.291,361,2.778,362,1.758,363,1.758,364,2.646,365,2.332,366,2.817,367,2.463,368,3.081,369,3.081,370,3.081,371,3.081,372,3.081,373,3.081,374,3.272,375,3.887,376,3.081,377,3.081,378,3.482,379,3.482,380,3.081,381,3.081,382,3.081,383,3.081,384,3.081,385,3.081,386,1.393,387,3.081,388,3.081,389,3.081,390,3.081]],["title/injectables/AppService-1.html",[49,2.072,317,0.842,391,1.368]],["body/injectables/AppService-1.html",[3,0.136,4,0.136,9,0.099,10,2.822,12,0.558,13,3.581,14,1.668,15,1.551,28,0.457,30,2.706,32,2.495,35,2.105,39,2.359,40,5.159,43,2.759,47,1.551,49,2.759,52,1.389,54,2.513,55,0.009,56,1.581,57,0.921,58,1.138,72,2.589,73,1.487,82,2.292,87,2.541,95,2.285,103,3.777,112,0.443,115,0.515,120,1.376,121,3.735,123,1.959,125,0.128,126,0.332,135,1.96,137,3.164,144,2.842,172,2.033,214,2.391,229,0.003,230,0.005,231,0.003,238,2.059,258,5.547,260,2.929,274,3.938,317,1.121,318,1.411,321,2.975,322,4.273,323,1.586,324,2.245,325,3.974,326,3.085,327,4.674,328,4.674,329,3.735,330,2.929,331,4.005,332,3.709,333,6.735,335,2.582,336,3.366,337,5.156,338,4.852,339,4.674,340,4.674,341,1.059,343,1.697,344,4.273,345,4.674,346,5.898,347,4.674,349,3.735,350,2.201,351,4.674,352,1.722,354,3.974,355,3.203,357,2.759,358,1.517,359,2.307,360,1.342,361,2.858,362,1.828,363,1.828,364,2.292,365,2.424,366,2.929,367,2.56,368,3.203,369,3.203,370,3.203,371,3.203,372,3.203,373,3.203,374,2.307,375,3.366,376,3.203,377,3.203,380,3.203,381,3.203,382,3.203,383,3.203,384,3.203,385,3.203,386,1.448,387,3.203,388,3.203,389,3.203,390,3.203,392,3.203,393,3.62,394,3.62,395,3.62,396,3.62,397,3.62,398,3.62]],["title/interfaces/ApplicationData.html",[361,2.548,399,0.248]],["body/interfaces/ApplicationData.html",[3,0.187,4,0.187,9,0.136,12,0.602,14,1.4,23,1.558,28,0.629,29,1.284,55,0.009,57,0.833,58,1.349,59,2.945,66,4.421,79,1.747,82,3.209,87,3.371,112,0.274,125,0.262,144,3.282,168,3.417,169,2.273,176,4.017,177,2.796,189,3.852,229,0.004,230,0.006,231,0.004,308,2.796,319,0.332,341,1.194,350,2.779,352,1.747,358,1.43,361,3.568,386,3.15,399,0.432,400,1.08,401,3.746,402,4.416,403,4.416,404,2.571,405,4.416,406,4.952,407,5.272,408,3.615,409,2.289,410,3.173,411,4.203,412,2.223,413,3.033,414,4.952,415,2.784,416,3.033,417,3.334,418,2.223,419,3.334,420,3.334,421,3.173,422,2.6]],["title/interfaces/ApplicationData-1.html",[361,2.147,391,1.368,399,0.209]],["body/interfaces/ApplicationData-1.html",[3,0.187,4,0.187,9,0.136,10,1.849,12,0.602,14,1.402,23,1.178,28,0.63,29,1.286,55,0.009,57,0.834,58,1.351,59,2.948,66,4.424,79,1.749,82,3.212,87,3.372,112,0.274,125,0.263,144,3.283,168,3.419,169,2.276,176,4.022,177,2.801,189,3.857,229,0.004,230,0.006,231,0.004,308,2.801,341,1.195,350,2.781,352,1.749,358,1.432,361,3.573,386,3.152,399,0.432,400,1.082,402,4.421,403,4.421,404,2.574,405,4.421,406,4.956,407,5.276,408,3.619,409,2.293,410,3.179,411,4.208,412,2.227,413,3.038,414,4.956,415,2.787,416,3.038,417,3.34,418,2.227,419,3.34,420,3.34,421,3.179,422,2.605,423,3.753]],["title/modules/ApplicationDataModule.html",[232,0.859,245,3.153]],["body/modules/ApplicationDataModule.html",[3,0.22,4,0.22,9,0.16,12,0.476,14,1.553,23,1.886,49,4.588,55,0.008,95,2.196,112,0.46,115,0.833,125,0.207,126,0.537,192,2.016,229,0.005,230,0.007,231,0.005,232,1.457,234,2.115,235,2.28,236,2.538,237,2.538,238,3.112,239,2.28,245,6.129,250,3.266,251,2.469,252,2.469,261,2.927,319,0.389,331,5.131,332,4.753,366,4.731,367,4.136,409,3.363,424,5.175,425,5.175,426,5.848,427,3.694,428,7.315,429,5.919,430,4.898,431,5.848]],["title/injectables/ApplicationQuery.html",[317,0.999,331,2.75]],["body/injectables/ApplicationQuery.html",[3,0.223,4,0.223,9,0.162,12,0.601,14,1.567,23,1.745,47,1.743,52,1.131,54,2.046,55,0.008,56,1.287,57,0.75,58,1.083,95,2.217,112,0.462,115,0.845,125,0.211,126,0.738,137,2.576,229,0.005,230,0.007,231,0.005,271,2.998,274,4.371,317,1.567,318,2.315,319,0.492,324,1.985,331,4.313,332,4.55,337,6.118,365,3.975,367,4.199,427,3.729,432,5.253,433,5.974,434,2.267,435,4.803,436,5.936,437,2.486,438,3.034,439,2.651,440,4.467,441,4.803]],["title/injectables/ApplicationQuery-1.html",[317,0.842,331,2.318,391,1.368]],["body/injectables/ApplicationQuery-1.html",[3,0.224,4,0.224,9,0.163,10,2.745,12,0.602,14,1.572,47,1.75,52,1.136,54,2.055,55,0.008,56,1.293,57,0.753,58,1.088,95,2.223,112,0.463,115,0.849,125,0.211,126,0.739,137,2.587,229,0.005,230,0.007,231,0.005,271,3.011,274,4.375,317,1.572,318,2.325,324,1.991,331,4.325,332,4.557,337,6.125,365,3.992,367,4.217,427,3.739,433,5.99,434,2.273,435,4.824,437,2.492,438,3.042,439,2.662,440,4.486,441,4.824,442,5.276,443,5.962]],["title/interfaces/ApplicationState.html",[399,0.248,439,2.102]],["body/interfaces/ApplicationState.html",[3,0.172,4,0.172,9,0.125,12,0.372,14,1.689,23,1.471,28,0.577,29,1.213,55,0.009,56,1.351,57,0.895,63,3.463,79,1.673,87,2.309,95,2.283,112,0.342,117,1.404,125,0.291,144,3.381,151,3.045,179,0.929,201,1.618,213,0.433,214,2.802,229,0.004,230,0.006,231,0.004,319,0.304,323,1.373,324,2.38,341,0.636,343,1.469,350,2.809,352,1.673,357,3.253,358,1.788,362,2.309,363,2.309,364,3.841,386,3.47,399,0.443,400,0.992,408,2.235,418,2.041,434,1.404,439,2.781,444,2.914,445,3.37,446,3.498,447,2.629,448,2.166,449,2.102,450,2.388,451,2.474,452,2.166,453,1.788,454,3.145,455,2.309]],["title/interfaces/ApplicationState-1.html",[391,1.368,399,0.209,439,1.772]],["body/interfaces/ApplicationState-1.html",[3,0.174,4,0.174,9,0.127,10,1.721,12,0.378,14,1.698,23,1.097,28,0.586,29,1.225,55,0.009,56,1.365,57,0.902,63,3.49,79,1.687,87,2.333,95,2.298,112,0.346,117,1.425,125,0.293,144,3.391,179,0.939,201,1.627,213,0.435,214,2.788,229,0.004,230,0.006,231,0.004,323,1.394,324,2.386,341,0.646,343,1.492,350,2.702,352,1.687,357,3.287,358,1.807,362,2.344,363,2.344,364,3.852,386,3.481,399,0.445,400,1.007,418,2.073,434,1.425,439,2.81,445,3.405,446,3.534,447,2.656,448,2.199,449,2.134,450,2.424,451,2.512,452,2.199,453,1.807,454,3.177,455,2.344,456,2.959]],["title/injectables/ApplicationStore.html",[317,0.999,332,2.548]],["body/injectables/ApplicationStore.html",[3,0.229,4,0.229,9,0.167,12,0.497,14,1.851,23,1.776,47,2.39,52,1.164,55,0.008,56,1.325,95,2.55,112,0.448,115,0.87,125,0.217,126,0.561,144,2.381,229,0.005,230,0.007,231,0.005,271,3.084,274,4.263,317,1.595,318,2.381,319,0.5,324,2.021,332,4.067,364,2.651,365,4.09,386,2.444,427,3.795,434,2.308,439,2.727,457,5.405,458,6.108,459,5.033,460,5.655,461,4.32,462,2.808]],["title/injectables/ApplicationStore-1.html",[317,0.842,332,2.147,391,1.368]],["body/injectables/ApplicationStore-1.html",[3,0.23,4,0.23,9,0.168,10,2.794,12,0.499,14,1.854,47,2.395,52,1.169,55,0.008,56,1.331,95,2.554,112,0.448,115,0.874,125,0.218,126,0.563,144,2.392,229,0.005,230,0.007,231,0.005,271,3.098,274,4.269,317,1.6,318,2.392,324,2.026,332,4.078,364,2.663,365,4.108,386,2.455,427,3.805,434,2.314,439,2.739,459,5.046,460,5.671,461,4.339,462,2.821,463,5.429,464,6.135]],["title/interfaces/BasePlugin.html",[399,0.248,465,1.836]],["body/interfaces/BasePlugin.html",[3,0.186,4,0.186,9,0.135,12,0.403,14,1.051,28,0.625,29,1.28,35,2.412,52,0.944,55,0.009,57,0.83,58,1.589,88,2.161,112,0.361,115,0.705,125,0.29,126,0.454,135,1.767,201,1.007,213,0.389,229,0.004,230,0.006,231,0.004,232,1.199,310,2.774,319,0.33,323,1.487,341,1.026,352,1.856,360,1.835,399,0.431,400,1.074,465,3.063,466,3.502,467,4.4,468,3.69,469,2.853,470,3.838,471,4.257,472,4.103,473,3.841,474,4.4,475,2.892,476,3.293,477,4.939,478,1.275,479,2.034,480,2.679,481,3.316,482,2.149,483,2.781,484,3.156,485,1.791,486,3.69,487,3.69,488,2.7,489,2.892,490,3.156,491,3.016,492,2.09,493,2.679,494,3.156]],["title/interfaces/BasePlugin-1.html",[391,1.368,399,0.209,465,1.547]],["body/interfaces/BasePlugin-1.html",[3,0.186,4,0.186,9,0.135,12,0.402,14,1.049,28,0.624,29,1.278,35,2.41,52,0.942,55,0.009,57,0.829,58,1.588,88,2.158,112,0.361,115,0.704,125,0.29,126,0.454,135,1.765,201,1.005,213,0.414,229,0.004,230,0.006,231,0.004,232,1.198,310,2.771,319,0.329,323,1.484,341,1.025,352,1.855,360,1.832,399,0.431,400,1.072,465,3.061,467,4.395,468,3.686,469,2.852,470,3.834,471,4.255,472,4.1,473,3.838,474,4.395,475,2.887,476,3.29,477,4.934,478,1.273,479,2.031,480,2.674,481,3.31,482,2.145,483,2.776,484,3.15,485,1.788,486,3.686,487,3.686,488,2.697,489,2.887,490,3.15,491,3.011,492,2.086,493,2.674,494,3.15,495,3.496]],["title/interfaces/Block.html",[179,0.702,399,0.248]],["body/interfaces/Block.html",[3,0.146,4,0.146,6,1.645,9,0.106,12,0.317,28,0.492,29,1.382,52,0.743,55,0.009,57,1.174,58,1.295,60,1.736,79,1.536,125,0.297,159,3.468,168,2.418,169,2.833,170,3.014,179,1.374,213,0.433,229,0.003,230,0.005,231,0.003,304,2.61,319,0.371,324,2.282,341,1.195,343,2.412,352,1.316,391,1.343,399,0.465,400,0.845,404,1.519,412,2.487,434,2.178,438,1.601,469,1.197,496,2.109,497,2.189,498,3.897,499,2.418,500,2.109,501,3.129,502,3.129,503,2.035,504,1.905,505,3.129,506,2.91,507,3.003,508,2.91,509,3.302,510,2.91,511,2.276,512,1.519,513,2.91,514,3.451,515,3.254,516,2.189,517,3.518,518,2.276,519,2.276,520,2.276,521,2.276,522,2.276,523,2.91,524,2.109,525,2.189]],["title/interfaces/BlocksMap.html",[399,0.248,526,2.644]],["body/interfaces/BlocksMap.html",[3,0.186,4,0.186,9,0.135,12,0.404,52,0.945,55,0.009,57,0.831,71,3.117,79,1.554,89,2.215,95,1.489,112,0.406,119,4.248,120,1.885,125,0.298,179,1.22,213,0.465,229,0.004,230,0.006,231,0.004,319,0.438,341,1.193,343,1.594,352,2.135,360,3.35,399,0.443,400,1.076,437,1.67,453,1.424,478,1.277,497,2.786,512,2.565,526,3.695,527,3.162,528,6.051,529,3.843,530,4.96,531,2.897,532,3.843,533,2.35,534,2.897,535,2.35,536,2.897,537,2.425,538,1.985,539,2.786,540,2.897,541,2.35,542,2.153,543,2.786]],["title/interfaces/ChangeMap.html",[399,0.248,543,2.644]],["body/interfaces/ChangeMap.html",[3,0.186,4,0.186,9,0.135,12,0.402,52,0.942,55,0.009,57,0.829,71,3.11,79,1.551,89,2.207,95,1.484,112,0.405,119,4.246,120,1.879,125,0.298,179,1.099,213,0.465,229,0.004,230,0.006,231,0.004,319,0.437,341,1.192,343,1.588,352,2.134,360,3.348,399,0.443,400,1.072,437,1.664,453,1.419,478,1.273,497,2.776,512,3.061,526,2.776,527,3.15,528,6.047,529,2.887,531,2.887,532,3.834,533,2.342,534,2.887,535,2.342,536,2.887,537,2.416,538,1.978,539,2.776,540,3.834,541,3.11,542,2.848,543,3.686,544,4.942]],["title/classes/Changed.html",[126,0.432,545,2.378]],["body/classes/Changed.html",[3,0.179,4,0.179,9,0.13,18,3.157,28,0.6,29,1.245,32,3.396,39,1.836,47,1.396,52,1.377,54,1.639,55,0.009,56,1.031,57,1.141,58,0.867,60,1.099,61,1.854,112,0.352,125,0.301,126,0.74,201,1.64,213,0.461,229,0.004,230,0.006,231,0.004,319,0.515,324,1.719,341,1.122,447,2.007,478,1.224,533,4.089,538,3.227,545,4.073,546,2.777,547,4.708,548,2.896,549,4.433,550,3.362,551,4.839,552,6.395,553,4.754,554,4.523,555,3.184,556,3.91,557,2.67,558,4.058,559,3.896,560,1.902,561,4.058,562,3.03,563,4.221,564,3.362,565,5.141,566,3.227,567,3.362,568,3.362,569,3.362,570,3.184]],["title/interfaces/CreateEditorJSOptions.html",[399,0.248,571,3.33]],["body/interfaces/CreateEditorJSOptions.html",[3,0.102,4,0.102,9,0.074,12,0.221,15,0.798,16,1.587,20,1.47,28,0.343,29,0.828,30,2.79,32,2.095,39,2.269,47,0.798,55,0.009,56,1.136,57,0.661,58,1.3,62,1.249,72,1.683,73,2.152,79,1.237,88,1.948,89,1.898,94,2.59,95,1.276,103,3.39,112,0.405,115,0.387,119,1.955,120,1.033,122,1.732,123,1.47,125,0.21,126,0.249,135,1.729,137,3.533,179,0.884,213,0.434,229,0.002,230,0.004,231,0.002,310,1.147,317,0.902,319,0.181,321,1.179,323,0.816,335,1.328,341,1.146,343,0.873,358,1.958,359,1.732,360,1.941,374,1.732,375,1.732,399,0.276,400,0.589,409,1.955,415,1.795,422,1.419,437,2.91,447,1.147,448,1.287,449,1.249,453,2.269,462,2.408,478,0.7,479,1.747,482,2.79,488,1.116,492,1.147,529,1.587,531,2.483,533,2.014,535,1.287,537,2.078,538,1.087,540,1.587,541,1.287,542,2.571,549,3.721,556,1.47,557,1.526,560,2.095,566,3.526,571,3.704,572,1.922,573,2.59,574,4.162,575,2.871,576,3.967,577,3.094,578,3.338,579,1.922,580,1.922,581,4.457,582,1.819,583,2.387,584,1.655,585,1.922,586,2.71,587,1.819,588,2.387,589,2.198,590,2.198,591,3.007,592,1.922,593,2.044,594,1.819,595,1.287,596,1.732,597,3.365,598,4.19,599,3.704,600,3.199,601,2.483,602,3.199,603,2.834,604,3.199,605,3.199,606,1.955,607,1.419,608,1.922,609,1.287,610,3.44,611,2.198,612,2.198,613,2.198,614,2.198,615,1.922,616,2.198,617,2.198,618,2.198,619,5.202,620,2.198,621,2.198,622,2.198,623,2.198,624,2.198,625,2.198,626,2.198,627,2.198,628,2.198,629,2.198,630,3.047,631,1.655,632,3.008,633,2.198,634,2.59,635,1.587,636,2.044,637,2.044,638,1.819,639,2.198,640,1.732,641,2.198,642,2.198,643,2.198,644,2.198,645,2.198,646,1.213,647,2.198,648,1.655,649,1.249,650,2.198,651,2.198,652,2.044,653,2.198,654,3.44,655,3.199,656,2.198,657,2.198,658,2.044,659,2.198,660,2.198,661,2.198,662,2.847,663,1.819,664,3.199,665,3.199,666,2.198,667,3.199,668,2.198,669,2.198,670,2.198,671,2.198,672,1.819,673,2.044,674,2.198,675,2.044,676,2.198]],["title/interfaces/DemoData.html",[364,2.043,399,0.248]],["body/interfaces/DemoData.html",[3,0.174,4,0.174,9,0.127,12,0.377,14,1.514,23,1.485,28,0.585,29,1.224,55,0.009,56,1.788,57,0.794,63,3.073,79,1.095,87,1.718,95,2.141,112,0.346,117,1.423,125,0.292,144,3.117,151,3.073,179,0.938,201,1.676,213,0.445,214,2.869,229,0.004,230,0.006,231,0.004,319,0.309,323,1.391,324,2.433,341,0.992,343,2.292,350,2.518,352,1.685,357,2.42,358,1.331,362,2.34,363,2.34,364,3.659,386,3.199,399,0.452,400,1.005,408,2.265,418,2.806,434,1.423,439,2.069,444,2.954,445,2.507,446,2.602,447,2.653,448,2.196,449,2.89,450,2.42,451,2.507,452,2.196,453,1.805,454,3.174,455,2.34]],["title/interfaces/DemoData-1.html",[364,1.722,391,1.368,399,0.209]],["body/interfaces/DemoData-1.html",[3,0.177,4,0.177,9,0.129,10,1.744,12,0.383,14,1.526,23,1.112,28,0.594,29,1.237,55,0.009,56,1.796,57,0.802,63,3.105,79,1.112,87,1.744,95,2.158,112,0.349,117,1.445,125,0.294,144,3.133,179,0.947,201,1.684,213,0.446,214,2.862,229,0.004,230,0.006,231,0.004,323,1.413,324,2.438,341,1,343,2.31,350,2.242,352,1.698,357,2.458,358,1.351,362,2.376,363,2.376,364,3.674,386,3.216,399,0.454,400,1.02,418,2.836,434,1.445,439,2.101,445,2.546,446,2.642,447,2.681,448,2.23,449,2.92,450,2.458,451,2.546,452,2.23,453,1.824,454,3.207,455,2.376,456,2.999]],["title/interfaces/EditorJSAction.html",[399,0.248,592,3.33]],["body/interfaces/EditorJSAction.html",[3,0.103,4,0.103,9,0.075,12,0.224,15,0.807,16,1.606,20,1.488,28,0.347,29,0.836,30,2.806,32,2.112,39,2.276,47,0.807,55,0.009,56,1.293,57,0.542,58,1.088,62,1.264,72,1.696,73,2.168,79,0.65,88,1.961,89,1.916,94,2.614,95,1.288,103,3.404,112,0.407,115,0.392,119,1.973,120,1.045,122,1.753,123,1.488,125,0.211,126,0.252,135,1.739,137,3.543,179,0.889,213,0.435,229,0.002,230,0.004,231,0.002,310,1.161,317,0.911,319,0.183,321,1.193,323,0.825,335,1.344,341,1.149,343,1.696,358,1.712,359,1.753,360,1.956,374,1.753,375,1.753,399,0.314,400,0.596,409,1.264,415,1.811,422,1.436,437,2.915,447,1.161,448,1.303,449,1.264,453,2.276,462,1.973,478,0.708,479,1.13,482,2.29,488,1.13,492,1.161,529,1.606,531,2.507,533,3.247,535,1.303,537,2.098,538,1.1,540,1.606,541,1.303,542,2.29,549,4.264,556,1.488,557,1.544,560,2.112,566,3.532,571,3.035,572,1.945,573,1.675,574,3.083,575,1.916,576,1.841,577,2.241,578,2.735,579,1.945,580,1.945,581,4.486,582,1.841,583,2.41,584,1.675,585,1.945,586,2.735,587,1.841,588,2.41,589,2.225,590,3.472,591,4.217,592,3.035,593,2.069,594,1.841,595,1.303,596,1.753,597,3.377,598,4.217,599,3.732,600,3.229,601,2.507,602,3.229,603,2.855,604,3.229,605,3.229,606,1.973,607,1.436,608,1.945,609,1.303,610,3.472,611,2.225,612,2.225,613,2.225,614,2.225,615,1.945,616,2.225,617,2.225,618,2.225,619,5.231,620,2.225,621,2.225,622,2.225,623,2.225,624,2.225,625,2.225,626,2.225,627,2.225,628,2.225,629,2.225,630,3.064,631,1.675,632,3.021,633,2.225,634,2.614,635,1.606,636,2.069,637,2.069,638,1.841,639,2.225,640,1.753,641,2.225,642,2.225,643,2.225,644,2.225,645,2.225,646,1.228,647,2.225,648,1.675,649,1.264,650,2.225,651,2.225,652,2.069,653,2.225,654,3.472,655,3.229,656,2.225,657,2.225,658,2.069,659,2.225,660,2.225,661,2.225,662,2.873,663,1.841,664,3.229,665,3.229,666,2.225,667,3.229,668,2.225,669,2.225,670,2.225,671,2.225,672,1.841,673,2.069,674,2.225,675,2.069,676,2.225]],["title/components/EditorJSBaseComponent.html",[0,1.513,199,2.102]],["body/components/EditorJSBaseComponent.htmltitle/interfaces/EditorJSConfig.html",[399,0.248,577,2.459]],["body/interfaces/EditorJSConfig.html",[3,0.157,4,0.157,9,0.114,12,0.339,28,0.527,29,1.138,55,0.008,56,1.267,57,1.056,58,1.644,59,1.862,60,1.845,79,1.885,88,2.219,112,0.321,115,0.594,125,0.273,156,3.162,179,1.19,194,2.536,213,0.441,229,0.004,230,0.005,231,0.004,295,2.949,310,2.848,319,0.278,323,2.195,324,2.146,341,1.182,358,1.678,399,0.308,400,0.904,415,2.467,437,2.271,462,2.687,475,2.435,478,1.073,479,3.279,486,2.341,487,3.282,507,2.338,512,2.631,541,2.769,556,3.956,566,2.926,573,2.54,575,3.013,577,3.524,583,3.789,584,2.54,609,1.976,630,1.976,632,2.467,689,4.896,691,4.896,692,4.896,693,4.896,694,5.344,704,3.414,705,5.087,707,3.913,708,4.133,710,4.133,715,3.913,716,3.913,717,3.56,718,3.913,719,3.56,720,5.171,722,4.133,753,4.133,759,3.137,760,5.171,761,4.397,762,3.913,763,5.171,764,3.373,765,3.373,766,3.373,767,3.373,768,3.373,769,2.657,770,2.949,771,3.373,772,3.137,773,3.137,774,3.373]],["title/interfaces/EditorJSInstanceConfig.html",[399,0.248,775,3.809]],["body/interfaces/EditorJSInstanceConfig.html",[3,0.07,4,0.07,7,0.944,9,0.051,12,0.152,14,0.397,15,0.549,16,1.092,20,1.012,28,0.236,29,0.611,30,3.307,32,1.256,39,2.074,47,0.549,55,0.009,57,0.867,58,0.867,60,0.432,61,2.375,62,2.635,71,1.487,72,1.526,73,2.175,77,1.654,88,2.572,89,2.121,91,2.539,103,3.157,112,0.335,115,0.266,119,2.434,120,0.711,122,1.192,123,1.012,125,0.168,126,0.436,135,1.846,137,3.646,141,2.539,142,1.513,148,1.513,149,1.513,168,1.76,172,1.762,179,0.909,194,0.811,213,0.467,229,0.002,230,0.003,231,0.002,310,2.698,317,0.666,319,0.124,321,2.061,335,1.534,336,3.374,341,1.147,358,0.537,359,1.192,360,2.258,374,2.585,375,2,399,0.099,400,0.405,409,0.86,415,2.005,433,3.281,437,2.882,438,0.768,453,2.074,462,0.86,468,1.762,472,2.481,475,1.092,478,0.481,479,2.175,486,1.05,487,1.05,517,1.698,526,2.668,532,1.092,533,0.886,534,2.369,535,1.922,536,2.369,537,1.534,538,2.118,539,2.668,542,2.487,543,2.668,560,1.901,566,3.464,575,0.835,579,1.322,580,2.22,581,5.31,582,1.252,586,1.192,591,3.744,596,1.192,597,3.73,599,2.868,601,2.775,603,2.195,608,1.322,609,3.149,630,2.886,631,1.139,632,3.111,640,1.192,652,1.407,658,1.407,662,2.101,663,1.252,667,3.983,675,1.407,683,3.843,698,1.192,769,1.192,775,3.281,776,1.513,777,1.513,778,2.777,779,4.75,780,4.637,781,2.777,782,3.138,783,1.869,784,1.869,785,1.252,786,1.513,787,1.407,788,1.654,789,1.407,790,1.654,791,1.869,792,1.654,793,1.869,794,1.513,795,1.869,796,1.869,797,3.138,798,3.138,799,1.869,800,4.928,801,1.513,802,2.539,803,1.869,804,1.869,805,1.869,806,5.294,807,1.869,808,1.869,809,1.869,810,1.869,811,3.138,812,1.869,813,1.869,814,3.138,815,1.869,816,5.294,817,1.869,818,1.869,819,1.869,820,1.869,821,5.294,822,1.869,823,1.869,824,3.138,825,4.056,826,1.869,827,1.869,828,2,829,4.75,830,1.869,831,1.869,832,1.869,833,4.75,834,1.869,835,5.294,836,1.869,837,1.869,838,5.731,839,1.869,840,6.391,841,1.513,842,1.869,843,1.869,844,1.869,845,1.654,846,1.869,847,3.138,848,1.869,849,1.869,850,1.869,851,1.869,852,1.869,853,1.869,854,1.869,855,1.869,856,1.869,857,1.869,858,1.869,859,3.589,860,1.869,861,1.869,862,1.869,863,3.138,864,5.294,865,1.869,866,3.138,867,1.513,868,1.654,869,1.869,870,1.869,871,1.869,872,4.75,873,1.869,874,1.869,875,1.869,876,1.869,877,1.869,878,1.869,879,1.869,880,1.513,881,1.869,882,1.869,883,3.052,884,3.281,885,1.869,886,1.869,887,1.869,888,1.869,889,3.589,890,3.281,891,1.869,892,1.869,893,1.869,894,1.869,895,1.869,896,1.869,897,3.138,898,1.869,899,1.869,900,1.092,901,1.092,902,1.407,903,1.869]],["title/interfaces/EditorJSMaterialForm.html",[399,0.248,904,3.809]],["body/interfaces/EditorJSMaterialForm.html",[0,2.166,2,1.117,3,0.089,4,0.089,9,0.064,12,0.192,14,0.5,17,2.543,18,0.896,19,3.373,20,2.055,22,1.231,24,1.324,26,1.324,30,3.043,32,1.52,37,1.667,38,1.667,39,2.134,47,0.692,55,0.009,57,0.298,58,0.87,60,0.545,61,2.962,62,1.084,71,1.117,73,2.247,79,1.417,88,1.569,89,2.13,94,1.436,95,2.534,100,5.308,103,1.746,112,0.409,113,2.133,114,1.908,115,0.336,116,1.436,119,1.084,120,0.896,123,1.276,125,0.169,126,0.349,135,1.946,137,3.359,154,3.295,172,2.679,189,2.219,194,1.023,199,1.696,201,0.97,213,0.355,221,1.746,226,2.07,229,0.002,230,0.003,231,0.002,238,0.919,255,2.686,304,1.579,310,0.995,319,0.157,321,1.648,336,1.503,338,3.04,341,0.663,349,1.667,358,2.406,360,0.874,399,0.251,400,0.511,410,1.503,427,1.191,434,1.465,437,1.279,438,0.969,459,4.513,462,2.193,468,3.368,471,1.153,512,0.919,542,1.023,566,0.943,574,3.195,591,2.686,597,1.648,603,1.276,606,2.193,607,2.491,609,2.26,630,1.117,631,1.436,632,2.531,665,2.858,681,1.908,698,1.503,702,1.774,704,1.377,705,4.296,719,3.332,732,3.073,738,3.822,745,3.073,746,1.667,749,1.579,751,1.908,752,1.908,753,2.686,754,3.361,756,2.086,762,2.543,785,1.579,794,3.073,867,1.908,883,1.774,900,2.219,904,4.852,905,1.908,906,1.774,907,1.908,908,4.84,909,3.798,910,2.358,911,2.358,912,2.358,913,3.798,914,3.798,915,3.798,916,3.073,917,5.469,918,4.221,919,5.469,920,4.77,921,2.086,922,3.073,923,3.798,924,1.908,925,1.908,926,2.086,927,3.073,928,1.579,929,2.086,930,1.667,931,1.503,932,2.358,933,2.358,934,3.194,935,2.358,936,5.469,937,2.358,938,2.358,939,2.358,940,2.358,941,2.358,942,2.358,943,7.011,944,2.358,945,3.798,946,2.358,947,2.358,948,6.409,949,2.358,950,4.77,951,2.358,952,2.358,953,2.358,954,2.358,955,3.798,956,2.358,957,2.358,958,2.358,959,2.358,960,6.409,961,2.358,962,3.798,963,2.358,964,2.358,965,2.358,966,2.086,967,2.858,968,2.086,969,2.358,970,3.798,971,2.358,972,2.358,973,2.358,974,2.358,975,2.358,976,4.77,977,2.358,978,2.358,979,3.798,980,2.358,981,2.358,982,2.358,983,2.358,984,3.798,985,2.358,986,2.686,987,2.358,988,2.358,989,4.77,990,3.798,991,2.358,992,2.086,993,2.086,994,3.798,995,2.358,996,1.436,997,3.798,998,2.358,999,2.358,1000,2.358,1001,2.358,1002,2.358,1003,2.358,1004,1.774,1005,2.358,1006,2.358,1007,2.086,1008,2.086,1009,2.358,1010,2.086,1011,2.086,1012,2.358,1013,2.358,1014,2.358,1015,2.358,1016,2.358,1017,3.361,1018,4.77,1019,3.798,1020,2.358,1021,1.908,1022,2.358,1023,2.358,1024,2.358,1025,2.358,1026,2.358,1027,2.358,1028,2.358]],["title/interfaces/EditorMap.html",[399,0.248,536,2.75]],["body/interfaces/EditorMap.html",[3,0.187,4,0.187,9,0.136,12,0.405,52,0.949,55,0.009,57,0.833,71,3.125,79,1.558,89,2.223,95,1.495,112,0.407,119,4.235,120,1.892,125,0.299,179,1.103,213,0.47,229,0.004,230,0.006,231,0.004,319,0.439,341,1.194,343,1.6,352,2.136,360,3.352,399,0.444,400,1.08,437,1.676,453,1.43,478,1.282,497,2.796,512,2.571,526,2.796,527,3.173,528,6.054,529,2.908,531,2.908,532,3.852,533,2.359,534,2.908,535,3.125,536,3.852,537,2.434,538,1.992,539,2.796,540,2.908,541,2.359,542,2.161,543,2.796,1029,4.978]],["title/interfaces/EventMap.html",[399,0.248,534,2.75]],["body/interfaces/EventMap.html",[3,0.186,4,0.186,9,0.135,12,0.404,52,0.945,55,0.009,57,0.831,71,3.498,79,1.554,89,2.938,95,1.489,112,0.406,119,4.233,120,1.885,125,0.298,179,1.101,213,0.465,229,0.004,230,0.006,231,0.004,319,0.438,341,1.193,343,1.594,352,2.135,360,3.35,399,0.443,400,1.076,437,2.215,453,1.424,478,1.277,497,2.786,512,2.565,526,2.786,527,3.162,528,6.051,529,2.897,531,2.897,532,4.312,533,2.35,534,3.843,535,2.35,536,2.897,537,2.425,538,1.985,539,2.786,540,2.897,541,2.35,542,2.153,543,2.786,1030,4.96]],["title/interfaces/EventType.html",[399,0.248,532,2.75]],["body/interfaces/EventType.html",[3,0.185,4,0.185,9,0.134,12,0.4,28,0.621,29,1.274,55,0.009,57,1.098,58,1.193,71,3.482,79,1.545,89,2.195,95,1.476,112,0.404,119,4.194,120,1.869,125,0.297,179,1.096,213,0.464,229,0.004,230,0.006,231,0.004,319,0.327,341,1.209,343,2.362,352,2.1,360,3.295,399,0.442,400,1.066,437,1.655,453,1.412,478,1.266,512,2.55,526,2.761,527,3.133,528,5.952,529,2.872,531,3.82,532,4.293,533,3.712,534,2.872,535,2.329,536,2.872,537,2.403,538,1.967,539,2.761,540,2.872,541,2.329,542,2.133,543,2.761]],["title/components/FormContainerComponent.html",[0,1.513,200,2.231]],["body/components/FormContainerComponent.html",[0,2.261,1,0.743,2,1.246,3,0.057,4,0.057,5,0.853,6,0.641,7,0.767,8,0.853,9,0.041,10,0.563,12,0.337,13,1.373,14,0.558,15,1.216,17,3.433,18,0.999,19,2.458,20,2.533,21,0.822,22,3.745,23,1.211,24,1.476,26,1.476,28,0.192,29,0.512,30,3.429,32,1.658,35,0.807,37,2.93,39,2.418,43,1.373,47,1.216,49,2.164,52,1.518,54,1.428,55,0.008,56,1.526,57,0.826,58,0.756,59,1.85,60,1.464,61,2.796,65,2.765,66,3.089,72,2.101,73,2.39,79,1.211,82,0.659,87,1.9,88,2.314,89,2.09,94,3.123,95,2.019,100,3.544,103,2.8,111,3.117,112,0.348,115,0.216,117,1.438,119,0.698,120,0.577,121,1.859,122,0.968,123,0.822,125,0.054,126,0.139,130,2.327,135,1.378,137,2.387,141,1.229,142,1.229,151,2.025,154,0.743,155,3.626,156,1.422,157,1.978,159,1.699,169,1.428,172,2.326,177,0.853,179,0.698,192,0.524,193,1.476,194,1.141,195,0.659,196,2.326,197,0.853,198,0.853,199,0.678,200,1.963,201,1.458,202,4.127,203,1.476,204,0.698,205,0.793,206,0.853,207,0.743,208,0.853,209,0.853,210,0.698,211,0.853,212,0.72,213,0.458,214,2.386,215,0.853,216,0.743,217,0.853,218,0.743,219,1.598,220,0.853,221,0.698,222,0.853,223,0.72,224,0.743,225,0.822,226,0.659,227,0.793,228,0.853,229,0.001,230,0.002,231,0.003,251,2.164,255,1.859,310,0.641,319,0.534,321,2.525,323,0.789,324,1.892,325,1.143,326,1.536,329,1.074,335,1.285,336,1.676,341,0.366,349,1.859,350,0.536,354,1.978,358,1.472,391,0.906,412,1.174,416,1.602,437,1.576,438,0.624,452,1.246,453,2.269,469,0.807,479,0.624,485,0.951,499,1.141,507,1.658,509,1.428,510,0.793,512,1.355,514,1.209,537,0.743,542,1.141,559,2.524,560,2.869,566,2.328,574,4.652,597,3.399,601,3.398,606,1.905,609,1.246,630,1.246,632,1.11,637,1.978,638,1.76,646,1.552,717,1.602,719,1.602,738,3.505,749,1.017,762,3.433,780,3.352,802,2.127,841,2.127,845,2.326,890,2.127,900,2.42,934,1.017,986,2.93,1004,2.615,1007,4.536,1008,5.601,1031,7.1,1032,6.491,1033,1.143,1034,2.326,1035,2.127,1036,2.326,1037,2.326,1038,2.812,1039,2.127,1040,3.475,1041,4.536,1042,4.142,1043,2.629,1044,2.629,1045,2.326,1046,3.683,1047,1.344,1048,3.505,1049,3.666,1050,3.666,1051,4.142,1052,4.142,1053,1.519,1054,2.629,1055,1.519,1056,1.344,1057,2.629,1058,1.519,1059,4.142,1060,4.142,1061,1.519,1062,2.326,1063,2.326,1064,1.519,1065,1.519,1066,2.629,1067,1.519,1068,2.326,1069,1.519,1070,4.707,1071,1.519,1072,1.519,1073,2.629,1074,2.629,1075,1.859,1076,4.682,1077,3.475,1078,1.519,1079,1.344,1080,3.666,1081,1.519,1082,1.519,1083,1.344,1084,1.519,1085,1.519,1086,1.519,1087,1.519,1088,1.519,1089,1.519,1090,1.519,1091,1.519,1092,1.519,1093,1.229,1094,1.519,1095,1.229,1096,1.519,1097,1.344,1098,1.344,1099,1.074,1100,1.344,1101,1.344,1102,1.074,1103,1.344,1104,1.344,1105,1.344,1106,1.344,1107,1.519,1108,1.519,1109,1.519,1110,1.519,1111,1.519,1112,1.519,1113,1.519,1114,1.519,1115,1.519,1116,3.666,1117,1.344,1118,1.344,1119,1.074,1120,1.344,1121,3.475,1122,1.344,1123,1.344,1124,1.344,1125,1.344,1126,1.344,1127,1.344,1128,1.859,1129,3.135,1130,1.344,1131,1.344,1132,1.344,1133,2.629,1134,2.629,1135,2.629,1136,2.127,1137,2.629,1138,2.629,1139,1.978,1140,4.142,1141,3.666,1142,2.629,1143,2.629,1144,2.774,1145,2.629,1146,2.629,1147,2.629,1148,2.326,1149,2.326,1150,2.326,1151,1.344,1152,1.344,1153,1.344,1154,1.344,1155,1.344,1156,1.344,1157,2.127,1158,2.326,1159,2.127,1160,2.326,1161,2.127,1162,2.326,1163,2.326,1164,2.458,1165,1.344,1166,2.812,1167,1.229,1168,1.229,1169,1.344,1170,1.519]],["title/interfaces/Header.html",[399,0.248,509,1.935]],["body/interfaces/Header.html",[3,0.148,4,0.148,6,1.666,9,0.108,12,0.321,28,0.499,29,1.275,55,0.009,57,1.162,58,1.302,60,1.813,79,1.547,125,0.298,159,4.031,168,2.44,169,2.842,170,3.042,179,1.365,213,0.413,229,0.004,230,0.005,231,0.004,319,0.263,324,2.169,341,1.184,343,2.104,352,0.933,391,1.938,399,0.462,400,0.856,404,1.539,412,2.51,434,2.191,438,1.622,469,1.212,496,2.136,499,1.713,500,2.136,501,3.157,502,3.157,503,2.062,504,1.93,505,3.157,506,2.937,507,3.018,508,2.937,509,3.538,510,4.095,511,3.284,512,2.553,513,2.937,514,3.468,515,3.284,516,2.217,517,3.543,518,2.306,519,2.306,520,2.306,521,2.306,522,2.306,523,2.937,524,2.136,525,2.217]],["title/interfaces/HeaderBlock.html",[399,0.248,513,2.459]],["body/interfaces/HeaderBlock.html",[3,0.151,4,0.151,6,1.701,9,0.11,12,0.328,28,0.509,29,1.29,55,0.009,57,1.167,58,1.314,60,1.758,79,1.564,125,0.299,159,3.521,168,2.476,169,2.857,170,3.086,179,1.375,213,0.428,229,0.004,230,0.005,231,0.004,319,0.268,324,2.122,341,1.153,343,2.128,352,0.952,391,1.389,399,0.467,400,0.874,404,1.571,412,2.547,434,2.334,438,1.655,469,1.237,496,2.18,499,1.748,500,2.18,501,3.203,502,3.203,503,2.104,504,1.969,505,3.203,506,2.979,507,3.041,508,2.979,509,3.406,510,2.979,511,2.353,512,1.571,513,3.459,514,3.495,515,3.332,516,2.262,517,3.583,518,2.353,519,2.353,520,2.353,521,2.353,522,2.353,523,2.979,524,2.18,525,2.262]],["title/components/HomePageComponent.html",[0,1.513,204,2.165]],["body/components/HomePageComponent.html",[0,2.261,1,2.206,2,3.584,3,0.169,4,0.169,5,2.534,6,1.905,7,2.278,8,2.534,9,0.123,10,2.608,21,2.441,22,4.733,23,2.086,24,3.466,26,3.466,28,0.57,32,1.805,39,1.296,43,3.224,47,1.325,48,3.993,49,3.951,52,1.176,54,1.555,55,0.008,56,1.718,57,0.57,58,0.823,59,2.756,62,2.838,63,3.017,65,2.425,82,1.958,87,2.936,112,0.339,115,0.642,117,1.385,125,0.16,126,0.414,127,2.876,135,1.213,150,3.993,151,2.206,154,2.206,169,2.127,192,1.555,193,3.466,194,2.679,195,1.958,196,4.248,197,2.534,198,2.534,199,2.015,200,2.138,201,1.703,202,2.357,203,3.466,204,3.478,205,4.453,206,2.534,207,2.206,208,2.534,209,2.534,210,2.074,211,2.534,212,2.138,213,0.399,214,2.376,215,2.534,216,2.206,217,2.534,218,2.206,219,2.074,220,2.534,221,2.074,222,2.534,223,2.138,224,2.206,225,2.441,226,1.958,227,2.357,228,2.534,229,0.004,230,0.005,231,0.004,256,4.994,329,3.191,430,5.065,499,2.679,1099,3.191,1128,4.365,1129,4.133,1171,6.225,1172,3.993,1173,7.035,1174,6.172,1175,4.512,1176,4.512,1177,6.172,1178,4.644,1179,5.462,1180,4.644,1181,6.172,1182,6.172,1183,4.994,1184,5.462,1185,3.934,1186,4.644,1187,5.462,1188,6.172,1189,3.76,1190,6.172]],["title/interfaces/Image.html",[399,0.248,514,2.165]],["body/interfaces/Image.html",[3,0.141,4,0.141,6,1.582,9,0.102,12,0.305,28,0.473,29,1.239,55,0.009,57,1.164,58,1.619,60,1.782,79,1.958,125,0.294,159,3.407,168,2.351,169,2.803,170,2.931,179,1.358,213,0.406,229,0.003,230,0.005,231,0.003,319,0.25,324,2.136,341,1.198,343,2.044,352,0.886,391,1.292,399,0.458,400,0.813,404,1.461,412,3.44,434,2.14,438,1.54,469,1.151,496,2.028,499,1.627,500,2.028,501,3.042,502,3.042,503,1.958,504,1.832,505,3.042,506,2.829,507,2.958,508,2.829,509,3.342,510,2.829,511,2.189,512,1.461,513,2.829,514,3.739,515,4.5,516,3.042,517,4.169,518,4.071,519,3.164,520,4.071,521,3.164,522,4.071,523,2.829,524,2.028,525,2.105]],["title/interfaces/ImageBlock.html",[399,0.248,523,2.459]],["body/interfaces/ImageBlock.html",[3,0.151,4,0.151,6,1.701,9,0.11,12,0.328,28,0.509,29,1.29,55,0.009,57,1.167,58,1.314,60,1.758,79,1.564,125,0.299,159,3.521,168,2.476,169,2.857,170,3.086,179,1.375,213,0.428,229,0.004,230,0.005,231,0.004,319,0.268,324,2.122,341,1.153,343,2.128,352,0.952,391,1.389,399,0.467,400,0.874,404,1.571,412,2.547,434,2.334,438,1.655,469,1.237,496,2.18,499,1.748,500,2.18,501,3.203,502,3.203,503,2.104,504,1.969,505,3.203,506,2.979,507,3.041,508,2.979,509,3.334,510,2.979,511,2.353,512,1.571,513,2.979,514,3.629,515,3.332,516,2.262,517,3.583,518,2.353,519,2.353,520,2.353,521,2.353,522,2.353,523,3.459,524,2.18,525,2.262]],["title/interfaces/List.html",[169,1.623,399,0.248]],["body/interfaces/List.html",[3,0.148,4,0.148,6,1.666,9,0.108,12,0.321,28,0.499,29,1.275,55,0.009,57,1.165,58,1.302,60,1.813,79,1.547,125,0.298,159,3.489,168,3.402,169,2.998,170,4.242,179,1.365,213,0.413,229,0.004,230,0.005,231,0.004,319,0.263,324,2.169,341,1.147,343,2.519,352,0.933,391,1.361,399,0.462,400,0.856,404,1.539,412,2.51,434,2.191,438,1.622,469,1.212,496,2.136,499,1.713,500,2.136,501,3.157,502,3.157,503,2.062,504,1.93,505,4.008,506,2.937,507,3.018,508,2.937,509,3.314,510,2.937,511,2.306,512,1.539,513,2.937,514,3.468,515,3.284,516,2.217,517,3.543,518,2.306,519,2.306,520,2.306,521,2.306,522,2.306,523,2.937,524,2.136,525,2.217]],["title/interfaces/ListBlock.html",[399,0.248,506,2.459]],["body/interfaces/ListBlock.html",[3,0.15,4,0.15,6,1.691,9,0.109,12,0.326,28,0.506,29,1.286,55,0.009,57,1.166,58,1.311,60,1.822,79,1.559,125,0.299,159,3.511,168,2.465,169,2.943,170,3.074,179,1.374,213,0.436,229,0.004,230,0.005,231,0.004,319,0.267,324,2.118,341,1.151,343,2.121,352,0.946,391,1.38,399,0.464,400,0.869,404,1.562,412,2.536,434,2.329,438,2.334,469,1.744,496,2.167,499,1.738,500,2.167,501,3.19,502,3.19,503,2.092,504,1.958,505,3.19,506,3.448,507,3.035,508,2.967,509,3.328,510,2.967,511,2.34,512,1.562,513,2.967,514,3.487,515,3.318,516,2.249,517,3.572,518,2.34,519,2.34,520,2.34,521,2.34,522,2.34,523,2.967,524,2.167,525,2.249]],["title/modules/MaterialModule.html",[232,0.859,246,3.153]],["body/modules/MaterialModule.html",[3,0.239,4,0.239,9,0.174,10,2.359,12,0.518,55,0.008,62,3.543,100,4.694,112,0.424,115,0.906,116,3.876,125,0.226,126,0.584,229,0.006,230,0.007,231,0.006,232,1.406,234,2.301,239,2.481,246,5.16,257,3.443,261,3.083,291,6.237,322,6.234,468,4.327,609,3.651,1191,6.363,1192,5.798,1193,8.288,1194,8.288,1195,7.334,1196,7.334,1197,6.706]],["title/interfaces/MenuGroup.html",[350,1.662,399,0.248]],["body/interfaces/MenuGroup.html",[3,0.179,4,0.179,9,0.13,12,0.589,14,1.013,23,1.514,28,0.603,29,1.248,55,0.009,57,0.914,58,1.55,59,2.862,66,4.913,79,1.127,82,3.142,87,3.398,112,0.262,125,0.257,144,2.499,168,3.836,169,1.644,176,3.905,177,2.679,189,3.744,229,0.004,230,0.006,231,0.004,308,2.679,319,0.318,341,1.24,350,2.556,352,2.04,358,1.841,361,2.581,386,1.909,399,0.408,400,1.035,401,3.59,402,3.195,403,3.195,404,1.86,405,3.195,406,4.847,407,5.183,408,3.947,409,2.193,410,3.041,411,4.614,412,2.13,413,2.906,414,5.183,415,3.056,416,3.905,417,4.292,418,2.862,419,4.292,420,4.292,421,4.086,422,3.348]],["title/interfaces/MenuGroup-1.html",[350,1.401,391,1.368,399,0.209]],["body/interfaces/MenuGroup-1.html",[3,0.179,4,0.179,9,0.131,10,1.772,12,0.59,14,1.014,23,1.129,28,0.604,29,1.25,55,0.009,57,0.915,58,1.551,59,2.865,66,4.914,79,1.129,82,3.144,87,3.398,112,0.263,125,0.257,144,2.502,168,3.838,169,1.647,176,3.909,177,2.684,189,3.749,229,0.004,230,0.006,231,0.004,308,2.684,341,1.241,350,2.558,352,2.041,358,1.843,361,2.586,386,1.912,399,0.408,400,1.036,402,3.2,403,3.2,404,1.863,405,3.2,406,4.852,407,5.186,408,3.95,409,2.197,410,3.046,411,4.618,412,2.134,413,2.911,414,5.186,415,3.059,416,3.909,417,4.297,418,2.865,419,4.297,420,4.297,421,4.09,422,3.352,423,3.596]],["title/interfaces/MenuItem.html",[399,0.248,408,2.302]],["body/interfaces/MenuItem.html",[3,0.172,4,0.172,9,0.125,12,0.684,14,0.974,23,1.676,28,0.579,29,1.216,55,0.009,57,1.006,58,1.629,59,3.401,66,4.474,79,1.084,82,2.709,87,3.367,112,0.252,125,0.252,144,2.434,168,3.305,169,1.581,176,5.007,177,3.506,189,4.801,229,0.004,230,0.006,231,0.004,308,2.576,319,0.305,341,1.269,350,2.204,352,1.676,358,1.317,361,2.482,386,1.836,399,0.402,400,0.995,401,3.452,402,3.072,403,3.072,404,1.789,405,3.072,406,5.504,407,5.731,408,4.018,409,2.87,410,3.979,411,4.523,412,2.787,413,4.64,414,5.631,415,2.995,416,2.795,417,3.072,418,2.048,419,3.072,420,3.072,421,2.924,422,2.396]],["title/interfaces/MenuItem-1.html",[391,1.368,399,0.209,408,1.94]],["body/interfaces/MenuItem-1.html",[3,0.173,4,0.173,9,0.125,10,1.703,12,0.685,14,0.975,23,1.476,28,0.58,29,1.217,55,0.009,57,1.007,58,1.629,59,3.403,66,4.477,79,1.086,82,2.712,87,3.368,112,0.253,125,0.252,144,2.437,168,3.308,169,1.584,176,5.01,177,3.51,189,4.804,229,0.004,230,0.006,231,0.004,308,2.58,341,1.269,350,2.206,352,1.678,358,1.319,361,2.486,386,1.839,399,0.402,400,0.996,402,3.077,403,3.077,404,1.792,405,3.077,406,5.507,407,5.733,408,4.02,409,2.873,410,3.983,411,4.527,412,2.79,413,4.643,414,5.634,415,2.998,416,2.799,417,3.077,418,2.052,419,3.077,420,3.077,421,2.929,422,2.4,423,3.458]],["title/classes/MockEditorJS.html",[126,0.432,1198,3.33]],["body/classes/MockEditorJS.html",[3,0.193,4,0.193,9,0.141,18,1.956,28,0.65,29,1.313,39,1.478,47,1.979,52,1.578,54,1.774,55,0.009,56,1.116,57,1.046,58,0.939,73,2.114,112,0.413,125,0.267,126,0.732,127,3.28,135,2.145,229,0.005,230,0.006,231,0.005,319,0.566,341,0.937,415,2.845,453,2.29,465,2.628,469,1.58,471,3.295,472,2.688,476,3.01,478,1.325,546,3.006,560,2.059,575,3.356,577,4.166,601,3.006,603,4.067,640,3.28,828,3.28,900,3.006,901,4.659,1119,3.64,1198,4.767,1199,3.872,1200,6.082,1201,4.554,1202,6.74,1203,5.146,1204,5.146,1205,5.146,1206,4.164,1207,4.164,1208,4.767,1209,4.164,1210,3.64,1211,6.082,1212,4.164,1213,4.164,1214,4.164,1215,4.164,1216,4.164]],["title/injectables/MockNgZone.html",[317,0.999,1217,3.809]],["body/injectables/MockNgZone.html",[3,0.202,4,0.202,9,0.147,12,0.437,28,0.678,29,1.349,35,2.127,47,2.252,52,1.599,54,2.388,55,0.008,56,1.502,57,0.969,58,1.264,60,1.241,61,2.093,72,2.465,73,2.846,88,2.278,112,0.295,115,0.764,125,0.19,126,0.493,135,1.863,229,0.005,230,0.006,231,0.005,317,1.47,318,2.093,319,0.572,413,3.27,434,2.127,461,3.796,462,2.468,472,4.488,580,5.934,730,6.558,800,6.952,801,5.605,916,6.206,1217,5.605,1218,7.603,1219,4.75,1220,6.927,1221,6.927,1222,7.67,1223,6.927,1224,8.105,1225,6.927,1226,6.927,1227,5.367,1228,6.927,1229,5.367,1230,5.367,1231,6.927,1232,5.367,1233,5.367]],["title/classes/MockPlugin.html",[126,0.432,1210,3.33]],["body/classes/MockPlugin.html",[3,0.201,4,0.201,9,0.146,18,2.63,28,0.677,35,2.124,39,2.201,47,1.573,52,1.319,55,0.009,72,2.223,73,2.201,112,0.421,125,0.272,126,0.743,127,3.415,135,2.178,229,0.005,230,0.006,231,0.005,319,0.51,341,0.962,415,2.921,453,1.987,465,2.988,469,2.487,471,4.099,476,3.422,478,1.379,546,3.129,560,2.144,575,3.089,577,3.614,601,3.129,603,2.899,640,3.415,828,3.415,900,3.129,901,4.042,1119,3.789,1198,3.789,1199,4.031,1200,4.334,1206,4.334,1207,4.334,1208,4.893,1209,4.334,1210,4.893,1211,6.2,1212,4.334,1213,4.334,1214,4.334,1215,4.334,1216,4.334,1234,5.357,1235,5.357]],["title/components/NavBarComponent.html",[0,1.513,207,2.302]],["body/components/NavBarComponent.html",[0,2.698,1,1.935,2,2.67,3,0.149,4,0.149,5,2.223,6,1.671,7,1.999,8,2.223,9,0.108,10,2.649,12,0.322,13,2.943,14,1.196,15,1.654,21,2.142,22,4.646,23,1.984,24,3.164,26,3.164,28,0.5,40,4.935,41,3.591,52,1.25,55,0.008,56,1.55,57,0.712,60,0.915,61,1.544,65,1.365,66,4.534,71,2.67,81,6.323,82,3.277,87,2.993,88,1.302,112,0.31,113,3.683,115,0.564,117,1.216,125,0.14,126,0.363,130,3.773,154,1.935,156,3.048,159,2.754,160,3.503,161,4.985,162,4.985,163,3.503,164,3.503,165,3.503,166,3.503,167,3.503,168,1.718,169,1.365,170,2.142,171,4.985,172,4.013,173,5.804,174,3.503,175,3.503,176,2.412,177,3.164,178,3.773,179,0.84,180,4.985,181,3.503,182,3.203,183,3.503,184,4.558,185,3.503,186,3.503,187,3.503,188,2.979,189,2.313,190,3.503,191,3.503,192,1.365,193,3.164,194,2.445,195,1.718,196,4.013,197,2.223,198,2.223,199,1.768,200,1.876,201,1.642,202,2.068,203,3.164,204,1.82,205,2.068,206,2.223,207,3.493,208,4.634,209,2.223,210,1.82,211,2.223,212,1.876,213,0.377,214,1.77,215,2.223,216,1.935,217,2.223,218,1.935,219,1.82,220,2.223,221,1.82,222,2.223,223,1.876,224,1.935,225,2.142,226,1.718,227,2.068,228,2.223,229,0.004,230,0.005,231,0.004,284,5.781,350,2.315,358,1.618,607,2.943,609,2.67,762,3.773,916,5.307,1099,2.8,1236,6.323,1237,3.503,1238,7.145,1239,5.634,1240,5.634,1241,5.634,1242,6.559,1243,5.634,1244,5.634,1245,3.959,1246,3.959,1247,3.959,1248,5.634,1249,3.959,1250,5.634]],["title/components/NgxEditorJSComponent.html",[0,1.513,210,2.165]],["body/components/NgxEditorJSComponent.html",[0,2.592,1,1.354,2,2.044,3,0.104,4,0.104,5,1.555,6,1.169,7,2.179,8,1.555,9,0.076,12,0.351,14,0.916,20,2.335,21,1.498,22,4.365,23,1.414,24,2.423,26,2.423,28,0.35,29,0.84,30,2.301,32,2.121,35,1.325,38,3.749,39,2.19,41,2.75,47,0.813,52,1.669,54,2.063,55,0.008,56,1.654,57,1.074,58,1.254,60,1.716,61,2.529,65,0.954,71,1.312,72,2.085,73,2.823,79,1.019,82,1.202,88,0.911,89,1.926,97,2.24,103,2.752,112,0.357,114,2.24,115,0.394,120,1.052,125,0.098,126,0.254,130,2.889,137,1.202,154,1.354,156,2.868,159,1.354,177,1.555,179,1.07,184,2.24,192,0.954,193,2.423,194,2.301,195,2.301,196,3.361,197,1.555,198,1.555,199,3.929,200,1.312,201,1.55,202,2.769,203,2.423,204,1.273,205,1.446,206,1.555,207,1.354,208,1.555,209,1.555,210,2.752,211,1.555,212,1.312,213,0.425,214,1.355,215,1.555,216,1.354,217,1.555,218,1.354,219,1.273,220,1.555,221,1.273,222,1.555,223,1.312,224,1.354,225,1.498,226,2.597,227,1.446,228,1.555,229,0.002,230,0.004,231,0.002,267,1.765,319,0.399,321,2.815,323,1.295,326,2.52,335,2.109,341,0.902,358,1.719,391,0.954,409,1.273,415,1.169,434,1.325,437,2.184,438,1.773,453,1.973,459,1.854,462,1.273,471,2.109,472,2.254,479,1.138,482,1.872,507,1.108,512,1.682,516,2.423,537,1.354,541,1.312,542,1.872,545,1.398,560,1.108,565,1.765,566,1.726,574,2.52,576,2.889,597,3.309,603,1.498,606,3.412,630,2.044,632,1.169,634,1.687,681,3.491,682,3.818,683,4.289,684,3.818,685,4.289,686,3.818,687,4.691,688,3.818,689,3.55,690,3.491,691,2.889,692,2.889,693,2.889,694,3.55,696,2.45,698,2.75,700,2.084,702,2.084,704,1.617,705,1.765,707,1.854,708,1.958,710,1.958,712,3.052,715,1.854,716,1.854,717,1.687,718,1.854,719,1.687,720,1.958,722,1.958,724,2.45,726,2.45,728,2.45,729,3.052,730,3.491,731,2.45,732,2.24,734,2.45,736,2.45,738,3.815,742,2.45,746,1.958,924,2.24,925,2.24,926,2.45,928,2.889,929,3.818,930,3.052,931,2.75,934,1.854,966,3.818,967,3.247,968,3.818,992,2.45,1164,4.233,1166,4.289,1169,2.45,1187,2.45,1251,2.45,1252,5.301,1253,4.314,1254,4.314,1255,4.314,1256,8.619,1257,2.769,1258,2.769,1259,2.769,1260,2.769,1261,2.769,1262,2.769,1263,2.769,1264,2.769,1265,2.769,1266,2.769,1267,2.769,1268,2.769,1269,2.769,1270,2.769,1271,2.769,1272,2.769,1273,2.769,1274,2.769,1275,2.769,1276,2.769,1277,4.314,1278,4.314,1279,2.769,1280,2.769,1281,2.769,1282,2.769,1283,2.769,1284,2.769]],["title/interfaces/NgxEditorJSConfig.html",[399,0.248,583,2.644]],["body/interfaces/NgxEditorJSConfig.html",[3,0.183,4,0.183,9,0.133,12,0.397,28,0.616,29,1.268,55,0.009,56,1.058,57,0.616,58,1.188,59,2.179,60,1.693,79,1.538,88,2.408,112,0.358,115,0.695,125,0.289,156,2.641,179,1.092,194,2.118,213,0.468,229,0.004,230,0.006,231,0.004,295,4.603,310,3.091,319,0.325,323,1.954,324,1.75,341,1.018,358,1.402,399,0.343,400,1.058,415,2.06,437,2.191,462,2.244,475,2.851,478,1.257,479,3.439,486,2.741,487,3.655,507,1.953,512,1.903,541,2.313,556,3.522,566,1.953,573,3.965,575,2.906,577,4.08,583,4.387,584,2.973,609,2.313,630,3.084,632,2.06,689,3.268,691,3.268,692,3.268,693,3.268,694,4.358,704,2.851,705,4.149,707,3.268,708,3.452,710,3.452,715,3.268,716,3.268,717,2.973,718,3.268,719,2.973,720,4.603,722,3.452,753,3.452,759,3.673,760,4.319,761,3.673,762,3.268,763,4.319,764,5.266,765,5.266,766,3.949,767,3.949,768,3.949,769,3.111,770,3.452,771,3.949,772,3.673,773,3.673,774,3.949]],["title/interfaces/NgxEditorJSDemo.html",[399,0.248,452,2.231]],["body/interfaces/NgxEditorJSDemo.html",[3,0.174,4,0.174,9,0.127,12,0.377,14,1.514,23,1.485,28,0.585,29,1.224,55,0.009,56,1.363,57,0.794,63,3.073,79,1.095,87,1.718,95,2.141,112,0.346,117,1.423,125,0.292,144,3.117,151,4.03,179,1.141,201,1.676,213,0.445,214,2.856,229,0.004,230,0.006,231,0.004,319,0.309,323,1.887,324,2.364,341,0.644,343,1.489,350,2.822,352,1.685,357,2.42,358,1.331,362,2.34,363,2.34,364,3.578,386,3.199,399,0.452,400,1.005,408,2.265,418,2.069,434,1.423,439,2.069,444,2.954,445,2.507,446,2.602,447,2.653,448,2.196,449,2.13,450,3.283,451,3.401,452,2.978,453,2.367,454,3.174,455,2.34]],["title/interfaces/NgxEditorJSDemo-1.html",[391,1.368,399,0.209,452,1.88]],["body/interfaces/NgxEditorJSDemo-1.html",[3,0.179,4,0.179,9,0.131,10,1.772,12,0.389,14,1.538,23,1.129,28,0.604,29,1.25,55,0.009,56,1.392,57,0.604,63,3.137,79,1.129,87,1.772,95,2.175,112,0.353,117,1.467,125,0.295,144,3.15,179,1.155,201,1.692,213,0.448,214,2.839,229,0.004,230,0.006,231,0.004,323,1.927,324,2.378,341,0.665,343,1.536,350,2.266,352,1.712,357,2.496,358,1.372,362,2.413,363,2.413,364,3.61,386,3.233,399,0.455,400,1.036,418,2.134,434,1.467,439,2.134,445,2.586,446,2.684,447,2.709,448,2.265,449,2.197,450,3.352,451,3.472,452,3.041,453,2.389,454,3.241,455,2.413,456,3.046]],["title/interfaces/NgxEditorJSDemoData.html",[399,0.248,454,2.378]],["body/interfaces/NgxEditorJSDemoData.html",[3,0.181,4,0.181,9,0.131,12,0.392,14,1.543,23,1.523,55,0.009,56,1.398,63,3.152,79,1.137,87,1.784,95,2.183,112,0.354,117,1.478,125,0.296,144,3.158,151,3.152,179,0.962,201,1.695,213,0.449,214,2.857,229,0.004,230,0.006,231,0.004,319,0.32,323,1.445,324,2.381,341,0.669,343,1.547,350,2.567,352,1.718,357,2.514,358,1.382,362,2.43,363,2.43,364,3.695,386,3.24,399,0.449,400,1.044,408,2.353,418,2.149,434,1.98,439,2.149,444,3.067,445,2.604,446,2.703,447,2.722,448,2.28,449,2.213,450,2.514,451,2.604,452,2.28,453,1.851,454,3.672,455,2.43]],["title/interfaces/NgxEditorJSDemoData-1.html",[391,1.368,399,0.209,454,2.004]],["body/interfaces/NgxEditorJSDemoData-1.html",[3,0.184,4,0.184,9,0.134,10,1.813,12,0.398,14,1.556,23,1.155,55,0.009,56,1.413,63,3.186,79,1.155,87,1.813,95,2.2,112,0.358,117,1.501,125,0.297,144,3.174,179,0.972,201,1.703,213,0.451,214,2.849,229,0.004,230,0.006,231,0.004,323,1.468,324,2.388,341,0.68,343,1.571,350,2.3,352,1.732,357,2.554,358,1.404,362,2.469,363,2.469,364,3.71,386,3.258,399,0.451,400,1.06,418,2.183,434,2.001,439,2.183,445,2.646,446,2.746,447,2.751,448,2.317,449,2.248,450,2.554,451,2.646,452,2.317,453,1.871,454,3.701,455,2.469,456,3.117]],["title/components/NgxEditorJSDemoHomeComponent.html",[0,1.513,212,2.231]],["body/components/NgxEditorJSDemoHomeComponent.html",[0,2.794,1,2.265,2,2.978,3,0.174,4,0.174,5,2.602,6,1.956,7,2.34,8,2.602,9,0.127,14,1.334,15,1.845,21,2.507,22,4.75,23,1.807,24,3.53,26,3.53,55,0.008,56,1.659,62,3.944,63,3.739,65,1.597,82,2.011,100,4.659,112,0.255,115,0.66,117,2.531,125,0.164,126,0.425,151,3.073,154,2.265,192,1.597,193,3.53,194,2.728,195,2.011,196,4.295,197,2.602,198,2.602,199,2.069,200,2.196,201,1.768,202,4.176,203,3.53,204,2.13,205,4.48,206,2.602,207,2.265,208,2.602,209,2.602,210,2.13,211,2.602,212,3.624,213,0.458,214,2.808,215,2.602,216,2.265,217,2.602,218,2.265,219,2.13,220,2.602,221,2.13,222,2.602,223,2.196,224,2.265,225,2.507,226,2.011,227,2.42,228,2.602,229,0.004,230,0.006,231,0.004,232,1.396,319,0.309,409,3.516,524,3.401,595,2.978,597,3.319,648,3.829,729,5.409,785,4.209,931,4.006,1033,3.487,1038,5.771,1039,5.085,1128,4.445,1178,4.729,1285,4.1,1286,3.749,1287,6.285,1288,4.729,1289,3.671]],["title/components/NgxEditorJSDemoInfoComponent.html",[0,1.513,216,2.302]],["body/components/NgxEditorJSDemoInfoComponent.html",[0,2.465,1,1.64,2,2.366,3,0.248,4,0.126,5,1.884,6,1.416,7,1.694,8,1.884,9,0.092,18,1.898,21,1.815,22,4.524,23,2.046,24,2.804,26,2.804,28,0.424,29,0.973,30,2.589,35,1.533,39,1.898,41,3.183,43,2.608,52,1.502,54,1.156,55,0.008,56,1.532,57,0.892,58,0.612,60,0.776,61,1.947,65,1.156,66,4.524,69,4.04,72,1.917,73,2.451,79,1.669,82,1.456,87,2.619,88,1.642,95,1.984,103,2.743,111,5.573,112,0.328,113,3.968,115,0.478,119,1.542,120,1.275,125,0.119,126,0.308,130,3.344,135,0.902,151,3.621,154,1.64,156,2.702,157,2.524,192,1.156,193,2.804,194,2.167,195,1.456,196,3.711,197,1.884,198,1.884,199,1.498,200,1.589,201,1.638,202,1.752,203,2.804,204,1.542,205,1.752,206,1.884,207,1.64,208,1.884,209,1.884,210,1.542,211,1.884,212,1.589,213,0.39,214,2.699,215,1.884,216,3.23,217,1.884,218,1.64,219,1.542,220,1.884,221,1.542,222,1.884,223,1.589,224,1.64,225,1.815,226,1.456,227,1.752,228,1.884,229,0.003,230,0.004,231,0.003,319,0.536,335,2.441,341,0.694,349,3.532,350,2.106,354,3.757,362,1.694,374,2.138,375,2.138,416,3.042,638,3.344,649,2.296,908,5.278,934,2.246,986,4.674,993,5.847,1041,6.554,1045,4.419,1068,4.419,1070,6.377,1080,4.419,1105,2.968,1106,2.968,1129,3.344,1164,3.532,1167,2.714,1168,2.714,1289,2.917,1290,7.128,1291,6.517,1292,2.968,1293,5.965,1294,4.993,1295,5.278,1296,7.065,1297,5.965,1298,3.354,1299,3.354,1300,3.354,1301,3.354,1302,3.354,1303,3.354,1304,3.354,1305,3.354,1306,3.354,1307,3.354,1308,3.354,1309,4.419,1310,4.993,1311,4.993,1312,4.993,1313,4.419,1314,4.993,1315,3.757,1316,4.993,1317,3.354]],["title/directives/NgxEditorJSDirective.html",[195,2.043,226,2.043]],["body/directives/NgxEditorJSDirective.html",[0,1.947,2,1.633,3,0.079,4,0.079,7,1.74,9,0.057,12,0.414,13,1.8,15,1.012,18,1.31,19,3.107,20,2.377,21,1.132,22,1.8,28,0.264,29,0.671,30,3.101,32,1.379,35,1.058,37,3.603,38,3.603,39,2.307,41,2.196,43,1.8,47,0.614,52,1.605,54,1.514,55,0.009,56,1.222,57,0.977,58,0.802,60,1.482,61,1.713,62,1.584,71,1.633,72,2.059,73,2.49,79,1.432,83,1.401,85,3.833,88,1.852,91,2.788,95,1.034,103,2.946,112,0.352,113,4.113,115,0.298,119,0.962,120,0.795,125,0.074,126,0.192,127,1.333,135,1.723,137,2.211,155,2.437,156,1.864,172,1.175,179,1.035,194,3.358,195,3.486,201,0.701,213,0.423,225,1.132,226,1.495,227,1.8,229,0.002,230,0.003,231,0.002,267,2.196,310,1.454,319,0.564,321,3.011,323,1.529,326,3.54,335,2.49,341,1.04,358,1.923,415,1.454,437,2.605,453,2.187,459,2.307,462,1.584,478,0.539,479,2.49,482,2.211,492,1.454,507,1.379,512,1.343,517,2.756,538,1.379,541,1.633,542,1.907,560,1.379,566,2.564,574,2.975,575,2.706,576,3.411,577,3.347,582,1.401,585,1.479,596,3.863,597,3.405,598,2.437,603,1.864,606,3.078,607,1.8,615,3.603,631,3.103,632,2.826,634,2.099,635,2.975,664,1.574,689,4.291,690,3.554,691,3.772,692,3.772,693,3.411,694,4.058,698,2.196,700,2.593,702,3.833,704,2.013,705,3.247,707,2.307,708,2.437,710,2.437,712,3.603,715,2.307,716,2.307,717,2.099,718,2.307,719,2.099,720,3.107,722,2.437,746,1.479,828,1.333,859,3.049,867,2.788,889,3.049,900,1.222,901,1.222,902,1.574,931,2.196,934,2.307,986,3.984,1004,1.574,1017,1.851,1119,2.437,1139,2.593,1288,2.593,1289,2.013,1318,7.496,1319,1.851,1320,3.833,1321,3.445,1322,4.393,1323,6.695,1324,5.094,1325,5.094,1326,3.445,1327,2.092,1328,5.094,1329,2.092,1330,4.393,1331,3.049,1332,2.092,1333,2.092,1334,2.092,1335,2.092,1336,2.092,1337,2.092,1338,2.092,1339,2.092,1340,2.092,1341,2.092,1342,2.092,1343,2.092,1344,2.092,1345,3.445,1346,2.092,1347,2.092,1348,3.445,1349,5.094,1350,2.092,1351,3.049,1352,3.445,1353,3.445,1354,3.049,1355,3.445,1356,3.445,1357,2.092,1358,2.092,1359,2.092,1360,1.851,1361,2.092,1362,2.092,1363,2.092,1364,2.092,1365,2.092,1366,2.092,1367,2.092,1368,2.092,1369,2.092,1370,2.593,1371,2.092,1372,2.092,1373,2.092,1374,2.092,1375,2.092,1376,2.092,1377,2.092,1378,2.092,1379,2.092,1380,2.092,1381,2.092,1382,2.092,1383,2.092,1384,6.06,1385,2.092,1386,2.092,1387,2.092,1388,2.092,1389,2.092,1390,2.092,1391,3.445,1392,2.092,1393,2.092,1394,2.092,1395,2.092,1396,2.092,1397,2.092,1398,2.092,1399,2.092,1400,2.092,1401,2.092,1402,2.092,1403,2.092]],["title/injectables/NgxEditorJSEffects.html",[317,0.999,1404,3.809]],["body/injectables/NgxEditorJSEffects.html",[3,0.182,4,0.182,9,0.132,28,0.611,29,1.26,30,2.1,32,2.589,47,1.42,52,1.233,54,1.668,55,0.008,56,1.049,57,0.611,58,0.883,60,1.119,61,1.886,88,2.128,97,3.914,103,3.352,112,0.469,115,0.689,117,1.485,120,1.839,123,2.618,125,0.172,126,0.444,127,3.084,135,2.093,179,0.722,213,0.428,229,0.004,230,0.006,231,0.004,317,1.373,318,1.886,319,0.485,324,1.74,360,1.793,453,2.397,462,2.975,478,1.246,549,4.36,557,2.717,558,4.788,560,2.917,561,4.094,566,2.589,594,5.59,606,3.579,615,5.156,828,4.124,900,3.78,901,3.78,902,4.869,922,3.914,1404,5.235,1405,6.451,1406,4.281,1407,4.838,1408,4.838,1409,6.47,1410,6.47,1411,7.783,1412,6.47,1413,7.29,1414,6.47,1415,6.47,1416,6.47,1417,6.47,1418,4.838,1419,4.838,1420,6.47,1421,4.838,1422,3.64,1423,4.838,1424,4.838,1425,4.838,1426,4.838,1427,4.838]],["title/modules/NgxEditorJSModule.html",[232,0.859,247,2.75]],["body/modules/NgxEditorJSModule.html",[3,0.133,4,0.133,9,0.097,12,0.422,14,1.439,15,1.524,16,3.96,35,1.086,47,1.038,52,0.674,54,1.219,55,0.008,56,0.767,57,0.447,58,1.49,59,2.318,60,1.201,62,2.387,72,1.136,83,2.368,112,0.484,115,0.503,116,2.154,117,1.594,125,0.184,126,0.477,135,1.654,137,1.534,154,2.538,192,1.219,199,3.802,210,3.915,213,0.411,221,3.915,226,3.696,229,0.003,230,0.005,231,0.003,232,1.318,234,1.279,235,1.379,236,2.67,237,1.534,238,2.643,239,2.399,247,5.314,250,2.318,251,1.493,252,1.493,257,1.913,261,2.462,295,3.672,304,2.368,319,0.346,335,2.538,427,3.812,437,2.282,438,2.133,470,3.033,472,2.712,478,0.91,479,2.785,575,3.484,583,4.239,584,3.163,585,2.501,586,4.811,587,2.368,588,4.239,606,3.471,607,2.712,630,3.212,673,5.101,746,2.501,749,2.368,769,2.254,770,4.351,787,4.629,789,3.907,794,4.201,906,2.661,924,2.861,925,2.861,1178,3.907,1192,3.907,1289,4.675,1428,3.129,1429,3.129,1430,3.129,1431,3.129,1432,4.201,1433,2.861,1434,5.444,1435,4.594,1436,3.536,1437,3.536,1438,5.999,1439,6.152,1440,3.477,1441,2.254,1442,5.192,1443,5.192,1444,4.594,1445,4.594,1446,4.201,1447,3.536,1448,3.536,1449,3.536,1450,3.536,1451,3.536,1452,3.536,1453,3.536,1454,3.129,1455,3.536,1456,5.192,1457,4.201,1458,2.861,1459,5.192,1460,3.536,1461,3.536]],["title/injectables/NgxEditorJSPluginService.html",[317,0.999,588,2.644]],["body/injectables/NgxEditorJSPluginService.html",[3,0.123,4,0.123,9,0.09,12,0.532,14,1.559,15,1.442,16,1.917,28,0.415,29,0.957,30,2.555,35,1.509,39,2.434,43,2.566,47,0.964,52,1.452,54,2.413,55,0.009,56,1.593,57,0.928,58,1.39,60,1.362,61,1.916,72,2.573,73,2.019,75,5.785,112,0.448,115,0.467,117,1.008,125,0.116,126,0.6,135,1.975,137,3.305,213,0.31,229,0.003,230,0.004,231,0.003,232,0.599,255,3.475,274,3.829,317,1.043,318,1.28,319,0.522,321,3.188,323,1.475,341,1.166,352,1.927,360,3.172,404,1.916,437,1.654,448,2.328,449,2.259,465,2.864,469,2.729,471,1.605,480,4.238,482,2.132,483,3.307,485,1.777,488,3.516,489,1.917,493,3.788,535,2.328,575,2.194,579,2.321,588,4.126,597,2.132,608,2.321,634,2.993,765,3.975,772,4.919,781,4.347,792,4.347,883,2.47,884,2.655,931,3.131,1144,4.92,1462,2.904,1463,4.913,1464,4.913,1465,4.913,1466,5.888,1467,4.913,1468,5.785,1469,3.282,1470,4.913,1471,6.537,1472,4.913,1473,4.913,1474,3.282,1475,4.913,1476,3.282,1477,4.913,1478,3.282,1479,6.537,1480,4.913,1481,3.282,1482,3.697,1483,3.282,1484,3.282,1485,4.913,1486,1.917,1487,3.282,1488,3.282,1489,3.282,1490,3.282,1491,3.282,1492,6.537,1493,3.282,1494,3.282,1495,3.282,1496,3.282,1497,3.282,1498,4.913,1499,4.913,1500,4.913]],["title/injectables/NgxEditorJSService.html",[317,0.999,606,2.165]],["body/injectables/NgxEditorJSService.html",[3,0.077,4,0.077,9,0.056,12,0.354,15,1,16,1.204,20,2.353,28,0.26,29,0.663,30,2.995,32,2.236,35,1.045,39,2.503,43,1.778,47,1,52,1.469,54,2.513,55,0.009,56,1.717,57,1.031,58,1.384,60,0.787,61,1.328,62,1.565,72,2.544,73,2.735,79,0.487,88,2.094,89,1.942,94,3.076,95,1.516,103,3.595,112,0.366,115,0.294,119,2,120,0.784,122,1.314,123,1.116,125,0.179,126,0.189,135,1.503,137,3.292,179,0.753,213,0.44,229,0.002,230,0.003,231,0.002,310,0.87,317,0.723,318,0.804,319,0.521,321,1.478,323,0.619,335,1.665,341,1.161,343,0.663,358,1.45,359,1.314,360,2.072,374,1.314,375,1.314,399,0.229,409,0.948,415,1.437,422,1.778,437,2.923,447,0.87,448,0.977,449,1.565,453,2.245,462,1.565,478,0.531,479,0.847,482,1.887,488,1.787,492,1.437,529,1.204,531,2.949,533,1.613,535,1.613,537,2.468,538,1.362,540,1.989,541,1.613,542,2.426,549,3.713,551,4.458,556,1.842,557,1.158,560,2.408,566,3.487,571,3.571,572,1.458,573,2.074,574,2.54,575,1.942,576,1.381,577,1.778,578,2.17,579,1.458,580,1.458,581,3.799,582,1.381,583,2.836,584,1.256,585,1.458,586,3.218,587,1.381,588,2.836,589,1.668,590,1.668,591,2.408,592,1.458,593,1.552,594,1.381,595,1.613,596,1.314,597,3.232,598,4.708,599,3.953,600,2.562,601,2.949,602,2.562,603,3.256,604,2.562,605,2.562,606,2.321,607,1.778,608,1.458,609,1.613,610,4.869,611,2.755,612,1.668,613,1.668,614,1.668,615,3.076,616,1.668,617,1.668,618,1.668,619,4.522,620,1.668,621,1.668,622,1.668,623,1.668,624,1.668,625,1.668,626,1.668,627,1.668,628,1.668,629,1.668,630,3.369,631,2.074,632,2.913,633,1.668,634,2.074,635,1.204,636,1.552,637,1.552,638,2.912,639,2.755,640,2.17,641,1.668,642,1.668,643,1.668,644,1.668,645,1.668,646,1.52,647,1.668,648,2.074,649,1.565,650,2.755,651,1.668,652,2.562,653,1.668,654,4.085,655,3.799,656,2.755,657,1.668,658,2.562,659,1.668,660,2.755,661,1.668,662,3.381,663,2.28,664,3.799,665,3.799,666,1.668,667,3.799,668,1.668,669,2.755,670,1.668,671,2.755,672,2.28,673,2.562,674,2.755,675,2.562,676,1.668,685,2.755,695,3.013,1095,2.755,1201,1.825,1360,3.013,1501,3.405,1502,2.062,1503,2.062,1504,2.062,1505,2.062,1506,2.062,1507,2.062,1508,2.062,1509,2.062,1510,2.062,1511,2.062,1512,2.062,1513,2.062,1514,2.062,1515,2.062,1516,2.062,1517,2.062,1518,2.062,1519,2.062,1520,2.062]],["title/modules/NgxEditorjsDemoModule.html",[232,0.859,248,3.33]],["body/modules/NgxEditorjsDemoModule.html",[3,0.147,4,0.147,9,0.107,10,1.449,23,0.923,55,0.008,112,0.493,115,0.556,116,2.381,117,2,125,0.139,126,0.359,192,1.347,200,4.18,201,1.135,212,3.703,213,0.396,218,3.82,223,4.18,229,0.003,230,0.005,231,0.003,232,0.713,234,1.414,235,1.524,236,2.826,237,1.696,238,2.176,239,2.539,246,5.232,247,4.564,248,6.638,249,5.232,250,2.493,251,1.65,252,1.65,257,3.021,261,2.234,277,3.458,278,3.162,291,4.201,307,3.162,308,2.195,319,0.26,427,1.974,488,1.606,493,3.021,575,1.745,749,2.617,1032,3.162,1099,2.764,1195,4.94,1197,4.517,1286,3.162,1440,3.738,1441,2.491,1444,4.94,1445,4.94,1457,3.162,1521,3.458,1522,3.458,1523,3.458,1524,3.458,1525,6.14,1526,4.98,1527,4.76,1528,4.98,1529,4.98,1530,4.98,1531,4.76,1532,4.98,1533,2.941,1534,2.941,1535,5.582,1536,5.582,1537,4.94,1538,4.94,1539,5.582,1540,5.582,1541,4.517,1542,3.908,1543,3.162,1544,6.512,1545,3.162,1546,3.908,1547,3.908,1548,3.908,1549,3.908,1550,3.908,1551,3.908,1552,3.908,1553,3.908,1554,3.908]],["title/modules/NgxEditorjsNgrxModule.html",[232,0.859,1555,3.543]],["body/modules/NgxEditorjsNgrxModule.html",[3,0.216,4,0.216,9,0.157,12,0.469,15,2.128,55,0.008,94,4.415,112,0.457,115,0.82,117,1.769,125,0.204,126,0.529,192,1.986,213,0.452,229,0.005,230,0.006,231,0.005,232,1.564,234,2.084,235,2.247,236,2.501,237,2.501,238,2.247,239,2.247,247,5.112,250,3.236,251,2.432,252,2.432,257,3.922,261,2.9,274,3.543,319,0.384,358,2.081,437,2.44,470,4.234,492,3.059,594,4.853,607,3.785,1422,4.336,1440,4.853,1441,3.673,1555,6.586,1556,5.099,1557,5.762,1558,5.762,1559,5.762,1560,6.413,1561,5.864,1562,7.247,1563,7.247,1564,5.762,1565,5.762,1566,5.762,1567,5.762]],["title/modules/NgxEditorjsPluginsModule.html",[232,0.859,1568,3.543]],["body/modules/NgxEditorjsPluginsModule.html",[3,0.159,4,0.159,9,0.116,12,0.346,15,1.738,55,0.008,112,0.484,115,0.605,125,0.151,126,0.39,178,3.964,179,0.883,192,1.464,213,0.389,229,0.004,230,0.005,231,0.004,232,1.243,234,2.803,235,1.656,236,1.843,237,1.843,238,1.656,239,2.657,250,2.643,251,1.793,252,1.793,257,3.203,261,2.369,319,0.283,427,2.989,468,3.324,482,2.569,499,2.569,578,3.773,785,3.964,1288,4.454,1440,3.964,1441,2.707,1526,5.616,1527,5.368,1528,5.616,1529,5.616,1530,5.616,1531,5.368,1532,5.616,1568,7.061,1569,3.758,1570,3.758,1571,3.758,1572,5.9,1573,4.247,1574,4.247,1575,4.789,1576,5.919,1577,5.919,1578,5.919,1579,5.919,1580,5.238,1581,4.247,1582,4.247,1583,4.247,1584,4.247,1585,4.247,1586,4.247,1587,4.247,1588,4.247,1589,3.196,1590,4.247]],["title/modules/NgxHideableHeaderDemoModule.html",[232,0.859,1591,3.809]],["body/modules/NgxHideableHeaderDemoModule.html",[3,0.249,4,0.249,9,0.181,55,0.008,112,0.464,115,0.943,125,0.28,126,0.608,229,0.006,230,0.007,231,0.006,234,2.396,257,3.584,261,3.158,306,6.387,307,6.387,308,3.72,310,2.796,319,0.441,509,3.243,1440,5.286,1441,4.222,1533,4.984,1534,4.984,1591,6.387,1592,5.94,1593,5.359]],["title/modules/NgxTinynodesCoreMaterialModule.html",[232,0.859,1594,3.33]],["body/modules/NgxTinynodesCoreMaterialModule.html",[3,0.245,4,0.245,9,0.178,23,1.846,55,0.008,112,0.46,115,0.928,116,3.968,118,3.805,125,0.231,126,0.598,229,0.006,230,0.007,231,0.006,234,2.356,239,2.54,257,3.525,261,3.127,291,6.3,319,0.434,1196,7.409,1197,6.774,1440,5.606,1441,4.152,1537,7.409,1538,7.409,1594,5.527,1595,5.764,1596,6.514]],["title/modules/NgxTinynodesCoreModule.html",[232,0.859,249,3.153]],["body/modules/NgxTinynodesCoreModule.html",[3,0.197,4,0.197,9,0.143,12,0.427,15,2.359,23,1.968,49,3.564,55,0.008,95,2.049,112,0.442,115,0.747,118,4.431,125,0.186,126,0.481,192,1.808,201,1.066,216,4.454,229,0.005,230,0.006,231,0.005,232,1.384,234,1.897,235,2.045,236,3.292,237,2.276,238,2.045,239,2.958,245,6.16,249,6.133,250,3.047,251,2.214,252,2.214,257,3.693,261,2.731,288,4.641,319,0.349,324,1.835,430,4.57,492,2.881,1035,5.521,1139,5.135,1192,5.135,1291,4.243,1594,6.444,1595,4.641,1597,4.641,1598,4.641,1599,4.641,1600,4.641,1601,5.244,1602,6.824,1603,6.039,1604,5.244,1605,5.244,1606,5.244]],["title/classes/NotReady.html",[126,0.432,563,2.75]],["body/classes/NotReady.html",[3,0.179,4,0.179,9,0.13,18,3.157,28,0.6,29,1.245,32,3.396,39,1.836,47,1.396,52,1.377,54,1.639,55,0.009,56,1.031,57,1.141,58,0.867,60,1.099,61,1.854,112,0.352,125,0.301,126,0.74,201,1.64,213,0.461,229,0.004,230,0.006,231,0.004,319,0.515,324,1.719,341,1.122,447,2.007,478,1.224,533,4.089,538,3.227,545,3.903,546,2.777,547,4.708,548,2.896,549,4.433,550,3.362,551,4.839,554,3.362,555,3.184,556,3.91,557,2.67,558,4.058,559,3.896,560,1.902,561,4.058,562,3.03,563,4.515,564,3.362,565,5.141,566,3.227,567,3.362,568,4.523,569,3.362,570,3.184,1607,6.395,1608,4.754]],["title/interfaces/Page.html",[65,1.623,399,0.248]],["body/interfaces/Page.html",[3,0.229,4,0.229,9,0.166,28,0.77,29,1.462,42,6.003,55,0.008,57,1.072,65,2.587,112,0.413,117,1.871,125,0.288,179,1.12,213,0.396,219,3.902,229,0.005,230,0.007,231,0.005,271,3.078,319,0.406,341,1.18,352,1.44,399,0.429,400,1.322,434,1.871,453,2.437,632,3.888,1075,6.003,1609,4.586,1610,5.683]],["title/interfaces/PageBlock.html",[399,0.248,1610,3.153]],["body/interfaces/PageBlock.html",[3,0.239,4,0.239,9,0.174,28,0.804,29,1.501,42,4.5,55,0.008,57,0.804,65,2.193,112,0.424,117,1.954,125,0.294,179,1.236,213,0.406,219,3.543,229,0.006,230,0.007,231,0.006,271,3.213,319,0.424,341,1.072,352,1.503,399,0.437,400,1.38,434,2.366,453,1.827,632,3.913,1075,4.5,1609,4.788,1610,5.55]],["title/components/PageContainerComponent.html",[0,1.513,223,2.231]],["body/components/PageContainerComponent.html",[0,2.148,1,1.129,2,1.77,3,0.087,4,0.087,5,1.297,6,0.975,7,1.166,8,1.297,9,0.063,10,0.856,12,0.304,13,1.951,14,0.793,15,1.587,17,3.619,18,1.42,19,3.327,20,3.211,21,1.25,22,4.197,23,1.5,24,2.098,26,2.098,28,0.292,29,0.728,30,3.204,32,1.882,35,1.147,37,3.823,39,2.308,43,1.951,47,1.587,49,2.823,52,1.467,54,0.796,55,0.008,56,1.287,57,0.472,58,0.421,59,2.413,60,1.372,61,1.834,65,2.918,72,1.907,73,2.221,82,1.003,87,2.354,88,1.777,89,2.65,103,2.163,112,0.395,115,0.329,117,1.822,119,1.062,120,0.878,121,1.634,122,1.472,123,1.25,125,0.082,126,0.212,130,2.502,135,1.596,137,2.346,151,2.642,154,1.129,155,2.642,156,2.022,157,2.811,169,1.863,179,0.997,192,0.796,193,2.098,194,1.621,195,1.003,196,3.035,197,1.297,198,1.297,199,1.031,200,1.095,201,1.591,202,1.207,203,2.098,204,1.062,205,1.207,206,1.297,207,1.129,208,1.297,209,1.297,210,1.062,211,1.297,212,1.095,213,0.462,214,2.622,215,1.297,216,1.129,217,1.297,218,1.129,219,2.163,220,1.297,221,1.062,222,1.297,223,2.561,224,1.129,225,1.25,226,1.003,227,1.207,228,1.297,229,0.002,230,0.003,231,0.004,251,2.937,255,2.642,319,0.521,321,3.02,323,1.122,324,1.985,329,1.634,335,1.827,336,2.381,341,0.321,350,0.815,359,1.472,360,0.856,391,0.796,412,1.668,437,1.819,452,1.77,453,2.378,469,1.147,485,1.351,499,1.621,507,1.495,509,1.535,514,1.718,542,1.621,559,3.292,560,2.784,566,2.784,597,3.594,601,4.065,606,2.485,609,1.77,630,1.77,632,1.577,638,2.502,646,1.668,717,2.276,762,3.974,780,3.023,802,3.023,841,3.023,883,1.738,890,3.023,921,2.044,922,3.023,934,1.547,986,2.642,1004,3.54,1033,1.738,1034,3.306,1035,3.023,1036,3.306,1037,3.306,1038,3.806,1039,3.023,1046,4.476,1047,2.044,1048,4.26,1049,4.783,1050,4.783,1056,2.044,1062,3.306,1063,3.306,1070,3.023,1079,3.306,1083,2.044,1093,1.869,1095,1.869,1097,2.044,1098,2.044,1099,1.634,1100,2.044,1101,2.044,1102,1.634,1103,2.044,1104,2.044,1116,2.044,1117,2.044,1118,2.044,1120,2.044,1122,2.044,1123,2.044,1124,2.044,1125,2.044,1126,2.044,1127,2.044,1129,3.619,1130,2.044,1131,2.044,1132,2.044,1144,2.502,1148,3.306,1149,3.306,1150,3.306,1151,2.044,1152,2.044,1153,2.044,1154,2.044,1155,2.044,1156,2.044,1157,3.023,1158,3.306,1159,3.023,1160,3.306,1161,3.023,1162,3.306,1163,3.306,1164,2.642,1165,2.044,1166,1.869,1167,1.869,1168,1.869,1543,6.33,1611,6.923,1612,5.934,1613,2.31,1614,2.31,1615,2.31,1616,2.31,1617,2.31,1618,2.31,1619,2.31,1620,2.31,1621,2.31,1622,3.736,1623,2.31,1624,2.31,1625,2.31,1626,2.31,1627,2.31]],["title/modules/PageStoreModule.html",[232,0.859,1525,3.33]],["body/modules/PageStoreModule.html",[3,0.212,4,0.212,9,0.154,12,0.46,55,0.008,65,2.469,112,0.454,115,0.805,125,0.201,126,0.519,192,1.949,201,1.456,213,0.414,214,2.25,229,0.005,230,0.006,231,0.005,232,1.556,234,2.045,235,2.205,236,2.454,237,2.454,238,3.065,239,2.205,250,3.198,251,2.387,252,2.387,261,2.866,274,3.502,319,0.377,470,4.184,609,3.394,761,5.39,996,4.363,1046,4.796,1048,5.552,1525,6.439,1560,6.338,1561,5.795,1628,5.004,1629,5.004,1630,5.833,1631,5.306,1632,5.655,1633,5.795,1634,6.338,1635,5.004,1636,5.655,1637,4.575]],["title/injectables/PagesQuery.html",[317,0.999,1630,3.153]],["body/injectables/PagesQuery.html",[3,0.24,4,0.24,9,0.174,47,1.872,52,1.215,54,2.198,55,0.008,56,1.383,57,0.805,58,1.164,65,2.198,112,0.474,115,0.908,125,0.226,126,0.585,213,0.407,229,0.006,230,0.007,231,0.006,271,3.221,274,3.772,317,1.638,318,2.487,319,0.514,434,2.369,435,5.16,440,4.799,441,5.16,1630,5.167,1631,5.252,1637,5.16,1638,5.643,1639,8.296,1640,6.377,1641,4.799,1642,4.511]],["title/injectables/PagesService.html",[317,0.999,1048,3.001]],["body/injectables/PagesService.html",[3,0.127,4,0.127,9,0.092,12,0.54,15,1.474,28,0.427,29,0.978,30,2.6,32,2.971,35,1.542,39,2.035,42,2.39,43,2.622,47,0.992,52,1.588,54,2.65,55,0.009,56,1.668,57,1.037,58,1.473,65,3.173,72,2.471,73,3.051,83,2.263,88,1.111,103,3.535,112,0.423,115,0.481,117,1.038,120,1.284,125,0.12,126,0.31,135,0.909,137,2.6,179,1.243,213,0.45,229,0.003,230,0.004,231,0.003,271,1.706,274,4.074,310,1.426,317,1.066,318,1.317,319,0.562,321,2.179,326,2.933,330,2.734,337,4.69,404,1.958,415,2.119,453,2.208,492,2.119,504,2.455,560,2.009,565,2.154,631,3.059,632,3.71,662,3.362,698,3.2,884,4.062,1046,5.5,1048,3.2,1075,2.39,1093,2.734,1144,4.441,1288,3.778,1610,5.149,1630,4.745,1631,4.317,1635,2.99,1637,2.734,1641,2.543,1643,2.99,1644,5.021,1645,5.021,1646,5.021,1647,5.021,1648,5.021,1649,5.021,1650,3.379,1651,5.021,1652,3.379,1653,7.086,1654,5.021,1655,3.379,1656,5.021,1657,3.551,1658,5.021,1659,3.379,1660,5.021,1661,3.379,1662,5.021,1663,3.379,1664,5.021,1665,3.379,1666,3.379,1667,3.379,1668,6.632,1669,5.021,1670,3.379,1671,3.379,1672,3.379,1673,5.021,1674,3.379,1675,3.379,1676,5.991,1677,5.021,1678,3.379,1679,3.379,1680,3.379]],["title/interfaces/PagesState.html",[399,0.248,1642,3.33]],["body/interfaces/PagesState.html",[3,0.245,4,0.245,9,0.178,47,1.917,55,0.008,56,1.416,65,2.251,112,0.461,115,0.93,125,0.278,126,0.599,213,0.344,229,0.006,230,0.007,231,0.006,271,3.297,317,1.661,319,0.435,399,0.344,400,1.416,434,2.573,460,5.889,461,4.618,1046,4.372,1631,3.978,1641,4.913,1642,5.535,1681,5.283,1682,7.416,1683,6.925]],["title/injectables/PagesStore.html",[317,0.999,1631,2.868]],["body/injectables/PagesStore.html",[3,0.242,4,0.242,9,0.176,47,2.446,52,1.227,55,0.008,56,1.396,65,2.219,112,0.458,115,0.917,125,0.275,126,0.591,213,0.409,229,0.006,230,0.007,231,0.006,271,3.251,317,1.647,318,2.51,319,0.517,399,0.339,434,2.558,460,5.839,461,4.553,1046,4.311,1631,4.727,1641,4.844,1642,4.553,1681,5.208,1682,6.866,1683,7.371,1684,6.437]],["title/interfaces/Paragraph.html",[399,0.248,507,1.884]],["body/interfaces/Paragraph.html",[3,0.151,4,0.151,6,1.693,9,0.11,12,0.326,28,0.507,29,1.287,55,0.009,57,1.161,58,1.311,60,1.822,79,1.561,125,0.299,159,4.048,168,2.468,169,2.854,170,3.077,179,1.368,213,0.416,229,0.004,230,0.005,231,0.004,319,0.267,324,2.179,341,1.188,343,2.123,352,0.948,391,1.383,399,0.464,400,0.87,404,1.564,412,2.539,434,2.207,438,1.648,469,1.232,496,2.17,499,1.741,500,2.17,501,3.193,502,3.193,503,2.095,504,1.961,505,3.193,506,2.97,507,3.313,508,2.97,509,3.33,510,2.97,511,2.343,512,1.564,513,2.97,514,3.489,515,3.322,516,2.252,517,3.575,518,2.343,519,2.343,520,2.343,521,2.343,522,2.343,523,2.97,524,2.17,525,2.252]],["title/interfaces/ParagraphBlock.html",[399,0.248,508,2.459]],["body/interfaces/ParagraphBlock.html",[3,0.151,4,0.151,6,1.701,9,0.11,12,0.328,28,0.509,29,1.29,55,0.009,57,1.167,58,1.314,60,1.758,79,1.564,125,0.299,159,3.521,168,2.476,169,2.857,170,3.086,179,1.375,213,0.428,229,0.004,230,0.005,231,0.004,319,0.268,324,2.122,341,1.153,343,2.128,352,0.952,391,1.389,399,0.467,400,0.874,404,1.571,412,2.547,434,2.334,438,1.655,469,1.237,496,2.18,499,1.748,500,2.18,501,3.203,502,3.203,503,2.104,504,1.969,505,3.203,506,2.979,507,3.158,508,3.459,509,3.334,510,2.979,511,2.353,512,1.571,513,2.979,514,3.495,515,3.332,516,2.262,517,3.583,518,2.353,519,2.353,520,2.353,521,2.353,522,2.353,523,2.979,524,2.18,525,2.262]],["title/injectables/PluginCode.html",[317,0.999,1685,3.33]],["body/injectables/PluginCode.html",[3,0.226,4,0.226,9,0.165,12,0.49,18,2.291,28,0.761,35,2.289,39,2.324,52,1.149,55,0.008,72,2.792,112,0.465,115,0.858,125,0.214,126,0.553,135,1.621,179,1.112,213,0.446,229,0.005,230,0.007,231,0.005,317,1.582,318,2.35,319,0.496,465,2.906,469,2.783,473,3.644,476,3.879,478,1.552,485,3.058,1128,5.272,1486,3.521,1685,5.272,1686,5.334,1687,6.027,1688,6.027]],["title/modules/PluginCodeModule.html",[232,0.859,1526,3.001]],["body/modules/PluginCodeModule.html",[3,0.229,4,0.229,9,0.167,12,0.497,15,2.206,55,0.008,60,1.738,112,0.413,115,0.87,125,0.217,126,0.561,179,1.121,192,2.105,213,0.429,229,0.005,230,0.007,231,0.005,232,1.485,234,2.209,235,2.381,236,2.651,237,2.651,238,3.174,239,2.381,250,3.356,251,2.578,252,2.578,261,3.007,319,0.407,485,2.718,595,3.561,646,3.356,649,3.455,1526,5.66,1685,6.28,1689,5.405,1690,5.405,1691,6.108,1692,4.067,1693,3.568,1694,6.108,1695,3.721,1696,6.108]],["title/interfaces/PluginConfig.html",[399,0.248,480,2.548]],["body/interfaces/PluginConfig.html",[3,0.194,4,0.194,9,0.141,12,0.42,14,1.096,35,2.075,52,1.288,55,0.009,58,1.374,88,2.222,112,0.371,115,0.736,125,0.294,126,0.62,135,1.389,201,1.05,213,0.356,229,0.005,230,0.006,231,0.005,232,1.374,310,2.852,319,0.45,323,1.551,341,1.111,352,2.009,360,1.915,399,0.421,400,1.12,465,3.232,466,3.653,467,3.459,468,2.901,469,2.819,470,3.017,471,3.681,473,3.681,474,3.459,475,3.017,476,3.362,477,5.043,478,1.33,479,2.776,480,3.656,481,4.525,482,2.242,483,2.901,484,3.293,485,1.868,486,3.795,487,3.795,488,2.776,489,3.017,490,3.293,491,3.147,492,2.181,493,2.795,494,3.293,497,2.901,1697,5.165]],["title/interfaces/PluginConfig-1.html",[391,1.368,399,0.209,480,2.147]],["body/interfaces/PluginConfig-1.html",[3,0.193,4,0.193,9,0.141,12,0.419,14,1.092,35,2.07,52,1.285,55,0.009,58,1.372,88,2.217,112,0.371,115,0.733,125,0.294,126,0.619,135,1.384,201,1.046,213,0.421,229,0.005,230,0.006,231,0.005,232,1.372,310,2.845,319,0.449,323,1.545,341,1.109,352,2.007,360,1.908,399,0.421,400,1.116,465,3.228,467,3.446,468,2.89,469,2.818,470,3.006,471,3.675,473,3.675,474,3.446,475,3.006,476,3.356,477,5.033,478,1.325,479,2.769,480,3.647,481,4.514,482,2.233,483,2.89,484,3.28,485,1.861,486,3.785,487,3.785,488,2.769,489,3.006,490,3.28,491,3.135,492,2.172,493,2.785,494,3.28,495,3.64,497,2.89,1698,5.146]],["title/injectables/PluginHeader.html",[317,0.999,1699,3.153]],["body/injectables/PluginHeader.html",[3,0.226,4,0.226,9,0.164,12,0.489,18,2.286,28,0.76,35,2.286,39,2.322,52,1.146,55,0.008,72,2.79,112,0.464,115,0.856,125,0.213,126,0.552,135,1.617,179,1.11,213,0.445,229,0.005,230,0.007,231,0.005,317,1.58,318,2.345,319,0.496,465,2.902,469,2.782,473,4.13,476,3.61,478,1.549,485,3.056,509,3.058,1486,3.513,1699,4.985,1700,5.322,1701,6.014,1702,4.866]],["title/modules/PluginHeaderModule.html",[232,0.859,1527,2.868]],["body/modules/PluginHeaderModule.html",[3,0.229,4,0.229,9,0.166,12,0.496,15,2.203,55,0.008,60,1.736,112,0.413,115,0.868,125,0.216,126,0.559,179,1.12,192,2.101,213,0.429,229,0.005,230,0.007,231,0.005,232,1.484,234,2.204,235,2.376,236,2.645,237,2.645,238,3.171,239,2.376,250,3.351,251,2.573,252,2.573,261,3.003,319,0.406,485,2.715,509,3.084,595,3.556,646,3.351,649,3.451,1527,5.406,1692,4.061,1693,3.56,1695,3.713,1699,5.943,1703,5.393,1704,5.393,1705,6.094,1706,6.094,1707,6.094]],["title/injectables/PluginImage.html",[317,0.999,1708,3.33]],["body/injectables/PluginImage.html",[3,0.226,4,0.226,9,0.164,12,0.489,18,2.286,28,0.76,35,2.286,39,2.322,52,1.146,55,0.008,72,2.79,112,0.464,115,0.856,125,0.213,126,0.552,135,1.617,179,1.11,213,0.445,229,0.005,230,0.007,231,0.005,317,1.58,318,2.345,319,0.496,465,2.902,469,2.782,473,4.13,476,3.61,478,1.549,485,3.056,514,3.423,1486,3.513,1708,5.265,1709,5.322,1710,6.014,1711,6.014]],["title/modules/PluginImageModule.html",[232,0.859,1572,3.153]],["body/modules/PluginImageModule.html",[3,0.229,4,0.229,9,0.167,12,0.497,15,2.206,55,0.008,60,1.738,112,0.413,115,0.87,125,0.217,126,0.561,179,1.121,192,2.105,213,0.429,229,0.005,230,0.007,231,0.005,232,1.485,234,2.209,235,2.381,236,2.651,237,2.651,238,3.174,239,2.381,250,3.356,251,2.578,252,2.578,261,3.007,319,0.407,485,2.718,595,3.561,646,3.356,649,3.455,1572,5.946,1692,4.067,1693,3.568,1695,3.721,1708,6.28,1712,5.405,1713,5.405,1714,6.108,1715,5.405,1716,5.405]],["title/injectables/PluginLink.html",[317,0.999,1717,3.33]],["body/injectables/PluginLink.html",[3,0.226,4,0.226,9,0.165,12,0.49,18,2.291,28,0.761,35,2.289,39,2.324,52,1.149,55,0.008,72,2.792,112,0.465,115,0.858,125,0.214,126,0.553,135,1.621,179,1.112,213,0.446,229,0.005,230,0.007,231,0.005,317,1.582,318,2.35,319,0.496,413,4.541,465,2.906,469,2.783,473,4.133,476,3.613,478,1.552,485,3.058,1486,3.521,1717,5.272,1718,5.334,1719,6.027,1720,6.027]],["title/modules/PluginLinkModule.html",[232,0.859,1528,3.001]],["body/modules/PluginLinkModule.html",[3,0.229,4,0.229,9,0.167,12,0.497,15,2.206,55,0.008,60,1.738,112,0.413,115,0.87,125,0.217,126,0.561,179,1.121,192,2.105,213,0.429,229,0.005,230,0.007,231,0.005,232,1.485,234,2.209,235,2.381,236,2.651,237,2.651,238,3.174,239,2.381,250,3.356,251,2.578,252,2.578,261,3.007,319,0.407,485,2.718,595,3.561,646,3.356,649,3.455,1528,5.66,1692,4.067,1693,3.568,1695,3.721,1717,6.28,1721,5.405,1722,5.405,1723,6.108,1724,6.108,1725,6.108]],["title/injectables/PluginList.html",[317,0.999,1726,3.153]],["body/injectables/PluginList.html",[3,0.226,4,0.226,9,0.164,12,0.489,18,2.286,28,0.76,35,2.286,39,2.322,52,1.146,55,0.008,72,2.79,112,0.464,115,0.856,125,0.213,126,0.552,135,1.617,169,2.566,179,1.11,213,0.445,229,0.005,230,0.007,231,0.005,317,1.58,318,2.345,319,0.496,465,2.902,469,2.782,473,4.13,476,3.61,478,1.549,485,3.056,1486,3.513,1726,4.985,1727,5.322,1728,6.014,1729,5.322]],["title/modules/PluginListModule.html",[232,0.859,1529,3.001]],["body/modules/PluginListModule.html",[3,0.229,4,0.229,9,0.166,12,0.496,15,2.203,55,0.008,60,1.736,112,0.413,115,0.868,125,0.216,126,0.559,179,1.12,192,2.101,213,0.429,229,0.005,230,0.007,231,0.005,232,1.484,234,2.204,235,2.376,236,2.645,237,2.645,238,3.171,239,2.376,250,3.351,251,2.573,252,2.573,261,3.003,319,0.406,485,2.715,595,3.556,646,3.351,649,3.451,1529,5.657,1692,4.061,1693,3.56,1695,3.713,1726,5.943,1730,5.393,1731,5.393,1732,6.094,1733,6.094,1734,6.094]],["title/injectables/PluginMarker.html",[317,0.999,1735,3.33]],["body/injectables/PluginMarker.html",[3,0.213,4,0.213,9,0.155,12,0.462,18,2.158,28,0.717,35,2.205,39,2.504,52,1.369,55,0.008,72,2.879,112,0.455,115,0.809,125,0.201,126,0.521,135,1.931,178,4.809,213,0.45,229,0.005,230,0.006,231,0.005,317,1.524,318,2.214,319,0.524,341,0.79,465,2.8,469,2.797,471,4.263,473,4.046,476,3.517,478,1.462,485,2.993,1486,3.317,1735,5.079,1736,5.025,1737,7.324,1738,5.678,1739,5.678,1740,5.678,1741,5.678]],["title/modules/PluginMarkerModule.html",[232,0.859,1530,3.001]],["body/modules/PluginMarkerModule.html",[3,0.229,4,0.229,9,0.166,12,0.496,15,2.203,55,0.008,60,1.736,112,0.413,115,0.868,125,0.216,126,0.559,178,5.026,192,2.101,213,0.429,229,0.005,230,0.007,231,0.005,232,1.484,234,2.204,235,2.376,236,2.645,237,2.645,238,3.171,239,2.376,250,3.351,251,2.573,252,2.573,261,3.003,319,0.406,485,2.715,595,3.556,646,3.351,649,3.451,1530,5.657,1692,4.061,1693,3.56,1695,3.713,1735,6.277,1737,6.641,1742,5.393,1743,5.393,1744,6.094,1745,6.094,1746,6.094]],["title/injectables/PluginParagraph.html",[317,0.999,1747,3.153]],["body/injectables/PluginParagraph.html",[3,0.226,4,0.226,9,0.165,12,0.49,18,2.291,28,0.761,35,2.289,39,2.324,52,1.149,55,0.008,72,2.792,112,0.465,115,0.858,125,0.214,126,0.553,135,1.621,179,1.112,213,0.446,229,0.005,230,0.007,231,0.005,317,1.582,318,2.35,319,0.496,465,2.906,469,2.783,473,4.133,476,3.613,478,1.552,485,3.058,507,2.983,1486,3.521,1747,4.992,1748,5.334,1749,6.027,1750,4.536]],["title/modules/PluginParagraphModule.html",[232,0.859,1531,2.868]],["body/modules/PluginParagraphModule.html",[3,0.229,4,0.229,9,0.167,12,0.497,15,2.206,55,0.008,60,1.738,112,0.413,115,0.87,125,0.217,126,0.561,179,1.121,192,2.105,213,0.429,229,0.005,230,0.007,231,0.005,232,1.485,234,2.209,235,2.381,236,2.651,237,2.651,238,3.174,239,2.381,250,3.356,251,2.578,252,2.578,261,3.007,319,0.407,485,2.718,595,3.561,646,3.356,649,3.455,1531,5.409,1692,4.067,1693,3.568,1695,3.721,1747,5.946,1751,5.405,1752,5.405,1753,6.108,1754,6.108,1755,6.108]],["title/injectables/PluginSimpleImage.html",[317,0.999,1756,3.33]],["body/injectables/PluginSimpleImage.html",[3,0.223,4,0.223,9,0.162,12,0.483,18,2.256,28,0.75,35,2.267,39,2.308,52,1.131,55,0.008,72,2.78,112,0.462,115,0.845,125,0.211,126,0.545,135,1.596,179,1.101,213,0.443,229,0.005,230,0.007,231,0.005,317,1.567,318,2.315,319,0.492,465,2.879,469,2.775,473,3.61,476,3.589,478,1.528,485,2.671,514,3.695,597,3.205,1159,5.974,1486,3.468,1589,5.556,1756,5.222,1757,5.974,1758,5.253,1759,6.534,1760,5.936,1761,5.936]],["title/modules/PluginSimpleImageModule.html",[232,0.859,1532,3.001]],["body/modules/PluginSimpleImageModule.html",[3,0.226,4,0.226,9,0.164,12,0.489,15,2.186,55,0.008,112,0.409,115,0.856,125,0.213,126,0.552,179,1.11,192,2.073,213,0.426,229,0.005,230,0.007,231,0.005,232,1.475,234,2.175,235,2.345,236,2.61,237,2.61,238,3.152,239,2.345,250,3.324,251,2.539,252,2.539,261,2.979,319,0.401,482,3.231,485,2.692,514,3.423,595,3.527,646,3.324,649,3.423,1532,5.638,1589,4.526,1692,4.028,1693,3.513,1695,3.664,1715,5.322,1716,5.322,1756,6.256,1757,4.866,1759,7.154,1762,5.322,1763,5.322,1764,6.014]],["title/classes/Ready.html",[126,0.432,538,1.884]],["body/classes/Ready.html",[3,0.179,4,0.179,9,0.13,18,3.157,28,0.6,29,1.245,32,3.396,39,1.836,47,1.396,52,1.377,54,1.639,55,0.009,56,1.031,57,1.141,58,0.867,60,1.099,61,1.854,112,0.352,125,0.301,126,0.74,201,1.64,213,0.461,229,0.004,230,0.006,231,0.004,319,0.515,324,1.719,341,1.122,447,2.007,478,1.224,533,4.089,538,3.324,545,3.903,546,2.777,547,4.708,548,2.896,549,4.433,550,3.362,551,4.839,554,3.362,555,3.184,556,3.91,557,2.67,558,4.058,559,3.896,560,1.902,561,4.058,562,3.03,563,4.221,564,3.362,565,5.141,566,3.227,567,3.362,568,3.362,569,4.523,570,3.184,1765,6.395,1766,4.754]],["title/interfaces/ReadyMap.html",[399,0.248,539,2.644]],["body/interfaces/ReadyMap.html",[3,0.186,4,0.186,9,0.135,12,0.402,52,0.942,55,0.009,57,0.829,71,3.11,79,1.855,89,2.207,95,1.97,112,0.405,119,4.246,120,1.879,125,0.298,179,1.099,213,0.465,229,0.004,230,0.006,231,0.004,319,0.437,341,1.192,343,1.588,352,2.134,360,3.348,399,0.443,400,1.072,437,1.664,453,1.419,478,1.273,497,2.776,512,2.559,526,2.776,527,3.15,528,6.047,529,2.887,531,2.887,532,3.834,533,2.342,534,2.887,535,2.342,536,2.887,537,3.209,538,2.626,539,3.686,540,2.887,541,2.342,542,2.145,543,2.776,1767,4.942]],["title/classes/SaveEnd.html",[126,0.432,561,2.644]],["body/classes/SaveEnd.html",[3,0.179,4,0.179,9,0.13,18,3.157,28,0.6,29,1.245,32,3.396,39,1.836,47,1.396,52,1.377,54,1.639,55,0.009,56,1.031,57,1.141,58,0.867,60,1.099,61,1.854,112,0.352,125,0.301,126,0.74,201,1.64,213,0.461,229,0.004,230,0.006,231,0.004,319,0.515,324,1.719,341,1.122,447,2.007,478,1.224,533,4.089,538,3.227,545,3.903,546,2.777,547,4.708,548,2.896,549,4.433,550,3.362,551,4.839,554,3.362,555,3.184,556,3.91,557,2.67,558,4.058,559,3.896,560,1.902,561,4.34,562,3.03,563,4.221,564,3.362,565,5.141,566,3.227,567,4.523,568,3.362,569,3.362,570,3.184,1768,6.395,1769,4.754]],["title/classes/SaveStart.html",[126,0.432,558,2.644]],["body/classes/SaveStart.html",[3,0.179,4,0.179,9,0.13,18,3.157,28,0.6,29,1.245,32,3.396,39,1.836,47,1.396,52,1.377,54,1.639,55,0.009,56,1.031,57,1.141,58,0.867,60,1.099,61,1.854,112,0.352,125,0.301,126,0.74,201,1.64,213,0.461,229,0.004,230,0.006,231,0.004,319,0.515,324,1.719,341,1.122,447,2.007,478,1.224,533,4.089,538,3.227,545,3.903,546,2.777,547,4.708,548,2.896,549,4.433,550,3.362,551,4.839,554,3.362,555,3.184,556,3.91,557,2.67,558,4.34,559,3.896,560,1.902,561,4.058,562,3.03,563,4.221,564,4.523,565,5.141,566,3.227,567,3.362,568,3.362,569,3.362,570,3.184,1770,6.395,1771,4.754]],["title/components/SidebarComponent.html",[0,1.513,224,2.302]],["body/components/SidebarComponent.html",[0,2.362,1,2.403,2,3.099,3,0.185,4,0.185,5,2.761,6,2.075,7,2.482,8,2.761,9,0.134,10,2.724,21,2.66,22,4.786,23,2.022,24,3.673,26,3.673,28,0.621,41,4.168,45,6.503,46,6.503,52,1.246,55,0.008,56,1.699,57,0.826,65,1.694,82,3.189,112,0.36,113,4.127,115,0.7,117,1.509,118,2.872,125,0.174,126,0.451,154,2.403,192,1.694,193,3.673,194,2.838,195,2.133,196,4.399,197,2.761,198,2.761,199,2.195,200,2.329,201,1.74,202,2.568,203,3.673,204,2.26,205,2.568,206,2.761,207,2.403,208,2.761,209,2.761,210,2.26,211,2.761,212,2.329,213,0.413,214,2.054,215,2.761,216,2.403,217,2.761,218,2.403,219,2.26,220,2.761,221,2.26,222,2.761,223,2.329,224,3.83,225,2.66,226,2.133,227,2.568,228,2.761,229,0.004,230,0.006,231,0.004,350,2.879,1772,6.503,1773,4.35,1774,7.349,1775,6.54,1776,4.916,1777,4.916,1778,6.54,1779,7.833,1780,6.54]],["title/interfaces/Tag.html",[219,2.165,399,0.248]],["body/interfaces/Tag.html",[3,0.24,4,0.24,9,0.175,28,0.807,29,1.505,42,4.521,55,0.008,57,0.807,65,2.203,112,0.425,117,1.963,125,0.295,179,1.153,213,0.407,219,3.818,229,0.006,230,0.007,231,0.006,271,3.228,319,0.426,341,1.2,352,2.038,399,0.438,400,1.386,434,1.963,453,1.836,632,3.729,1075,4.521,1609,4.81,1610,5.174]],["title/classes/TestClass.html",[126,0.432,1208,3.33]],["body/classes/TestClass.html",[3,0.205,4,0.205,9,0.149,18,2.073,28,0.689,35,2.149,39,1.566,47,2.269,52,1.334,55,0.009,72,1.752,73,2.24,112,0.425,125,0.274,126,0.748,127,3.476,135,2.192,229,0.005,230,0.006,231,0.005,319,0.515,341,0.758,415,3.559,453,2.01,465,2.729,469,1.674,471,3.421,476,3.125,478,1.404,546,3.185,560,2.182,575,3.125,577,3.655,601,3.185,603,2.951,640,3.476,828,3.476,900,3.185,901,4.088,1119,3.857,1198,3.857,1199,4.103,1200,4.412,1206,4.412,1207,4.412,1208,5.466,1209,4.412,1210,3.857,1211,6.253,1212,4.412,1213,4.412,1214,4.412,1215,4.412,1216,4.412,1781,5.453,1782,5.453]],["title/interfaces/TinynodeDemos.html",[399,0.248,455,2.378]],["body/interfaces/TinynodeDemos.html",[3,0.176,4,0.176,9,0.128,12,0.382,14,1.523,23,1.695,28,0.592,29,1.234,55,0.009,56,1.374,57,0.592,63,3.508,79,1.108,87,1.738,95,2.154,112,0.348,117,1.44,125,0.293,144,3.13,151,3.097,179,0.945,201,1.773,213,0.465,214,2.873,229,0.004,230,0.006,231,0.004,319,0.312,323,1.408,324,2.369,341,0.652,343,1.507,350,2.533,352,1.695,357,2.449,358,1.347,362,2.368,363,2.368,364,3.59,386,3.212,399,0.446,400,1.017,408,2.292,418,2.094,434,1.44,439,2.094,444,2.989,445,2.537,446,2.633,447,2.675,448,2.222,449,2.156,450,2.449,451,2.537,452,2.222,453,1.819,454,3.881,455,3.199]],["title/interfaces/TinynodeDemos-1.html",[391,1.368,399,0.209,455,2.004]],["body/interfaces/TinynodeDemos-1.html",[3,0.179,4,0.179,9,0.13,10,1.765,12,0.388,14,1.535,23,1.513,28,0.601,29,1.247,55,0.009,56,1.388,57,0.601,63,3.536,79,1.125,87,1.765,95,2.171,112,0.352,117,1.462,125,0.295,144,3.146,179,0.955,201,1.778,213,0.466,214,2.866,229,0.004,230,0.006,231,0.004,323,1.43,324,2.376,341,0.662,343,1.53,350,2.26,352,1.709,357,2.487,358,1.368,362,2.405,363,2.405,364,3.607,386,3.229,399,0.448,400,1.033,418,2.126,434,1.462,439,2.126,445,2.577,446,2.675,447,2.703,448,2.257,449,2.19,450,2.487,451,2.577,452,2.257,453,1.839,454,3.906,455,3.233,456,3.035]],["title/interfaces/ToolSettingsMap.html",[399,0.248,483,2.644]],["body/interfaces/ToolSettingsMap.html",[3,0.193,4,0.193,9,0.141,12,0.419,14,1.092,35,2.07,52,1.285,55,0.009,58,1.372,88,2.217,112,0.371,115,0.733,125,0.294,126,0.472,135,1.384,201,1.046,213,0.355,229,0.005,230,0.006,231,0.005,232,1.23,310,2.845,319,0.449,323,1.545,341,1.109,352,2.007,360,2.499,399,0.421,400,1.116,465,2.931,466,3.64,467,3.446,468,2.89,469,2.805,470,3.006,471,3.675,473,4.047,474,3.446,475,3.006,476,3.561,477,5.341,478,1.325,479,2.114,480,2.785,481,3.446,482,2.925,483,3.785,484,4.296,485,2.438,486,3.785,487,3.785,488,2.769,489,3.006,490,3.28,491,3.135,492,2.172,493,2.785,494,3.28,497,2.89,1783,5.146]],["title/interfaces/ToolSettingsMap-1.html",[391,1.368,399,0.209,483,2.228]],["body/interfaces/ToolSettingsMap-1.html",[3,0.193,4,0.193,9,0.14,12,0.417,14,1.088,35,2.065,52,1.281,55,0.009,58,1.369,88,2.211,112,0.37,115,0.73,125,0.293,126,0.471,135,1.379,201,1.043,213,0.42,229,0.005,230,0.006,231,0.005,232,1.227,310,2.838,319,0.448,323,1.539,341,1.108,352,2.005,360,2.493,399,0.42,400,1.112,465,2.925,467,3.433,468,2.879,469,2.803,470,2.995,471,3.668,473,4.043,474,3.433,475,2.995,476,3.556,477,5.333,478,1.32,479,2.107,480,2.774,481,3.433,482,2.918,483,3.776,484,4.286,485,2.432,486,3.776,487,3.776,488,2.763,489,2.995,490,3.268,491,3.123,492,2.164,493,2.774,494,3.268,495,3.626,497,2.879,1784,5.127]],["title/changelog.html",[1785,2.806,1786,2.806,1787,2.318]],["body/changelog.html",[0,1.77,13,2.877,14,1.169,15,1.617,23,1.301,55,0.006,59,3.145,60,1.274,62,2.532,88,2.554,94,4.291,117,2.384,118,3.217,179,0.822,213,0.409,214,2.439,229,0.005,230,0.006,231,0.005,232,1.285,239,2.147,326,3.217,422,2.877,430,5.199,437,1.854,488,3.475,504,2.693,510,2.877,542,3.057,587,3.688,646,2.459,648,3.355,698,3.51,704,3.217,729,3.895,868,4.874,901,3.217,928,3.688,930,3.895,931,3.51,967,4.144,1136,5.698,1180,4.144,1183,6.282,1184,4.874,1186,4.144,1189,3.355,1313,4.874,1575,4.456,1633,4.456,1657,3.895,1787,4.114,1788,5.507,1789,5.507,1790,4.144,1791,5.507,1792,5.507,1793,5.843,1794,7.043,1795,5.507,1796,5.698,1797,5.507,1798,5.507,1799,7.043,1800,5.507,1801,5.507,1802,4.874,1803,5.507,1804,5.507,1805,5.507,1806,5.507,1807,4.456,1808,5.507,1809,5.507,1810,5.507,1811,7.043,1812,7.043,1813,5.507,1814,4.874,1815,6.232,1816,4.874,1817,4.456,1818,5.507,1819,5.507,1820,3.51,1821,5.507,1822,5.507,1823,5.507,1824,5.507,1825,5.507,1826,5.507,1827,5.507,1828,5.507,1829,5.507,1830,5.507,1831,5.507,1832,5.507,1833,5.507,1834,4.874,1835,4.874,1836,4.874]],["title/contributing.html",[1785,2.806,1786,2.806,1837,3.511]],["body/contributing.html",[9,0.105,17,2.584,30,2.401,39,1.588,52,0.735,54,1.33,55,0.005,71,1.828,88,1.819,111,2.904,182,3.122,229,0.005,230,0.005,231,0.003,235,1.504,279,4.866,344,3.122,399,0.203,404,1.504,445,2.088,492,2.335,510,2.015,535,2.621,542,2.401,549,2.015,562,2.46,578,4.121,599,2.729,630,1.828,635,2.254,649,2.543,655,4.162,663,2.584,700,5.314,704,2.254,778,3.415,880,3.122,901,3.777,928,3.704,930,2.729,1102,2.729,1128,5.667,1289,3.231,1295,3.415,1315,2.904,1351,3.415,1354,3.415,1468,3.415,1580,3.415,1603,3.415,1657,2.729,1815,4.895,1816,3.415,1820,5.569,1834,4.895,1835,3.415,1836,3.415,1837,4.895,1838,4.895,1839,5.722,1840,3.859,1841,3.859,1842,3.415,1843,3.415,1844,3.859,1845,3.859,1846,3.415,1847,8.013,1848,5.532,1849,3.859,1850,6.466,1851,3.859,1852,2.904,1853,3.859,1854,3.859,1855,4.476,1856,3.122,1857,3.415,1858,3.859,1859,3.859,1860,3.859,1861,3.859,1862,7.062,1863,3.122,1864,3.859,1865,3.122,1866,3.859,1867,3.859,1868,4.476,1869,3.859,1870,3.859,1871,4.895,1872,3.859,1873,3.859,1874,5.532,1875,3.859,1876,3.859,1877,5.532,1878,3.859,1879,7.476,1880,3.859,1881,7.476,1882,5.532,1883,3.415,1884,5.532,1885,3.859,1886,3.859,1887,3.859,1888,3.859,1889,3.859,1890,3.859,1891,3.859,1892,5.532,1893,3.859,1894,3.859,1895,5.532,1896,3.859,1897,3.859,1898,3.859,1899,5.532,1900,3.859,1901,5.532,1902,7.476,1903,3.859,1904,3.859,1905,3.859,1906,5.532,1907,3.859,1908,3.859,1909,3.859,1910,3.859,1911,3.859,1912,3.859,1913,3.859,1914,3.859,1915,3.859,1916,3.859,1917,3.859,1918,3.859,1919,3.859,1920,3.859,1921,5.532,1922,6.466,1923,3.859,1924,3.859,1925,3.859,1926,3.859,1927,3.859,1928,3.859,1929,3.859,1930,3.859,1931,5.532,1932,3.859,1933,3.859,1934,3.415,1935,3.859,1936,3.859,1937,3.859,1938,3.859,1939,5.532,1940,3.859,1941,3.859,1942,3.859,1943,5.532,1944,3.859,1945,3.415,1946,3.859,1947,3.859,1948,3.859,1949,3.859,1950,3.859,1951,5.532,1952,3.859,1953,3.859,1954,5.532,1955,3.859,1956,3.859,1957,3.859,1958,3.859,1959,3.859,1960,3.859,1961,3.859,1962,3.859,1963,3.859,1964,3.859,1965,3.859,1966,5.532,1967,3.859,1968,3.859,1969,3.859,1970,3.859,1971,3.859,1972,3.859,1973,3.859,1974,3.859,1975,5.532,1976,5.532,1977,5.532,1978,3.859,1979,3.859,1980,3.859,1981,3.859,1982,3.859,1983,3.859,1984,3.859,1985,3.859,1986,3.859,1987,3.859,1988,3.859,1989,5.532,1990,3.859,1991,5.532,1992,3.859,1993,3.859,1994,3.415,1995,3.859,1996,3.859,1997,5.532,1998,3.415,1999,3.859,2000,3.859,2001,3.859,2002,3.859,2003,3.859,2004,3.859,2005,3.859,2006,3.859,2007,3.859,2008,3.859,2009,3.859,2010,3.859,2011,3.859,2012,3.859,2013,3.859,2014,3.859,2015,3.859,2016,3.859,2017,3.859,2018,3.859,2019,3.859,2020,3.859,2021,3.859,2022,3.859,2023,3.859,2024,3.859,2025,3.859,2026,3.859,2027,3.859,2028,3.859]],["title/coverage.html",[2029,5.622]],["body/coverage.html",[0,2.417,1,1.042,9,0.058,10,3.046,11,1.887,23,1.809,49,1.828,55,0.008,57,0.269,65,0.735,88,0.701,126,0.619,154,2.99,169,0.735,172,4.797,179,0.318,195,0.925,199,0.952,200,1.01,204,0.98,207,1.042,210,0.98,212,1.01,213,0.467,216,1.042,218,1.042,219,0.98,221,0.98,223,1.01,224,1.042,226,0.925,229,0.002,230,0.003,231,0.002,279,2.634,284,1.725,301,1.725,302,1.725,311,1.725,317,1.783,319,0.627,320,1.887,331,2.045,332,1.894,350,1.236,361,1.894,364,1.519,392,1.887,399,0.478,401,3.35,408,1.711,423,3.35,432,1.887,439,1.563,442,1.887,444,3.627,452,1.659,454,1.768,455,1.768,456,3.627,457,1.887,463,1.887,465,1.365,466,4.025,472,2.692,480,1.894,483,1.966,489,2.045,493,1.894,495,4.025,496,3.78,506,1.114,507,0.853,508,1.114,509,1.829,513,1.114,514,0.98,523,1.114,526,1.198,527,3.899,532,1.246,534,1.246,536,1.246,538,0.853,539,1.198,543,1.198,545,1.077,547,3.467,548,3.467,558,1.198,561,1.198,563,1.246,571,1.508,572,3.149,577,1.114,583,1.198,584,1.299,586,1.359,588,1.198,592,1.508,606,0.98,677,2.832,680,1.725,759,4.282,770,1.508,773,1.605,775,1.725,776,4.605,777,4.605,786,1.725,787,1.605,789,1.605,800,1.725,904,1.725,905,3.603,906,3.35,907,3.603,927,1.725,1031,1.887,1032,1.725,1033,3.35,1048,1.359,1164,6.6,1171,1.887,1172,1.887,1189,1.299,1198,1.508,1199,3.35,1208,1.508,1210,1.508,1217,1.725,1218,1.887,1219,1.887,1236,1.887,1237,1.887,1251,1.887,1285,1.887,1286,1.725,1290,1.887,1291,1.725,1292,1.887,1318,1.887,1319,1.887,1370,1.605,1404,1.725,1405,1.887,1406,1.887,1432,1.725,1433,1.725,1446,1.725,1458,1.725,1462,1.887,1533,2.634,1534,1.605,1541,1.725,1543,1.725,1545,1.725,1589,1.605,1592,2.634,1593,1.725,1609,3.35,1610,1.428,1611,1.887,1630,1.428,1631,1.299,1638,1.887,1642,1.508,1643,1.887,1681,2.832,1685,1.508,1686,1.887,1699,1.428,1700,1.887,1708,1.508,1709,1.887,1717,1.508,1718,1.887,1726,1.428,1727,1.887,1735,1.508,1736,1.887,1747,1.428,1748,1.887,1756,1.508,1757,1.725,1758,1.887,1772,1.887,1773,1.887,2029,1.887,2030,2.132,2031,2.132,2032,1.887,2033,8.343,2034,1.887,2035,6.986,2036,8.724,2037,2.132,2038,2.132,2039,5.153,2040,3.5,2041,2.132,2042,6.116,2043,7.522,2044,8.283,2045,3.5,2046,4.452,2047,5.691,2048,1.887,2049,1.887,2050,3.94,2051,3.94,2052,2.132,2053,2.132,2054,1.887,2055,1.887,2056,1.887,2057,2.132,2058,3.5,2059,1.887,2060,2.132,2061,2.132,2062,2.132,2063,5.691,2064,2.832,2065,3.603,2066,1.887,2067,1.887,2068,4.452,2069,2.132,2070,2.132,2071,2.132,2072,2.132,2073,2.132,2074,2.132,2075,2.132,2076,2.132,2077,2.132,2078,2.132,2079,2.132,2080,2.132,2081,2.132,2082,2.132,2083,2.132,2084,2.132,2085,2.132,2086,2.132]],["title/dependencies.html",[235,2.2,1807,3.21]],["body/dependencies.html",[55,0.008,115,0.838,116,3.585,118,3.438,120,2.237,201,1.493,229,0.005,230,0.007,231,0.005,235,2.295,263,5.208,264,5.208,266,5.942,267,4.681,271,3.709,272,5.208,273,5.208,274,2.877,276,5.208,278,4.762,308,3.305,478,1.515,509,2.418,555,3.941,749,3.941,1185,3.751,1422,4.429,1441,3.751,1592,4.429,1702,4.762,1729,5.208,1750,4.429,1852,4.429,2087,5.885,2088,9.022,2089,5.885,2090,7.344,2091,5.885,2092,5.885,2093,5.885,2094,5.885,2095,5.885,2096,5.885,2097,5.885,2098,5.885,2099,5.885,2100,5.885,2101,7.344,2102,5.208,2103,5.885,2104,5.885,2105,5.885,2106,5.885,2107,5.885,2108,5.885,2109,5.885,2110,5.885,2111,5.885,2112,5.885]],["title/miscellaneous/enumerations.html",[2113,2.417,2114,4.993]],["body/miscellaneous/enumerations.html",[10,2.096,14,1.52,23,1.336,28,0.714,55,0.008,61,3.642,95,2.15,144,3.222,201,1.734,213,0.459,229,0.005,230,0.006,231,0.005,319,0.523,363,4.173,364,3.586,386,3.307,444,3.604,447,3.023,448,3.394,456,3.604,538,3.145,545,3.617,547,3.445,548,4.363,557,4.641,558,3.176,559,4.363,560,2.263,561,3.176,562,3.604,563,3.303,572,4,593,4.255,594,3.787,595,2.68,598,5.066,600,5.39,602,5.39,604,5.39,605,5.39,2113,3.445,2114,5.004,2115,5.655,2116,5.655,2117,5.655,2118,4.255]],["title/miscellaneous/functions.html",[429,4.566,2113,2.417]],["body/miscellaneous/functions.html",[12,0.604,14,1.271,23,1.415,28,0.756,54,2.781,55,0.008,56,1.75,57,0.756,58,1.539,72,2.593,83,4.971,126,0.55,135,1.61,201,1.218,213,0.445,214,1.881,229,0.005,230,0.007,231,0.005,232,1.355,304,4.01,319,0.562,429,4.845,472,3.128,479,2.46,480,3.24,482,2.599,575,3.766,577,3.128,583,3.363,631,4.915,769,3.817,1370,5.586,1432,4.845,1433,6.007,1446,6.007,1454,5.299,1458,6.007,1482,4.506,1541,6.528,1868,4.845,2056,5.299,2064,4.845,2065,6.825,2067,5.299,2113,3.648,2118,4.506,2119,5.299,2120,5.988,2121,5.988,2122,5.988,2123,5.988,2124,5.988]],["title/index.html",[28,0.501,1785,2.806,1786,2.806]],["body/index.html",[0,2.302,2,3.394,14,1.669,15,2.426,23,1.336,55,0.006,60,1.308,62,3.92,63,2.765,100,3.445,117,2.414,151,2.765,179,0.844,194,2.454,195,2.454,201,1.598,202,3.741,213,0.472,214,2.25,229,0.005,230,0.006,231,0.005,232,1.307,235,2.205,239,2.205,252,2.387,256,4.575,315,4.255,321,2.454,358,2.057,430,4.796,437,1.904,488,2.943,535,2.68,595,2.68,646,2.525,663,5.264,738,3.604,801,4.575,928,4.796,1129,3.787,1178,5.39,1180,5.39,1185,3.604,1186,4.255,1189,5.034,1192,5.915,1289,4.592,1315,4.255,1320,4.255,1561,5.795,1575,4.575,1787,4.592,1820,5.267,1838,6.956,2125,5.655,2126,5.655,2127,5.655,2128,5.655,2129,5.655,2130,5.655,2131,5.655,2132,4.796,2133,7.162,2134,5.004,2135,5.004,2136,4.575,2137,5.655]],["title/license.html",[1785,2.806,1786,2.806,2138,3.968]],["body/license.html",[23,1.39,55,0.007,71,2.789,89,2.628,229,0.005,230,0.007,231,0.005,252,2.484,438,2.418,549,3.074,712,4.163,930,5.662,1189,3.585,1289,4.29,1793,4.429,1863,4.762,1868,4.762,1871,6.499,1883,5.208,1994,5.208,1998,5.208,2134,5.208,2135,5.208,2139,5.208,2140,5.885,2141,5.885,2142,8.006,2143,5.885,2144,5.885,2145,5.885,2146,5.885,2147,5.885,2148,7.344,2149,9.099,2150,5.885,2151,5.885,2152,5.885,2153,7.344,2154,5.885,2155,5.885,2156,5.885,2157,5.208,2158,5.885,2159,5.885,2160,5.885,2161,5.885,2162,7.344,2163,5.885,2164,5.885,2165,5.885,2166,5.885,2167,5.885,2168,5.885,2169,7.344,2170,7.344,2171,5.885,2172,5.885,2173,5.885,2174,5.885,2175,5.885,2176,5.885,2177,5.885,2178,5.885,2179,5.885,2180,5.885,2181,5.885,2182,5.885,2183,5.885,2184,5.885,2185,5.885,2186,5.885,2187,5.885,2188,5.885,2189,5.885,2190,5.885,2191,5.885,2192,5.885,2193,5.885,2194,5.885,2195,5.885]],["title/modules.html",[234,2.298]],["body/modules.html",[55,0.006,229,0.005,230,0.006,231,0.005,233,4.058,234,2.075,244,4.058,245,4.84,246,3.842,247,3.352,248,4.058,249,4.84,267,5.991,404,3.239,996,5.726,1525,4.058,1526,3.657,1527,3.495,1528,3.657,1529,3.657,1530,3.657,1531,3.495,1532,3.657,1555,4.318,1568,4.318,1572,3.842,1591,4.642,1594,4.058,2196,9.399,2197,9.463,2198,8.307]],["title/overview.html",[2199,5.622]],["body/overview.html",[1,3.633,2,1.446,49,3.291,55,0.008,192,1.052,195,1.325,199,3.318,200,3.521,204,2.591,207,2.755,210,3.416,212,2.67,216,3.633,218,2.755,221,3.416,223,3.521,224,2.755,226,3.225,229,0.003,230,0.004,231,0.003,232,0.557,233,6.304,234,1.104,235,1.19,236,1.325,237,1.325,238,1.19,239,1.19,240,2.701,241,2.701,242,2.701,243,2.701,244,3.985,245,5.968,246,4.219,247,5.206,248,6.509,249,5.749,250,2.077,251,1.288,252,1.288,318,1.19,331,3.681,332,3.409,391,1.052,400,0.662,424,2.701,425,2.701,546,1.783,586,3.591,588,3.164,606,2.591,1048,3.591,1428,2.701,1429,2.701,1430,2.701,1431,2.701,1521,2.701,1522,2.701,1523,2.701,1524,2.701,1525,5.907,1526,5.102,1527,4.876,1528,5.102,1529,5.102,1530,5.102,1531,4.876,1532,5.102,1555,4.741,1556,2.701,1568,6.775,1569,2.701,1570,2.701,1571,2.701,1572,5.255,1594,5.255,1597,2.701,1598,2.701,1599,2.701,1600,2.701,1628,2.701,1629,2.701,1630,3.773,1631,3.432,1685,3.985,1689,2.701,1690,2.701,1699,3.773,1703,2.701,1704,2.701,1708,3.985,1712,2.701,1713,2.701,1717,3.985,1721,2.701,1722,2.701,1726,3.773,1730,2.701,1731,2.701,1735,3.985,1742,2.701,1743,2.701,1747,3.773,1751,2.701,1752,2.701,1756,3.985,1762,2.701,1763,2.701,2199,2.701,2200,4.651,2201,3.052,2202,3.052,2203,3.052]],["title/todo.html",[450,2.072,1785,2.806,1786,2.806]],["body/todo.html",[0,2.017,23,1.483,55,0.007,65,2.163,113,3.524,195,2.724,201,1.675,213,0.452,214,1.971,229,0.006,230,0.007,231,0.006,232,1.145,234,2.27,274,3.068,315,4.722,321,3.316,411,4,418,2.802,427,3.169,450,3.278,453,1.802,492,3.225,560,2.511,573,3.823,574,3.666,575,3.678,597,2.724,607,3.278,635,3.666,672,4.202,764,5.077,996,4.655,1141,5.553,1144,6.058,1161,5.077,1422,4.722,1693,3.666,1790,4.722,1934,5.553,1945,5.553,2139,5.553,2157,5.553,2204,6.275,2205,6.275,2206,6.275,2207,5.553,2208,6.275,2209,6.275,2210,6.275,2211,6.275,2212,5.553,2213,5.553,2214,5.553]],["title/miscellaneous/typealiases.html",[2113,2.417,2215,5.643]],["body/miscellaneous/typealiases.html",[6,2.711,28,0.811,55,0.008,57,1.051,169,2.214,179,1.156,213,0.339,229,0.006,230,0.007,231,0.006,319,0.516,341,1.078,404,2.504,496,3.475,500,3.475,501,4.352,502,4.352,503,3.354,504,3.14,505,4.352,506,3.354,508,3.354,513,3.354,523,3.354,524,3.475,525,4.352,538,2.57,545,3.243,547,3.912,548,4.72,558,3.607,561,3.607,563,3.752,570,5.189,2113,3.912,2118,4.833,2216,6.422,2217,7.748]],["title/miscellaneous/variables.html",[1856,4.566,2113,2.417]],["body/miscellaneous/variables.html",[0,2.495,10,2.495,13,1.819,14,1.294,15,1.022,23,0.823,28,0.44,52,0.978,55,0.008,57,1.06,59,1.555,60,2.094,61,3.519,88,2.675,100,3.127,126,0.32,154,2.981,172,1.955,199,1.555,200,1.65,201,1.459,202,2.681,204,1.601,205,2.681,212,1.65,213,0.456,214,1.094,218,2.51,221,1.601,223,1.65,229,0.003,230,0.005,231,0.003,232,0.937,279,5.064,301,2.817,302,4.153,306,4.933,309,2.62,311,4.153,312,6.35,313,3.081,314,3.081,315,2.62,319,0.551,323,1.541,338,4.785,341,0.484,360,1.291,427,3.398,437,1.172,449,2.36,462,2.36,466,2.463,486,4.216,487,4.36,488,2.765,489,3.931,490,3.272,491,3.127,492,2.167,493,3.641,494,3.272,495,2.463,509,2.505,526,1.955,537,1.702,539,1.955,543,1.955,566,1.393,575,1.555,583,2.883,584,3.127,597,1.511,607,1.819,609,2.432,632,1.47,677,2.817,680,4.153,738,3.272,745,5.445,748,4.543,750,3.081,751,5.445,752,5.445,753,5.075,759,2.62,766,2.817,767,2.817,768,2.817,769,2.219,770,3.631,771,2.817,772,2.62,773,3.863,774,2.817,776,2.817,777,5.445,785,2.332,786,4.153,787,3.863,788,3.081,789,3.863,790,3.081,905,2.817,906,2.62,907,4.153,918,4.543,927,4.153,996,2.121,1320,2.62,1533,3.863,1534,3.863,1545,4.153,1592,4.588,1593,4.153,1856,2.817,2032,3.081,2034,4.543,2048,3.081,2049,3.081,2050,3.081,2051,3.081,2054,4.543,2055,4.543,2059,4.543,2064,2.817,2065,4.153,2066,4.543,2102,3.081,2113,2.121,2118,3.863,2119,3.081,2218,3.482,2219,6.097,2220,3.482,2221,6.729,2222,3.482,2223,3.482,2224,3.482,2225,6.729,2226,5.133,2227,5.133,2228,3.482,2229,5.133]],["title/additional-documentation/tinynodes-library-docs.html",[23,0.713,65,1.04,499,1.31,648,1.839,1790,2.271]],["body/additional-documentation/tinynodes-library-docs.html",[23,1.636,55,0.007,108,6.127,201,1.408,229,0.006,230,0.007,231,0.006,325,5.211,649,3.184,1180,5.211,1183,5.603,1185,5.165,1186,5.211,1633,5.603,1692,3.747,1787,4.045,1814,6.127,1817,5.603,1839,6.127,1846,6.127,1855,5.603,1863,5.603,2132,4.637,2136,5.603,2230,6.127,2231,8.103,2232,6.924]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[65,1.04,201,0.614,213,0.159,499,1.31,2132,2.021]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[0,2.228,12,0.302,13,1.937,14,0.787,15,1.856,17,2.483,35,1.138,55,0.008,57,0.468,58,0.677,60,1.462,62,2.907,72,1.191,85,2.79,88,2.079,112,0.422,113,3.018,115,0.528,117,2.129,125,0.191,126,0.34,135,0.997,151,1.813,155,2.622,156,2.006,169,1.278,179,0.943,194,2.333,195,2.333,201,0.754,210,1.705,213,0.476,214,1.986,219,1.705,226,1.609,227,1.937,229,0.003,230,0.005,231,0.003,232,1.343,233,2.622,236,1.609,237,1.609,238,1.446,247,3.14,257,2.006,261,2.151,265,4.756,266,3,267,2.363,295,2.622,321,2.744,323,1.113,324,1.7,335,1.813,338,2.363,346,4.349,352,1.494,358,1.991,360,1.374,409,2.471,421,2.363,422,3.302,427,2.714,437,2.128,438,1.523,449,1.705,453,1.991,462,1.705,469,1.65,472,2.807,478,1.384,479,3.024,482,2.744,488,2.598,491,3.274,492,2.669,493,2.908,503,2.807,507,2.151,509,1.523,535,1.757,541,1.757,549,1.937,556,2.006,566,2.774,573,3.851,575,2.4,578,2.363,595,1.757,597,2.744,606,1.705,630,1.757,632,2.269,634,2.259,635,2.166,636,2.79,646,3.427,648,3.274,649,1.705,689,4.234,691,2.483,692,3.599,693,2.483,694,3.599,704,2.166,705,3.426,707,2.483,715,2.483,716,2.483,717,2.259,718,3.599,719,2.259,769,2.363,785,3.599,828,2.363,880,3,900,2.166,901,2.166,902,2.79,928,2.483,931,2.363,967,2.79,996,2.259,1010,3.281,1011,3.281,1102,2.622,1129,2.483,1139,4.044,1179,3.281,1185,4.03,1189,2.259,1289,4.05,1309,3.281,1315,2.79,1434,4.756,1435,4.756,1438,4.756,1457,3,1482,2.79,1527,2.259,1529,2.363,1531,2.259,1692,2.908,1699,3.599,1726,3.599,1747,3.599,1750,2.79,1787,2.166,1790,4.757,1820,2.363,1842,3.281,1852,4.757,1857,3.281,2213,3.281,2214,3.281,2233,3.707,2234,3.707,2235,3.707,2236,3.707,2237,3.281,2238,3.707,2239,3.707,2240,6.322,2241,3.707,2242,5.374,2243,3.707,2244,3.707,2245,5.374,2246,3.707,2247,3.707,2248,3.707,2249,3.707,2250,3.707,2251,3.707,2252,3.707,2253,3.707,2254,3.707,2255,3.707,2256,3.281,2257,3.707]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[65,1.04,201,0.614,213,0.159,499,1.31,1787,1.763]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[0,2.348,2,1.973,7,2.102,9,0.114,14,0.884,15,1.222,16,3.41,29,0.811,35,1.278,55,0.005,58,0.76,60,1.779,62,3.099,72,1.338,85,3.133,93,3.684,100,2.536,113,2.338,117,1.278,118,2.432,126,0.536,169,1.435,188,4.393,194,2.533,195,2.926,199,1.859,201,0.847,210,2.684,213,0.463,214,1.308,221,1.914,226,1.807,229,0.004,230,0.005,231,0.004,232,1.333,247,2.432,317,0.884,321,3.339,323,1.25,324,1.119,326,2.432,336,2.653,338,2.653,341,0.579,358,1.676,399,0.219,404,2.276,409,2.684,422,3.049,430,2.788,437,2.685,438,3.161,465,1.623,469,2.07,471,2.854,472,2.174,479,2.77,482,2.533,484,2.653,488,3.435,492,2.846,500,2.253,503,2.174,504,4.153,507,1.666,509,1.71,535,3.194,545,4.028,566,1.666,573,2.536,578,2.653,587,2.788,588,2.338,596,2.653,597,2.533,606,2.684,607,2.174,609,2.766,630,2.766,632,1.757,635,2.432,648,4.687,672,2.788,679,3.684,712,4.129,729,2.944,738,2.653,761,3.133,996,2.536,1021,3.368,1102,2.944,1136,6.873,1144,2.788,1185,3.721,1189,4.107,1289,3.41,1320,3.133,1331,3.684,1370,3.133,1482,3.133,1634,3.684,1657,5.168,1787,3.938,1793,6.29,1796,3.368,1802,3.684,1807,4.723,1817,3.368,1820,4.904,1843,3.684,1865,3.368,2132,2.788,2136,5.912,2207,3.684,2230,3.684,2256,5.166,2258,3.684,2259,3.684,2260,3.684,2261,3.684,2262,3.684,2263,3.684,2264,4.163,2265,7.397,2266,4.163,2267,4.163,2268,4.163,2269,4.163,2270,4.163,2271,4.163,2272,4.163,2273,4.163,2274,4.163,2275,4.163,2276,4.163,2277,4.163,2278,4.163,2279,4.163,2280,3.684,2281,4.163,2282,4.163,2283,3.684,2284,5.837,2285,4.163,2286,3.684,2287,6.741,2288,4.163,2289,3.684,2290,4.163,2291,4.163,2292,4.163,2293,4.163,2294,4.163,2295,4.163,2296,5.837,2297,4.163,2298,4.163,2299,3.684,2300,4.163,2301,4.163,2302,4.163]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[65,0.929,201,0.548,213,0.142,488,1.108,499,1.17,2132,1.805]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[9,0.147,12,0.438,14,1.142,15,2.629,16,4.052,55,0.009,56,1.166,60,1.244,62,3.53,117,1.651,151,2.629,159,2.629,169,1.854,178,3.601,179,1.305,201,1.094,213,0.428,229,0.005,230,0.006,231,0.005,232,0.981,234,2.509,235,2.097,358,1.544,469,2.13,488,3.154,492,2.27,597,3.796,996,4.226,1157,4.351,1185,3.428,1526,3.428,1527,3.276,1528,3.428,1530,3.428,1531,3.276,1532,3.428,1572,3.601,1692,4.795,1702,4.351,1750,4.047,1820,3.428,1852,5.219,2132,5.934,2212,4.759,2237,4.759,2303,5.378,2304,5.378,2305,5.378,2306,5.378,2307,5.378,2308,5.378,2309,5.378]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[65,0.929,201,0.548,213,0.142,488,1.108,499,1.17,1787,1.575]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[9,0.177,39,1.866,55,0.007,60,1.503,118,3.796,188,4.89,229,0.006,230,0.007,231,0.006,232,1.526,323,1.951,438,2.67,451,3.516,488,2.67,504,3.177,545,3.282,588,4.383,609,3.079,635,3.796,646,2.902,649,2.988,662,4.352,672,4.352,1021,5.258,1189,3.959,1657,5.519,1787,4.558,1793,6.294,1796,5.258,1820,4.974,1855,5.258,1865,5.258,2258,5.75,2259,5.75,2260,5.75,2261,5.75,2262,5.75,2263,5.75,2265,7.401,2280,5.75,2283,5.75,2286,5.75,2289,5.75,2299,5.75,2310,6.498]],["title/routes.html",[309,4.781]],["body/routes.html",[55,0.007,229,0.007,230,0.007,231,0.007,309,5.546]]],"invertedIndex":[["",{"_index":55,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{},"routes.html":{}}}],["0",{"_index":172,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.5",{"_index":2107,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":2106,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":2112,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2035,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2047,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2039,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2063,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2060,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2082,"title":{},"body":{"coverage.html":{}}}],["05",{"_index":2265,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1",{"_index":391,"title":{"injectables/AppService-1.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["1.0.0",{"_index":2299,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.0.4",{"_index":2096,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2289,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.1.1",{"_index":2286,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.1.2",{"_index":2282,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.2",{"_index":1812,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":2279,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.0",{"_index":2273,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.2",{"_index":2268,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.4",{"_index":2099,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":2026,"title":{},"body":{"contributing.html":{}}}],["1.4.0",{"_index":2264,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1/1",{"_index":2036,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2079,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2081,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2287,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["10/11",{"_index":2041,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1164,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":157,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["11",{"_index":2283,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["11/14",{"_index":2076,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2201,"title":{},"body":{"overview.html":{}}}],["12th",{"_index":1809,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":2280,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["13th",{"_index":1805,"title":{},"body":{"changelog.html":{}}}],["14/36",{"_index":2053,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":188,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["15th",{"_index":1792,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2080,"title":{},"body":{"coverage.html":{}}}],["18/20",{"_index":2072,"title":{},"body":{"coverage.html":{}}}],["19/19",{"_index":2057,"title":{},"body":{"coverage.html":{}}}],["1em",{"_index":1284,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["2.0.8",{"_index":2105,"title":{},"body":{"dependencies.html":{}}}],["2.13.0",{"_index":2097,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":2098,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":2100,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":2103,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2044,"title":{},"body":{"coverage.html":{}}}],["20/21",{"_index":2069,"title":{},"body":{"coverage.html":{}}}],["2019",{"_index":1793,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["21",{"_index":2266,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["22",{"_index":2200,"title":{},"body":{"overview.html":{}}}],["22/23",{"_index":2071,"title":{},"body":{"coverage.html":{}}}],["24/27",{"_index":2074,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":158,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["2px",{"_index":1280,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["3.0.2",{"_index":2095,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2043,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":2038,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":180,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["33",{"_index":2078,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":2061,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":2052,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1627,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["4/11",{"_index":2062,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":2042,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":2203,"title":{},"body":{"overview.html":{}}}],["47/49",{"_index":2070,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":2045,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":2084,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":183,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["6",{"_index":511,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["6.3.3",{"_index":2110,"title":{},"body":{"dependencies.html":{}}}],["6.9.0",{"_index":2109,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2046,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":2083,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":2131,"title":{},"body":{"index.html":{}}}],["7.0.0",{"_index":2092,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":2108,"title":{},"body":{"dependencies.html":{}}}],["7.2.15",{"_index":2088,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":2090,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":2101,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2077,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2037,"title":{},"body":{"coverage.html":{}}}],["768px",{"_index":131,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["78",{"_index":2075,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2202,"title":{},"body":{"overview.html":{}}}],["85",{"_index":191,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["88",{"_index":2073,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":2058,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2040,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":2068,"title":{},"body":{"coverage.html":{}}}],["_disabled",{"_index":961,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_empty",{"_index":983,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_focused",{"_index":949,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_placeholder",{"_index":944,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_required",{"_index":954,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_value",{"_index":682,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["a:active",{"_index":165,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["a:hover",{"_index":164,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["above",{"_index":2168,"title":{},"body":{"license.html":{}}}],["abusive",{"_index":1992,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":1949,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":1913,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":966,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["accessor",{"_index":750,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":43,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["account",{"_index":1983,"title":{},"body":{"contributing.html":{}}}],["acting",{"_index":1984,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":549,"title":{},"body":{"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["action.action",{"_index":613,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["action.payload.holder",{"_index":1417,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["actions",{"_index":594,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"miscellaneous/enumerations.html":{}}}],["actions/ngx",{"_index":1423,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["active",{"_index":1146,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["actual_component",{"_index":228,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["adapted",{"_index":2024,"title":{},"body":{"contributing.html":{}}}],["add",{"_index":1144,"title":{},"body":{"components/FormContainerComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["add(key",{"_index":1473,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["add(page",{"_index":1649,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock",{"_index":1644,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock(pageid",{"_index":1651,"title":{},"body":{"injectables/PagesService.html":{}}}],["added",{"_index":504,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["adding",{"_index":491,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["additional",{"_index":499,"title":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["address",{"_index":1939,"title":{},"body":{"contributing.html":{}}}],["adds",{"_index":807,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["adheres",{"_index":2262,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["advances",{"_index":1928,"title":{},"body":{"contributing.html":{}}}],["aftercontentinit",{"_index":19,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["again",{"_index":2250,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["age",{"_index":1887,"title":{},"body":{"contributing.html":{}}}],["aggregate",{"_index":402,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["akitangdevtools",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangdevtools.forroot",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule.forroot",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["aliases",{"_index":2216,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":184,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["aligned",{"_index":1962,"title":{},"body":{"contributing.html":{}}}],["allow",{"_index":470,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["allows",{"_index":718,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["along",{"_index":2236,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["and/or",{"_index":2160,"title":{},"body":{"license.html":{}}}],["angular",{"_index":62,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["angular/animations",{"_index":2087,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2089,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":910,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/cdk/coercion",{"_index":912,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/cdk/layout",{"_index":124,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{}}}],["angular/common",{"_index":1441,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["angular/compiler",{"_index":2091,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":115,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/core/src/render3/jit/compiler_facade_interface",{"_index":747,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["angular/flex",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":749,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":116,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/router",{"_index":308,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"dependencies.html":{}}}],["any)(editorconfig",{"_index":818,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["any).onready",{"_index":1216,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["aot",{"_index":2296,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["api",{"_index":595,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["api](https://editorjs.io/api",{"_index":647,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["app",{"_index":59,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":2241,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["app.component.html",{"_index":27,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["app.component.scss",{"_index":25,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["appcomponent",{"_index":2240,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appcontainercomponent",{"_index":1,"title":{"components/AppContainerComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1149,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["appearance",{"_index":1896,"title":{},"body":{"contributing.html":{}}}],["application",{"_index":14,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["application.model",{"_index":365,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{}}}],["application.query",{"_index":366,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{}}}],["application.service",{"_index":431,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["application.store",{"_index":367,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{}}}],["applicationdata",{"_index":361,"title":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"coverage.html":{}}}],["applicationdatamodule",{"_index":245,"title":{"modules/ApplicationDataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["applicationquery",{"_index":331,"title":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"coverage.html":{},"overview.html":{}}}],["applicationref",{"_index":782,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["applicationstate",{"_index":439,"title":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{}},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{}}}],["applicationstatekeys",{"_index":363,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["applicationstatekeys.hidden",{"_index":373,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["applicationstore",{"_index":332,"title":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"coverage.html":{},"overview.html":{}}}],["applies",{"_index":1973,"title":{},"body":{"contributing.html":{}}}],["appmodule",{"_index":233,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appointed",{"_index":1985,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1951,"title":{},"body":{"contributing.html":{}}}],["approutes",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":244,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":405,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["apps/.../app",{"_index":2218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":2224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../application.model.ts",{"_index":2116,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../environment.prod.ts",{"_index":2222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":2223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/ngx",{"_index":10,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["appservice",{"_index":49,"title":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["area",{"_index":717,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["arguments",{"_index":1342,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["aria",{"_index":410,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["arising",{"_index":2193,"title":{},"body":{"license.html":{}}}],["array",{"_index":634,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["arrayadd",{"_index":1666,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayadd(entity.blocks",{"_index":1678,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove",{"_index":1667,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove(entity.blocks",{"_index":1679,"title":{},"body":{"injectables/PagesService.html":{}}}],["asjson",{"_index":1612,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["associated",{"_index":2150,"title":{},"body":{"license.html":{}}}],["async",{"_index":638,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["attach",{"_index":1320,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attached",{"_index":1331,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attacks",{"_index":1933,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1927,"title":{},"body":{"contributing.html":{}}}],["attr.aria",{"_index":935,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["attributes",{"_index":929,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["attribution",{"_index":2023,"title":{},"body":{"contributing.html":{}}}],["authors",{"_index":2184,"title":{},"body":{"license.html":{}}}],["auto",{"_index":181,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["autofocus",{"_index":689,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["autofocused",{"_index":760,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["autosave",{"_index":574,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{}}}],["autosavetime",{"_index":1060,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["available",{"_index":404,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"contributing.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["await",{"_index":644,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["back",{"_index":672,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["background",{"_index":519,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["ban",{"_index":1963,"title":{},"body":{"contributing.html":{}}}],["bar",{"_index":1241,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar'},{'name",{"_index":209,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["bar.component",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":1243,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.scss",{"_index":1242,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts",{"_index":1237,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:18",{"_index":1246,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:21",{"_index":1245,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:27",{"_index":1247,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar/nav",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"components/NavBarComponent.html":{},"coverage.html":{}}}],["barred",{"_index":1464,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["base",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Block.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["base/container.class",{"_index":926,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["based",{"_index":1021,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["baseplugin",{"_index":465,"title":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["bash",{"_index":2237,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["basic",{"_index":524,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["before",{"_index":655,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["behavior",{"_index":1902,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":1967,"title":{},"body":{"contributing.html":{}}}],["behaviorsubject",{"_index":119,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{}}}],["behaviorsubject(0",{"_index":845,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{}}}],["behaviorsubject(d",{"_index":830,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["behaviorsubject(editor",{"_index":862,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["behaviorsubject(false",{"_index":91,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["behaviorsubject(true",{"_index":1080,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["behaviorsubject(undefined",{"_index":841,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["behaviorsubject(value",{"_index":865,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["being",{"_index":1907,"title":{},"body":{"contributing.html":{}}}],["below",{"_index":1129,"title":{},"body":{"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["best",{"_index":1917,"title":{},"body":{"contributing.html":{}}}],["beta.24",{"_index":2093,"title":{},"body":{"dependencies.html":{}}}],["binding",{"_index":970,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["block",{"_index":179,"title":{"interfaces/Block.html":{}},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["block.id",{"_index":1680,"title":{},"body":{"injectables/PagesService.html":{}}}],["blockplaceholder",{"_index":690,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["blocks",{"_index":453,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["blocks.subscribe",{"_index":1416,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["blocksmap",{"_index":526,"title":{"interfaces/BlocksMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["blocktypes",{"_index":525,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["body",{"_index":1295,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"contributing.html":{}}}],["boolean",{"_index":79,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["bootstrap",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["border",{"_index":516,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["both",{"_index":1974,"title":{},"body":{"contributing.html":{}}}],["bottom",{"_index":716,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["box",{"_index":2129,"title":{},"body":{"index.html":{}}}],["break",{"_index":1826,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":2197,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["browser/animations",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["bug",{"_index":1817,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["build",{"_index":1815,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["builder",{"_index":1054,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["builds",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["calc(300px",{"_index":1317,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["call",{"_index":780,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["called",{"_index":702,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["calling",{"_index":531,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["calls",{"_index":667,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["caption",{"_index":515,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["card",{"_index":1165,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["case",{"_index":619,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["cd",{"_index":1049,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["center",{"_index":185,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["change",{"_index":542,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"changelog.html":{},"contributing.html":{}}}],["changed",{"_index":545,"title":{"classes/Changed.html":{}},"body":{"classes/Changed.html":{},"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changedetection",{"_index":1036,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectionstrategy",{"_index":1097,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1037,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectorref",{"_index":1050,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["changelog",{"_index":1787,"title":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changelog.md",{"_index":2288,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["changelogs",{"_index":1789,"title":{},"body":{"changelog.html":{}}}],["changemap",{"_index":543,"title":{"interfaces/ChangeMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["changes",{"_index":635,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changes.blocks",{"_index":1381,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.currentvalue",{"_index":1385,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.firstchange",{"_index":1382,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys",{"_index":1386,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys.includes(key",{"_index":1390,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["charge",{"_index":2145,"title":{},"body":{"license.html":{}}}],["check",{"_index":1163,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["child.label",{"_index":1779,"title":{},"body":{"components/SidebarComponent.html":{}}}],["children",{"_index":414,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["ci",{"_index":2205,"title":{},"body":{"todo.html":{}}}],["circumstances",{"_index":2004,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":2187,"title":{},"body":{"license.html":{}}}],["clarified",{"_index":1990,"title":{},"body":{"contributing.html":{}}}],["clarifying",{"_index":1948,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":126,"title":{"classes/Changed.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["classes",{"_index":546,"title":{},"body":{"classes/Changed.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"overview.html":{}}}],["cleaning",{"_index":879,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["cleans",{"_index":849,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["cleanupsubjects(holder",{"_index":881,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["clear",{"_index":601,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"classes/TestClass.html":{}}}],["clear(holder",{"_index":836,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["clear(undefined",{"_index":1503,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cleareditor",{"_index":602,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/enumerations.html":{}}}],["clearhandler(holder",{"_index":894,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["clears",{"_index":669,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["click",{"_index":986,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["click)=\"disableautosave()\">disable",{"_index":1133,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["client",{"_index":339,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["close",{"_index":1310,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["cluster_applicationdatamodule",{"_index":424,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_applicationdatamodule_providers",{"_index":425,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule",{"_index":1521,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_declarations",{"_index":1522,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_exports",{"_index":1524,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_imports",{"_index":1523,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule",{"_index":1428,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_declarations",{"_index":1429,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_exports",{"_index":1430,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_providers",{"_index":1431,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsngrxmodule",{"_index":1556,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsngrxmodule_imports",{"_index":1557,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["cluster_ngxeditorjspluginsmodule",{"_index":1569,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_exports",{"_index":1571,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_imports",{"_index":1570,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule",{"_index":1597,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule_declarations",{"_index":1598,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule_exports",{"_index":1600,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule_imports",{"_index":1599,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule",{"_index":1628,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule_providers",{"_index":1629,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule",{"_index":1689,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule_providers",{"_index":1690,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule",{"_index":1703,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule_providers",{"_index":1704,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule",{"_index":1712,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule_providers",{"_index":1713,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule",{"_index":1721,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule_providers",{"_index":1722,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule",{"_index":1730,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule_providers",{"_index":1731,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule",{"_index":1742,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule_providers",{"_index":1743,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule",{"_index":1751,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule_providers",{"_index":1752,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule",{"_index":1762,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule_providers",{"_index":1763,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cmd+shift+m",{"_index":1741,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["code",{"_index":1128,"title":{},"body":{"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/PluginCode.html":{},"contributing.html":{}}}],["code.plugin",{"_index":1694,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["coercebooleanproperty",{"_index":911,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(disabled",{"_index":965,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(focused",{"_index":953,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(required",{"_index":959,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["collection",{"_index":1178,"title":{},"body":{"components/HomePageComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["color",{"_index":162,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["column",{"_index":1170,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["combinelatest",{"_index":783,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["combinelatest([this.eventmap[holder",{"_index":870,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["comma",{"_index":1143,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["comments",{"_index":1931,"title":{},"body":{"contributing.html":{}}}],["commits",{"_index":1958,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":1821,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":1440,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["community",{"_index":1881,"title":{},"body":{"contributing.html":{}}}],["complaints",{"_index":1999,"title":{},"body":{"contributing.html":{}}}],["completes",{"_index":674,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["completly",{"_index":1803,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":2230,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component",{"_index":0,"title":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component'},{'name",{"_index":220,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["component/sidebar.component",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["component/sidebar.component.ts",{"_index":1773,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["component/sidebar.component.ts:11",{"_index":1777,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/sidebar.component.ts:14",{"_index":1776,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/tag.component",{"_index":1552,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["component/tag.component.ts",{"_index":2051,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":197,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["components/demo",{"_index":1605,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["components/nav",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["components/sidebar",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["components/tag",{"_index":1551,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["conditions",{"_index":2167,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1847,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":2007,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":575,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"classes/TestClass.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["config.data",{"_index":1403,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config.editorconfig",{"_index":809,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["config.onchange",{"_index":811,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["config.onready",{"_index":814,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["config.ts",{"_index":2065,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["config/editor",{"_index":1371,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config/module",{"_index":1447,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["configuration",{"_index":479,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configurations",{"_index":1482,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configured",{"_index":2302,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configuring",{"_index":2247,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["connection",{"_index":2194,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1942,"title":{},"body":{"contributing.html":{}}}],["console.log",{"_index":2272,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["const",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["constructive",{"_index":1914,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":47,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}}}],["constructor(@inject(userplugins",{"_index":1488,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(actions",{"_index":1407,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["constructor(app",{"_index":48,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{}}}],["constructor(config",{"_index":1201,"title":{},"body":{"classes/MockEditorJS.html":{},"injectables/NgxEditorJSService.html":{}}}],["constructor(el",{"_index":1327,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["constructor(pagesservice",{"_index":1047,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["constructor(payload",{"_index":550,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["constructor(private",{"_index":127,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/TestClass.html":{}}}],["constructor(protected",{"_index":440,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"components/EditorJSBaseComponent.html":{},"injectables/PagesQuery.html":{}}}],["constructor(public",{"_index":565,"title":{},"body":{"classes/Changed.html":{},"components/NgxEditorJSComponent.html":{},"classes/NotReady.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["constructor(query",{"_index":330,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/PagesService.html":{}}}],["constructor(service",{"_index":696,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["constructor(store",{"_index":435,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesQuery.html":{}}}],["constructor(userplugins",{"_index":1469,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructs",{"_index":1255,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["contacting",{"_index":1996,"title":{},"body":{"contributing.html":{}}}],["contain",{"_index":420,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["container",{"_index":17,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["container'},{'name",{"_index":203,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["container.component",{"_index":1544,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["container.component.html",{"_index":1039,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.scss",{"_index":1038,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts",{"_index":1033,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:102",{"_index":1056,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts:109",{"_index":1091,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:111",{"_index":1053,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:114",{"_index":1614,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:145",{"_index":1078,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:154",{"_index":1092,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:161",{"_index":1094,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:168",{"_index":1096,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:175",{"_index":1065,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:184",{"_index":1055,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:193",{"_index":1064,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:247",{"_index":1061,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:25",{"_index":1617,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:26",{"_index":1085,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:30",{"_index":1083,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts:35",{"_index":1079,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts:40",{"_index":1072,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:45",{"_index":1084,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:50",{"_index":1082,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:54",{"_index":1618,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:55",{"_index":1087,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:61",{"_index":1619,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:62",{"_index":1069,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:68",{"_index":1620,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:69",{"_index":1071,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:74",{"_index":1081,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:75",{"_index":1616,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:79",{"_index":1089,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:82",{"_index":1613,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:87",{"_index":1067,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:89",{"_index":1615,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:95",{"_index":1058,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container/form",{"_index":1032,"title":{},"body":{"components/FormContainerComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{}}}],["container/home",{"_index":1286,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{}}}],["container/page",{"_index":1543,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"coverage.html":{}}}],["containers/app/app.component",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["containers/base/container.class",{"_index":1448,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/editorjs",{"_index":1449,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/editorjs/editorjs.component",{"_index":1451,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/form",{"_index":1549,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containers/home",{"_index":1550,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containers/page",{"_index":1542,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containing",{"_index":528,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{}}}],["contains",{"_index":1182,"title":{},"body":{"components/HomePageComponent.html":{}}}],["content",{"_index":155,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["continue",{"_index":1831,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":2191,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1903,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":1837,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1961,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1966,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":1878,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":607,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controlling",{"_index":2256,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controls",{"_index":1161,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"todo.html":{}}}],["controltype",{"_index":939,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["controlvalueaccessor",{"_index":679,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["copies",{"_index":2162,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2148,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2142,"title":{},"body":{"license.html":{}}}],["core",{"_index":118,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["core.module.ts",{"_index":1601,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["core/src",{"_index":1099,"title":{},"body":{"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{}}}],["core/src/lib/components/demo",{"_index":1290,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"coverage.html":{}}}],["core/src/lib/ngx",{"_index":1595,"title":{},"body":{"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{}}}],["core/src/lib/stores/app/application.model",{"_index":1100,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["core/src/lib/stores/app/application.model.ts",{"_index":444,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/DemoData.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/TinynodeDemos.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["core/src/lib/stores/app/application.module.ts",{"_index":426,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["core/src/lib/stores/app/application.query.ts",{"_index":432,"title":{},"body":{"injectables/ApplicationQuery.html":{},"coverage.html":{}}}],["core/src/lib/stores/app/application.query.ts:10",{"_index":436,"title":{},"body":{"injectables/ApplicationQuery.html":{}}}],["core/src/lib/stores/app/application.service.ts",{"_index":320,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["core/src/lib/stores/app/application.service.ts:15",{"_index":334,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:34",{"_index":356,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:41",{"_index":353,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:52",{"_index":342,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:65",{"_index":348,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.store.ts",{"_index":457,"title":{},"body":{"injectables/ApplicationStore.html":{},"coverage.html":{}}}],["core/src/lib/stores/app/application.store.ts:10",{"_index":458,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["core/src/lib/types/app.ts",{"_index":401,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["coreapi",{"_index":2209,"title":{},"body":{"todo.html":{}}}],["corrective",{"_index":1953,"title":{},"body":{"contributing.html":{}}}],["correctly",{"_index":2231,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["covenant",{"_index":2025,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":2028,"title":{},"body":{"contributing.html":{}}}],["cover",{"_index":1823,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":2029,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":596,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["createconfig",{"_index":1324,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["created",{"_index":698,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["createeditor",{"_index":598,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/enumerations.html":{}}}],["createeditor(config",{"_index":1345,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["createeditor(options",{"_index":639,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["createeditorjsconfig",{"_index":1370,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["createeditorjsconfig(inputconfig",{"_index":2122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createeditorjsinstance",{"_index":1458,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsinstance(editorjs",{"_index":1454,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsoptions",{"_index":571,"title":{"interfaces/CreateEditorJSOptions.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{}}}],["createinstance",{"_index":791,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["createinstance(config",{"_index":808,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["createmoduleconfig",{"_index":1446,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createmoduleconfig(config",{"_index":2124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createngxeditorjsdemotools",{"_index":1541,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":631,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["createtools",{"_index":2242,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["creating",{"_index":778,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"contributing.html":{}}}],["creation",{"_index":761,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/PageStoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["criticism",{"_index":1915,"title":{},"body":{"contributing.html":{}}}],["current",{"_index":94,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"changelog.html":{}}}],["currently",{"_index":1633,"title":{},"body":{"modules/PageStoreModule.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["cursor",{"_index":174,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["custom",{"_index":503,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["cy.get('h1",{"_index":2228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cycle",{"_index":1011,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["d",{"_index":827,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["damages",{"_index":2188,"title":{},"body":{"license.html":{}}}],["darkgray",{"_index":1282,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["data",{"_index":324,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["data.blocks",{"_index":1127,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["data.json').subscribe((appdata",{"_index":369,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["data.length",{"_index":379,"title":{},"body":{"injectables/AppService.html":{}}}],["date.now",{"_index":828,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/TestClass.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["datorama/akita",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{},"dependencies.html":{}}}],["deal",{"_index":2151,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2195,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["decoration",{"_index":160,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["decorators",{"_index":97,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSEffects.html":{}}}],["deem",{"_index":1968,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":2002,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":60,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["default_holder_id",{"_index":2066,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":673,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["define",{"_index":722,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["defined",{"_index":52,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":467,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["deigned",{"_index":2243,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["delayed",{"_index":1813,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":884,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{}}}],["delete(pageid",{"_index":1654,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo",{"_index":214,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["demo.module.ts",{"_index":1534,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["demo.name",{"_index":382,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demo.routes",{"_index":1546,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes.ts",{"_index":2059,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["demo/angular",{"_index":2229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/src/lib/components/tag",{"_index":2050,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["demo/src/lib/config/index.ts",{"_index":2056,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["demo/src/lib/containers/form",{"_index":1031,"title":{},"body":{"components/FormContainerComponent.html":{},"coverage.html":{}}}],["demo/src/lib/containers/home",{"_index":1285,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"coverage.html":{}}}],["demo/src/lib/containers/page",{"_index":1611,"title":{},"body":{"components/PageContainerComponent.html":{},"coverage.html":{}}}],["demo/src/lib/ngx",{"_index":1533,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["demo/src/lib/store/pages/pages.models.ts",{"_index":1609,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.module.ts",{"_index":1632,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["demo/src/lib/store/pages/pages.query.ts",{"_index":1638,"title":{},"body":{"injectables/PagesQuery.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.query.ts:7",{"_index":1640,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.service.ts",{"_index":1643,"title":{},"body":{"injectables/PagesService.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:15",{"_index":1648,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:17",{"_index":1664,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:24",{"_index":1665,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:32",{"_index":1650,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:47",{"_index":1663,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:56",{"_index":1655,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:60",{"_index":1661,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:64",{"_index":1652,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:70",{"_index":1659,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.store.ts",{"_index":1681,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{}}}],["demo/src/lib/store/pages/pages.store.ts:9",{"_index":1684,"title":{},"body":{"injectables/PagesStore.html":{}}}],["demo](https://tinynodes",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["demodata",{"_index":364,"title":{"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["demodata.find(demo",{"_index":381,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demoname",{"_index":345,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demoname).data",{"_index":383,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demos",{"_index":63,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"index.html":{}}}],["dependencies",{"_index":235,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["dependency",{"_index":2213,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["deps",{"_index":1459,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["describedby",{"_index":936,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["describes",{"_index":417,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["describing",{"_index":590,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["destroy",{"_index":603,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{}}}],["destroy(undefined",{"_index":1506,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroyed",{"_index":77,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{}}}],["destroyeditor",{"_index":604,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/enumerations.html":{}}}],["destroyinstance(holder",{"_index":850,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["destroys",{"_index":675,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["destructive",{"_index":1353,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["details",{"_index":649,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["detection",{"_index":890,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["determined",{"_index":2020,"title":{},"body":{"contributing.html":{}}}],["developers",{"_index":1870,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":1561,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"index.html":{}}}],["devlog",{"_index":1810,"title":{},"body":{"changelog.html":{}}}],["diary",{"_index":2125,"title":{},"body":{"index.html":{}}}],["differing",{"_index":1909,"title":{},"body":{"contributing.html":{}}}],["direction",{"_index":1169,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["directive",{"_index":195,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["directives",{"_index":225,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["directives/ngx",{"_index":924,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["disability",{"_index":1889,"title":{},"body":{"contributing.html":{}}}],["disable",{"_index":637,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSService.html":{}}}],["disableautosave",{"_index":1042,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["disabled",{"_index":960,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["disabled(disabled",{"_index":964,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["discuss",{"_index":1840,"title":{},"body":{"contributing.html":{}}}],["dispatch",{"_index":1427,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["display",{"_index":177,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["displays",{"_index":1240,"title":{},"body":{"components/NavBarComponent.html":{}}}],["distinctuntilchanged",{"_index":121,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["distribute",{"_index":2158,"title":{},"body":{"license.html":{}}}],["doc",{"_index":2207,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["docheck",{"_index":913,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["docs",{"_index":648,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["document.createelement('div",{"_index":1209,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["documentation",{"_index":1189,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["documented",{"_index":2259,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["doing",{"_index":1854,"title":{},"body":{"contributing.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["download",{"_index":2233,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["due",{"_index":1814,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["dynamic",{"_index":2094,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1978,"title":{},"body":{"contributing.html":{}}}],["e.g",{"_index":418,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{}}}],["e2e/src/support/app.po.ts",{"_index":2032,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":785,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsPluginsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["easier",{"_index":2257,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["easily",{"_index":1576,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["edit",{"_index":1956,"title":{},"body":{"contributing.html":{}}}],["editior_js_instance",{"_index":773,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor",{"_index":597,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PluginSimpleImage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editor's",{"_index":715,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editor.blocks.clear",{"_index":895,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["editor.blocks.render",{"_index":899,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["editor.destroy",{"_index":855,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["editor.isready.then",{"_index":820,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["editor.saver.save().then(data",{"_index":892,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["editoraction.action",{"_index":618,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["editoractions",{"_index":610,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorconfig",{"_index":581,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorconfig.holder",{"_index":819,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["editorconfig.onchange",{"_index":810,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["editorconfig.onready",{"_index":813,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["editorel",{"_index":969,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorform",{"_index":1040,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["editorform.value.pagename",{"_index":1145,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["editorform.valuechanges",{"_index":1147,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["editorjs",{"_index":213,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs'},{'name",{"_index":211,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["editorjs.actions",{"_index":1424,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.actions.ts",{"_index":548,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs.actions.ts:13",{"_index":1770,"title":{},"body":{"classes/SaveStart.html":{}}}],["editorjs.actions.ts:14",{"_index":1771,"title":{},"body":{"classes/SaveStart.html":{}}}],["editorjs.actions.ts:18",{"_index":1768,"title":{},"body":{"classes/SaveEnd.html":{}}}],["editorjs.actions.ts:19",{"_index":1769,"title":{},"body":{"classes/SaveEnd.html":{}}}],["editorjs.actions.ts:23",{"_index":1607,"title":{},"body":{"classes/NotReady.html":{}}}],["editorjs.actions.ts:24",{"_index":1608,"title":{},"body":{"classes/NotReady.html":{}}}],["editorjs.actions.ts:28",{"_index":1765,"title":{},"body":{"classes/Ready.html":{}}}],["editorjs.actions.ts:29",{"_index":1766,"title":{},"body":{"classes/Ready.html":{}}}],["editorjs.actions.ts:33",{"_index":552,"title":{},"body":{"classes/Changed.html":{}}}],["editorjs.actions.ts:34",{"_index":553,"title":{},"body":{"classes/Changed.html":{}}}],["editorjs.component.html",{"_index":1253,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.component.scss",{"_index":1252,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.directive",{"_index":925,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["editorjs.directive.ts",{"_index":1319,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"coverage.html":{}}}],["editorjs.directive.ts:103",{"_index":1343,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:105",{"_index":1329,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:117",{"_index":1361,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:124",{"_index":1363,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:131",{"_index":1365,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:138",{"_index":1367,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:146",{"_index":1346,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:162",{"_index":1350,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:181",{"_index":1347,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:193",{"_index":1357,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:200",{"_index":1344,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:33",{"_index":1359,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:35",{"_index":1358,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:41",{"_index":1337,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:47",{"_index":1332,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:53",{"_index":1336,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:59",{"_index":1339,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:65",{"_index":1340,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:71",{"_index":1334,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:77",{"_index":1341,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:84",{"_index":1338,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:91",{"_index":1333,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:97",{"_index":1335,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.effects.ts",{"_index":1406,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"coverage.html":{}}}],["editorjs.effects.ts:10",{"_index":1408,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.effects.ts:14",{"_index":1419,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.module.ts",{"_index":1433,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["editorjs.module.ts:62",{"_index":1437,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.version",{"_index":902,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/code",{"_index":1688,"title":{},"body":{"injectables/PluginCode.html":{}}}],["editorjs/editorjs",{"_index":478,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/header",{"_index":1702,"title":{},"body":{"injectables/PluginHeader.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs/image",{"_index":1711,"title":{},"body":{"injectables/PluginImage.html":{}}}],["editorjs/link",{"_index":1720,"title":{},"body":{"injectables/PluginLink.html":{}}}],["editorjs/list",{"_index":1729,"title":{},"body":{"injectables/PluginList.html":{},"dependencies.html":{}}}],["editorjs/marker",{"_index":1740,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["editorjs/paragraph",{"_index":1750,"title":{},"body":{"injectables/PluginParagraph.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs/simple",{"_index":1761,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["editorjs/src",{"_index":1098,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["editorjs/src/lib/config/editor",{"_index":2064,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/config/module",{"_index":2067,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts",{"_index":677,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:102",{"_index":737,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:107",{"_index":741,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:112",{"_index":739,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:118",{"_index":735,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:125",{"_index":727,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:132",{"_index":733,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:136",{"_index":725,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:144",{"_index":744,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:151",{"_index":723,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:29",{"_index":740,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:34",{"_index":699,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:40",{"_index":706,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:46",{"_index":709,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:52",{"_index":713,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:58",{"_index":714,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:64",{"_index":703,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:70",{"_index":721,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:77",{"_index":711,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:84",{"_index":701,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:90",{"_index":697,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/editorjs",{"_index":905,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts",{"_index":1251,"title":{},"body":{"components/NgxEditorJSComponent.html":{},"coverage.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts:24",{"_index":1254,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts:30",{"_index":1272,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs/src/lib/directives/ngx",{"_index":1318,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"coverage.html":{}}}],["editorjs/src/lib/ngx",{"_index":1432,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["editorjs/src/lib/services/editorjs",{"_index":776,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts",{"_index":572,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:125",{"_index":1505,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:140",{"_index":1510,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:148",{"_index":1508,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:157",{"_index":1512,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:166",{"_index":1509,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:170",{"_index":1511,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:180",{"_index":1516,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:190",{"_index":1514,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:198",{"_index":1504,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:208",{"_index":1507,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:77",{"_index":1518,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:81",{"_index":1517,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:88",{"_index":1520,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:90",{"_index":1502,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts",{"_index":1462,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"coverage.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:19",{"_index":1470,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:36",{"_index":1474,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:44",{"_index":1481,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:53",{"_index":1476,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:60",{"_index":1484,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:68",{"_index":1478,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/types/blocks.ts",{"_index":496,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs/src/lib/types/blocks.ts:13",{"_index":498,"title":{},"body":{"interfaces/Block.html":{}}}],["editorjs/src/lib/types/config.ts",{"_index":759,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/maps.ts",{"_index":527,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["editorjs/src/lib/types/maps.ts:16",{"_index":1030,"title":{},"body":{"interfaces/EventMap.html":{}}}],["editorjs/src/lib/types/maps.ts:26",{"_index":1029,"title":{},"body":{"interfaces/EditorMap.html":{}}}],["editorjs/src/lib/types/maps.ts:36",{"_index":530,"title":{},"body":{"interfaces/BlocksMap.html":{}}}],["editorjs/src/lib/types/maps.ts:46",{"_index":1767,"title":{},"body":{"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:56",{"_index":544,"title":{},"body":{"interfaces/ChangeMap.html":{}}}],["editorjs/src/lib/types/plugins.ts",{"_index":466,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/plugins.ts:17",{"_index":1783,"title":{},"body":{"interfaces/ToolSettingsMap.html":{}}}],["editorjs/src/lib/types/plugins.ts:7",{"_index":1697,"title":{},"body":{"interfaces/PluginConfig.html":{}}}],["editorjs/src/testing/ng",{"_index":1218,"title":{},"body":{"injectables/MockNgZone.html":{},"coverage.html":{}}}],["editorjs/src/testing/shared.ts",{"_index":1199,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{},"coverage.html":{}}}],["editorjs/src/testing/shared.ts:13",{"_index":1234,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:16",{"_index":1235,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:22",{"_index":1203,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:23",{"_index":1204,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:24",{"_index":1205,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:25",{"_index":1202,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:5",{"_index":1781,"title":{},"body":{"classes/TestClass.html":{}}}],["editorjs/src/testing/shared.ts:7",{"_index":1782,"title":{},"body":{"classes/TestClass.html":{}}}],["editorjs@1.2.0",{"_index":1806,"title":{},"body":{"changelog.html":{}}}],["editorjs@1.3.2",{"_index":1795,"title":{},"body":{"changelog.html":{}}}],["editorjs](http://editorjs.io",{"_index":1455,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs_form_value_accessor",{"_index":680,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs_material_field_control",{"_index":927,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjs_module_import",{"_index":787,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjsaction",{"_index":592,"title":{"interfaces/EditorJSAction.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{}}}],["editorjsactiontypes",{"_index":557,"title":{},"body":{"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{}}}],["editorjsactiontypes.changed",{"_index":554,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.cleareditor",{"_index":622,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjsactiontypes.createeditor",{"_index":620,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjsactiontypes.destroyeditor",{"_index":624,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjsactiontypes.notready",{"_index":568,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.ready",{"_index":569,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.saveeditor",{"_index":626,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjsactiontypes.saveend",{"_index":567,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.savestart",{"_index":564,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.updateeditor",{"_index":628,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjsbasecomponent",{"_index":199,"title":{"components/EditorJSBaseComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["editorjsbasecomponent:102",{"_index":1273,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:107",{"_index":1276,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:112",{"_index":1274,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:118",{"_index":1271,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:125",{"_index":1269,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:132",{"_index":1270,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:136",{"_index":1268,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:151",{"_index":1267,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:29",{"_index":1275,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:34",{"_index":1257,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:40",{"_index":1261,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:46",{"_index":1262,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:52",{"_index":1264,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:58",{"_index":1265,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:64",{"_index":1259,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:70",{"_index":1266,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:77",{"_index":1263,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:84",{"_index":1258,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:90",{"_index":1260,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsconfig",{"_index":577,"title":{"interfaces/EditorJSConfig.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["editorjsinstance",{"_index":789,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorjsinstanceconfig",{"_index":775,"title":{"interfaces/EditorJSInstanceConfig.html":{}},"body":{"interfaces/EditorJSInstanceConfig.html":{},"coverage.html":{}}}],["editorjsmaterialform",{"_index":904,"title":{"interfaces/EditorJSMaterialForm.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"coverage.html":{}}}],["editorjsplugin",{"_index":2297,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["editormap",{"_index":536,"title":{"interfaces/EditorMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["editorservice",{"_index":615,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{}}}],["edits",{"_index":1960,"title":{},"body":{"contributing.html":{}}}],["effect",{"_index":1420,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["effect({dispatch",{"_index":1418,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["effects",{"_index":1564,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effects](https://ngrx.io/guide/effects",{"_index":1566,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effectsmodule",{"_index":1565,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effectsmodule.forfeature",{"_index":1567,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["el",{"_index":1330,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["electronic",{"_index":1938,"title":{},"body":{"contributing.html":{}}}],["element",{"_index":194,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["elementref",{"_index":1328,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["elements",{"_index":529,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["email",{"_index":1844,"title":{},"body":{"contributing.html":{}}}],["empathy",{"_index":1919,"title":{},"body":{"contributing.html":{}}}],["empty",{"_index":459,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["empty(empty",{"_index":985,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["enable",{"_index":1059,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["enableautosave",{"_index":1043,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["enableautosave(autosavetime",{"_index":1057,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["enabled",{"_index":1135,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["enablelongstacktrace",{"_index":1232,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["end",{"_index":562,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["enforce",{"_index":2014,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":1991,"title":{},"body":{"contributing.html":{}}}],["ensure",{"_index":1851,"title":{},"body":{"contributing.html":{}}}],["enter",{"_index":1140,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["entity",{"_index":1677,"title":{},"body":{"injectables/PagesService.html":{}}}],["entitystate",{"_index":1682,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entitystore",{"_index":1683,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entrycomponents",{"_index":1535,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["enum",{"_index":447,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":2114,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":665,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["error('error",{"_index":1393,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["errorstate",{"_index":940,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["etc",{"_index":411,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"todo.html":{}}}],["ethnicity",{"_index":1890,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":71,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/ReadyMap.html":{},"contributing.html":{},"license.html":{}}}],["event.payload.blocks",{"_index":877,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["event.type",{"_index":872,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["eventemitter",{"_index":916,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{}}}],["eventemitter(false",{"_index":1231,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["eventmap",{"_index":534,"title":{"interfaces/EventMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["events",{"_index":799,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["eventtype",{"_index":532,"title":{"interfaces/EventType.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{}}}],["everyone",{"_index":1885,"title":{},"body":{"contributing.html":{}}}],["example",{"_index":931,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["examples",{"_index":1862,"title":{},"body":{"contributing.html":{}}}],["exclude",{"_index":1479,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["exclude.includes(key",{"_index":1496,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["excludetools",{"_index":633,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["existing",{"_index":1356,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["expanded",{"_index":1822,"title":{},"body":{"changelog.html":{}}}],["expected",{"_index":1950,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":1884,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":1911,"title":{},"body":{"contributing.html":{}}}],["explicit",{"_index":1940,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":125,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["exported",{"_index":484,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["exports",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["expose",{"_index":2208,"title":{},"body":{"todo.html":{}}}],["exposed",{"_index":1857,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["exposes",{"_index":2253,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["express",{"_index":2175,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1893,"title":{},"body":{"contributing.html":{}}}],["extendable",{"_index":2244,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["extended",{"_index":678,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["extending",{"_index":481,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["extends",{"_index":434,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Block.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["face",{"_index":2016,"title":{},"body":{"contributing.html":{}}}],["factory",{"_index":769,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["failed",{"_index":2292,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fair",{"_index":1952,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":2015,"title":{},"body":{"contributing.html":{}}}],["false",{"_index":462,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["fb",{"_index":1051,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["feature",{"_index":2214,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["features",{"_index":1192,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"index.html":{}}}],["field",{"_index":738,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["field'},{'name",{"_index":222,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["field.component",{"_index":1450,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["field.component.html",{"_index":932,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["field.component.scss",{"_index":933,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["field.component.ts",{"_index":907,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["field/editorjs",{"_index":906,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["filed",{"_index":1818,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1863,"title":{},"body":{"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["filter",{"_index":359,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["filter(([event",{"_index":871,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["filter(([key",{"_index":1495,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["filter((data",{"_index":378,"title":{},"body":{"injectables/AppService.html":{}}}],["filter(data",{"_index":398,"title":{},"body":{"injectables/AppService-1.html":{}}}],["filter(editor",{"_index":852,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["filter(menus",{"_index":385,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["finaltools",{"_index":1500,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["find",{"_index":1186,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["first",{"_index":704,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["fitness",{"_index":2180,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2269,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fixes",{"_index":2290,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["flex",{"_index":1166,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["flexlayoutmodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["float",{"_index":973,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["fm",{"_index":990,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["fn",{"_index":730,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{}}}],["focus",{"_index":719,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["focused",{"_index":948,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["focused(focused",{"_index":952,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["focusing",{"_index":1916,"title":{},"body":{"contributing.html":{}}}],["focusmonitor",{"_index":909,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["folder",{"_index":2133,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1848,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":2166,"title":{},"body":{"license.html":{}}}],["for_root_options_token",{"_index":770,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["foreach(([key",{"_index":1490,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["form",{"_index":202,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":2260,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["formatted",{"_index":1622,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["formbuilder",{"_index":1052,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["formcontainercomponent",{"_index":200,"title":{"components/FormContainerComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":1076,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["forms",{"_index":729,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["formsmodule",{"_index":1443,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot",{"_index":1434,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["forroot(@optional",{"_index":1461,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot(config",{"_index":1436,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forwardref",{"_index":745,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["fostering",{"_index":1876,"title":{},"body":{"contributing.html":{}}}],["free",{"_index":1883,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["full",{"_index":315,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["fully",{"_index":2126,"title":{},"body":{"index.html":{}}}],["function",{"_index":472,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["functions",{"_index":429,"title":{"miscellaneous/functions.html":{}},"body":{"modules/ApplicationDataModule.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":2165,"title":{},"body":{"license.html":{}}}],["further",{"_index":1989,"title":{},"body":{"contributing.html":{}}}],["future",{"_index":2245,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["gender",{"_index":1891,"title":{},"body":{"contributing.html":{}}}],["general",{"_index":2139,"title":{},"body":{"license.html":{},"todo.html":{}}}],["generate",{"_index":2275,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["generated",{"_index":2136,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["get(key",{"_index":1475,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getasjson",{"_index":1621,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getautosave",{"_index":1090,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["getblocks",{"_index":1095,"title":{},"body":{"components/FormContainerComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["getblocks(holder",{"_index":652,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["getblocks(this.holder",{"_index":1113,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["getchanged",{"_index":685,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSService.html":{}}}],["getchanged(holder",{"_index":658,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["getdemodata",{"_index":328,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getdemodata('ngx",{"_index":1124,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["getdemodata(demoname",{"_index":340,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["geteditor",{"_index":1360,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditor(holder",{"_index":650,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditoractions",{"_index":1519,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getelement",{"_index":1362,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getgreeting",{"_index":2034,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethidden",{"_index":355,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getinstance(holder",{"_index":839,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["getispanelopen",{"_index":1305,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["getisready",{"_index":743,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["getissaved",{"_index":1088,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["getmainmenu",{"_index":104,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getmenu",{"_index":329,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/PageContainerComponent.html":{}}}],["getmenu(key",{"_index":347,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getopensourcemenu",{"_index":109,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getpages",{"_index":1093,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["getpanelopen",{"_index":1086,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["getplugins",{"_index":1483,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getprojectsmenu",{"_index":106,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getready(holder",{"_index":843,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["gets",{"_index":349,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["getservice",{"_index":1364,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getsidebarhidden",{"_index":101,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getters",{"_index":2293,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["gettimer(time",{"_index":998,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["getting",{"_index":1785,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["gettools",{"_index":1467,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gettools(exclude",{"_index":1477,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gettouched",{"_index":1366,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["github",{"_index":1692,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["goes",{"_index":1316,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["good",{"_index":1836,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":1912,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":2144,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2198,"title":{},"body":{"modules.html":{}}}],["group",{"_index":416,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["groups",{"_index":403,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["guid",{"_index":1668,"title":{},"body":{"injectables/PagesService.html":{}}}],["hammerjs",{"_index":2104,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":868,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"changelog.html":{}}}],["handler",{"_index":433,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/EditorJSInstanceConfig.html":{}}}],["handles",{"_index":878,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["handling",{"_index":2252,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["harassing",{"_index":1993,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":1882,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":1971,"title":{},"body":{"contributing.html":{}}}],["haschanged",{"_index":1501,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["haschanged(holder",{"_index":660,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["header",{"_index":509,"title":{"interfaces/Header.html":{}},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["header.plugin",{"_index":1706,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["headerblock",{"_index":513,"title":{"interfaces/HeaderBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["height",{"_index":156,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["helper",{"_index":428,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["helpers",{"_index":2210,"title":{},"body":{"todo.html":{}}}],["here",{"_index":325,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["hereby",{"_index":2143,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":144,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["hide",{"_index":86,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["hideable",{"_index":1592,"title":{},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["hides",{"_index":2248,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hidetoolbar",{"_index":691,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hold",{"_index":710,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["holder",{"_index":566,"title":{},"body":{"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["holders",{"_index":2185,"title":{},"body":{"license.html":{}}}],["home",{"_index":205,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":215,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["homepagecomponent",{"_index":204,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":934,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["hostbinding",{"_index":914,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('attr.aria",{"_index":978,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('class.floating",{"_index":974,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostlistener",{"_index":1369,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlistener('click",{"_index":1372,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlisteners",{"_index":1326,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["html",{"_index":193,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["http",{"_index":333,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["http://contributor",{"_index":2027,"title":{},"body":{"contributing.html":{}}}],["httpclient",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["httpclientmodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["i'll",{"_index":1830,"title":{},"body":{"changelog.html":{}}}],["i'm",{"_index":1798,"title":{},"body":{"changelog.html":{}}}],["i've",{"_index":1799,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":176,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{}}}],["id",{"_index":632,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["identifier",{"_index":2030,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":1892,"title":{},"body":{"contributing.html":{}}}],["ids",{"_index":979,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ids.join",{"_index":982,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["idvalue",{"_index":796,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["ignore",{"_index":1388,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["image",{"_index":514,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginImage.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"coverage.html":{}}}],["image.module",{"_index":1590,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["image.module.ts",{"_index":1764,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["image.plugin",{"_index":1715,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.plugin.ts",{"_index":1758,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"coverage.html":{}}}],["image.plugin.ts:14",{"_index":1760,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["image/simple",{"_index":1589,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"coverage.html":{}}}],["imageblock",{"_index":523,"title":{"interfaces/ImageBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["imagery",{"_index":1925,"title":{},"body":{"contributing.html":{}}}],["implementation",{"_index":1221,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["implemented",{"_index":2234,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["implements",{"_index":18,"title":{},"body":{"components/AppContainerComponent.html":{},"classes/Changed.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}}}],["implied",{"_index":2176,"title":{},"body":{"license.html":{}}}],["import",{"_index":112,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["imported",{"_index":2300,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["importing",{"_index":1578,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["imports",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["improved",{"_index":2284,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["improvements",{"_index":1802,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["inappropriate",{"_index":1943,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":2010,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":578,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["included",{"_index":712,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["includes",{"_index":1603,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"contributing.html":{}}}],["includetools",{"_index":576,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["including",{"_index":2153,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":1905,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1860,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":497,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["individual",{"_index":1580,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["info'},{'name",{"_index":217,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["info.component",{"_index":1606,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["info.component.html",{"_index":1294,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.scss",{"_index":1293,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts",{"_index":1292,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:14",{"_index":1304,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:20",{"_index":1300,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:26",{"_index":1299,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:32",{"_index":1301,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:35",{"_index":1298,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:37",{"_index":1302,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:46",{"_index":1306,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:53",{"_index":1303,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info/demo",{"_index":1291,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"coverage.html":{}}}],["information",{"_index":1315,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["inherited",{"_index":1256,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["init",{"_index":1062,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["initial",{"_index":323,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["initialblock",{"_index":692,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["initialized",{"_index":75,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["initialplugins",{"_index":489,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":579,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject(editorjsinstance",{"_index":805,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["inject(ngx_editorjs_config",{"_index":614,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["injectable",{"_index":317,"title":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["injectables",{"_index":318,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"overview.html":{}}}],["injected",{"_index":772,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"miscellaneous/variables.html":{}}}],["injecting",{"_index":768,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injection",{"_index":486,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":475,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["injectiontoken('editior_js_instance",{"_index":774,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjs_module_import",{"_index":788,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjsinstance",{"_index":790,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('for_root_options_token",{"_index":771,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('initialplugins",{"_index":490,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx_editorjs_config",{"_index":767,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('userplugins",{"_index":494,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":587,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["injector.ts",{"_index":777,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":178,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["input",{"_index":113,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["input('disabled",{"_index":963,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('focused",{"_index":951,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('placeholder",{"_index":946,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('required",{"_index":957,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('value",{"_index":941,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["inputconfig",{"_index":2123,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inputs",{"_index":41,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{}}}],["inside",{"_index":1009,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["install",{"_index":1852,"title":{},"body":{"contributing.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["installed",{"_index":2238,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["installing",{"_index":2235,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["instance",{"_index":437,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["instance.api",{"_index":2254,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["instancedestroyed",{"_index":851,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["instancedestroyed.complete",{"_index":858,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["instancedestroyed.next(true",{"_index":857,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["instances",{"_index":535,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["instructions",{"_index":1311,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["insulting/derogatory",{"_index":1930,"title":{},"body":{"contributing.html":{}}}],["interact",{"_index":2130,"title":{},"body":{"index.html":{}}}],["interactions",{"_index":1849,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":1875,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":399,"title":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["interfaces",{"_index":400,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"overview.html":{}}}],["internal",{"_index":609,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["internally",{"_index":1797,"title":{},"body":{"changelog.html":{}}}],["interval.interval",{"_index":1002,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["investigated",{"_index":2001,"title":{},"body":{"contributing.html":{}}}],["ispanelopen",{"_index":1296,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["isready",{"_index":695,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"injectables/NgxEditorJSService.html":{}}}],["isready(holder",{"_index":656,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["issaved",{"_index":1008,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{}}}],["issue",{"_index":1843,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["issues",{"_index":1816,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["it's",{"_index":85,"title":{},"body":{"components/AppContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["item",{"_index":407,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["items",{"_index":168,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["js",{"_index":2102,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["js/code",{"_index":1696,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["js/header",{"_index":1707,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["js/image",{"_index":1716,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["js/link",{"_index":1725,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["js/list",{"_index":1734,"title":{},"body":{"modules/PluginListModule.html":{}}}],["js/marker",{"_index":1746,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["js/paragraph",{"_index":1755,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["json",{"_index":1148,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["json.stringify(blocks",{"_index":1626,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["keep",{"_index":2261,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["key",{"_index":352,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["keys",{"_index":448,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["kind",{"_index":2174,"title":{},"body":{"license.html":{}}}],["label",{"_index":189,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{}}}],["language",{"_index":1906,"title":{},"body":{"contributing.html":{}}}],["last",{"_index":541,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["layer",{"_index":1853,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["layoutmodule",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["leadership",{"_index":2022,"title":{},"body":{"contributing.html":{}}}],["left",{"_index":1187,"title":{},"body":{"components/HomePageComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["legend",{"_index":192,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["level",{"_index":510,"title":{},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"contributing.html":{}}}],["liability",{"_index":2189,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2186,"title":{},"body":{"license.html":{}}}],["lib/types/config",{"_index":1207,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["lib/types/plugins",{"_index":1206,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["libraries",{"_index":1180,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["library",{"_index":1790,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["libs/.../application.model.ts",{"_index":2115,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../blocks.ts",{"_index":2217,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../config.ts",{"_index":2219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../container.class.ts",{"_index":2220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editor",{"_index":2119,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../editorjs",{"_index":2221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editorjs.service.ts",{"_index":2117,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../index.ts",{"_index":2121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../module",{"_index":2120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ngx",{"_index":2118,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../plugins.ts",{"_index":2225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../tag.component.ts",{"_index":2226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":319,"title":{},"body":{"injectables/AppService.html":{},"interfaces/ApplicationData.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuItem.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["licence",{"_index":2141,"title":{},"body":{"license.html":{}}}],["license",{"_index":2138,"title":{"license.html":{}},"body":{}}],["life",{"_index":1010,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["lightgray",{"_index":166,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["limitation",{"_index":2154,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2177,"title":{},"body":{"license.html":{}}}],["line",{"_index":190,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["link",{"_index":413,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/MockNgZone.html":{},"injectables/PluginLink.html":{}}}],["link.label",{"_index":1314,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["link.plugin",{"_index":1724,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["links",{"_index":151,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/DemoData.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/TinynodeDemos.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["list",{"_index":169,"title":{"interfaces/List.html":{}},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginList.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["list.plugin",{"_index":1733,"title":{},"body":{"modules/PluginListModule.html":{}}}],["listblock",{"_index":506,"title":{"interfaces/ListBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["listed",{"_index":2303,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["listener",{"_index":867,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["liststyle",{"_index":505,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["literal",{"_index":551,"title":{},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["load",{"_index":346,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["loaded",{"_index":446,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["loader",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["loading",{"_index":1035,"title":{},"body":{"components/FormContainerComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{}}}],["loads",{"_index":322,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/MaterialModule.html":{}}}],["locations",{"_index":1859,"title":{},"body":{"contributing.html":{}}}],["longer",{"_index":2285,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["lot",{"_index":1801,"title":{},"body":{"changelog.html":{}}}],["lots",{"_index":2276,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["lt;code",{"_index":1156,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;h1",{"_index":1152,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;h6",{"_index":1153,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;img",{"_index":1158,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;li",{"_index":1155,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;ol",{"_index":1154,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;p",{"_index":1151,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["mail",{"_index":1979,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":13,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["mainmenu",{"_index":44,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["maintain",{"_index":2006,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":1879,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":1842,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["makes",{"_index":781,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["making",{"_index":1834,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["managing",{"_index":1800,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":2306,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["map",{"_index":360,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["map((action",{"_index":1411,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["map((demodata",{"_index":380,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["map(blocks",{"_index":1625,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["map(interval",{"_index":1001,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["map(menus",{"_index":388,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["map_defaults",{"_index":786,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["map_defaults.foreach(([mapkay",{"_index":863,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["maps",{"_index":671,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["margin",{"_index":173,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["markdown",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["markdownmodule",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forchild",{"_index":1554,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forroot",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["marker",{"_index":1737,"title":{},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{}}}],["marker.plugin",{"_index":1745,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["marking",{"_index":2309,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["mat",{"_index":154,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matbadgemodule",{"_index":1540,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["matbuttonmodule",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["matcardmodule",{"_index":1197,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["matcher",{"_index":50,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["matching",{"_index":230,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{},"routes.html":{}}}],["matchipsmodule",{"_index":1539,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["matchview",{"_index":36,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["matchview(event",{"_index":67,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["material",{"_index":100,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"modules/MaterialModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["material.module",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxTinynodesCoreModule.html":{}}}],["material.module.ts",{"_index":1596,"title":{},"body":{"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["materialmodule",{"_index":246,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":1538,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["matformfieldcontrol",{"_index":918,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":1444,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matgridlistmodule",{"_index":1537,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["maticonmodule",{"_index":1195,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matinputmodule",{"_index":1445,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matlistmodule",{"_index":1196,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["matsidenav",{"_index":96,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["matsidenavmodule",{"_index":1193,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":1194,"title":{},"body":{"modules/MaterialModule.html":{}}}],["me@tane.dev",{"_index":1998,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["means",{"_index":889,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["meantime",{"_index":1829,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1982,"title":{},"body":{"contributing.html":{}}}],["mediamatcher",{"_index":51,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["mediaquerylist",{"_index":84,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["members",{"_index":1921,"title":{},"body":{"contributing.html":{}}}],["men",{"_index":351,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menu",{"_index":87,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["menu.key",{"_index":390,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menu.label",{"_index":1190,"title":{},"body":{"components/HomePageComponent.html":{}}}],["menugroup",{"_index":350,"title":{"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{}}}],["menuitem",{"_index":408,"title":{"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/DemoData.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/TinynodeDemos.html":{},"coverage.html":{}}}],["menuitem.label",{"_index":1250,"title":{},"body":{"components/NavBarComponent.html":{}}}],["menus",{"_index":386,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["menus.find(menu",{"_index":389,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menus.length",{"_index":387,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["merchantability",{"_index":2179,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1868,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["merged",{"_index":1472,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["mergemap",{"_index":1426,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["mergemap(([action",{"_index":1415,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["method",{"_index":630,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["methods",{"_index":35,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["middle",{"_index":187,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["minheight",{"_index":693,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["minheight'].find(key",{"_index":1389,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["miscellaneous",{"_index":2113,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2140,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":70,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["mobileview",{"_index":31,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["mock",{"_index":1220,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts",{"_index":1219,"title":{},"body":{"injectables/MockNgZone.html":{},"coverage.html":{}}}],["mock.ts:16",{"_index":1225,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:22",{"_index":1227,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:26",{"_index":1229,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:30",{"_index":1230,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mockeditorjs",{"_index":1198,"title":{"classes/MockEditorJS.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{},"coverage.html":{}}}],["mockngzone",{"_index":1217,"title":{"injectables/MockNgZone.html":{}},"body":{"injectables/MockNgZone.html":{},"coverage.html":{}}}],["mockplugin",{"_index":1210,"title":{"classes/MockPlugin.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{},"coverage.html":{}}}],["modify",{"_index":2156,"title":{},"body":{"license.html":{}}}],["module",{"_index":232,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/MaterialModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["modules",{"_index":234,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["modulewithproviders",{"_index":1439,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["monday",{"_index":1804,"title":{},"body":{"changelog.html":{}}}],["monitor",{"_index":991,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["monitoring",{"_index":1026,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["more",{"_index":422,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["mouseevent",{"_index":732,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["moved",{"_index":451,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["multi",{"_index":752,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":1634,"title":{},"body":{"modules/PageStoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["name",{"_index":56,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["nationality",{"_index":1894,"title":{},"body":{"contributing.html":{}}}],["nav",{"_index":208,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["navbar",{"_index":1238,"title":{},"body":{"components/NavBarComponent.html":{}}}],["navbarcomponent",{"_index":207,"title":{"components/NavBarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigation",{"_index":167,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["nbsp",{"_index":1249,"title":{},"body":{"components/NavBarComponent.html":{}}}],["necessary",{"_index":2003,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":1139,"title":{},"body":{"components/FormContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxTinynodesCoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["new",{"_index":88,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["newpage",{"_index":1671,"title":{},"body":{"injectables/PagesService.html":{}}}],["nextid",{"_index":937,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["nextidvalue",{"_index":795,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["ng",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ng_value_accessor",{"_index":748,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":37,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["ngcontrol",{"_index":917,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngdevtools",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngdocheck",{"_index":1022,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngmodule",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngonchanges",{"_index":1325,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngonchanges(changes",{"_index":1348,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngondestroy",{"_index":38,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["ngoninit",{"_index":993,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["ngrx",{"_index":1563,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx.module.ts",{"_index":1559,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx/effects",{"_index":1422,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorjsNgrxModule.html":{},"dependencies.html":{},"todo.html":{}}}],["ngrx/src/lib/actions/ngx",{"_index":547,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ngrx/src/lib/effects/ngx",{"_index":1405,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"coverage.html":{}}}],["ngrx/src/lib/ngx",{"_index":1558,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx/store",{"_index":555,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"dependencies.html":{}}}],["ngx",{"_index":201,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["ngx.firebaseapp.com",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["ngx_editorjs_config",{"_index":584,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjs",{"_index":227,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsactions",{"_index":570,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/typealiases.html":{}}}],["ngxeditorjscomponent",{"_index":210,"title":{"components/NgxEditorJSComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsconfig",{"_index":583,"title":{"interfaces/NgxEditorJSConfig.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemo",{"_index":452,"title":{"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/PageContainerComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{}}}],["ngxeditorjsdemodata",{"_index":454,"title":{"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{}}}],["ngxeditorjsdemohomecomponent",{"_index":212,"title":{"components/NgxEditorJSDemoHomeComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemoinfocomponent",{"_index":216,"title":{"components/NgxEditorJSDemoInfoComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ngxeditorjsdemomodule",{"_index":248,"title":{"modules/NgxEditorjsDemoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemoroutes",{"_index":1545,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemotagcomponent",{"_index":218,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdirective",{"_index":226,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsdirective::ngaftercontentinit",{"_index":1394,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngxeditorjseffects",{"_index":1404,"title":{"injectables/NgxEditorJSEffects.html":{}},"body":{"injectables/NgxEditorJSEffects.html":{},"coverage.html":{}}}],["ngxeditorjsinstanceservice",{"_index":586,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"overview.html":{}}}],["ngxeditorjsinstanceservice.nextidvalue",{"_index":797,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["ngxeditorjsmatfieldcomponent",{"_index":221,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmatfieldcomponent.nextid",{"_index":972,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngxeditorjsmodule",{"_index":247,"title":{"modules/NgxEditorJSModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmodule.forroot",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsngrxmodule",{"_index":1555,"title":{"modules/NgxEditorjsNgrxModule.html":{}},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjspluginservice",{"_index":588,"title":{"injectables/NgxEditorJSPluginService.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["ngxeditorjspluginsmodule",{"_index":1568,"title":{"modules/NgxEditorjsPluginsModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsservice",{"_index":606,"title":{"injectables/NgxEditorJSService.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxhideableheaderdemomodule",{"_index":1591,"title":{"modules/NgxHideableHeaderDemoModule.html":{}},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"modules.html":{}}}],["ngxhideableheaderdemoroutes",{"_index":1593,"title":{},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxtinynodescorematerialmodule",{"_index":1594,"title":{"modules/NgxTinynodesCoreMaterialModule.html":{}},"body":{"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodescoremodule",{"_index":249,"title":{"modules/NgxTinynodesCoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["ngzone",{"_index":580,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSService.html":{}}}],["none",{"_index":161,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["noninfringement",{"_index":2183,"title":{},"body":{"license.html":{}}}],["notable",{"_index":2258,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["note",{"_index":1846,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["notice",{"_index":2169,"title":{},"body":{"license.html":{}}}],["notready",{"_index":563,"title":{"classes/NotReady.html":{}},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["now",{"_index":1136,"title":{},"body":{"components/FormContainerComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["npm",{"_index":1185,"title":{},"body":{"components/HomePageComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["nrwl/nx",{"_index":1819,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":883,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{}}}],["number",{"_index":512,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{}}}],["numbers",{"_index":1861,"title":{},"body":{"contributing.html":{}}}],["nx",{"_index":2137,"title":{},"body":{"index.html":{}}}],["o",{"_index":1465,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object",{"_index":449,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["object.entries",{"_index":1489,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.entries(this.pluginsmap",{"_index":1494,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.keys(changes",{"_index":1387,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["object.keys(this.editormap).foreach(key",{"_index":887,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["obligated",{"_index":2005,"title":{},"body":{"contributing.html":{}}}],["observable",{"_index":103,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["obtaining",{"_index":2147,"title":{},"body":{"license.html":{}}}],["offensive",{"_index":1970,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":1977,"title":{},"body":{"contributing.html":{}}}],["officially",{"_index":1824,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1988,"title":{},"body":{"contributing.html":{}}}],["oftype",{"_index":1421,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["oftype(editorjsactiontypes.savestart",{"_index":1410,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["once",{"_index":880,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["onchange",{"_index":683,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/NgxEditorJSComponent.html":{}}}],["onchange(holder",{"_index":826,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["onchanges",{"_index":1322,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["onclick",{"_index":1373,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["oncontainerclick(event",{"_index":987,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ondestroy",{"_index":20,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["one",{"_index":421,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["oninit",{"_index":908,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["online",{"_index":1987,"title":{},"body":{"contributing.html":{}}}],["onready",{"_index":779,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["onready(holder",{"_index":832,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["onstable",{"_index":1222,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["ontouch",{"_index":684,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["open",{"_index":111,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"contributing.html":{}}}],["opensourcemenu",{"_index":46,"title":{},"body":{"components/AppContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["opensourcemenu.title",{"_index":1780,"title":{},"body":{"components/SidebarComponent.html":{}}}],["option",{"_index":764,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"todo.html":{}}}],["optional",{"_index":58,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["options",{"_index":573,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["options.config",{"_index":642,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["ordered",{"_index":501,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["orientation",{"_index":1900,"title":{},"body":{"contributing.html":{}}}],["origin",{"_index":1016,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["others",{"_index":1935,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":1994,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["out",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":762,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/PageContainerComponent.html":{}}}],["outputdata",{"_index":556,"title":{},"body":{"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["outputs",{"_index":1244,"title":{},"body":{"components/NavBarComponent.html":{}}}],["outside",{"_index":806,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["over",{"_index":1239,"title":{},"body":{"components/NavBarComponent.html":{}}}],["overall",{"_index":1788,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":1167,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["overide",{"_index":1063,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["overriding",{"_index":2251,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["overview",{"_index":2199,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":1845,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1807,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["padding",{"_index":171,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["page",{"_index":65,"title":{"interfaces/Page.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"coverage.html":{},"todo.html":{}}}],["page'},{'name",{"_index":206,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["page.component",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":1174,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.scss",{"_index":1173,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts",{"_index":1172,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":1176,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:9",{"_index":1175,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.id",{"_index":1673,"title":{},"body":{"injectables/PagesService.html":{}}}],["pageblock",{"_index":1610,"title":{"interfaces/PageBlock.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"coverage.html":{}}}],["pagecontainercomponent",{"_index":223,"title":{"components/PageContainerComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pageeditor",{"_index":1077,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["pageid",{"_index":1653,"title":{},"body":{"injectables/PagesService.html":{}}}],["pagename",{"_index":1074,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["pages",{"_index":1046,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.models",{"_index":1641,"title":{},"body":{"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.query",{"_index":1635,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesService.html":{}}}],["pages.service",{"_index":1636,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["pages.store",{"_index":1637,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{}}}],["pages/home/home",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pagesquery",{"_index":1630,"title":{"injectables/PagesQuery.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"coverage.html":{},"overview.html":{}}}],["pagesservice",{"_index":1048,"title":{"injectables/PagesService.html":{}},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"coverage.html":{},"overview.html":{}}}],["pagesstate",{"_index":1642,"title":{"interfaces/PagesState.html":{}},"body":{"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{}}}],["pagesstore",{"_index":1631,"title":{"injectables/PagesStore.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"coverage.html":{},"overview.html":{}}}],["pagestoremodule",{"_index":1525,"title":{"modules/PageStoreModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["pagetags",{"_index":1075,"title":{},"body":{"components/FormContainerComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagetitle",{"_index":42,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["panel",{"_index":1070,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["panelopen",{"_index":1041,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["paragraph",{"_index":507,"title":{"interfaces/Paragraph.html":{}},"body":{"interfaces/Block.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginParagraph.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["paragraph.plugin",{"_index":1754,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["paragraphblock",{"_index":508,"title":{"interfaces/ParagraphBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":137,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["parameter",{"_index":2295,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"classes/Changed.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["parentmodule",{"_index":1460,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["participants",{"_index":1923,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":1880,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":2181,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1438,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["passed",{"_index":765,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["passing",{"_index":2270,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["paste",{"_index":1157,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["path",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":314,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["paths",{"_index":1352,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["payload",{"_index":533,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["peer",{"_index":2212,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["peerdependencies",{"_index":2304,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["permanent",{"_index":2018,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":1965,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":1871,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["permit",{"_index":2163,"title":{},"body":{"license.html":{}}}],["person",{"_index":2146,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1895,"title":{},"body":{"contributing.html":{}}}],["persons",{"_index":2164,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1937,"title":{},"body":{"contributing.html":{}}}],["pipe",{"_index":141,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{}}}],["pipe(take(1",{"_index":1125,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["pipeline",{"_index":2206,"title":{},"body":{"todo.html":{}}}],["piper",{"_index":2135,"title":{},"body":{"index.html":{},"license.html":{}}}],["placeholder",{"_index":705,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["placeholder(placeholder",{"_index":947,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["please",{"_index":1839,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["pledge",{"_index":1874,"title":{},"body":{"contributing.html":{}}}],["pluck",{"_index":921,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/PageContainerComponent.html":{}}}],["plug",{"_index":1577,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugin",{"_index":469,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugin.plugin",{"_index":1499,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.shortcut",{"_index":1498,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugincode",{"_index":1685,"title":{"injectables/PluginCode.html":{}},"body":{"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"coverage.html":{},"overview.html":{}}}],["plugincodemodule",{"_index":1526,"title":{"modules/PluginCodeModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginconfig",{"_index":480,"title":{"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluginheader",{"_index":1699,"title":{"injectables/PluginHeader.html":{}},"body":{"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginheadermodule",{"_index":1527,"title":{"modules/PluginHeaderModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginHeaderModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginilistmodule",{"_index":2308,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginimage",{"_index":1708,"title":{"injectables/PluginImage.html":{}},"body":{"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginimagemodule",{"_index":1572,"title":{"modules/PluginImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlink",{"_index":1717,"title":{"injectables/PluginLink.html":{}},"body":{"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginlinkmodule",{"_index":1528,"title":{"modules/PluginLinkModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginLinkModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlist",{"_index":1726,"title":{"injectables/PluginList.html":{}},"body":{"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginlistmodule",{"_index":1529,"title":{"modules/PluginListModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginListModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginmarker",{"_index":1735,"title":{"injectables/PluginMarker.html":{}},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginmarkermodule",{"_index":1530,"title":{"modules/PluginMarkerModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginMarkerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginparagraph",{"_index":1747,"title":{"injectables/PluginParagraph.html":{}},"body":{"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginparagraphmodule",{"_index":1531,"title":{"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugins",{"_index":488,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["plugins.module.ts",{"_index":1574,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins.service",{"_index":589,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["plugins/code/code.module",{"_index":1581,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/header/header.module",{"_index":1582,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/image/image.module",{"_index":1583,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/link/link.module",{"_index":1584,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/list/list.module",{"_index":1585,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/marker/marker.module",{"_index":1586,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/paragraph/paragraph.module",{"_index":1587,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/simple",{"_index":1588,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/ngx",{"_index":1573,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/plugins/code/code.module.ts",{"_index":1691,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts",{"_index":1686,"title":{},"body":{"injectables/PluginCode.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts:14",{"_index":1687,"title":{},"body":{"injectables/PluginCode.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts",{"_index":1705,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts",{"_index":1700,"title":{},"body":{"injectables/PluginHeader.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts:14",{"_index":1701,"title":{},"body":{"injectables/PluginHeader.html":{}}}],["plugins/src/lib/plugins/image/image.module.ts",{"_index":1714,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts",{"_index":1709,"title":{},"body":{"injectables/PluginImage.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts:14",{"_index":1710,"title":{},"body":{"injectables/PluginImage.html":{}}}],["plugins/src/lib/plugins/link/link.module.ts",{"_index":1723,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts",{"_index":1718,"title":{},"body":{"injectables/PluginLink.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts:14",{"_index":1719,"title":{},"body":{"injectables/PluginLink.html":{}}}],["plugins/src/lib/plugins/list/list.module.ts",{"_index":1732,"title":{},"body":{"modules/PluginListModule.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts",{"_index":1727,"title":{},"body":{"injectables/PluginList.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts:14",{"_index":1728,"title":{},"body":{"injectables/PluginList.html":{}}}],["plugins/src/lib/plugins/marker/marker.module.ts",{"_index":1744,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts",{"_index":1736,"title":{},"body":{"injectables/PluginMarker.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:14",{"_index":1738,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:20",{"_index":1739,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.module.ts",{"_index":1753,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts",{"_index":1748,"title":{},"body":{"injectables/PluginParagraph.html":{},"coverage.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14",{"_index":1749,"title":{},"body":{"injectables/PluginParagraph.html":{}}}],["plugins/src/lib/plugins/simple",{"_index":1757,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"coverage.html":{}}}],["plugins/src/lib/types/plugins.ts",{"_index":495,"title":{},"body":{"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["plugins/src/lib/types/plugins.ts:17",{"_index":1784,"title":{},"body":{"interfaces/ToolSettingsMap-1.html":{}}}],["plugins/src/lib/types/plugins.ts:7",{"_index":1698,"title":{},"body":{"interfaces/PluginConfig-1.html":{}}}],["pluginservice",{"_index":2310,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["pluginsimpleimage",{"_index":1756,"title":{"injectables/PluginSimpleImage.html":{}},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"coverage.html":{},"overview.html":{}}}],["pluginsimpleimagemodule",{"_index":1532,"title":{"modules/PluginSimpleImageModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginsmap",{"_index":1466,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["pointer",{"_index":175,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["pointing",{"_index":1160,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["policies",{"_index":2011,"title":{},"body":{"contributing.html":{}}}],["political",{"_index":1932,"title":{},"body":{"contributing.html":{}}}],["portions",{"_index":2172,"title":{},"body":{"license.html":{}}}],["ports",{"_index":1858,"title":{},"body":{"contributing.html":{}}}],["position",{"_index":1277,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["positive",{"_index":1904,"title":{},"body":{"contributing.html":{}}}],["possible",{"_index":1579,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["posted",{"_index":2012,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":1980,"title":{},"body":{"contributing.html":{}}}],["potential",{"_index":2246,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pre",{"_index":2301,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["press",{"_index":1142,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["pressed",{"_index":1248,"title":{},"body":{"components/NavBarComponent.html":{}}}],["private",{"_index":30,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"contributing.html":{}}}],["process",{"_index":1354,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["produced",{"_index":1487,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["production",{"_index":2227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professional",{"_index":1944,"title":{},"body":{"contributing.html":{}}}],["project",{"_index":1820,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["project's",{"_index":2021,"title":{},"body":{"contributing.html":{}}}],["projects",{"_index":108,"title":{},"body":{"components/AppContainerComponent.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["projectsmenu",{"_index":45,"title":{},"body":{"components/AppContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["projectsmenu.title",{"_index":1778,"title":{},"body":{"components/SidebarComponent.html":{}}}],["promise",{"_index":640,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{}}}],["promise.resolve",{"_index":1215,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["properties",{"_index":29,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["property",{"_index":517,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["protected",{"_index":681,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["provide",{"_index":427,"title":{},"body":{"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["provided",{"_index":438,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/Block.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["providedin",{"_index":608,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["provider",{"_index":338,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["providers",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["provides",{"_index":15,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["providing",{"_index":2274,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["provied",{"_index":766,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":39,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["publish",{"_index":2157,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1562,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["publishing",{"_index":1934,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["pull",{"_index":1850,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":2182,"title":{},"body":{"license.html":{}}}],["queried",{"_index":327,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["query",{"_index":337,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesService.html":{}}}],["queryentity",{"_index":1639,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["race",{"_index":1897,"title":{},"body":{"contributing.html":{}}}],["radius",{"_index":1283,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["reactive",{"_index":1137,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["reactiveformsmodule",{"_index":1536,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["readme",{"_index":2132,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["readme.md",{"_index":1855,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["readonly",{"_index":32,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["ready",{"_index":538,"title":{"classes/Ready.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["readymap",{"_index":539,"title":{"interfaces/ReadyMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reasonably",{"_index":1941,"title":{},"body":{"contributing.html":{}}}],["redirectto",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["reduce((finaltools",{"_index":1497,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["ref",{"_index":802,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["refactored",{"_index":2267,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["reference",{"_index":803,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["regard",{"_index":2008,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":1886,"title":{},"body":{"contributing.html":{}}}],["regenerated",{"_index":2291,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["register",{"_index":728,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["registered",{"_index":1485,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["registeronchange",{"_index":686,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["registeronchange(fn",{"_index":726,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["registerontouched",{"_index":687,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["registerontouched(fn",{"_index":731,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["reject",{"_index":1957,"title":{},"body":{"contributing.html":{}}}],["related",{"_index":1313,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"changelog.html":{}}}],["relative",{"_index":1278,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["release",{"_index":1796,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["released",{"_index":1183,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["releases",{"_index":2255,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["religion",{"_index":1898,"title":{},"body":{"contributing.html":{}}}],["remove",{"_index":1468,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"contributing.html":{}}}],["remove(key",{"_index":1480,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["removeblock",{"_index":1645,"title":{},"body":{"injectables/PagesService.html":{}}}],["removeblock(pageid",{"_index":1658,"title":{},"body":{"injectables/PagesService.html":{}}}],["removed",{"_index":1657,"title":{},"body":{"injectables/PagesService.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["removes",{"_index":1656,"title":{},"body":{"injectables/PagesService.html":{}}}],["renamed",{"_index":2298,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["render",{"_index":415,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"classes/TestClass.html":{}}}],["rendered",{"_index":2232,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["renderer2",{"_index":1368,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["repercussions",{"_index":2019,"title":{},"body":{"contributing.html":{}}}],["replaced",{"_index":2294,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["repo",{"_index":1693,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"todo.html":{}}}],["repo](https://github.com/editor",{"_index":1695,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["report",{"_index":1811,"title":{},"body":{"changelog.html":{}}}],["reported",{"_index":1995,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":2009,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":1838,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":1864,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":445,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"contributing.html":{}}}],["representative",{"_index":1986,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":1976,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":700,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["requied",{"_index":956,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["required",{"_index":468,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["required(required",{"_index":958,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["requires",{"_index":2305,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["reset",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"components/FormContainerComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["resolved",{"_index":1828,"title":{},"body":{"changelog.html":{}}}],["respectful",{"_index":1908,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":1954,"title":{},"body":{"contributing.html":{}}}],["responsibilities",{"_index":1946,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":1955,"title":{},"body":{"contributing.html":{}}}],["responsible",{"_index":1947,"title":{},"body":{"contributing.html":{}}}],["restriction",{"_index":2152,"title":{},"body":{"license.html":{}}}],["result",{"_index":229,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{},"routes.html":{}}}],["results",{"_index":231,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{},"routes.html":{}}}],["retrieved",{"_index":793,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["return",{"_index":135,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["returned",{"_index":474,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["returns",{"_index":72,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["reviewed",{"_index":2000,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":1873,"title":{},"body":{"contributing.html":{}}}],["right",{"_index":182,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"contributing.html":{}}}],["rights",{"_index":2155,"title":{},"body":{"license.html":{}}}],["robust",{"_index":2278,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["rogue",{"_index":2271,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["root'},{'name",{"_index":198,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["roots",{"_index":305,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routable",{"_index":1034,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["route",{"_index":306,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["routerlink",{"_index":406,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["routermodule",{"_index":307,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{}}}],["routermodule.forchild(ngxeditorjsdemoroutes",{"_index":1553,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forroot(approutes",{"_index":316,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":309,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["routing",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":1279,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["run",{"_index":801,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/MockNgZone.html":{},"index.html":{}}}],["run(fn",{"_index":1226,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular",{"_index":1223,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular(fn",{"_index":1228,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["rxjs",{"_index":120,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":123,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["sanitizer",{"_index":694,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["sanitizerconfig",{"_index":720,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["save",{"_index":560,"title":{},"body":{"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["save(holder",{"_index":834,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["save(undefined",{"_index":1513,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["saved",{"_index":1007,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{}}}],["saveeditor",{"_index":605,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/enumerations.html":{}}}],["saveend",{"_index":561,"title":{"classes/SaveEnd.html":{}},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["savehandler(holder",{"_index":891,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["saver",{"_index":1200,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["savestart",{"_index":558,"title":{"classes/SaveStart.html":{}},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["saving",{"_index":1162,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["scheme",{"_index":1866,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1972,"title":{},"body":{"contributing.html":{}}}],["scripts",{"_index":1825,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":1168,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["searchable",{"_index":2127,"title":{},"body":{"index.html":{}}}],["second",{"_index":1872,"title":{},"body":{"contributing.html":{}}}],["seconds",{"_index":1134,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["section",{"_index":1287,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["see",{"_index":646,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["selection",{"_index":2211,"title":{},"body":{"todo.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["self",{"_index":915,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["sell",{"_index":2161,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2263,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["semver",{"_index":1867,"title":{},"body":{"contributing.html":{}}}],["separately",{"_index":2013,"title":{},"body":{"contributing.html":{}}}],["service",{"_index":321,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"index.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["services",{"_index":1321,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["services/editorjs",{"_index":1452,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["services/editorjs.service",{"_index":746,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{}}}],["services/plugins.service",{"_index":1453,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["set",{"_index":358,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["setblocks",{"_index":1646,"title":{},"body":{"injectables/PagesService.html":{}}}],["setblocks(pageid",{"_index":1660,"title":{},"body":{"injectables/PagesService.html":{}}}],["setdescribedbyids(ids",{"_index":980,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["setissaved",{"_index":1044,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["setissaved(issaved",{"_index":1066,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["sets",{"_index":335,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["setting",{"_index":1945,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["settings",{"_index":473,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["setupevents(holder",{"_index":869,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["setupsubjects(holder",{"_index":860,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["several",{"_index":1575,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"changelog.html":{},"index.html":{}}}],["sexual",{"_index":1899,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1924,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":2170,"title":{},"body":{"license.html":{}}}],["shared",{"_index":1602,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["shortcut",{"_index":471,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginMarker.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["shouldlabelfloat",{"_index":975,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["showing",{"_index":1918,"title":{},"body":{"contributing.html":{}}}],["shown",{"_index":708,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["shows",{"_index":2239,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["side",{"_index":357,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["sidebar",{"_index":82,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":1775,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1774,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":224,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarhidden",{"_index":33,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["sidenav",{"_index":34,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["sign",{"_index":1869,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":1759,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["simplechanges",{"_index":1349,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["simpleimage",{"_index":1159,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PluginSimpleImage.html":{}}}],["simulatezoneexit",{"_index":1224,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["single",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{}}}],["singleton",{"_index":1463,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["site",{"_index":430,"title":{},"body":{"modules/ApplicationDataModule.html":{},"components/HomePageComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["sites",{"_index":1188,"title":{},"body":{"components/HomePageComponent.html":{}}}],["size",{"_index":1888,"title":{},"body":{"contributing.html":{}}}],["skipself",{"_index":1442,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["small",{"_index":1833,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":1981,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":2149,"title":{},"body":{"license.html":{}}}],["solid",{"_index":1281,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["spaces",{"_index":1975,"title":{},"body":{"contributing.html":{}}}],["specific",{"_index":344,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"contributing.html":{}}}],["standards",{"_index":1901,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":559,"title":{},"body":{"classes/Changed.html":{},"components/FormContainerComponent.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":1786,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["state",{"_index":95,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxTinynodesCoreModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["statechanges",{"_index":938,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["statements",{"_index":2031,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":798,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["static",{"_index":794,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{}}}],["status",{"_index":724,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["still",{"_index":1138,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["store",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"dependencies.html":{},"todo.html":{}}}],["store/pages/pages.models",{"_index":1103,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["store/pages/pages.module",{"_index":1547,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["store/pages/pages.service",{"_index":1104,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["storeconfig",{"_index":460,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["stored",{"_index":792,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["stores",{"_index":93,"title":{},"body":{"components/AppContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["stores/app/application.module",{"_index":1604,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["stream",{"_index":611,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["stretch",{"_index":521,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["stretched",{"_index":522,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["string",{"_index":341,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginMarker.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["style",{"_index":170,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"components/SidebarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":24,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["subject",{"_index":89,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"license.html":{}}}],["subjects",{"_index":859,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["sublicense",{"_index":2159,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1012,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["subscribe(([event",{"_index":873,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["subscribe((data",{"_index":1126,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["subscribe(blocks",{"_index":1114,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["subscribe(editor",{"_index":854,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["subscribe(hidden",{"_index":143,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["subscribed",{"_index":654,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["subscription",{"_index":919,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["subscriptions",{"_index":886,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["substantial",{"_index":2171,"title":{},"body":{"license.html":{}}}],["such",{"_index":1936,"title":{},"body":{"contributing.html":{}}}],["sunday",{"_index":1808,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":461,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/MockNgZone.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["super(service",{"_index":992,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["super(store",{"_index":441,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesQuery.html":{}}}],["support",{"_index":996,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/PageStoreModule.html":{},"modules.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["supported",{"_index":593,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/enumerations.html":{}}}],["supports",{"_index":500,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["svg",{"_index":2196,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":617,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["switchmap",{"_index":1425,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["t",{"_index":343,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["table",{"_index":2086,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2085,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":219,"title":{"interfaces/Tag.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"coverage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["tag_component_field_control",{"_index":2054,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tag_component_value_accessor",{"_index":2055,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tags",{"_index":1141,"title":{},"body":{"components/FormContainerComponent.html":{},"todo.html":{}}}],["take",{"_index":1102,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["takes",{"_index":1435,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["takeuntil",{"_index":122,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["takeuntil(instancedestroyed",{"_index":853,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["takeuntil(this.ondestroy",{"_index":142,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{}}}],["tane",{"_index":2134,"title":{},"body":{"index.html":{},"license.html":{}}}],["tap",{"_index":922,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSEffects.html":{},"components/PageContainerComponent.html":{}}}],["team",{"_index":1997,"title":{},"body":{"contributing.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["templateref",{"_index":1297,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["temporarily",{"_index":1964,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":2017,"title":{},"body":{"contributing.html":{}}}],["test",{"_index":1211,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["testclass",{"_index":1208,"title":{"classes/TestClass.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{},"coverage.html":{}}}],["text",{"_index":159,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["things",{"_index":1312,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this._disabled",{"_index":962,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._empty",{"_index":984,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._focused",{"_index":950,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._placeholder",{"_index":945,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._required",{"_index":955,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._value",{"_index":754,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{}}}],["this.actions$.pipe",{"_index":1409,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.add(key",{"_index":1491,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.app",{"_index":1123,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.app.getmenu('main",{"_index":150,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{}}}],["this.app.getmenu('other",{"_index":153,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.getmenu('tinynode",{"_index":152,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.hidden.pipe(takeuntil(this.ondestroy$)).subscribe(hidden",{"_index":133,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.togglesidebar(value",{"_index":139,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.autofocus",{"_index":1396,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.autosave",{"_index":1017,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["this.autosave$.asobservable",{"_index":1111,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.autosave$.next(0",{"_index":1110,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.autosave$.next(autosavetime",{"_index":1109,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.blockplaceholder",{"_index":1399,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks",{"_index":1119,"title":{},"body":{"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"classes/TestClass.html":{}}}],["this.blocks.length",{"_index":1402,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks.pipe",{"_index":1624,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.blocksmap[holder",{"_index":847,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.blocksmap[holder].asobservable",{"_index":848,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.blocksmap[holder].next",{"_index":896,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.blocksmap[holder].next(blocks",{"_index":903,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.blocksmap[holder].next(data.blocks",{"_index":893,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.cd.markforcheck",{"_index":1116,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.changemap[holder",{"_index":829,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.changemap[holder].asobservable",{"_index":846,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.changemap[holder].next(d",{"_index":831,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.changemap[holder].next(date.now",{"_index":897,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.cleanupsubjects(holder",{"_index":856,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.clear(editoraction.payload",{"_index":623,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.clearhandler(holder",{"_index":875,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.config.editorjs",{"_index":641,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(editoraction.payload",{"_index":621,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(this.createconfig",{"_index":1391,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.describedby",{"_index":981,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.destroy",{"_index":1213,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.destroy(editoraction.payload",{"_index":625,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.destroyinstance(key",{"_index":888,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.editor",{"_index":1112,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.editor.clear",{"_index":1122,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.editor.getblocks(this.holder",{"_index":1623,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editor.save",{"_index":1120,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.editor.update",{"_index":1131,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.editoractions$.pipe(filter(action",{"_index":612,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editoractions.pipe(takeuntil(this.ondestroy$)).subscribe(editoraction",{"_index":616,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorform.patchvalue",{"_index":1115,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.editorjs",{"_index":817,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.editormap[holder",{"_index":840,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.editormap[holder].asobservable",{"_index":842,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.editormap[holder].next(editor",{"_index":861,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.editorservice",{"_index":1377,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.clear(holder",{"_index":670,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.createinstance",{"_index":645,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.destroyinstance(holder",{"_index":676,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getblocks(action.payload.holder",{"_index":1414,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.editorservice.getblocks(holder",{"_index":653,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getchanged(holder",{"_index":659,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getinstance(holder).pipe(filter(editor",{"_index":651,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getready(holder",{"_index":657,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.onchange(holder",{"_index":661,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.save(action.payload.holder",{"_index":1412,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.editorservice.save(holder",{"_index":668,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.update(holder",{"_index":666,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.el.nativeelement",{"_index":1376,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.el.nativeelement.id",{"_index":1392,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.empty",{"_index":977,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.errorstate",{"_index":1023,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.eventmap[holder",{"_index":838,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.eventmap[holder].complete",{"_index":885,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.eventmap[holder].next",{"_index":835,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.fb.group",{"_index":1073,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.fm.monitor(this.editorel.element",{"_index":1014,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.fm.stopmonitoring(this.editorel.element",{"_index":1027,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.focused",{"_index":976,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.gettimer(this.autosave).subscribe",{"_index":1020,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.hidetoolbar",{"_index":1397,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.holder",{"_index":1004,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["this.http.get('/assets/app",{"_index":368,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.id",{"_index":1384,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.includetools",{"_index":1380,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.initialblock",{"_index":1398,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.issaved$.asobservable",{"_index":1107,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.issaved$.next(issaved",{"_index":1108,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.issaved.emit(false",{"_index":989,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.issaved.emit(true",{"_index":1005,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.matcher.matchmedia('(max",{"_index":129,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.menu",{"_index":1117,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.menu$.next(data.links",{"_index":1130,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.minheight",{"_index":1400,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.mobileview",{"_index":128,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.mobileview.addlistener(this.matchview.bind(this",{"_index":132,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.mobileview.removelistener(this.matchview",{"_index":147,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.ngcontrol",{"_index":994,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.invalid",{"_index":1024,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.touched",{"_index":1025,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.valueaccessor",{"_index":995,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.onchange",{"_index":755,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["this.onchange(editorconfig.holder",{"_index":812,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.ondestroy$.complete",{"_index":149,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{}}}],["this.ondestroy$.next(true",{"_index":148,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{}}}],["this.onready(editorconfig.holder",{"_index":815,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.onstable.emit(null",{"_index":1233,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["this.ontouch",{"_index":756,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{}}}],["this.ontouch(event",{"_index":988,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.pages",{"_index":1669,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.pagesservice.pages",{"_index":1118,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.panelopen",{"_index":1307,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this.panelopen$.asobservable",{"_index":1105,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this.panelopen$.next(this.panelopen",{"_index":1308,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this.panelopen$.next(value",{"_index":1106,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this.plugins.gettools(options.includetools",{"_index":643,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.pluginsmap",{"_index":1493,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.pluginsmap[key",{"_index":1492,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.query.select('menus').pipe",{"_index":384,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.select(applicationstatekeys.demodata).pipe",{"_index":377,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.select(applicationstatekeys.hidden",{"_index":371,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.selectall",{"_index":1670,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.readymap[holder",{"_index":833,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.readymap[holder].asobservable",{"_index":844,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.readymap[holder].next(true",{"_index":824,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.ref.tick",{"_index":825,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.reset",{"_index":1132,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.sanitizer",{"_index":1401,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.save(editoraction.payload",{"_index":627,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.savehandler(holder",{"_index":874,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.saver",{"_index":1214,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.service.createeditor",{"_index":1379,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.destroy",{"_index":1395,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.getchanged(this.holder",{"_index":758,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["this.service.geteditor(this.id",{"_index":1375,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.isready(this.holder",{"_index":757,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["this.service.save",{"_index":1003,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.service.update",{"_index":1383,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.setissaved(true",{"_index":1121,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.setupevents(holder",{"_index":823,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.setupsubjects(holder",{"_index":822,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.sidebarhidden",{"_index":140,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidebarhidden$.asobservable",{"_index":136,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidebarhidden$.next(hidden",{"_index":134,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidenav.close",{"_index":145,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidenav.open",{"_index":146,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.statechanges.next",{"_index":943,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.store._value()[applicationstatekeys.hidden",{"_index":376,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.add(newpage",{"_index":1672,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.remove(pageid",{"_index":1675,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.update",{"_index":372,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.update(appdata",{"_index":370,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.update(pageid",{"_index":1676,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.upsert(page.id",{"_index":1674,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.timersubscription",{"_index":1018,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.timersubscription$.closed",{"_index":1028,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.timersubscription$.unsubscribe",{"_index":1019,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.togglesidebar(!event.matches",{"_index":138,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.touched$.asobservable",{"_index":1378,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.touched$.next(true",{"_index":1374,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.update(editoraction.payload",{"_index":629,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.updatehandler(holder",{"_index":876,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.version",{"_index":1212,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.zone.run",{"_index":821,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this.zone.runoutsideangular",{"_index":816,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this[mapkay][holder",{"_index":864,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this[mapkay][holder].complete",{"_index":882,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["this[mapkay][holder].next(value",{"_index":866,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["threatening",{"_index":1969,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":664,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["tick",{"_index":804,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["time",{"_index":900,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/TestClass.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["time).pipe",{"_index":1000,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["timeinterval",{"_index":923,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["timer",{"_index":920,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["timer(timestart",{"_index":999,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["timersubscription",{"_index":1006,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["timestamp",{"_index":540,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["timestart",{"_index":997,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["tinynode",{"_index":2128,"title":{},"body":{"index.html":{}}}],["tinynodedemos",{"_index":455,"title":{"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{}}}],["tinynodes",{"_index":23,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["tinynodes/ngx",{"_index":117,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["tinynodes/src/app/app",{"_index":301,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/src/app/app.module.ts",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["tinynodes/src/app/components/nav",{"_index":1236,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["tinynodes/src/app/components/sidebar",{"_index":1772,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts",{"_index":11,"title":{},"body":{"components/AppContainerComponent.html":{},"coverage.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:106",{"_index":107,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:113",{"_index":110,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:21",{"_index":64,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:26",{"_index":99,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:31",{"_index":90,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:36",{"_index":92,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:41",{"_index":53,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:55",{"_index":102,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:63",{"_index":68,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:71",{"_index":80,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:78",{"_index":74,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:90",{"_index":76,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:99",{"_index":105,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/core/stores/app/application.model.ts",{"_index":456,"title":{},"body":{"interfaces/ApplicationState-1.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["tinynodes/src/app/core/stores/app/application.query.ts",{"_index":442,"title":{},"body":{"injectables/ApplicationQuery-1.html":{},"coverage.html":{}}}],["tinynodes/src/app/core/stores/app/application.query.ts:10",{"_index":443,"title":{},"body":{"injectables/ApplicationQuery-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts",{"_index":392,"title":{},"body":{"injectables/AppService-1.html":{},"coverage.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:15",{"_index":393,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:34",{"_index":397,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:41",{"_index":396,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:49",{"_index":394,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:62",{"_index":395,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.store.ts",{"_index":463,"title":{},"body":{"injectables/ApplicationStore-1.html":{},"coverage.html":{}}}],["tinynodes/src/app/core/stores/app/application.store.ts:10",{"_index":464,"title":{},"body":{"injectables/ApplicationStore-1.html":{}}}],["tinynodes/src/app/core/types/app",{"_index":1101,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["tinynodes/src/app/core/types/app.ts",{"_index":423,"title":{},"body":{"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{},"coverage.html":{}}}],["tinynodes/src/app/material.module",{"_index":1548,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["tinynodes/src/app/material.module.ts",{"_index":1191,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tinynodes/src/app/pages/home/home",{"_index":1171,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["tinynodes/src/environments/environment.prod.ts",{"_index":2048,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/src/environments/environment.ts",{"_index":2049,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":66,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["today",{"_index":1794,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":450,"title":{"todo.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{}}}],["todos",{"_index":2204,"title":{},"body":{"todo.html":{}}}],["toggle",{"_index":81,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["togglepanel",{"_index":1045,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["togglepanel(value",{"_index":1068,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["toggles",{"_index":354,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["togglesidebar",{"_index":40,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/NavBarComponent.html":{}}}],["togglesidebar(value",{"_index":78,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{}}}],["token",{"_index":487,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":485,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["toolbar",{"_index":707,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["toolconstructable",{"_index":477,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["tools",{"_index":482,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["toolsettings",{"_index":476,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["toolsettingsmap",{"_index":483,"title":{"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{}}}],["topnav",{"_index":419,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["tort",{"_index":2192,"title":{},"body":{"license.html":{}}}],["touch",{"_index":742,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["touched",{"_index":1323,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["towards",{"_index":1920,"title":{},"body":{"contributing.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["trigger",{"_index":591,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["trolling",{"_index":1929,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":753,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["true).subscribe(origin",{"_index":1015,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["two",{"_index":1351,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["type",{"_index":57,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["typealiases",{"_index":2215,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":374,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/app",{"_index":362,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["types/blocks",{"_index":582,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/config",{"_index":585,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/maps",{"_index":784,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["types/plugins",{"_index":1486,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}}}],["typescript",{"_index":1179,"title":{},"body":{"components/HomePageComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["typing",{"_index":1150,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["unacceptable",{"_index":1922,"title":{},"body":{"contributing.html":{}}}],["undefined",{"_index":375,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"injectables/NgxEditorJSService.html":{}}}],["under",{"_index":1184,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{}}}],["underlying",{"_index":967,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["unique",{"_index":971,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["unordered",{"_index":502,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["unsubscribe",{"_index":1013,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["until",{"_index":1827,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1926,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":336,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["update",{"_index":599,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["update(holder",{"_index":837,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["update(undefined",{"_index":1515,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["updated",{"_index":326,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["updateeditor",{"_index":600,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/enumerations.html":{}}}],["updatehandler(holder",{"_index":898,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{}}}],["updates",{"_index":662,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["upload",{"_index":2307,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["upsert",{"_index":1647,"title":{},"body":{"injectables/PagesService.html":{}}}],["upsert(page",{"_index":1662,"title":{},"body":{"injectables/PagesService.html":{}}}],["url",{"_index":412,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["usage",{"_index":1309,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["use",{"_index":1289,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["used",{"_index":409,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["useexisting",{"_index":751,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":1457,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["useful",{"_index":1835,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["user",{"_index":1471,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["userplugin",{"_index":2281,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["userplugins",{"_index":493,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["uses",{"_index":2277,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["usevalue",{"_index":1456,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["using",{"_index":928,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["value",{"_index":61,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"classes/Changed.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value(value",{"_index":942,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["values",{"_index":537,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":196,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["variable",{"_index":2033,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1856,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":901,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/TestClass.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["versioning",{"_index":1865,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["vertical",{"_index":186,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["via",{"_index":492,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["view",{"_index":69,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["viewchild",{"_index":114,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["viewchild(matsidenav",{"_index":98,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["viewchild(ngxeditorjsdirective",{"_index":968,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["viewpoints",{"_index":1910,"title":{},"body":{"contributing.html":{}}}],["visit",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"components/HomePageComponent.html":{},"index.html":{}}}],["void",{"_index":73,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/TestClass.html":{}}}],["wait",{"_index":1355,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["want",{"_index":636,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["warning",{"_index":1560,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{}}}],["warranties",{"_index":2178,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2173,"title":{},"body":{"license.html":{}}}],["way",{"_index":1288,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PagesService.html":{}}}],["web",{"_index":1181,"title":{},"body":{"components/HomePageComponent.html":{}}}],["wednesday",{"_index":1791,"title":{},"body":{"changelog.html":{}}}],["welcome",{"_index":1177,"title":{},"body":{"components/HomePageComponent.html":{}}}],["welcoming",{"_index":1877,"title":{},"body":{"contributing.html":{}}}],["what's",{"_index":2249,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["whether",{"_index":2190,"title":{},"body":{"license.html":{}}}],["white",{"_index":163,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["width",{"_index":130,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["wiki",{"_index":1959,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":1841,"title":{},"body":{"contributing.html":{}}}],["withbackground",{"_index":520,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["withborder",{"_index":518,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["within",{"_index":663,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{}}}],["withlatestfrom",{"_index":1413,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["without",{"_index":930,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"changelog.html":{},"contributing.html":{},"license.html":{}}}],["won't",{"_index":763,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["work",{"_index":1832,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":736,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["writevalue",{"_index":688,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["writevalue(blocks",{"_index":734,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["yes",{"_index":83,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["zone",{"_index":800,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/MockNgZone.html":{},"coverage.html":{}}}],["zone.js",{"_index":2111,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppContainerComponent.html":{"url":"components/AppContainerComponent.html","title":"component - AppContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/containers/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The main application component that provides the root container\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mobileView\n                            \n                            \n                                    Private\n                                    Readonly\n                                onDestroy$\n                            \n                            \n                                    Private\n                                    Readonly\n                                sidebarHidden$\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                matchView\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageTitle\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sidebarHidden\n                                \n                                \n                                    mainMenu\n                                \n                                \n                                    projectsMenu\n                                \n                                \n                                    openSourceMenu\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService, matcher: MediaMatcher)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matcher\n                                                  \n                                                        \n                                                                    MediaMatcher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pageTitle\n                    \n                \n                \n                    \n                        Default value : 'Tinynodes Angular Demos'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:21\n                            \n                        \n                \n                    \n                        The page title\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            matchView\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchView(event: any)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:63\n                \n            \n\n\n            \n                \n                    View matcher for mobile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:78\n                \n            \n\n\n            \n                \n                    Component initialized\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:90\n                \n            \n\n\n            \n                \n                    Component destroyed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar(value?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:71\n                \n            \n\n\n            \n                \n                    Toggle sidebar\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mobileView\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MediaQueryList\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:41\n                            \n                        \n\n                \n                    \n                        If it's a mobile view, hide the menu\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                        When the component is destroyed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            sidebarHidden$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:36\n                            \n                        \n\n                \n                    \n                        Stores the current sidebar state\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:26\n                            \n                        \n\n                \n                    \n                        The Material sidebar\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sidebarHidden\n                    \n                \n\n                \n                    \n                        getsidebarHidden()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:55\n                                \n                            \n                    \n                        \n                                Sidebar State\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mainMenu\n                    \n                \n\n                \n                    \n                        getmainMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:99\n                                \n                            \n                    \n                        \n                                Get the application main menu\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        projectsMenu\n                    \n                \n\n                \n                    \n                        getprojectsMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:106\n                                \n                            \n                    \n                        \n                                Get the projects menu\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        openSourceMenu\n                    \n                \n\n                \n                    \n                        getopenSourceMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:113\n                                \n                            \n                    \n                        \n                                Get the open source menu\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, Component, Input, OnDestroy, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { MediaMatcher } from '@angular/cdk/layout';\n\n/**\n * The main application component that provides the root container\n */\n@Component({\n  selector: 'tinynodes-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppContainerComponent implements AfterContentInit, OnDestroy {\n  /**\n   * The page title\n   */\n  @Input()\n  public pageTitle = 'Tinynodes Angular Demos';\n\n  /**\n   * The Material sidebar\n   */\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * When the component is destroyed\n   */\n  private readonly onDestroy$ = new Subject();\n\n  /**\n   * Stores the current sidebar state\n   */\n  private readonly sidebarHidden$ = new BehaviorSubject(false);\n\n  /**\n   * If it's a mobile view, hide the menu\n   */\n  private mobileView: MediaQueryList;\n\n  constructor(private readonly app: AppService, private readonly matcher: MediaMatcher) {\n    this.mobileView = this.matcher.matchMedia('(max-width: 768px)');\n    this.mobileView.addListener(this.matchView.bind(this));\n\n    this.app.hidden.pipe(takeUntil(this.onDestroy$)).subscribe(hidden => {\n      this.sidebarHidden$.next(hidden);\n    });\n  }\n\n  /**\n   * Sidebar State\n   */\n  public get sidebarHidden(): Observable {\n    return this.sidebarHidden$.asObservable();\n  }\n\n  /**\n   * View matcher for mobile\n   * @param event\n   */\n  private matchView(event: any) {\n    this.toggleSidebar(!event.matches);\n  }\n\n  /**\n   * Toggle sidebar\n   * @param value\n   */\n  public toggleSidebar(value?: boolean) {\n    this.app.toggleSidebar(value);\n  }\n\n  /**\n   * Component initialized\n   */\n  ngAfterContentInit() {\n    this.sidebarHidden$\n      .pipe(\n        distinctUntilChanged(),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(hidden => (hidden ? this.sidenav.close() : this.sidenav.open()));\n  }\n\n  /**\n   * Component destroyed\n   */\n  ngOnDestroy() {\n    this.mobileView.removeListener(this.matchView);\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * Get the application main menu\n   */\n  public get mainMenu() {\n    return this.app.getMenu('main-links');\n  }\n\n  /**\n   * Get the projects menu\n   */\n  public get projectsMenu() {\n    return this.app.getMenu('tinynode-projects');\n  }\n\n  /**\n   * Get the open source menu\n   */\n  public get openSourceMenu() {\n    return this.app.getMenu('other-projects');\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                mat-sidenav-container,\nmat-sidenav-content,\nmat-sidenav {\n  height: 100vh;\n}\n\nmat-sidenav {\n  width: 250px;\n}\n\na {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppContainerComponent\n\nAppContainerComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppContainerComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppContainerComponent \n\nAppContainerComponent \n\nAppContainerComponent  -->\n\nAppModule->AppContainerComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nAppModule -->\n\nNgxTinynodesCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The main ngx-tinynodes module that builds the core single page application.\nTo view the application visit the demo\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppContainerComponent\n                        \n                        \n                            HomePageComponent\n                        \n                        \n                            NavBarComponent\n                        \n                        \n                            SidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ApplicationDataModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxEditorjsDemoModule\n                        \n                        \n                            NgxTinynodesCoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppContainerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AkitaNgRouterStoreModule } from '@datorama/akita-ng-router-store';\nimport { AkitaNgDevtools } from '@datorama/akita-ngdevtools';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { NgxEditorjsDemoModule } from '@tinynodes/ngx-editorjs-demo';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppContainerComponent } from './containers/app/app.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { SidebarComponent } from './components/sidebar-component/sidebar.component';\nimport { MaterialModule } from './material.module';\nimport { HomePageComponent } from './pages/home/home-page.component';\nimport { MatButtonModule } from '@angular/material';\nimport { ApplicationDataModule, NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core';\nimport { LayoutModule } from '@angular/cdk/layout';\n\n/**\n * The main `ngx-tinynodes` module that builds the core single page application.\n * To view the application visit [the demo](https://tinynodes-ngx.firebaseapp.com/)\n */\n@NgModule({\n  declarations: [AppContainerComponent, NavBarComponent, SidebarComponent, HomePageComponent],\n  imports: [\n    BrowserModule,\n    LayoutModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    ApplicationDataModule,\n    AppRoutingModule,\n    NgxTinynodesCoreModule,\n    NgxEditorJSModule.forRoot(),\n    NgxEditorjsDemoModule,\n    MarkdownModule.forRoot({ loader: HttpClient }),\n    environment.production ? [] : [AkitaNgDevtools.forRoot(), AkitaNgRouterStoreModule.forRoot()]\n  ],\n  bootstrap: [AppContainerComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/app-routing.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The App routing module provides the base roots of the application\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Route, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { HomePageComponent } from './pages/home/home-page.component';\n\n/**\n * The main application routes\n */\nexport const appRoutes: Route[] = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomePageComponent\n  }\n];\n\n/**\n * The App routing module provides the base roots of the application\n */\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts\n        \n\n            \n                Description\n            \n            \n                The main application service, this loads the initial data and then provides\nit to the store, from here the main state can be updated and queried.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDemoData\n                            \n                            \n                                    Public\n                                getMenu\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: ApplicationQuery, store: ApplicationStore, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up the providers for service methods\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        ApplicationQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application query provider\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application store provider\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HTTP client provider\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDemoData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDemoData(demoName: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:52\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the demo data for a specific demo \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    demoName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the demo data to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMenu\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenu(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:65\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Gets a {MenuGroup} from the men data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the menu to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar(value?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:41\n                \n            \n\n\n            \n                \n                    Toggles the sidebar state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:34\n                                \n                            \n                    \n                        \n                                Returns if the side menu hidden state is set\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { ApplicationData, MenuGroup } from '../../types/app';\nimport { ApplicationStateKeys, DemoData } from './application.model';\nimport { ApplicationQuery } from './application.query';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The main application service, this loads the initial data and then provides\n * it to the store, from here the main state can be updated and queried.\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Sets up the providers for service methods\n   * @param query The application query provider\n   * @param store The application store provider\n   * @param http  The HTTP client provider\n   */\n  constructor(\n    private readonly query: ApplicationQuery,\n    private readonly store: ApplicationStore,\n    private readonly http: HttpClient\n  ) {\n    // Load the application data\n    this.http.get('/assets/app-data.json').subscribe((appData: ApplicationData) => this.store.update(appData));\n  }\n\n  /**\n   * Returns if the side menu hidden state is set\n   */\n  get hidden(): Observable {\n    return this.query.select(ApplicationStateKeys.Hidden);\n  }\n\n  /**\n   * Toggles the sidebar state\n   */\n  public toggleSidebar(value?: boolean) {\n    this.store.update({\n      [ApplicationStateKeys.Hidden]:\n        typeof value !== 'undefined' ? value : !this.store._value()[ApplicationStateKeys.Hidden]\n    });\n  }\n\n  /**\n   * Returns the demo data for a specific demo \n   * @param demoName The name of the demo data to load\n   */\n  public getDemoData(demoName: string): Observable {\n    return this.query.select(ApplicationStateKeys.DemoData).pipe(\n      filter((data: DemoData[]) => typeof data !== 'undefined' && (data && data.length > 0)),\n      map((demoData: DemoData[]) => {\n        return demoData.find(demo => demo.name === demoName).data;\n      })\n    ) as Observable;\n  }\n\n  /**\n   * Gets a {MenuGroup} from the men data\n   * @param key The key of the menu to load\n   */\n  public getMenu(key: string): Observable> {\n    return this.query.select('menus').pipe(\n      distinctUntilChanged(),\n      filter(menus => menus !== undefined && menus.length > 0),\n      map(menus => {\n        return menus.find(menu => menu.key == key);\n      })\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService-1.html":{"url":"injectables/AppService-1.html","title":"injectable - AppService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts\n        \n\n            \n                Description\n            \n            \n                The main application service, this loads the initial data and then provides\nit to the store, from here the main state can be updated and queried.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDemoData\n                            \n                            \n                                    Public\n                                getMenu\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: ApplicationQuery, store: ApplicationStore, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up the providers for service methods\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        ApplicationQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application query provider\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application store provider\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HTTP client provider\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDemoData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDemoData(demoName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:49\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the demo data for a specific demo \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    demoName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the demo data to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMenu\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenu(key: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:62\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Gets a {MenuGroup} from the men data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the menu to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:41\n                \n            \n\n\n            \n                \n                    Toggles the sidebar state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:34\n                                \n                            \n                    \n                        \n                                Returns if the side menu hidden state is set\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { ApplicationData, MenuGroup } from '../../types/app';\nimport { ApplicationStateKeys, DemoData } from './application.model';\nimport { ApplicationQuery } from './application.query';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The main application service, this loads the initial data and then provides\n * it to the store, from here the main state can be updated and queried.\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Sets up the providers for service methods\n   * @param query The application query provider\n   * @param store The application store provider\n   * @param http  The HTTP client provider\n   */\n  constructor(\n    private readonly query: ApplicationQuery,\n    private readonly store: ApplicationStore,\n    private readonly http: HttpClient\n  ) {\n    // Load the application data\n    this.http.get('/assets/app-data.json').subscribe((appData: ApplicationData) => this.store.update(appData));\n  }\n\n  /**\n   * Returns if the side menu hidden state is set\n   */\n  get hidden(): Observable {\n    return this.query.select(ApplicationStateKeys.Hidden);\n  }\n\n  /**\n   * Toggles the sidebar state\n   */\n  public toggleSidebar() {\n    this.store.update({ [ApplicationStateKeys.Hidden]: !this.store._value()[ApplicationStateKeys.Hidden] });\n  }\n\n  /**\n   * Returns the demo data for a specific demo \n   * @param demoName The name of the demo data to load\n   */\n  public getDemoData(demoName: string): Observable {\n    return this.query.select(ApplicationStateKeys.DemoData).pipe(\n      filter(data => typeof data !== 'undefined'),\n      map((demoData: DemoData[]) => {\n        return demoData.find(demo => demo.name === demoName).data;\n      })\n    ) as Observable;\n  }\n\n  /**\n   * Gets a {MenuGroup} from the men data\n   * @param key The key of the menu to load\n   */\n  public getMenu(key: string): Observable> {\n    return this.query.select('menus').pipe(\n      distinctUntilChanged(),\n      filter(menus => menus !== undefined && menus.length > 0),\n      map(menus => {\n        return menus.find(menu => menu.key == key);\n      })\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationData.html":{"url":"interfaces/ApplicationData.html","title":"interface - ApplicationData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                The aggregate application interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the sidebar menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An list of menu groups available in the apps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationData-1.html":{"url":"interfaces/ApplicationData-1.html","title":"interface - ApplicationData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                The aggregate application interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the sidebar menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An list of menu groups available in the apps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicationDataModule.html":{"url":"modules/ApplicationDataModule.html","title":"module - ApplicationDataModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationDataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module provide the Application state and helper functions that\nare used across the Tinynodes site\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            ApplicationQuery\n                        \n                        \n                            ApplicationStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApplicationQuery } from './application.query';\nimport { AppService } from './application.service';\nimport { ApplicationStore } from './application.store';\n\n/**\n * This module provide the Application state and helper functions that\n * are used across the Tinynodes site\n */\n@NgModule({\n  providers: [AppService, ApplicationQuery, ApplicationStore]\n})\nexport class ApplicationDataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationQuery.html":{"url":"injectables/ApplicationQuery.html","title":"injectable - ApplicationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.query.ts\n        \n\n            \n                Description\n            \n            \n                The {Query} handler for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.query.ts:10\n                            \n                        \n\n                \n                    \n                            Provide the store for the class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store to be provided\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { ApplicationState } from './application.model';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The {Query} handler for the Application state data\n */\n@Injectable()\nexport class ApplicationQuery extends Query {\n  /**\n   * Provide the store for the class instance\n   * @param store Store to be provided\n   */\n  constructor(protected store: ApplicationStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationQuery-1.html":{"url":"injectables/ApplicationQuery-1.html","title":"injectable - ApplicationQuery-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.query.ts\n        \n\n            \n                Description\n            \n            \n                The {Query} handler for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.query.ts:10\n                            \n                        \n\n                \n                    \n                            Provide the store for the class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store to be provided\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { ApplicationState } from './application.model';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The {Query} handler for the Application state data\n */\n@Injectable()\nexport class ApplicationQuery extends Query {\n  /**\n   * Provide the store for the class instance\n   * @param store Store to be provided\n   */\n  constructor(protected store: ApplicationStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationState.html":{"url":"interfaces/ApplicationState.html","title":"interface - ApplicationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                A representation of the application state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        demoData\n                                \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        demoData\n                                    \n                                \n                                \n                                    \n                                        demoData:     DemoData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DemoData[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data for demos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the side menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of menus loaded from application data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationState-1.html":{"url":"interfaces/ApplicationState-1.html","title":"interface - ApplicationState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                A representation of the application state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        demoData\n                                \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        demoData\n                                    \n                                \n                                \n                                    \n                                        demoData:     DemoData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DemoData[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data for demos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the side menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of menus loaded from application data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationStore.html":{"url":"injectables/ApplicationStore.html","title":"injectable - ApplicationStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.store.ts\n        \n\n            \n                Description\n            \n            \n                Store for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                    Store\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.store.ts:10\n                            \n                        \n\n                \n                    \n                            Provide an empty state for the application\n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Store, StoreConfig } from '@datorama/akita';\nimport { Injectable } from '@angular/core';\nimport { ApplicationState } from './application.model';\n\n/**\n * Store for the Application state data\n */\n@Injectable()\n@StoreConfig({ name: 'application' })\nexport class ApplicationStore extends Store {\n  /**\n   * Provide an empty state for the application\n   */\n  constructor() {\n    super({\n      hidden: false,\n      menus: [],\n      demoData: []\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationStore-1.html":{"url":"injectables/ApplicationStore-1.html","title":"injectable - ApplicationStore-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.store.ts\n        \n\n            \n                Description\n            \n            \n                Store for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                    Store\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.store.ts:10\n                            \n                        \n\n                \n                    \n                            Provide an empty state for the application\n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Store, StoreConfig } from '@datorama/akita';\nimport { Injectable } from '@angular/core';\nimport { ApplicationState } from './application.model';\n\n/**\n * Store for the Application state data\n */\n@Injectable()\n@StoreConfig({ name: 'application' })\nexport class ApplicationStore extends Store {\n  /**\n   * Provide an empty state for the application\n   */\n  constructor() {\n    super({\n      hidden: false,\n      menus: [],\n      demoData: []\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin.html":{"url":"interfaces/BasePlugin.html","title":"interface - BasePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin-1.html":{"url":"interfaces/BasePlugin-1.html","title":"interface - BasePlugin-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/blocks.ts:13\n                            \n                        \n                \n                    \n                        Additional properties on the type\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data interface for the block type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlocksMap.html":{"url":"interfaces/BlocksMap.html","title":"interface - BlocksMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlocksMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of Block elements from EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:36\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {Block[]}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChangeMap.html":{"url":"interfaces/ChangeMap.html","title":"interface - ChangeMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChangeMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of number which is the timestamp of the last EditorJS change\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:56\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {number}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Changed.html":{"url":"classes/Changed.html","title":"class - Changed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Changed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.Changed\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateEditorJSOptions.html":{"url":"interfaces/CreateEditorJSOptions.html","title":"interface - CreateEditorJSOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateEditorJSOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                EditorJS options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoSave\n                                \n                                \n                                        config\n                                \n                                \n                                            Optional\n                                        includeTools\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoSave\n                                    \n                                \n                                \n                                    \n                                        autoSave:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Autosave on change, is set to false\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         EditorJSConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EditorJSConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includeTools\n                                    \n                                \n                                \n                                    \n                                        includeTools:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tools to include, Optional - if not set all tools will be used\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Block } from '../types/blocks';\nimport { EditorJSConfig, NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { NgxEditorJSInstanceService } from './editorjs-injector';\nimport { NgxEditorJSPluginService } from './plugins.service';\n\n/**\n * Interface describing an action to trigger EditorJS\n */\nexport interface EditorJSAction {\n  /**\n   * The name of the action to trigger\n   */\n  action: string;\n\n  /**\n   * The payload for the action \n   */\n  payload?: T;\n}\n\n/**\n * Supported actions by the API\n */\nexport enum EditorJSActionTypes {\n  /**\n   * Create a new editor\n   */\n  CreateEditor = 'createEditor',\n\n  /**\n   * Update an editor instance\n   */\n  UpdateEditor = 'updateEditor',\n  /**\n   * Clear a editor instance\n   */\n  ClearEditor = 'clearEditor',\n  /**\n   * Destroy an Editor instance\n   */\n  DestroyEditor = 'destroyEditor',\n  /**\n   * Save the blocks in an editor instance\n   */\n  SaveEditor = 'saveEditor'\n}\n\n/**\n * EditorJS options\n */\nexport interface CreateEditorJSOptions {\n  /**\n   * Configuration\n   */\n  config: EditorJSConfig;\n  /**\n   * Tools to include, Optional - if not set all tools will be used\n   */\n  includeTools?: string[];\n  /**\n   * Autosave on change, is set to false\n   */\n  autoSave?: boolean;\n}\n\n/**\n * The NgxEditorJSService provides control EditorJS instances via Angular.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  private onDestroy$ = new Subject();\n  /**\n   * Internal editor action state\n   */\n  private readonly editorActions$ = new BehaviorSubject({\n    action: ''\n  });\n\n  /**\n   * Editor action stream\n   */\n  public get editorActions() {\n    return this.editorActions$.pipe(filter(action => action.action !== ''));\n  }\n\n  constructor(\n    @Inject(NGX_EDITORJS_CONFIG) private config: NgxEditorJSConfig,\n    private readonly editorService: NgxEditorJSInstanceService,\n    private readonly plugins: NgxEditorJSPluginService\n  ) {\n    this.editorActions.pipe(takeUntil(this.onDestroy$)).subscribe(editorAction => {\n      switch (editorAction.action) {\n        case EditorJSActionTypes.CreateEditor: {\n          this.createEditor(editorAction.payload);\n        }\n        case EditorJSActionTypes.ClearEditor: {\n          this.clear(editorAction.payload);\n        }\n        case EditorJSActionTypes.DestroyEditor: {\n          this.destroy(editorAction.payload);\n        }\n        case EditorJSActionTypes.SaveEditor: {\n          this.save(editorAction.payload);\n        }\n        case EditorJSActionTypes.UpdateEditor: {\n          this.update(editorAction.payload);\n        }\n      }\n    });\n  }\n\n  /**\n   * This method creates a new EditorJS instance\n   * @param holder The ID of the holder of the instance\n   * @param blocks Optional initial set of blocks to render in the editor\n   * @param excludeTools String array of keys to not include with this editor\n   * @param autoSave When an instance changes we update the block map, set to false if you want to disable\n   */\n  public async createEditor(options: CreateEditorJSOptions): Promise {\n    const editorConfig: EditorConfig = {\n      ...this.config.editorjs,\n      ...options.config,\n      tools: this.plugins.getTools(options.includeTools)\n    };\n\n    await this.editorService.createInstance({ editorConfig });\n  }\n\n  /**\n   * Get an `EditorJS` instance\n   * See the [EditorJS API](https://editorjs.io/api) docs for more details\n   * @param holder The ID of the holder of the instance\n   */\n  public getEditor(holder: string): Observable {\n    return this.editorService.getInstance(holder).pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Get an observable of the blocks for an `EditorJS` instance\n   * @param holder The ID of the holder of the instance\n   */\n  public getBlocks(holder: string): Observable {\n    return this.editorService.getBlocks(holder);\n  }\n\n  /**\n   * Returns an `Observable` of the current ready state, this can be subscribed to before calling\n   * the `createEditor` method\n   * @param holder\n   */\n  public isReady(holder: string): Observable {\n    return this.editorService.getReady(holder);\n  }\n\n  /**\n   * Returns an `Observable` of the current timestamp of the last change\n   * this can be subscribed to before calling the `createEditor` method\n   * @param holder\n   */\n  public getChanged(holder: string): Observable {\n    return this.editorService.getChanged(holder);\n  }\n\n  public hasChanged(holder: string) {\n    this.editorService.onChange(holder);\n  }\n\n  /**\n   * This method updates the blocks within the `EditorJS` instance.\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   * @param blocks The array of `Block` elements to render\n   */\n  public update({ holder, blocks }: { holder: string; blocks: Block[] }) {\n    this.editorService.update(holder, blocks);\n  }\n\n  /**\n   * Calls the `EditorJS` save method which returns an `OutputData` object.\n   * From this the service updates the blocks map and change map values\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   */\n  public save({ holder }: { holder: string }): void {\n    this.editorService.save(holder);\n  }\n\n  /**\n   * Clears all blocks from an `EditorJS instance`\n   * @param holder The ID of the holder of the instance\n   */\n  public clear({ holder }: { holder: string }): void {\n    this.editorService.clear(holder);\n  }\n\n  /**\n   * Destroy the `EditorJS` instance\n   * It also calls the maps and sets their values back to their defaults and then\n   * completes and destroys them\n   * @param holder The ID of the holder of the instance\n   */\n  public destroy({ holder }: { holder: string }): void {\n    this.editorService.destroyInstance(holder);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DemoData.html":{"url":"interfaces/DemoData.html","title":"interface - DemoData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a demo data object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data for the demo as \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the demo (e.g. ngx-editorjs-demo)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DemoData-1.html":{"url":"interfaces/DemoData-1.html","title":"interface - DemoData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a demo data object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data for the demo as \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the demo (e.g. ngx-editorjs-demo)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSAction.html":{"url":"interfaces/EditorJSAction.html","title":"interface - EditorJSAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface describing an action to trigger EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                            Optional\n                                        payload\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the action to trigger\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The payload for the action \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Block } from '../types/blocks';\nimport { EditorJSConfig, NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { NgxEditorJSInstanceService } from './editorjs-injector';\nimport { NgxEditorJSPluginService } from './plugins.service';\n\n/**\n * Interface describing an action to trigger EditorJS\n */\nexport interface EditorJSAction {\n  /**\n   * The name of the action to trigger\n   */\n  action: string;\n\n  /**\n   * The payload for the action \n   */\n  payload?: T;\n}\n\n/**\n * Supported actions by the API\n */\nexport enum EditorJSActionTypes {\n  /**\n   * Create a new editor\n   */\n  CreateEditor = 'createEditor',\n\n  /**\n   * Update an editor instance\n   */\n  UpdateEditor = 'updateEditor',\n  /**\n   * Clear a editor instance\n   */\n  ClearEditor = 'clearEditor',\n  /**\n   * Destroy an Editor instance\n   */\n  DestroyEditor = 'destroyEditor',\n  /**\n   * Save the blocks in an editor instance\n   */\n  SaveEditor = 'saveEditor'\n}\n\n/**\n * EditorJS options\n */\nexport interface CreateEditorJSOptions {\n  /**\n   * Configuration\n   */\n  config: EditorJSConfig;\n  /**\n   * Tools to include, Optional - if not set all tools will be used\n   */\n  includeTools?: string[];\n  /**\n   * Autosave on change, is set to false\n   */\n  autoSave?: boolean;\n}\n\n/**\n * The NgxEditorJSService provides control EditorJS instances via Angular.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  private onDestroy$ = new Subject();\n  /**\n   * Internal editor action state\n   */\n  private readonly editorActions$ = new BehaviorSubject({\n    action: ''\n  });\n\n  /**\n   * Editor action stream\n   */\n  public get editorActions() {\n    return this.editorActions$.pipe(filter(action => action.action !== ''));\n  }\n\n  constructor(\n    @Inject(NGX_EDITORJS_CONFIG) private config: NgxEditorJSConfig,\n    private readonly editorService: NgxEditorJSInstanceService,\n    private readonly plugins: NgxEditorJSPluginService\n  ) {\n    this.editorActions.pipe(takeUntil(this.onDestroy$)).subscribe(editorAction => {\n      switch (editorAction.action) {\n        case EditorJSActionTypes.CreateEditor: {\n          this.createEditor(editorAction.payload);\n        }\n        case EditorJSActionTypes.ClearEditor: {\n          this.clear(editorAction.payload);\n        }\n        case EditorJSActionTypes.DestroyEditor: {\n          this.destroy(editorAction.payload);\n        }\n        case EditorJSActionTypes.SaveEditor: {\n          this.save(editorAction.payload);\n        }\n        case EditorJSActionTypes.UpdateEditor: {\n          this.update(editorAction.payload);\n        }\n      }\n    });\n  }\n\n  /**\n   * This method creates a new EditorJS instance\n   * @param holder The ID of the holder of the instance\n   * @param blocks Optional initial set of blocks to render in the editor\n   * @param excludeTools String array of keys to not include with this editor\n   * @param autoSave When an instance changes we update the block map, set to false if you want to disable\n   */\n  public async createEditor(options: CreateEditorJSOptions): Promise {\n    const editorConfig: EditorConfig = {\n      ...this.config.editorjs,\n      ...options.config,\n      tools: this.plugins.getTools(options.includeTools)\n    };\n\n    await this.editorService.createInstance({ editorConfig });\n  }\n\n  /**\n   * Get an `EditorJS` instance\n   * See the [EditorJS API](https://editorjs.io/api) docs for more details\n   * @param holder The ID of the holder of the instance\n   */\n  public getEditor(holder: string): Observable {\n    return this.editorService.getInstance(holder).pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Get an observable of the blocks for an `EditorJS` instance\n   * @param holder The ID of the holder of the instance\n   */\n  public getBlocks(holder: string): Observable {\n    return this.editorService.getBlocks(holder);\n  }\n\n  /**\n   * Returns an `Observable` of the current ready state, this can be subscribed to before calling\n   * the `createEditor` method\n   * @param holder\n   */\n  public isReady(holder: string): Observable {\n    return this.editorService.getReady(holder);\n  }\n\n  /**\n   * Returns an `Observable` of the current timestamp of the last change\n   * this can be subscribed to before calling the `createEditor` method\n   * @param holder\n   */\n  public getChanged(holder: string): Observable {\n    return this.editorService.getChanged(holder);\n  }\n\n  public hasChanged(holder: string) {\n    this.editorService.onChange(holder);\n  }\n\n  /**\n   * This method updates the blocks within the `EditorJS` instance.\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   * @param blocks The array of `Block` elements to render\n   */\n  public update({ holder, blocks }: { holder: string; blocks: Block[] }) {\n    this.editorService.update(holder, blocks);\n  }\n\n  /**\n   * Calls the `EditorJS` save method which returns an `OutputData` object.\n   * From this the service updates the blocks map and change map values\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   */\n  public save({ holder }: { holder: string }): void {\n    this.editorService.save(holder);\n  }\n\n  /**\n   * Clears all blocks from an `EditorJS instance`\n   * @param holder The ID of the holder of the instance\n   */\n  public clear({ holder }: { holder: string }): void {\n    this.editorService.clear(holder);\n  }\n\n  /**\n   * Destroy the `EditorJS` instance\n   * It also calls the maps and sets their values back to their defaults and then\n   * completes and destroys them\n   * @param holder The ID of the holder of the instance\n   */\n  public destroy({ holder }: { holder: string }): void {\n    this.editorService.destroyInstance(holder);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorJSBaseComponent.html":{"url":"components/EditorJSBaseComponent.html","title":"component - EditorJSBaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditorJSBaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/src/lib/containers/base/container.class.ts\n\n\n    \n        Description\n    \n    \n        A base EditorJS component, can be used to create other extended components\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                EDITORJS_FORM_VALUE_ACCESSOR\n                \n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _value\n                            \n                            \n                                onChange\n                            \n                            \n                                    Private\n                                onDestroy$\n                            \n                            \n                                onTouch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getChanged\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                includeTools\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isReady\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:90\n                            \n                        \n\n                \n                    \n                            When created an instance of the service is available as\na public interface\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:34\n                            \n                        \n                \n                    \n                        Sets if the EditorJS component will request autofocus in the browser\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:84\n                            \n                        \n                \n                    \n                        If set, when the EditorJS save is called the Observable of blocks will be updated,\nif set to false on the change Observable will be updated\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:64\n                            \n                        \n                \n                    \n                        First Block placeholder\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:90\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:40\n                            \n                        \n                \n                    \n                        Sets if the toolbar will be shown in EditorJS\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:46\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        includeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:77\n                            \n                        \n                \n                    \n                        A string array of tools that will be included in this instance, if empty\nall tools will be included\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:52\n                            \n                        \n                \n                    \n                        The name of the initial block (default \"paragraph\")\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:58\n                            \n                        \n                \n                    \n                        Height of Editor's bottom area that allows to set focus on the last Block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:70\n                            \n                        \n                \n                    \n                        Define default sanitizer configuration\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getChanged()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:151\n                \n            \n\n\n            \n                \n                    Get the changed status for the EditorJS instance\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: (blocks: Block[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:125\n                \n            \n\n\n            \n                \n                    Register on Change for forms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: (event: MouseEvent) => void)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:132\n                \n            \n\n\n            \n                \n                    registerOnTouched for forms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(blocks: Block[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:118\n                \n            \n\n\n            \n                \n                    Form Write Values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:102\n                            \n                        \n\n                \n                    \n                        Form field value if used as a field component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:112\n                            \n                        \n\n                \n                    \n                        Field onChange method\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:29\n                            \n                        \n\n                \n                    \n                        Private destroy subject\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:107\n                            \n                        \n\n                \n                    \n                        Field on touch method\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isReady\n                    \n                \n\n                \n                    \n                        getisReady()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:144\n                                \n                            \n                    \n                        \n                                Get the ready status for the EditorJS instance\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Injectable, Input, Component, OnDestroy, forwardRef } from '@angular/core';\nimport { SanitizerConfig } from '@editorjs/editorjs';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { Block } from '../../types/blocks';\nimport { Subject, Observable } from 'rxjs';\nimport { Provider } from '@angular/core/src/render3/jit/compiler_facade_interface';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n/**\n * This provides the Control Value Accessor for the form component\n */\nexport const EDITORJS_FORM_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => EditorJSBaseComponent),\n  multi: true\n};\n\n/**\n * A base EditorJS component, can be used to create other extended components\n */\n@Component({\n  template: '',\n  providers: [EDITORJS_FORM_VALUE_ACCESSOR]\n})\nexport class EditorJSBaseComponent implements OnDestroy, ControlValueAccessor {\n  /**\n   * Private destroy subject\n   */\n  private onDestroy$ = new Subject();\n  /**\n   * Sets if the `EditorJS` component will request autofocus in the browser\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Sets if the toolbar will be shown in `EditorJS`\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * The ID of the dom element that will hold the editor\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  @Input()\n  public initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  @Input()\n  public minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  @Input()\n  public blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  @Input()\n  public sanitizer?: SanitizerConfig;\n\n  /**\n   * A string array of tools that will be included in this instance, if empty\n   * all tools will be included\n   */\n  @Input()\n  public includeTools: string[] = [];\n\n  /**\n   * If set, when the `EditorJS` save is called the `Observable` of blocks will be updated,\n   * if set to `false` on the change `Observable` will be updated\n   */\n  @Input()\n  public autosave: number;\n\n  /**\n   * An initial set of blocks to render in the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * When created an instance of the service is available as\n   * a public interface\n   * @param service The editor service\n   */\n  constructor(protected readonly service: NgxEditorJSService) {}\n\n  /**\n   * Form field value if used as a field component\n   */\n  protected _value: any;\n\n  /**\n   * Field on touch method\n   */\n  onTouch = (event?: MouseEvent) => {};\n\n  /**\n   * Field onChange method\n   */\n  onChange = (blocks: Block[]) => {};\n\n  /**\n   * Form Write Values\n   * @param blocks\n   */\n  public writeValue(blocks: Block[]) {\n    this._value = blocks;\n  }\n\n  /**\n   * Register on Change for forms\n   */\n  registerOnChange(fn: (blocks: Block[]) => void) {\n    this.onChange = fn;\n  }\n\n  /**\n   * registerOnTouched for forms\n   */\n  registerOnTouched(fn: (event?: MouseEvent) => void) {\n    this.onTouch = fn;\n  }\n\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * Get the ready status for the `EditorJS` instance\n   */\n  public get isReady(): Observable {\n    return this.service.isReady(this.holder);\n  }\n\n  /**\n   * Get the changed status for the `EditorJS` instance\n   */\n  public getChanged(): Observable {\n    return this.service.getChanged(this.holder);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditorJSBaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSConfig.html":{"url":"interfaces/EditorJSConfig.html","title":"interface - EditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hideToolbar\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                                \n                                            Optional\n                                        minHeight\n                                \n                                \n                                            Optional\n                                        placeholder\n                                \n                                \n                                            Optional\n                                        sanitizer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideToolbar\n                                    \n                                \n                                \n                                    \n                                        hideToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, toolbar won't be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minHeight\n                                    \n                                \n                                \n                                    \n                                        minHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Height of Editor's bottom area that allows to set focus on the last Block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    First Block placeholder\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sanitizer\n                                    \n                                \n                                \n                                    \n                                        sanitizer:     SanitizerConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SanitizerConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define default sanitizer configuration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  placeholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * Configuration options for `EditorJS`\n   */\n  editorjs?: EditorJSConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSInstanceConfig.html":{"url":"interfaces/EditorJSInstanceConfig.html","title":"interface - EditorJSInstanceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSInstanceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs-injector.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for creating an EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        editorConfig\n                                \n                                \n                                            Optional\n                                        onChange\n                                \n                                \n                                            Optional\n                                        onReady\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorConfig\n                                    \n                                \n                                \n                                    \n                                        editorConfig:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The editor configuration, this is required with at least the holder property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call when the editor makes a change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onReady\n                                    \n                                \n                                \n                                    \n                                        onReady:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call with an editor is ready\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApplicationRef, Inject, Injectable, InjectionToken, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Block } from '../types/blocks';\nimport { BlocksMap, ChangeMap, EditorMap, EventMap, EventType, ReadyMap } from '../types/maps';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nconst MAP_DEFAULTS = [['blocksMap', []], ['changeMap', 0], ['readyMap', false]];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * EditorJS factory service, call `createInstance` with an `EditorConfig` to\n * return an instance after the DOM element is ready, this is stored in a subject to\n * be retrieved when ready.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSInstanceService {\n  static nextIdValue = 0;\n\n  get idValue() {\n    NgxEditorJSInstanceService.nextIdValue++;\n    return NgxEditorJSInstanceService.nextIdValue;\n  }\n  /**\n   * Internal destroy method for the service\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * Internal map of all EditorJS instances\n   */\n  private editorMap: EditorMap = {};\n\n  /**\n   * Internal map of all Block `BehaviorSubject` instances\n   */\n  private blocksMap: BlocksMap = {};\n\n  /**\n   * Internal map of all EditorJS ready states\n   */\n  private readyMap: ReadyMap = {};\n\n  /**\n   * Internal map of all EditorJS change states\n   */\n  private changeMap: ChangeMap = {};\n\n  /**\n   * The Event map is used to trigger events\n   */\n  private eventMap: EventMap = {};\n\n  /**\n   * Import the `EditorJS` class\n   * @param EditorJS The `EditorJS` class\n   * @param zone Angular zone to run\n   * @param ref The application reference to trigger a tick\n   */\n  constructor(\n    @Inject(EditorJSInstance) private EditorJS: any,\n    private readonly zone: NgZone,\n    private readonly ref: ApplicationRef\n  ) {}\n\n  /**\n   * Creates a new `EditorJS` instance outside of the Angular zone and\n   * then adds it to the editor instances\n   * @param config The {EditorConfig} configuration to create\n   */\n  public createInstance(config: EditorJSInstanceConfig): Promise {\n    const editorConfig = {\n      ...config.editorConfig\n    };\n    editorConfig.onChange = (config.onChange ? config.onChange : this.onChange(editorConfig.holder as string)) as any;\n    editorConfig.onReady = (config.onReady ? config.onReady : this.onReady(editorConfig.holder as string)) as any;\n    return this.zone.runOutsideAngular(() => {\n      const editor = new (this.EditorJS as any)(editorConfig);\n      const holder = editorConfig.holder as string;\n      return editor.isReady.then(() => {\n        return this.zone.run(() => {\n          this.setupSubjects(holder, editor);\n          this.setupEvents(holder);\n          this.readyMap[holder].next(true);\n          this.ref.tick();\n        });\n      });\n    });\n  }\n\n  public onChange(holder: string): void {\n    const d = Date.now();\n    if (!this.changeMap[holder]) {\n      this.changeMap[holder] = new BehaviorSubject(d);\n    }\n    this.changeMap[holder].next(d);\n  }\n\n  public onReady(holder: string) {\n    if (!this.readyMap[holder]) {\n      this.readyMap[holder] = new BehaviorSubject(false);\n    }\n    this.readyMap[holder].next(true);\n  }\n\n  /**\n   * Calls the save method on an editor\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public save(holder: string) {\n    this.eventMap[holder].next({ type: 'save' });\n  }\n\n  /**\n   * Calls a clear method on an editor\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public clear(holder: string) {\n    this.eventMap[holder].next({ type: 'clear' });\n  }\n\n  /**\n   * Updates the editor with new blocks\n   * @param holder The holder ID of the `EditorJS` instance\n   * @param blocks The blocks to update the editor with\n   */\n  public update(holder: string, blocks: Block[]) {\n    if (!this.eventMap[holder]) {\n      this.eventMap[holder] = new BehaviorSubject({ type: '' });\n    }\n    this.eventMap[holder].next({ type: 'update', payload: { blocks } });\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getInstance(holder: string): Observable {\n    if (!this.editorMap[holder]) {\n      this.editorMap[holder] = new BehaviorSubject(undefined);\n    }\n    return this.editorMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getReady(holder: string): Observable {\n    if (!this.readyMap[holder]) {\n      this.readyMap[holder] = new BehaviorSubject(false);\n    }\n    return this.readyMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getChanged(holder: string): Observable {\n    if (!this.changeMap[holder]) {\n      this.changeMap[holder] = new BehaviorSubject(0);\n    }\n    return this.changeMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getBlocks(holder: string): Observable {\n    if (!this.blocksMap[holder]) {\n      this.blocksMap[holder] = new BehaviorSubject([]);\n    }\n    return this.blocksMap[holder].asObservable();\n  }\n\n  /**\n   * Destroys an instance of an editor and cleans up all Observable values\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public destroyInstance(holder: string): void {\n    const instanceDestroyed = new Subject();\n    this.editorMap[holder]\n      .pipe(\n        filter(editor => typeof editor !== 'undefined'),\n        takeUntil(instanceDestroyed)\n      )\n      .subscribe(editor => {\n        this.zone.runOutsideAngular(() => {\n          editor.destroy();\n          this.zone.run(() => {\n            this.cleanupSubjects(holder);\n            instanceDestroyed.next(true);\n            instanceDestroyed.complete();\n            this.ref.tick();\n          });\n        });\n      });\n  }\n\n  /**\n   * Sets up the Subjects provided by this service\n   * @param holder The holder to set up the subjects for\n   * @param editor The Editor instance created outside of Angular\n   */\n  private setupSubjects(holder: string, editor: EditorJS): void {\n    if (this.editorMap[holder]) {\n      this.editorMap[holder].next(editor);\n    } else {\n      this.editorMap[holder] = new BehaviorSubject(editor);\n    }\n    MAP_DEFAULTS.forEach(([mapKay, value]: [string, typeof value]) => {\n      if (!this[mapKay][holder]) {\n        this[mapKay][holder] = new BehaviorSubject(value);\n      }\n      this[mapKay][holder].next(value);\n    });\n    if (!this.eventMap[holder]) {\n      this.eventMap[holder] = new BehaviorSubject({ type: '' });\n    }\n  }\n\n  /**\n   * Sets up a listener for the event map and provides the editor and blocks to handle\n   * updates\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  private setupEvents(holder: string) {\n    combineLatest([this.eventMap[holder], this.editorMap[holder]])\n      .pipe(\n        filter(([event, editor]) => event.type && typeof editor !== 'undefined'),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(([event, editor]) => {\n        if (event.type === 'save') {\n          this.saveHandler(holder, editor);\n        }\n        if (event.type === 'clear') {\n          this.clearHandler(holder, editor);\n        }\n        if (event.type === 'update') {\n          this.updateHandler(holder, editor, event.payload.blocks);\n        }\n        this.eventMap[holder].next({ type: '' });\n      });\n    this.ref.tick();\n  }\n\n  /**\n   * Handles cleaning up all the subjects once an `EditorJS` instance has been\n   * destroyed\n   * @param holder The holder ID for the `EditorJS` instance\n   */\n  private cleanupSubjects(holder: string) {\n    MAP_DEFAULTS.forEach(([mapKay, value]: [string, any]) => {\n      if (this[mapKay][holder]) {\n        this[mapKay][holder].next(value);\n        this[mapKay][holder].complete();\n        this[mapKay][holder] = null;\n        delete this[mapKay][holder];\n      }\n    });\n    this.eventMap[holder].next({ type: '' });\n    this.eventMap[holder].complete();\n    this.eventMap[holder] = null;\n    delete this.eventMap[holder];\n    this.editorMap[holder] = null;\n    delete this.editorMap[holder];\n  }\n\n  /**\n   * Call this to destroy all subscriptions within the service\n   */\n  public destroy() {\n    Object.keys(this.editorMap).forEach(key => {\n      this.destroyInstance(key);\n    });\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * This internal handler calls the `EditorJS` instance save outside of the\n   * Angular zone, this means it will not trigger change detection\n   * @param holder The holder ID for the `EditorJS` instance\n   * @param editor The `EditorJS` instance\n   * @param blocks The {Block} items to render\n   */\n  private saveHandler(holder: string, editor: EditorJS) {\n    this.zone.runOutsideAngular(() => {\n      editor.saver.save().then(data => {\n        this.zone.run(() => {\n          this.blocksMap[holder].next(data.blocks);\n        });\n      });\n    });\n  }\n\n  /**\n   * This internal handler calls the `EditorJS` instance clear outside of the\n   * Angular zone, this means it will not trigger change detection\n   * @param holder The holder ID for the `EditorJS` instance\n   * @param editor The `EditorJS` instance\n   * @param blocks The {Block} items to render\n   */\n  private clearHandler(holder: string, editor: EditorJS) {\n    this.zone.runOutsideAngular(() => {\n      editor.blocks.clear();\n      this.zone.run(() => {\n        this.blocksMap[holder].next([]);\n        this.changeMap[holder].next(Date.now());\n      });\n    });\n  }\n\n  /**\n   * This internal handler calls the `EditorJS` instance render outside of the\n   * Angular zone, this means it will not trigger change detection\n   * @param holder The holder ID for the `EditorJS` instance\n   * @param editor The `EditorJS` instance\n   * @param blocks The {Block} items to render\n   */\n  private updateHandler(holder: string, editor: EditorJS, blocks: Block[]) {\n    if (!blocks) {\n      return;\n    }\n    this.zone.runOutsideAngular(() => {\n      editor.blocks.render({\n        time: Date.now(),\n        version: EditorJS.version,\n        blocks\n      });\n      this.zone.run(() => {\n        this.blocksMap[holder].next(blocks);\n        this.changeMap[holder].next(Date.now());\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSMaterialForm.html":{"url":"interfaces/EditorJSMaterialForm.html","title":"interface - EditorJSMaterialForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSMaterialForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n        \n\n            \n                Description\n            \n            \n                Single interface for EditorJSMaterialForm\n\n            \n\n            \n                Extends\n            \n            \n                        OnInit\n            \n\n\n\n\n    \n\n\n    \n        import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Component,\n  DoCheck,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Provider,\n  Self,\n  ViewChild,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material';\nimport { Subject, Subscription, timer, BehaviorSubject, Observable } from 'rxjs';\nimport { pluck, tap, timeInterval, map } from 'rxjs/operators';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { EditorJSBaseComponent } from '../base/container.class';\n\n/**\n * Provider for the EditorJS Material Field Component\n */\nexport const EDITORJS_MATERIAL_FIELD_CONTROL: Provider = {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n};\n\n/**\n * Single interface for EditorJSMaterialForm\n */\nexport interface EditorJSMaterialForm\n  extends OnInit,\n    AfterContentInit,\n    OnDestroy,\n    DoCheck,\n    MatFormFieldControl {}\n\n/**\n * This component is provided as a shortcut to using EditorJS in your\n * application. The attributes are optional and without a default component\n * will be created\n *\n * @example\n * \n *  \n * \n */\n@Component({\n  selector: 'ngx-editorjs-mat-field',\n  templateUrl: 'editorjs-mat-field.component.html',\n  styleUrls: ['editorjs-mat-field.component.scss'],\n  host: {\n    '[id]': 'id',\n    '[attr.aria-describedby]': 'describedBy'\n  },\n  providers: [EDITORJS_MATERIAL_FIELD_CONTROL]\n})\nexport class NgxEditorJSMatFieldComponent extends EditorJSBaseComponent implements EditorJSMaterialForm {\n  /**\n   * Internal Static ID for Material for each editor instance\n   */\n  static nextId = 0;\n  /**\n   * Material state change subject\n   */\n  public stateChanges = new Subject();\n\n  /**\n   * Material control type\n   */\n  public controlType = 'ngx-editorjs-mat-field';\n\n  /**\n   * Material error state\n   */\n  public errorState = false;\n\n  /**\n   * Get the component value\n   */\n  get value(): any {\n    return this._value;\n  }\n\n  /**\n   * Set the component value\n   * @param value The value to set\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material placeholder value\n   */\n  private _placeholder: string;\n\n  /**\n   * Get the Material placeholder value\n   */\n  get placeholder() {\n    return this._placeholder;\n  }\n  /**\n   * Set the material Placeholder value\n   * @input placeholder The placeholder state to set\n   */\n  @Input('placeholder')\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material focused state\n   */\n  private _focused: boolean;\n  /**\n   * Get the Material focused state\n   */\n  get focused() {\n    return this._focused;\n  }\n  /**\n   * Set the Material focused state\n   * @param focused The focused state to set\n   */\n  @Input('focused')\n  set focused(focused: boolean) {\n    this._focused = coerceBooleanProperty(focused);\n    if (this._focused) {\n      this.onTouch();\n    }\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material Required Value\n   */\n  private _required = false;\n\n  /**\n   * Get the Material required state\n   */\n  get required() {\n    return this._required;\n  }\n  /**\n   * Set the Material requied state\n   * @param required The required state to set\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material disabled state\n   */\n  private _disabled = false;\n\n  /**\n   * Get the Material disabled state\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  /**\n   * Set the Material disabled state\n   * @param disabled The disabled state to set\n   */\n  @Input('disabled')\n  set disabled(disabled: boolean) {\n    this._disabled = coerceBooleanProperty(disabled);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Access to the underlying {NgxEditorJSDirective}\n   */\n  @ViewChild(NgxEditorJSDirective) public editorEl: NgxEditorJSDirective;\n\n  /**\n   * Host binding to the unique ID for this editor for material\n   */\n  @HostBinding()\n  id = `ngx-editorjs-mat-field-${NgxEditorJSMatFieldComponent.nextId++}`;\n\n  /**\n   * Gets if the Material label should float\n   */\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  /**\n   * Host binding for ARIA label\n   */\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  /**\n   *\n   * @param ids The IDs of the Material components\n   */\n  public setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  /**\n   * Material empty state\n   */\n  private _empty = true;\n  /**\n   * Get the Material empty state\n   */\n  public get empty() {\n    return this._empty;\n  }\n  /**\n   * Set the Material empty state\n   * @param empty The empty value\n   */\n  public set empty(empty: boolean) {\n    this._empty = empty;\n  }\n\n  /**\n   * Material on container click\n   * @param event The {MouseEvent} for the container click\n   */\n  public onContainerClick(event: MouseEvent) {\n    this.onTouch(event);\n    this.isSaved.emit(false);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Creates the Material field\n   * @param service The {NgxEditorJSService} instance\n   * @param fm Focus monitor for the Material element\n   * @param ngControl The Angular control base class\n   */\n  constructor(\n    protected readonly service: NgxEditorJSService,\n    private readonly fm: FocusMonitor,\n    @Optional() @Self() public ngControl: NgControl\n  ) {\n    super(service);\n  }\n\n  /**\n   * Called on OnInit\n   */\n  ngOnInit(): void {\n    if (this.ngControl !== null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  /**\n   * Internal method to return a new timer for the autosave support\n   * @param time Time to do with autosave\n   * @param timeStart When to trigger the first autosave\n   */\n  private getTimer(time: number, timeStart = 0): Observable {\n    return timer(timeStart, time).pipe(\n      timeInterval(),\n      map(interval => interval.interval),\n      tap(() => {\n        this.service.save({ holder: this.holder });\n        this.isSaved.emit(true);\n      })\n    );\n  }\n\n  /**\n   * Internal Subscription for the timer subscription\n   */\n  private timerSubscription$: Subscription;\n\n  /**\n   * Get the current saved state\n   */\n  @Output()\n  public isSaved = new EventEmitter();\n\n  /**\n   * Inside the AfterContentInit life-cycle we set up a listener for focus\n   * and trigger focus autosave subscribe and unsubscribe\n   */\n  ngAfterContentInit(): void {\n    this.fm.monitor(this.editorEl.element, true).subscribe(origin => {\n      this.focused = !!origin;\n      if (!this.focused) {\n        if (!this.autosave) {\n          this.isSaved.emit(false);\n        }\n        this.timerSubscription$ && this.timerSubscription$.unsubscribe();\n      }\n      this.isSaved.emit(false);\n      if (this.autosave > 0) {\n        this.timerSubscription$ = this.getTimer(this.autosave).subscribe();\n      }\n      this.stateChanges.next();\n    });\n  }\n\n  /**\n   * Set the error state based on the underlying control state\n   */\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      this.errorState = this.ngControl.invalid && this.ngControl.touched;\n      this.stateChanges.next();\n    }\n  }\n\n  /**\n   * Destroy the focus monitoring\n   */\n  ngOnDestroy(): void {\n    this.fm.stopMonitoring(this.editorEl.element);\n    if (this.timerSubscription$ && !this.timerSubscription$.closed) {\n      this.timerSubscription$.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorMap.html":{"url":"interfaces/EditorMap.html","title":"interface - EditorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing instances of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:26\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {EditorJS}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventMap.html":{"url":"interfaces/EventMap.html","title":"interface - EventMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing an event subject for an EditorJS instance\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:16\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {EventType}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventType.html":{"url":"interfaces/EventType.html","title":"interface - EventType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                An event type for calling EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        payload\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormContainerComponent.html":{"url":"components/FormContainerComponent.html","title":"component - FormContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container component provides the main routable page for loading\nthe ngx-editorjs-demo\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-form-container\n            \n\n            \n                styleUrls\n                form-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                autoSave$\n                            \n                            \n                                    Private\n                                blocks$\n                            \n                            \n                                    Public\n                                editorForm\n                            \n                            \n                                    Public\n                                holder\n                            \n                            \n                                    Private\n                                isSaved$\n                            \n                            \n                                    Private\n                                menu$\n                            \n                            \n                                    Private\n                                onDestroy$\n                            \n                            \n                                    Private\n                                panelOpen$\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                disableAutosave\n                            \n                            \n                                    Public\n                                enableAutosave\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                setIsSaved\n                            \n                            \n                                    Public\n                                togglePanel\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    panelOpen\n                                \n                                \n                                    isSaved\n                                \n                                \n                                    autosave\n                                \n                                \n                                    menu\n                                \n                                \n                                    pages\n                                \n                                \n                                    blocks\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editor: NgxEditorJSService, cd: ChangeDetectorRef, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:111\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editor\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The form builder\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:184\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disableAutosave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disableAutosave()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:102\n                \n            \n\n\n            \n                \n                    Disable autosave\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enableAutosave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableAutosave(autosaveTime: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:95\n                \n            \n\n\n            \n                \n                    Enable autosave, set the value from the autosaveTime\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    autosaveTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Time to set for autosave\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:247\n                \n            \n\n\n            \n                \n                    After the content has init overide the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:193\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:175\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setIsSaved\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setIsSaved(isSaved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:87\n                \n            \n\n\n            \n                \n                    Set the current saved state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isSaved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current saved state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            togglePanel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    togglePanel(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:62\n                \n            \n\n\n            \n                \n                    Toggles the panel state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            autoSave$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(0)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:69\n                            \n                        \n\n                \n                    \n                        Autosave state\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            blocks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:40\n                            \n                        \n\n                \n                    \n                        The blocks on the page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editorForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    pageName: [''],\n    pageTags: new FormControl([]),\n    pageEditor: new FormControl([])\n  })\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:145\n                            \n                        \n\n                \n                    \n                        Editor form group\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            holder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs-demo'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:35\n                            \n                        \n\n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isSaved$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:74\n                            \n                        \n\n                \n                    \n                        Is saved state\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            menu$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:50\n                            \n                        \n\n                \n                    \n                        Links for the page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:30\n                            \n                        \n\n                \n                    \n                        Internal onDestroy$ subject\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            panelOpen$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:45\n                            \n                        \n\n                \n                    \n                        If the panel is open or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs Material Field'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:26\n                            \n                        \n\n                \n                    \n                        Title of the page\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        panelOpen\n                    \n                \n\n                \n                    \n                        getpanelOpen()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:55\n                                \n                            \n                    \n                        \n                                Gets if the panel is open or not\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isSaved\n                    \n                \n\n                \n                    \n                        getisSaved()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:79\n                                \n                            \n                    \n                        \n                                Get isSaved state\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n\n                \n                    \n                        getautosave()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:109\n                                \n                            \n                    \n                        \n                                Get the current autosave value\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:154\n                                \n                            \n                    \n                        \n                                Get the page links\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:161\n                                \n                            \n                    \n                        \n                                Get a list of pages\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n\n                \n                    \n                        getblocks()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:168\n                                \n                            \n                    \n                        \n                                Get the blocks for the container\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { Block, NgxEditorJSService } from '@tinynodes/ngx-editorjs/src';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core/src';\nimport { NgxEditorJSDemo } from '@tinynodes/ngx-tinynodes-core/src/lib/stores/app/application.model';\nimport { MenuGroup } from 'apps/ngx-tinynodes/src/app/core/types/app';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, take, takeUntil } from 'rxjs/operators';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\n\n/**\n * The Page Container component provides the main routable page for loading\n * the `ngx-editorjs-demo`\n */\n@Component({\n  selector: 'ngx-form-container',\n  templateUrl: 'form-container.component.html',\n  styleUrls: ['form-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormContainerComponent implements AfterContentInit {\n  /**\n   * Title of the page\n   */\n  public title = 'ngx-editorjs Material Field';\n  /**\n   * Internal onDestroy$ subject\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * The holder ID for this demo\n   */\n  public holder = 'ngx-editorjs-demo';\n\n  /**\n   * The blocks on the page\n   */\n  private blocks$: Observable;\n\n  /**\n   * If the panel is open or not\n   */\n  private panelOpen$ = new BehaviorSubject(true);\n\n  /**\n   * Links for the page\n   */\n  private menu$ = new BehaviorSubject(undefined);\n\n  /**\n   * Gets if the panel is open or not\n   */\n  public get panelOpen() {\n    return this.panelOpen$.asObservable();\n  }\n\n  /**\n   * Toggles the panel state\n   */\n  public togglePanel(value: boolean) {\n    this.panelOpen$.next(value);\n  }\n\n  /**\n   * Autosave state\n   */\n  private autoSave$ = new BehaviorSubject(0);\n\n  /**\n   * Is saved state\n   */\n  private isSaved$ = new BehaviorSubject(true);\n\n  /**\n   * Get `isSaved` state\n   */\n  public get isSaved(): Observable {\n    return this.isSaved$.asObservable();\n  }\n\n  /**\n   * Set the current saved state\n   * @param isSaved The current saved state\n   */\n  public setIsSaved(isSaved: boolean) {\n    this.isSaved$.next(isSaved);\n  }\n\n  /**\n   * Enable autosave, set the value from the autosaveTime\n   * @param autosaveTime Time to set for autosave\n   */\n  public enableAutosave(autosaveTime: number) {\n    this.autoSave$.next(autosaveTime);\n  }\n\n  /**\n   * Disable autosave\n   */\n  public disableAutosave() {\n    this.autoSave$.next(0);\n  }\n\n  /**\n   * Get the current autosave value\n   */\n  public get autosave() {\n    return this.autoSave$.asObservable();\n  }\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editor The Editor service\n   * @param cd The change detection ref\n   * @param fb The form builder\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private app: AppService,\n    private readonly editor: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef,\n    private readonly fb: FormBuilder\n  ) {\n    this.editor\n      .getBlocks(this.holder)\n      .pipe(\n        distinctUntilChanged(),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(blocks => {\n        this.editorForm.patchValue({\n          pageEditor: blocks\n        });\n        this.cd.markForCheck();\n      });\n  }\n\n  /**\n   * Editor form group\n   */\n  public editorForm = this.fb.group({\n    pageName: [''],\n    pageTags: new FormControl([]),\n    pageEditor: new FormControl([])\n  });\n\n  /**\n   * Get the page links\n   */\n  public get menu() {\n    return this.menu$;\n  }\n\n  /**\n   * Get a list of pages\n   */\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n\n  /**\n   * Get the blocks for the container\n   */\n  get blocks(): Observable {\n    return this.blocks$;\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editor.save({ holder: this.holder });\n    this.setIsSaved(true);\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Clear the editor\n   */\n  public clear() {\n    this.editor.clear({ holder: this.holder });\n    this.setIsSaved(true);\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app\n      .getDemoData('ngx-editorjs-demo')\n      .pipe(take(1))\n      .subscribe((data: NgxEditorJSDemo) => {\n        const blocks = [\n          ...data.blocks,\n          {\n            type: 'header',\n            data: {\n              text: 'Material Form Component',\n              level: 1\n            }\n          },\n          {\n            type: 'paragraph',\n            data: {\n              text:\n                'This component is provided as a Material form component.  Here is the configuration for this field on this page:'\n            }\n          },\n          {\n            type: 'code',\n            data: {\n              code: `\n  \n    \n    \n  \n`\n            }\n          },\n          {\n            type: 'paragraph',\n            data: {\n              text: 'When you save the form, you can see the output below of the form instance values'\n            }\n          }\n        ];\n        this.menu$.next(data.links);\n        this.editor.update({ holder: this.holder, blocks });\n        this.setIsSaved(true);\n        this.cd.markForCheck();\n      });\n  }\n\n  /**\n   * After the content has init overide the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Material Field Demo\n      A single page demo of the EditorJS Material Field component\n    \n\n    \n      \n    \n\n    \n      Demo\n      Save\n      Clear\n      \n        Enable Autosave\n      \n       0\" (click)=\"disableAutosave()\">Disable Autosave\n      save\n      \n        Autosave Time\n        \n        seconds\n         0\">\n          EditorJS Autosave is enabled, now when you focus on the component the reactive form value will be updated - You still need to call\n          save to save all the form data.\n      \n    \n    \n      \n        \n          Page Name\n          \n          Enter the name for this page\n        \n        \n          Page Tags\n          \n          Press Enter or , (comma) to add tags\n        \n        \n          Content Editor for {{ editorForm.value.pageName || 'Page Name' }}\n          Click on the editor to active it\n          \n        \n      \n    \n    \n      \n        \n          Output\n          Data from the EditorJS instance\n        \n        \n          {{ editorForm.valueChanges | async | json }}\n        \n      \n    \n     \n  \n\n\n\n  \n    Below is an instance of an {{ title }} EditorJS component. Click on the area and the block tool will appear, or you can\n    just start typing.\n  \n  \n    The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks, list with\n    &lt;ol> / &lt;li> and &lt;code> blocks.\n  \n\n  \n    You can also paste in an &lt;img> url into the editor and it will start the SimpleImage plugin which provides\n    an &lt;img> tag pointing to the image, and with some additional controls.\n  \n  \n    When saving check the output panel below to see the data results.\n  \n\n\n    \n\n    \n                \n                    form-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n.form-content form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-content > * {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Material Field Demo      A single page demo of the EditorJS Material Field component                            Demo      Save      Clear              Enable Autosave             0\" (click)=\"disableAutosave()\">Disable Autosave      save              Autosave Time                seconds         0\">          EditorJS Autosave is enabled, now when you focus on the component the reactive form value will be updated - You still need to call          save to save all the form data.                                      Page Name                    Enter the name for this page                          Page Tags                    Press Enter or , (comma) to add tags                          Content Editor for {{ editorForm.value.pageName || \\'Page Name\\' }}          Click on the editor to active it                                                        Output          Data from the EditorJS instance                          {{ editorForm.valueChanges | async | json }}                               Below is an instance of an {{ title }} EditorJS component. Click on the area and the block tool will appear, or you can    just start typing.        The default block is a  paragraph, you can also add header  -  blocks, list with     /  and  blocks.        You can also paste in an  url into the editor and it will start the SimpleImage plugin which provides    an  tag pointing to the image, and with some additional controls.        When saving check the output panel below to see the data results.  '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Header.html":{"url":"interfaces/Header.html","title":"interface - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header level from 1-6\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderBlock.html":{"url":"interfaces/HeaderBlock.html","title":"interface - HeaderBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a header block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-home-page\n            \n\n            \n                styleUrls\n                home-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                home-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    menu\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts:12\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core/src';\n\n@Component({\n  selector: 'tinynodes-home-page',\n  templateUrl: 'home-page.component.html',\n  styleUrls: ['home-page.component.scss']\n})\nexport class HomePageComponent {\n  constructor(private readonly app: AppService) {}\n\n  public get menu() {\n    return this.app.getMenu('main-links');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Welcome to the Tinynodes Demo Site\n      A collection of Angular and TypeScript libraries for the web\n    \n    \n      This site contains demos of components released under @tinynodes on npm, you can find a list of them on the menu to the left.\n      You can also visit the sites below for additional documentation and code:\n      \n        \n          \n            {{ menu.label }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    home-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome to the Tinynodes Demo Site      A collection of Angular and TypeScript libraries for the web              This site contains demos of components released under @tinynodes on npm, you can find a list of them on the menu to the left.      You can also visit the sites below for additional documentation and code:                                    {{ menu.label }}                              '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        caption\n                                \n                                \n                                            Optional\n                                        stretched\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        withBackground\n                                \n                                \n                                            Optional\n                                        withBorder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional image caption\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stretched\n                                    \n                                \n                                \n                                    \n                                        stretched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional stretch property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBackground\n                                    \n                                \n                                \n                                    \n                                        withBackground:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional background property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBorder\n                                    \n                                \n                                \n                                    \n                                        withBorder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional border property\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageBlock.html":{"url":"interfaces/ImageBlock.html","title":"interface - ImageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a image block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/List.html":{"url":"interfaces/List.html","title":"interface - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a list block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List items of type T\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list style\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListBlock.html":{"url":"interfaces/ListBlock.html","title":"interface - ListBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                The default list block is provided by the EditorJS list plugin\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/material.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This internal module loads the required features for Angular Material\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport {\n  MatSidenavModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatListModule,\n  MatCardModule,\n  MatButtonModule\n} from '@angular/material';\n\n/**\n * This internal module loads the required features for Angular Material\n */\n@NgModule({\n  imports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule, MatButtonModule],\n  exports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule, MatButtonModule]\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuGroup.html":{"url":"interfaces/MenuGroup.html","title":"interface - MenuGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu group describes a set of menu items with a key and optional title\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        key\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The menu items, can contain one or more items with children\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the menu (e.g. sidebar, topnav, etc)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional title to render in the menu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuGroup-1.html":{"url":"interfaces/MenuGroup-1.html","title":"interface - MenuGroup-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu group describes a set of menu items with a key and optional title\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        key\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The menu items, can contain one or more items with children\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the menu (e.g. sidebar, topnav, etc)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional title to render in the menu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu item in the Tinynodes app\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        link\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any children to render in the menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description of the item, used for title, aria, etc\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon for the menu item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display label for the app\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     RouterLink | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterLink | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {RouterLink} for the menu item or a string url\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem-1.html":{"url":"interfaces/MenuItem-1.html","title":"interface - MenuItem-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu item in the Tinynodes app\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        link\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any children to render in the menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description of the item, used for title, aria, etc\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon for the menu item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display label for the app\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     RouterLink | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterLink | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {RouterLink} for the menu item or a string url\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockEditorJS.html":{"url":"classes/MockEditorJS.html","title":"class - MockEditorJS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockEditorJS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                destroy\n                            \n                            \n                                saver\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EditorJSConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/shared.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EditorJSConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blocks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { EditorJSConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  constructor(private config: EditorJSConfig) {\n    this.version = 'test';\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockNgZone.html":{"url":"injectables/MockNgZone.html","title":"injectable - MockNgZone","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockNgZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/ng-zone-mock.ts\n        \n\n            \n                Description\n            \n            \n                A mock implementation of NgZone.\n\n            \n\n            \n                Extends\n            \n            \n                        NgZone\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onStable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                            \n                                runOutsideAngular\n                            \n                            \n                                simulateZoneExit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            run\n                        \n                        \n                    \n                \n            \n            \n                \nrun(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runOutsideAngular\n                        \n                        \n                    \n                \n            \n            \n                \nrunOutsideAngular(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            simulateZoneExit\n                        \n                        \n                    \n                \n            \n            \n                \nsimulateZoneExit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onStable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter(false)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable, NgZone } from '@angular/core';\n\n/**\n * A mock implementation of {@link NgZone}.\n */\n@Injectable()\nexport class MockNgZone extends NgZone {\n  onStable: EventEmitter = new EventEmitter(false);\n\n  constructor() {\n    super({ enableLongStackTrace: false });\n  }\n\n  run(fn: Function): any {\n    return fn();\n  }\n\n  runOutsideAngular(fn: Function): any {\n    return fn();\n  }\n\n  simulateZoneExit(): void {\n    this.onStable.emit(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockPlugin.html":{"url":"classes/MockPlugin.html","title":"class - MockPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            BasePlugin\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                            \n                                shortcut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shortcut\n                        \n                        \n                    \n                \n            \n            \n                \nshortcut()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { EditorJSConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  constructor(private config: EditorJSConfig) {\n    this.version = 'test';\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavBarComponent.html":{"url":"components/NavBarComponent.html","title":"component - NavBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts\n\n\n    \n        Description\n    \n    \n        Internal NavBar component for the Tinynodes application, provides\ncontrol over the sidebar toggle and displays the main menu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-nav-bar\n            \n\n            \n                styleUrls\n                nav-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                nav-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                menu\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : 'Navbar Component'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:18\n                            \n                        \n                \n                    \n                        Set the title of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggleSidebar\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:27\n                            \n                        \n                \n                    \n                        Get an event when the sidebar toggle has been pressed\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MenuGroup } from '@tinynodes/ngx-tinynodes-core/src';\n\n/**\n * Internal NavBar component for the Tinynodes application, provides\n * control over the sidebar toggle and displays the main menu\n */\n@Component({\n  selector: 'tinynodes-nav-bar',\n  templateUrl: 'nav-bar.component.html',\n  styleUrls: ['nav-bar.component.scss']\n})\nexport class NavBarComponent {\n  /**\n   * Set the title of the component\n   */\n  @Input()\n  title = 'Navbar Component';\n\n  @Input()\n  menu: MenuGroup;\n\n  /**\n   * Get an event when the sidebar toggle has been pressed\n   */\n  @Output()\n  toggleSidebar = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    menu\n  \n  &nbsp;\n  \n    {{ title }}\n  \n  \n    \n      \n        \n          {{ menuItem.label }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    nav-bar.component.scss\n                \n                a {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu           {{ title }}                                {{ menuItem.label }}                    '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSComponent.html":{"url":"components/NgxEditorJSComponent.html","title":"component - NgxEditorJSComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts\n\n\n    \n        Description\n    \n    \n        This component is provided as a shortcut to using EditorJS in your\napplication. The attributes are optional and without a default component\nwill be created\n\n    \n\n    \n        Extends\n    \n    \n                EditorJSBaseComponent\n    \n\n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs\n            \n\n            \n                styleUrls\n                editorjs.component.scss\n            \n\n\n\n            \n                templateUrl\n                editorjs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editor\n                            \n                            \n                                    Public\n                                    Readonly\n                                service\n                            \n                            \n                                    Protected\n                                _value\n                            \n                            \n                                onChange\n                            \n                            \n                                    Private\n                                onDestroy$\n                            \n                            \n                                onTouch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getChanged\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                includeTools\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructs the Editor component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The NgxEditorJSService instance\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:34\n\n                            \n                        \n                \n                    \n                        Sets if the EditorJS component will request autofocus in the browser\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:84\n\n                            \n                        \n                \n                    \n                        If set, when the EditorJS save is called the Observable of blocks will be updated,\nif set to false on the change Observable will be updated\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:64\n\n                            \n                        \n                \n                    \n                        First Block placeholder\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:90\n\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:40\n\n                            \n                        \n                \n                    \n                        Sets if the toolbar will be shown in EditorJS\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:46\n\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        includeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:77\n\n                            \n                        \n                \n                    \n                        A string array of tools that will be included in this instance, if empty\nall tools will be included\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:52\n\n                            \n                        \n                \n                    \n                        The name of the initial block (default \"paragraph\")\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:58\n\n                            \n                        \n                \n                    \n                        Height of Editor's bottom area that allows to set focus on the last Block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:70\n\n                            \n                        \n                \n                    \n                        Define default sanitizer configuration\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getChanged()\n                \n            \n\n\n            \n                \n                    Inherited from         EditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         EditorJSBaseComponent:151\n\n                \n            \n\n\n            \n                \n                    Get the changed status for the EditorJS instance\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         EditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         EditorJSBaseComponent:136\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: (blocks: Block[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         EditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         EditorJSBaseComponent:125\n\n                \n            \n\n\n            \n                \n                    Register on Change for forms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: (event: MouseEvent) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         EditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         EditorJSBaseComponent:132\n\n                \n            \n\n\n            \n                \n                    registerOnTouched for forms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(blocks: Block[])\n                \n            \n\n\n            \n                \n                    Inherited from         EditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         EditorJSBaseComponent:118\n\n                \n            \n\n\n            \n                \n                    Form Write Values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxEditorJSDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(NgxEditorJSDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts:24\n                            \n                        \n\n                \n                    \n                        Access to the underlying editor directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts:30\n                            \n                        \n\n                \n                    \n                        The NgxEditorJSService instance\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:102\n\n                            \n                        \n\n                \n                    \n                        Form field value if used as a field component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:112\n\n                            \n                        \n\n                \n                    \n                        Field onChange method\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:29\n\n                            \n                        \n\n                \n                    \n                        Private destroy subject\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:107\n\n                            \n                        \n\n                \n                    \n                        Field on touch method\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { EditorJSBaseComponent } from '../base/container.class';\n\n/**\n * This component is provided as a shortcut to using EditorJS in your\n * application. The attributes are optional and without a default component\n * will be created\n *\n * @example\n * \n */\n@Component({\n  selector: 'ngx-editorjs',\n  templateUrl: 'editorjs.component.html',\n  styleUrls: ['editorjs.component.scss']\n})\nexport class NgxEditorJSComponent extends EditorJSBaseComponent {\n  /**\n   * Access to the underlying editor directive\n   */\n  @ViewChild(NgxEditorJSDirective) public editor: NgxEditorJSDirective;\n\n  /**\n   * Constructs the Editor component\n   * @param service The NgxEditorJSService instance\n   */\n  constructor(public readonly service: NgxEditorJSService) {\n    super(service);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    editorjs.component.scss\n                \n                :host {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n}\n\n.editor {\n  flex: 1;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: 2px solid darkgray;\n  border-radius: 1em;\n  text-align: left;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSConfig.html":{"url":"interfaces/NgxEditorJSConfig.html","title":"interface - NgxEditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                The configuration option that can be passed to the NgxEditorJSModule.forRoot method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:         EditorJSConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EditorJSConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration options for EditorJS\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  placeholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * Configuration options for `EditorJS`\n   */\n  editorjs?: EditorJSConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemo.html":{"url":"interfaces/NgxEditorJSDemo.html","title":"interface - NgxEditorJSDemo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for ngx-editorjs-demo data\nTODO: This should be moved\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        links\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The initial blocks for the demo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                    \n                                \n                                \n                                    \n                                        links:         MenuGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuGroup\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Links for this demo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemo-1.html":{"url":"interfaces/NgxEditorJSDemo-1.html","title":"interface - NgxEditorJSDemo-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for ngx-editorjs-demo data\nTODO: This should be moved\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The initial blocks for the demo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemoData.html":{"url":"interfaces/NgxEditorJSDemoData.html","title":"interface - NgxEditorJSDemoData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demo data for ngx-editorjs-demo\n\n            \n\n            \n                Extends\n            \n            \n                        DemoData\n            \n\n\n\n\n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemoData-1.html":{"url":"interfaces/NgxEditorJSDemoData-1.html","title":"interface - NgxEditorJSDemoData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demo data for ngx-editorjs-demo\n\n            \n\n            \n                Extends\n            \n            \n                        DemoData\n            \n\n\n\n\n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSDemoHomeComponent.html":{"url":"components/NgxEditorJSDemoHomeComponent.html","title":"component - NgxEditorJSDemoHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSDemoHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/home-container/home-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs-demo-home\n            \n\n            \n                styleUrls\n                home-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                home-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-editorjs-demo-home',\n  templateUrl: 'home-container.component.html',\n  styleUrls: ['home-container.component.scss']\n})\nexport class NgxEditorJSDemoHomeComponent {}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A collection of demos for the @tinynodes/ngx-editor module with example code and links to API docs.\n    \n    \n      \n        The demos in this section are for the\n        @tinynodes/ngx-editorjs module.\n      \n      \n        Each demo provides a way to use the component in an application or form in Angular. It can be used as a basic component, used with\n        Angular forms or Material forms.\n      \n    \n    \n      Angular Component Demo\n      Angular Material Form Demo\n    \n  \n\n\n    \n\n    \n                \n                    home-container.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A collection of demos for the @tinynodes/ngx-editor module with example code and links to API docs.                      The demos in this section are for the        @tinynodes/ngx-editorjs module.                    Each demo provides a way to use the component in an application or form in Angular. It can be used as a basic component, used with        Angular forms or Material forms.                    Angular Component Demo      Angular Material Form Demo      '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSDemoHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSDemoInfoComponent.html":{"url":"components/NgxEditorJSDemoInfoComponent.html","title":"component - NgxEditorJSDemoInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSDemoInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs-demo-info\n            \n\n            \n                styleUrls\n                demo-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                demo-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                panelOpen$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                togglePanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                menu\n                            \n                            \n                                panelOpen\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isPanelOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:26\n                            \n                        \n                \n                    \n                        The menu group for the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        panelOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:20\n                            \n                        \n                \n                    \n                        Sets the panel open state\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:32\n                            \n                        \n                \n                    \n                        The title of the component\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            togglePanel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    togglePanel(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:53\n                \n            \n\n\n            \n                \n                    Toggles the panel state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            panelOpen$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:14\n                            \n                        \n\n                \n                    \n                        If the panel is open or not\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isPanelOpen\n                    \n                \n\n                \n                    \n                        getisPanelOpen()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:46\n                                \n                            \n                    \n                        \n                                Gets if the panel is open or not\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { MenuGroup } from '../../types/app';\n\n@Component({\n  selector: 'ngx-editorjs-demo-info',\n  templateUrl: 'demo-info.component.html',\n  styleUrls: ['demo-info.component.scss']\n})\nexport class NgxEditorJSDemoInfoComponent implements OnInit {\n  /**\n   * If the panel is open or not\n   */\n  private panelOpen$ = new BehaviorSubject(true);\n\n  /**\n   * Sets the panel open state\n   */\n  @Input()\n  panelOpen: boolean;\n\n  /**\n   * The menu group for the component\n   */\n  @Input()\n  menu: MenuGroup;\n\n  /**\n   * The title of the component\n   */\n  @Input()\n  title: string;\n\n  @Input()\n  body: TemplateRef;\n\n  ngOnInit() {\n    if (typeof this.panelOpen !== 'undefined') {\n      this.panelOpen$.next(this.panelOpen);\n    }\n  }\n\n  /**\n   * Gets if the panel is open or not\n   */\n  public get isPanelOpen(): Observable {\n    return this.panelOpen$.asObservable();\n  }\n\n  /**\n   * Toggles the panel state\n   */\n  public togglePanel(value: boolean): void {\n    this.panelOpen$.next(value);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ title }}\n    Details on usage and links - {{ (isPanelOpen | async) ? 'Click To Close' : 'Click To View' }}\n  \n  \n    \n      \n        \n          How To Use...\n          Instructions on the demo below\n        \n        \n          \n        \n      \n    \n    \n      \n        \n          Links\n          Links for all things related to @tinynodes/{{ title }}\n        \n        \n          \n            \n              {{ link.label }}\n            \n          \n        \n      \n    \n  \n\n\n\n  This is where some demo information goes\n\n\n    \n\n    \n                \n                    demo-info.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.demo-info {\n  width: 100%;\n  height: calc(300px);\n  overflow: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title }}    Details on usage and links - {{ (isPanelOpen | async) ? \\'Click To Close\\' : \\'Click To View\\' }}                                How To Use...          Instructions on the demo below                                                                        Links          Links for all things related to @tinynodes/{{ title }}                                                    {{ link.label }}                                            This is where some demo information goes'\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSDemoInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxEditorJSDirective.html":{"url":"directives/NgxEditorJSDirective.html","title":"directive - NgxEditorJSDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                touched$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createConfig\n                            \n                            \n                                    Public\n                                createEditor\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                includeTools\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    element\n                                \n                                \n                                    service\n                                \n                                \n                                    touched\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:105\n                            \n                        \n\n                \n                    \n                            Creates the directive instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The element the directive is attached to\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:47\n                            \n                        \n                \n                    \n                        Sets if the EditorJS component will request autofocus in the browser\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:91\n                            \n                        \n                \n                    \n                        If set, when the EditorJS save is called the Observable of blocks will be updated,\nif set to false on the change Observable will be updated\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:71\n                            \n                        \n                \n                    \n                        First Block placeholder\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:97\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:53\n                            \n                        \n                \n                    \n                        Sets if the toolbar will be shown in EditorJS\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:41\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        includeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:84\n                            \n                        \n                \n                    \n                        A string array of tools that will be included in this instance, if empty\nall tools will be included\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:59\n                            \n                        \n                \n                    \n                        The name of the initial block (default \"paragraph\")\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:65\n                            \n                        \n                \n                    \n                        Height of Editor's bottom area that allows to set focus on the last Block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:77\n                            \n                        \n                \n                    \n                        Define default sanitizer configuration\n\n                    \n                \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:103\n                \n            \n\n\n            \n                \n                    Host click listener\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createConfig()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:200\n                \n            \n\n\n            \n                \n                    Create a configuration for EditorJS\n\n\n                    \n                        Returns :         EditorJSConfig\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(config?: EditorJSConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:146\n                \n            \n\n\n            \n                \n                    Creates an EditorJS instance for this directive\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                EditorJSConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Configuration for this instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:181\n                \n            \n\n\n            \n                \n                    After content is created, we create the editor instance\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:162\n                \n            \n\n\n            \n                \n                    When ngOnChanges are called, there are two paths\nIf it's just blocks, then the service is updated with the blocks\nIf it's any other property it means we create a new editor, as this\nis a destructive process we also need to wait for an existing editor\nto be ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes on the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:193\n                \n            \n\n\n            \n                \n                    Destroy the editor and subjects for this service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            touched$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:33\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:117\n                                \n                            \n                    \n                        \n                                Get the EditorJS instance for this directive\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:124\n                                \n                            \n                    \n                        \n                                Get the element for the directive\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:131\n                                \n                            \n                    \n                        \n                                Get the NgxEditorJSService for this directive\n\n\n                                \n                                    Returns :         NgxEditorJSService\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n\n                \n                    \n                        gettouched()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:138\n                                \n                            \n                    \n                        \n                                Get the touched state\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Renderer2,\n  HostListener\n} from '@angular/core';\nimport EditorJS, { SanitizerConfig } from '@editorjs/editorjs';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { createEditorJSConfig } from '../config/editor-config';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\nimport { EditorJSConfig } from '../types/config';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * \n */\n@Directive({\n  selector: '[ngxEditorJS]'\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterContentInit {\n  private touched$ = new BehaviorSubject(false);\n\n  private id: string;\n\n  /**\n   * The ID of the dom element that will hold the editor\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * Sets if the `EditorJS` component will request autofocus in the browser\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Sets if the toolbar will be shown in `EditorJS`\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  @Input()\n  public initialBlock: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  @Input()\n  public minHeight: number;\n\n  /**\n   * First Block placeholder\n   */\n  @Input()\n  public blockPlaceholder: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  @Input()\n  public sanitizer: SanitizerConfig;\n\n  /**\n   * A string array of tools that will be included in this instance, if empty\n   * all tools will be included\n   */\n  @Input()\n  public includeTools: string[] = [];\n\n  /**\n   * If set, when the `EditorJS` save is called the `Observable` of blocks will be updated,\n   * if set to `false` on the change `Observable` will be updated\n   */\n  @Input()\n  public autosave: boolean;\n\n  /**\n   * An initial set of blocks to render in the component\n   */\n  @Input()\n  public blocks: Block[] = [];\n\n  /**\n   * Host click listener\n   */\n  @HostListener('click', ['$event'])\n  onclick() {\n    this.touched$.next(true);\n  }\n\n  /**\n   * Creates the directive instance\n   * @param el The element the directive is attached to\n   * @param editorService The editor service\n   */\n  constructor(private readonly el: ElementRef, private readonly editorService: NgxEditorJSService) {}\n\n  /**\n   * Get the `EditorJS` instance for this directive\n   */\n  public get editor(): Observable {\n    return this.service.getEditor(this.id);\n  }\n\n  /**\n   * Get the element for the directive\n   */\n  public get element() {\n    return this.el.nativeElement;\n  }\n\n  /**\n   * Get the `NgxEditorJSService` for this directive\n   */\n  public get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  /**\n   * Get the touched state\n   */\n  public get touched() {\n    return this.touched$.asObservable();\n  }\n\n  /**\n   * Creates an `EditorJS` instance for this directive\n   * @param config Configuration for this instance\n   */\n  public createEditor(config?: EditorJSConfig): void {\n    this.service.createEditor({\n      config,\n      includeTools: this.includeTools,\n      autoSave: this.autosave\n    });\n  }\n\n  /**\n   * When ngOnChanges are called, there are two paths\n   * If it's just blocks, then the service is updated with the blocks\n   * If it's any other property it means we create a new editor, as this\n   * is a destructive process we also need to wait for an existing editor\n   * to be ready\n   * @param changes Changes on the component\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.blocks && !changes.blocks.firstChange) {\n      return this.service.update({ holder: this.id, blocks: changes.blocks.currentValue });\n    }\n    const changesKeys = Object.keys(changes);\n    if (\n      this.id &&\n      // Ignore placeholder change\n      ['autofocus', 'holder', 'hideToolbar', 'initialBlock', 'minHeight'].find(key => {\n        return changesKeys.includes(key);\n      })\n    ) {\n      this.createEditor(this.createConfig());\n    }\n  }\n\n  /**\n   * After content is created, we create the editor instance\n   */\n  ngAfterContentInit() {\n    this.id = this.el.nativeElement.id || this.holder;\n\n    if (!this.id) {\n      throw new Error('Error in NgxEditorJSDirective::ngAfterContentInit - Directive element has no ID');\n    }\n    this.createEditor(this.createConfig());\n  }\n\n  /**\n   * Destroy the editor and subjects for this service\n   */\n  ngOnDestroy() {\n    this.service.destroy({ holder: this.id });\n  }\n\n  /**\n   * Create a configuration for EditorJS\n   */\n  private createConfig(): EditorJSConfig {\n    const config: EditorJSConfig = createEditorJSConfig({\n      holder: this.id,\n      autofocus: this.autofocus,\n      hideToolbar: this.hideToolbar,\n      initialBlock: this.initialBlock,\n      placeholder: this.blockPlaceholder,\n      minHeight: this.minHeight,\n      sanitizer: this.sanitizer\n    });\n    if (this.blocks && this.blocks.length > 0) {\n      config.data = {\n        time: Date.now(),\n        version: EditorJS.version,\n        blocks: this.blocks\n      };\n    }\n    return config;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSEffects.html":{"url":"injectables/NgxEditorJSEffects.html","title":"injectable - NgxEditorJSEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $save\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $save\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(EditorJSActionTypes.SaveStart),\n    map((action: SaveStart) => {\n      this.editorService.save(action.payload.holder);\n      return action;\n    }),\n    withLatestFrom([\n      map((action: SaveStart) => action),\n      (action: SaveStart): Observable => this.editorService.getBlocks(action.payload.holder)\n    ]),\n    mergeMap(([action, blocks]) => {\n      blocks.subscribe();\n      return new SaveEnd({\n        holder: action.payload.holder,\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: blocks\n        }\n      });\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { NgxEditorJSService, Block } from '@tinynodes/ngx-editorjs';\nimport { EditorJSActionTypes, SaveStart, SaveEnd } from '../actions/ngx-editorjs.actions';\nimport { switchMap, map, withLatestFrom, tap, mergeMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport EditorJS from '@editorjs/editorjs';\n\n@Injectable()\nexport class NgxEditorJSEffects {\n  constructor(private readonly actions$: Actions, private readonly editorService: NgxEditorJSService) {}\n\n  @Effect({ dispatch: false })\n  $save = this.actions$.pipe(\n    ofType(EditorJSActionTypes.SaveStart),\n    map((action: SaveStart) => {\n      this.editorService.save(action.payload.holder);\n      return action;\n    }),\n    withLatestFrom([\n      map((action: SaveStart) => action),\n      (action: SaveStart): Observable => this.editorService.getBlocks(action.payload.holder)\n    ]),\n    mergeMap(([action, blocks]) => {\n      blocks.subscribe();\n      return new SaveEnd({\n        holder: action.payload.holder,\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: blocks\n        }\n      });\n    })\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSModule.html":{"url":"modules/NgxEditorJSModule.html","title":"module - NgxEditorJSModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\n\nEditorJSBaseComponent\n\nEditorJSBaseComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nEditorJSBaseComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nEditorJSBaseComponent \n\nEditorJSBaseComponent \n\nEditorJSBaseComponent  -->\n\nNgxEditorJSModule->EditorJSBaseComponent \n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorJSInstanceService\n\nNgxEditorJSInstanceService\n\nNgxEditorJSModule -->\n\nNgxEditorJSInstanceService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\nNgxEditorJSModule -->\n\nNgxEditorJSPluginService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The @tinynodes/ngx-editorjs module provides a collection of features to allow\nany Angular app to use and control an EditorJS instance\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application.\nThe forRoot method takes an optional NgxEditorJSConfig config, this will provide a\ndefault instance.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EditorJSBaseComponent\n                        \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSInstanceService\n                        \n                        \n                            NgxEditorJSPluginService\n                        \n                        \n                            NgxEditorJSService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EditorJSBaseComponent\n                        \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:62\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule, MatInputModule } from '@angular/material';\nimport EditorJS from '@editorjs/editorjs';\nimport { createModuleConfig } from './config/module-config';\nimport { EditorJSBaseComponent } from './containers/base/container.class';\nimport { NgxEditorJSMatFieldComponent } from './containers/editorjs-mat-field/editorjs-mat-field.component';\nimport { NgxEditorJSComponent } from './containers/editorjs/editorjs.component';\nimport { NgxEditorJSDirective } from './directives/ngx-editorjs.directive';\nimport { EditorJSInstance, EDITORJS_MODULE_IMPORT, NgxEditorJSInstanceService } from './services/editorjs-injector';\nimport { NgxEditorJSService } from './services/editorjs.service';\nimport { NgxEditorJSPluginService } from './services/plugins.service';\nimport { FOR_ROOT_OPTIONS_TOKEN, NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from './types/config';\n\n/**\n * Factory function to return the EditorJS base class\n */\nexport function createEditorJSInstance(editorjs: any) {\n  return editorjs;\n}\n\n/**\n * The `@tinynodes/ngx-editorjs` module provides a collection of features to allow\n * any Angular app to use and control an [EditorJS](http://editorjs.io) instance\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application.\n * The `forRoot` method takes an optional `NgxEditorJSConfig` config, this will provide a\n * default instance.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, MatInputModule, MatFormFieldModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective, EditorJSBaseComponent],\n  exports: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective, EditorJSBaseComponent],\n  providers: [\n    NgxEditorJSService,\n    NgxEditorJSPluginService,\n    NgxEditorJSInstanceService,\n    {\n      provide: EDITORJS_MODULE_IMPORT,\n      useValue: EditorJS\n    },\n    {\n      provide: EditorJSInstance,\n      useFactory: createEditorJSInstance,\n      deps: [EDITORJS_MODULE_IMPORT]\n    }\n  ]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NGX_EDITORJS_CONFIG,\n          useFactory: createModuleConfig,\n          deps: [FOR_ROOT_OPTIONS_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSPluginService.html":{"url":"injectables/NgxEditorJSPluginService.html","title":"injectable - NgxEditorJSPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/plugins.service.ts\n        \n\n            \n                Description\n            \n            \n                The plugin service provides a singleton to store all plugins injected into the application\nand makes them available for all instances of EditorJS\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            // To import into your own application import barred-o import\nimport { ɵNgxEditorJSPluginService as NgxEditorJSPluginService } from '\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                pluginsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getTools\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    plugins\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userPlugins: PluginConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:19\n                            \n                        \n\n                \n                    \n                            When the class is initialized the initial plugins and any user plugins\nwill be passed in and merged and stored in the config map\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userPlugins\n                                                  \n                                                        \n                                                                        PluginConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User plugins injected into the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(key: string, plugin: BasePlugin)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:36\n                \n            \n\n\n            \n                \n                    Add a plugin to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the map to store the plugin\n\n                                    \n                                \n                                \n                                    plugin\n                                    \n                                                BasePlugin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The plugin instance to add to the service\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:53\n                \n            \n\n\n            \n                \n                    Get a single plugin from the map\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasePlugin\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTools(exclude: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:68\n                \n            \n\n\n            \n                \n                    Returns a map of tools to be initialized by the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    exclude\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        Optional array of keys to exclude from the map\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ToolSettingsMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:44\n                \n            \n\n\n            \n                \n                    Remove a plugin from the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pluginsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PluginConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:19\n                            \n                        \n\n                \n                    \n                        Object map of the plugin configurations\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        plugins\n                    \n                \n\n                \n                    \n                        getplugins()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:60\n                                \n                            \n                    \n                        \n                                Returns a map of all the plugins registered with this service\n\n\n                                \n                                    Returns :         PluginConfig\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BasePlugin, PluginConfig, ToolSettingsMap, UserPlugins } from '../types/plugins';\n\n/**\n * The plugin service provides a singleton to store all plugins injected into the application\n * and makes them available for all instances of `EditorJS`\n *\n * @example\n * // To import into your own application import barred-o import\n * import { ɵNgxEditorJSPluginService as NgxEditorJSPluginService } from '@tinynodes/ngx-editorjs';\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSPluginService {\n  /**\n   * Object map of the plugin configurations\n   */\n  private pluginsMap: PluginConfig = {};\n\n  /**\n   * When the class is initialized the initial plugins and any user plugins\n   * will be passed in and merged and stored in the config map\n   * @param initialPlugins Default plugins produced by the module\n   * @param userPlugins User plugins injected into the application\n   */\n  constructor(@Inject(UserPlugins) userPlugins: PluginConfig) {\n    Object.entries({ ...userPlugins }).forEach(([key, tool]) => this.add(key, tool));\n  }\n\n  /**\n   * Add a plugin to the store\n   * @param key The key for the map to store the plugin\n   * @param plugin The plugin instance to add to the service\n   */\n  public add(key: string, plugin: BasePlugin) {\n    this.pluginsMap[key] = plugin;\n  }\n\n  /**\n   * Remove a plugin from the store\n   * @param key\n   */\n  public remove(key: string) {\n    this.pluginsMap[key] = null;\n    delete this.pluginsMap[key];\n  }\n\n  /**\n   * Get a single plugin from the map\n   * @param name\n   */\n  public get(key: string): BasePlugin {\n    return this.pluginsMap[key];\n  }\n\n  /**\n   * Returns a map of all the plugins registered with this service\n   */\n  public get plugins(): PluginConfig {\n    return this.pluginsMap;\n  }\n\n  /**\n   * Returns a map of tools to be initialized by the editor\n   * @param exclude Optional array of keys to exclude from the map\n   */\n  public getTools(exclude: string[] = []): ToolSettingsMap {\n    return Object.entries(this.pluginsMap)\n      .filter(([key]) => {\n        return !exclude.includes(key);\n      })\n      .reduce((finalTools, [key, plugin]) => {\n        if (plugin.shortcut) {\n          return {\n            [key]: {\n              class: plugin.plugin(),\n              shortcut: plugin.shortcut()\n            },\n            ...finalTools\n          };\n        } else {\n          return { [key]: plugin.plugin(), ...finalTools };\n        }\n      }, {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSService.html":{"url":"injectables/NgxEditorJSService.html","title":"injectable - NgxEditorJSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSService provides control EditorJS instances via Angular.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                editorActions$\n                            \n                            \n                                    Private\n                                onDestroy$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                    Async\n                                createEditor\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                getBlocks\n                            \n                            \n                                    Public\n                                getChanged\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                hasChanged\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editorActions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgxEditorJSConfig, editorService: NgxEditorJSInstanceService, plugins: NgxEditorJSPluginService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:90\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSInstanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        NgxEditorJSPluginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:198\n                \n            \n\n\n            \n                \n                    Clears all blocks from an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(options: CreateEditorJSOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:125\n                \n            \n\n\n            \n                \n                    This method creates a new EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CreateEditorJSOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:208\n                \n            \n\n\n            \n                \n                    Destroy the EditorJS instance\nIt also calls the maps and sets their values back to their defaults and then\ncompletes and destroys them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBlocks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBlocks(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:148\n                \n            \n\n\n            \n                \n                    Get an observable of the blocks for an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getChanged(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:166\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current timestamp of the last change\nthis can be subscribed to before calling the createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:140\n                \n            \n\n\n            \n                \n                    Get an EditorJS instance\nSee the EditorJS API docs for more details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasChanged(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:157\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current ready state, this can be subscribed to before calling\nthe createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:190\n                \n            \n\n\n            \n                \n                    Calls the EditorJS save method which returns an OutputData object.\nFrom this the service updates the blocks map and change map values\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:180\n                \n            \n\n\n            \n                \n                    This method updates the blocks within the EditorJS instance.\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            editorActions$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({\n    action: ''\n  })\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:81\n                            \n                        \n\n                \n                    \n                        Internal editor action state\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:77\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editorActions\n                    \n                \n\n                \n                    \n                        geteditorActions()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:88\n                                \n                            \n                    \n                        \n                                Editor action stream\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Block } from '../types/blocks';\nimport { EditorJSConfig, NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { NgxEditorJSInstanceService } from './editorjs-injector';\nimport { NgxEditorJSPluginService } from './plugins.service';\n\n/**\n * Interface describing an action to trigger EditorJS\n */\nexport interface EditorJSAction {\n  /**\n   * The name of the action to trigger\n   */\n  action: string;\n\n  /**\n   * The payload for the action \n   */\n  payload?: T;\n}\n\n/**\n * Supported actions by the API\n */\nexport enum EditorJSActionTypes {\n  /**\n   * Create a new editor\n   */\n  CreateEditor = 'createEditor',\n\n  /**\n   * Update an editor instance\n   */\n  UpdateEditor = 'updateEditor',\n  /**\n   * Clear a editor instance\n   */\n  ClearEditor = 'clearEditor',\n  /**\n   * Destroy an Editor instance\n   */\n  DestroyEditor = 'destroyEditor',\n  /**\n   * Save the blocks in an editor instance\n   */\n  SaveEditor = 'saveEditor'\n}\n\n/**\n * EditorJS options\n */\nexport interface CreateEditorJSOptions {\n  /**\n   * Configuration\n   */\n  config: EditorJSConfig;\n  /**\n   * Tools to include, Optional - if not set all tools will be used\n   */\n  includeTools?: string[];\n  /**\n   * Autosave on change, is set to false\n   */\n  autoSave?: boolean;\n}\n\n/**\n * The NgxEditorJSService provides control EditorJS instances via Angular.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  private onDestroy$ = new Subject();\n  /**\n   * Internal editor action state\n   */\n  private readonly editorActions$ = new BehaviorSubject({\n    action: ''\n  });\n\n  /**\n   * Editor action stream\n   */\n  public get editorActions() {\n    return this.editorActions$.pipe(filter(action => action.action !== ''));\n  }\n\n  constructor(\n    @Inject(NGX_EDITORJS_CONFIG) private config: NgxEditorJSConfig,\n    private readonly editorService: NgxEditorJSInstanceService,\n    private readonly plugins: NgxEditorJSPluginService\n  ) {\n    this.editorActions.pipe(takeUntil(this.onDestroy$)).subscribe(editorAction => {\n      switch (editorAction.action) {\n        case EditorJSActionTypes.CreateEditor: {\n          this.createEditor(editorAction.payload);\n        }\n        case EditorJSActionTypes.ClearEditor: {\n          this.clear(editorAction.payload);\n        }\n        case EditorJSActionTypes.DestroyEditor: {\n          this.destroy(editorAction.payload);\n        }\n        case EditorJSActionTypes.SaveEditor: {\n          this.save(editorAction.payload);\n        }\n        case EditorJSActionTypes.UpdateEditor: {\n          this.update(editorAction.payload);\n        }\n      }\n    });\n  }\n\n  /**\n   * This method creates a new EditorJS instance\n   * @param holder The ID of the holder of the instance\n   * @param blocks Optional initial set of blocks to render in the editor\n   * @param excludeTools String array of keys to not include with this editor\n   * @param autoSave When an instance changes we update the block map, set to false if you want to disable\n   */\n  public async createEditor(options: CreateEditorJSOptions): Promise {\n    const editorConfig: EditorConfig = {\n      ...this.config.editorjs,\n      ...options.config,\n      tools: this.plugins.getTools(options.includeTools)\n    };\n\n    await this.editorService.createInstance({ editorConfig });\n  }\n\n  /**\n   * Get an `EditorJS` instance\n   * See the [EditorJS API](https://editorjs.io/api) docs for more details\n   * @param holder The ID of the holder of the instance\n   */\n  public getEditor(holder: string): Observable {\n    return this.editorService.getInstance(holder).pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Get an observable of the blocks for an `EditorJS` instance\n   * @param holder The ID of the holder of the instance\n   */\n  public getBlocks(holder: string): Observable {\n    return this.editorService.getBlocks(holder);\n  }\n\n  /**\n   * Returns an `Observable` of the current ready state, this can be subscribed to before calling\n   * the `createEditor` method\n   * @param holder\n   */\n  public isReady(holder: string): Observable {\n    return this.editorService.getReady(holder);\n  }\n\n  /**\n   * Returns an `Observable` of the current timestamp of the last change\n   * this can be subscribed to before calling the `createEditor` method\n   * @param holder\n   */\n  public getChanged(holder: string): Observable {\n    return this.editorService.getChanged(holder);\n  }\n\n  public hasChanged(holder: string) {\n    this.editorService.onChange(holder);\n  }\n\n  /**\n   * This method updates the blocks within the `EditorJS` instance.\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   * @param blocks The array of `Block` elements to render\n   */\n  public update({ holder, blocks }: { holder: string; blocks: Block[] }) {\n    this.editorService.update(holder, blocks);\n  }\n\n  /**\n   * Calls the `EditorJS` save method which returns an `OutputData` object.\n   * From this the service updates the blocks map and change map values\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   */\n  public save({ holder }: { holder: string }): void {\n    this.editorService.save(holder);\n  }\n\n  /**\n   * Clears all blocks from an `EditorJS instance`\n   * @param holder The ID of the holder of the instance\n   */\n  public clear({ holder }: { holder: string }): void {\n    this.editorService.clear(holder);\n  }\n\n  /**\n   * Destroy the `EditorJS` instance\n   * It also calls the maps and sets their values back to their defaults and then\n   * completes and destroys them\n   * @param holder The ID of the holder of the instance\n   */\n  public destroy({ holder }: { holder: string }): void {\n    this.editorService.destroyInstance(holder);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsDemoModule.html":{"url":"modules/NgxEditorjsDemoModule.html","title":"module - NgxEditorjsDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsDemoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\n\nFormContainerComponent\n\nFormContainerComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nFormContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoHomeComponent->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSDemoTagComponent\n\nNgxEditorJSDemoTagComponent\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoTagComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nFormContainerComponent \n\nFormContainerComponent \n\nFormContainerComponent  -->\n\nNgxEditorjsDemoModule->FormContainerComponent \n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nNgxEditorjsDemoModule -->\n\nMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxEditorjsDemoModule -->\n\nNgxTinynodesCoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsDemoModule -->\n\nPluginCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsDemoModule -->\n\nPluginHeaderModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsDemoModule -->\n\nPluginLinkModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsDemoModule -->\n\nPluginListModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsDemoModule -->\n\nPluginMarkerModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsDemoModule -->\n\nPluginParagraphModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nPluginSimpleImageModule->NgxEditorjsDemoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FormContainerComponent\n                        \n                        \n                            NgxEditorJSDemoHomeComponent\n                        \n                        \n                            NgxEditorJSDemoTagComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            FormContainerComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxTinynodesCoreModule\n                        \n                        \n                            PageStoreModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormContainerComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatGridListModule,\n  MatExpansionModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatChipsModule,\n  MatBadgeModule,\n  MatIconModule\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { NgxEditorJSModule, UserPlugins } from '@tinynodes/ngx-editorjs';\nimport {\n  PluginCodeModule,\n  PluginHeaderModule,\n  PluginLinkModule,\n  PluginListModule,\n  PluginMarkerModule,\n  PluginParagraphModule,\n  PluginSimpleImageModule\n} from '@tinynodes/ngx-editorjs-plugins';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { createNgxEditorJSDemoTools } from './config';\nimport { PageContainerComponent } from './containers/page-container/page-container.component';\nimport { ngxEditorjsDemoRoutes } from './ngx-editorjs-demo.routes';\nimport { PageStoreModule } from './store/pages/pages.module';\nimport { MaterialModule } from 'apps/ngx-tinynodes/src/app/material.module';\nimport { NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core/src';\nimport { FormContainerComponent } from './containers/form-container/form-container.component';\nimport { NgxEditorJSDemoHomeComponent } from './containers/home-container/home-container.component';\nimport { NgxEditorJSDemoTagComponent } from './components/tag-component/tag.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ngxEditorjsDemoRoutes),\n    MarkdownModule.forChild(),\n    ReactiveFormsModule,\n    PageStoreModule,\n    NgxEditorJSModule,\n    PluginHeaderModule,\n    PluginParagraphModule,\n    PluginListModule,\n    PluginCodeModule,\n    PluginSimpleImageModule,\n    PluginLinkModule,\n    PluginMarkerModule,\n    MaterialModule,\n    MatCardModule,\n    MatButtonModule,\n    NgxTinynodesCoreModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatIconModule\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createNgxEditorJSDemoTools\n    }\n  ],\n  declarations: [\n    PageContainerComponent,\n    FormContainerComponent,\n    NgxEditorJSDemoHomeComponent,\n    NgxEditorJSDemoTagComponent\n  ],\n  exports: [PageStoreModule, PageContainerComponent, FormContainerComponent],\n  entryComponents: [PageContainerComponent, FormContainerComponent]\n})\nexport class NgxEditorjsDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsNgrxModule.html":{"url":"modules/NgxEditorjsNgrxModule.html","title":"module - NgxEditorjsNgrxModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsNgrxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsNgrxModule\n\n\n\ncluster_NgxEditorjsNgrxModule_imports\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\n\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule -->\n\nNgxEditorJSModule->NgxEditorjsNgrxModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/ngx-editorjs-ngrx.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Warning: This module is current in development and not yet published\nThis module provides a set of NGRX Effects that allow you to control\nan EditorJS instance via store actions.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\n\n/**\n * **Warning**: This module is current in development and not yet published\n *\n * This module provides a set of [NGRX Effects](https://ngrx.io/guide/effects) that allow you to control\n * an `EditorJS` instance via store actions.\n */\n@NgModule({\n  imports: [CommonModule, NgxEditorJSModule, EffectsModule.forFeature([])]\n})\nexport class NgxEditorjsNgrxModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsPluginsModule.html":{"url":"modules/NgxEditorjsPluginsModule.html","title":"module - NgxEditorjsPluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsPluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/ngx-editorjs-plugins.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The NgxEditorjsPluginsModule provides several additional modules\nthat provide a way to easily plug in block and inline tools for EditorJS.\nImporting NgxEditorjsPluginsModule will include all modules, while it\nis also possible to import each individual module as required.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PluginCodeModule } from './plugins/code/code.module';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginImageModule } from './plugins/image/image.module';\nimport { PluginLinkModule } from './plugins/link/link.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginSimpleImageModule } from './plugins/simple-image/simple-image.module';\n\n/**\n * The `NgxEditorjsPluginsModule` provides several additional modules\n * that provide a way to easily plug in block and inline tools for `EditorJS`.\n *\n * Importing `NgxEditorjsPluginsModule` will include all modules, while it\n * is also possible to import each individual module as required.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule\n  ],\n  exports: [\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule\n  ]\n})\nexport class NgxEditorjsPluginsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxHideableHeaderDemoModule.html":{"url":"modules/NgxHideableHeaderDemoModule.html","title":"module - NgxHideableHeaderDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxHideableHeaderDemoModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-hideable-header-demo/src/lib/ngx-hideable-header-demo.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nexport const ngxHideableHeaderDemoRoutes: Route[] = [];\n\n@NgModule({\n  imports: [CommonModule, RouterModule]\n})\nexport class NgxHideableHeaderDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesCoreMaterialModule.html":{"url":"modules/NgxTinynodesCoreMaterialModule.html","title":"module - NgxTinynodesCoreMaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesCoreMaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/ngx-tinynodes-core-material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n  MatGridListModule,\n  MatCardModule,\n  MatExpansionModule,\n  MatListModule,\n  MatButtonModule\n} from '@angular/material';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule, MatGridListModule, MatCardModule, MatExpansionModule, MatListModule, MatButtonModule],\n  exports: [CommonModule, MatGridListModule, MatCardModule, MatExpansionModule, MatListModule, MatButtonModule]\n})\nexport class NgxTinynodesCoreMaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesCoreModule.html":{"url":"modules/NgxTinynodesCoreModule.html","title":"module - NgxTinynodesCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesCoreModule\n\n\n\ncluster_NgxTinynodesCoreModule_declarations\n\n\n\ncluster_NgxTinynodesCoreModule_imports\n\n\n\ncluster_NgxTinynodesCoreModule_exports\n\n\n\n\nNgxEditorJSDemoInfoComponent\n\nNgxEditorJSDemoInfoComponent\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule -->\n\nNgxEditorJSDemoInfoComponent->NgxTinynodesCoreModule\n\n\n\n\n\nApplicationDataModule \n\nApplicationDataModule \n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\n\n\nNgxEditorJSDemoInfoComponent \n\nNgxEditorJSDemoInfoComponent \n\nNgxEditorJSDemoInfoComponent  -->\n\nNgxTinynodesCoreModule->NgxEditorJSDemoInfoComponent \n\n\n\n\n\nNgxTinynodesCoreMaterialModule \n\nNgxTinynodesCoreMaterialModule \n\nNgxTinynodesCoreMaterialModule  -->\n\nNgxTinynodesCoreModule->NgxTinynodesCoreMaterialModule \n\n\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\n\n\nNgxTinynodesCoreMaterialModule\n\nNgxTinynodesCoreMaterialModule\n\nNgxTinynodesCoreModule -->\n\nNgxTinynodesCoreMaterialModule->NgxTinynodesCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/ngx-tinynodes-core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module provides all the core features across the Tinynodes site\nthat need shared.\nThis includes the ApplicationDataModule which provides state and data loading via\nthe AppService\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSDemoInfoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApplicationDataModule\n                        \n                        \n                            NgxTinynodesCoreMaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationDataModule\n                        \n                        \n                            NgxEditorJSDemoInfoComponent\n                        \n                        \n                            NgxTinynodesCoreMaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApplicationDataModule } from './stores/app/application.module';\nimport { NgxEditorJSDemoInfoComponent } from './components/demo-info/demo-info.component';\nimport { NgxTinynodesCoreMaterialModule } from './ngx-tinynodes-core-material.module';\n/**\n * This module provides all the core features across the Tinynodes site\n * that need shared.\n *\n * This includes the `ApplicationDataModule` which provides state and data loading via\n * the `AppService`\n */\n@NgModule({\n  imports: [ApplicationDataModule, NgxTinynodesCoreMaterialModule],\n  declarations: [NgxEditorJSDemoInfoComponent],\n  exports: [ApplicationDataModule, NgxEditorJSDemoInfoComponent, NgxTinynodesCoreMaterialModule]\n})\nexport class NgxTinynodesCoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotReady.html":{"url":"classes/NotReady.html","title":"class - NotReady","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotReady\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.NotReady\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        id\n                                \n                                \n                                        pageTags\n                                \n                                \n                                        pageTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:     PageBlock[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PageBlock[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTags\n                                    \n                                \n                                \n                                    \n                                        pageTags:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTitle\n                                    \n                                \n                                \n                                    \n                                        pageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageBlock.html":{"url":"interfaces/PageBlock.html","title":"interface - PageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageContainerComponent.html":{"url":"components/PageContainerComponent.html","title":"component - PageContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container component provides the main routable page for loading\nthe ngx-editorjs-demo\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-page-container\n            \n\n            \n                styleUrls\n                page-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                page-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                holder\n                            \n                            \n                                    Private\n                                menu$\n                            \n                            \n                                    Private\n                                onDestroy$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    blocks\n                                \n                                \n                                    menu\n                                \n                                \n                                    pages\n                                \n                                \n                                    asJSON\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editor: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:35\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editor\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:82\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:114\n                \n            \n\n\n            \n                \n                    After the content has init overide the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:89\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:75\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            holder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs-demo'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:30\n                            \n                        \n\n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            menu$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(undefined)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:35\n                            \n                        \n\n                \n                    \n                        Links for the page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onDestroy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:25\n                            \n                        \n\n                \n                    \n                        Internal onDestroy$ subject\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n\n                \n                    \n                        getblocks()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:54\n                                \n                            \n                    \n                        \n                                Get the blocks for the page\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:61\n                                \n                            \n                    \n                        \n                                Get the page links\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:68\n                                \n                            \n                    \n                        \n                                Get a list of pages\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        asJSON\n                    \n                \n\n                \n                    \n                        getasJSON()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:102\n                                \n                            \n                    \n                        \n                                Get the blocks data as formatted JSON\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { Block, NgxEditorJSService } from '@tinynodes/ngx-editorjs/src';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core/src';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, takeUntil, tap, pluck, filter, take } from 'rxjs/operators';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\nimport { MenuGroup } from 'apps/ngx-tinynodes/src/app/core/types/app';\nimport { NgxEditorJSDemo } from '@tinynodes/ngx-tinynodes-core/src/lib/stores/app/application.model';\n\n/**\n * The Page Container component provides the main routable page for loading\n * the `ngx-editorjs-demo`\n */\n@Component({\n  selector: 'ngx-page-container',\n  templateUrl: 'page-container.component.html',\n  styleUrls: ['page-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PageContainerComponent implements AfterContentInit {\n  /**\n   * Internal onDestroy$ subject\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * The holder ID for this demo\n   */\n  public holder = 'ngx-editorjs-demo';\n\n  /**\n   * Links for the page\n   */\n  private menu$ = new BehaviorSubject(undefined);\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editor The Editor service\n   * @param cd The change detection ref\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private app: AppService,\n    private readonly editor: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Get the blocks for the page\n   */\n  public get blocks() {\n    return this.editor.getBlocks(this.holder);\n  }\n\n  /**\n   * Get the page links\n   */\n  public get menu() {\n    return this.menu$;\n  }\n\n  /**\n   * Get a list of pages\n   */\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editor.save({ holder: this.holder });\n  }\n\n  /**\n   * Clear the editor\n   */\n  public clear() {\n    this.editor.clear({ holder: this.holder });\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app\n      .getDemoData('ngx-editorjs-demo')\n      .pipe(take(1))\n      .subscribe((data: NgxEditorJSDemo) => {\n        this.menu$.next(data.links);\n        this.editor.update({ holder: this.holder, blocks: data.blocks });\n      });\n  }\n\n  /**\n   * Get the blocks data as formatted JSON\n   */\n  public get asJSON() {\n    return this.blocks.pipe(\n      map(blocks => {\n        return JSON.stringify(blocks, null, 4);\n      }),\n      tap(() => this.cd.markForCheck())\n    );\n  }\n\n  /**\n   * After the content has init overide the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A single page demo of the EditorJS component\n    \n    \n      \n    \n\n    \n      \n        Demo\n        Save\n        Clear\n        Reset\n      \n      \n    \n    \n      \n        \n          Output\n          Data from the EditorJS instance\n        \n        \n          {{ asJSON | async }}\n        \n      \n    \n     \n  \n\n\n\n  \n    Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can just start\n    typing.\n  \n  \n    The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks, list with\n    &lt;ol> / &lt;li> and &lt;code> blocks.\n  \n\n  \n    You can also paste in an &lt;img> url into the editor and it will start the SimpleImage plugin which provides\n    an &lt;img> tag pointing to the image, and with some additional controls.\n  \n  \n    When saving check the output panel below to see the data results.\n  \n\n\n    \n\n    \n                \n                    page-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A single page demo of the EditorJS component                                    Demo        Save        Clear        Reset                                            Output          Data from the EditorJS instance                          {{ asJSON | async }}                               Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can just start    typing.        The default block is a  paragraph, you can also add header  -  blocks, list with     /  and  blocks.        You can also paste in an  url into the editor and it will start the SimpleImage plugin which provides    an  tag pointing to the image, and with some additional controls.        When saving check the output panel below to see the data results.  '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PageStoreModule.html":{"url":"modules/PageStoreModule.html","title":"module - PageStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    PageStoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nPagesQuery\n\nPagesQuery\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.module.ts\n        \n\n\n        \n            Description\n        \n        \n            WARNING: This module is currently in development\nInternal page store module, this will allow the ngx-editorjs-demo to support the creation of multiple pages\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PagesQuery\n                        \n                        \n                            PagesService\n                        \n                        \n                            PagesStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PagesQuery } from './pages.query';\nimport { PagesService } from './pages.service';\nimport { PagesStore } from './pages.store';\n\n/**\n *\n * **WARNING**: This module is currently in development\n *\n * Internal page store module, this will allow the `ngx-editorjs-demo` to support the creation of multiple pages\n */\n@NgModule({\n  providers: [PagesStore, PagesQuery, PagesService]\n})\nexport class PageStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesQuery.html":{"url":"injectables/PagesQuery.html","title":"injectable - PagesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n        \n\n\n            \n                Extends\n            \n            \n                    QueryEntity\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { Page } from './pages.models';\nimport { PagesState, PagesStore } from './pages.store';\n\n@Injectable()\nexport class PagesQuery extends QueryEntity {\n  constructor(protected store: PagesStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesService.html":{"url":"injectables/PagesService.html","title":"injectable - PagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n        \n\n            \n                Description\n            \n            \n                This page service provides a way to save and render pages\nvia the store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                pages$\n                            \n                            \n                                    Public\n                                    Readonly\n                                query\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addBlock\n                            \n                            \n                                delete\n                            \n                            \n                                removeBlock\n                            \n                            \n                                setBlocks\n                            \n                            \n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: PagesQuery, store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        PagesQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(page?: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a page to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional page to be added\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addBlock\n                        \n                        \n                    \n                \n            \n            \n                \naddBlock(pageId: ID, block: Block)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                Block\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(pageId: ID)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:56\n                \n            \n\n\n            \n                \n                    Removes a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the page to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBlock\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBlock(pageId: ID, block: PageBlock)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                PageBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBlocks\n                        \n                        \n                    \n                \n            \n            \n                \nsetBlocks(pageId: ID | any, blocks: PageBlock[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    blocks\n                                    \n                                            PageBlock[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upsert\n                        \n                        \n                    \n                \n            \n            \n                \nupsert(page: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:47\n                \n            \n\n\n            \n                \n                    Updates or creates a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The page to be updated, if not available it will be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pages$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesQuery\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesStore\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:24\n                                \n                            \n                    \n                        \n                                Get an observable of all the pages in the store\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { arrayAdd, arrayRemove, guid, ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\nimport { Observable } from 'rxjs';\nimport { Page, PageBlock } from './pages.models';\nimport { PagesQuery } from './pages.query';\nimport { PagesStore } from './pages.store';\n\n/**\n * This page service provides a way to save and render pages\n * via the store\n */\n@Injectable()\nexport class PagesService {\n  private pages$: Observable;\n\n  constructor(public readonly query: PagesQuery, public readonly store: PagesStore) {\n    this.pages$ = this.query.selectAll();\n  }\n\n  /**\n   * Get an observable of all the pages in the store\n   */\n  get pages(): Observable {\n    return this.pages$;\n  }\n\n  /**\n   * Add a page to the store\n   * @param page An optional page to be added\n   */\n  add(page?: Page) {\n    const newPage: Page = {\n      id: guid(),\n      pageTitle: 'New Page',\n      pageTags: [],\n      blocks: [],\n      ...page\n    };\n    this.store.add(newPage);\n  }\n\n  /**\n   * Updates or creates a page\n   * @param page The page to be updated, if not available it will be created\n   */\n  upsert(page: Page) {\n    if (!page.id) page.id = guid();\n    this.store.upsert(page.id, page);\n  }\n\n  /**\n   * Removes a page\n   * @param pageId The ID of the page to be removed\n   */\n  delete(pageId: ID) {\n    this.store.remove(pageId);\n  }\n\n  setBlocks(pageId: ID | any, blocks: PageBlock[]) {\n    this.store.update(pageId, { blocks });\n  }\n\n  addBlock(pageId: ID, block: Block) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayAdd(entity.blocks, { id: guid(), ...block })\n    }));\n  }\n\n  removeBlock(pageId: ID, block: PageBlock) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayRemove(entity.blocks, block.id)\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagesState.html":{"url":"interfaces/PagesState.html","title":"interface - PagesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesStore.html":{"url":"injectables/PagesStore.html","title":"injectable - PagesStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityStore\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paragraph.html":{"url":"interfaces/Paragraph.html","title":"interface - Paragraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a paragraph block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The paragraph text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParagraphBlock.html":{"url":"interfaces/ParagraphBlock.html","title":"interface - ParagraphBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginCode.html":{"url":"injectables/PluginCode.html","title":"injectable - PluginCode","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginCode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the ToolSettings for this plugin\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Code from '@editorjs/code';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginCode implements BasePlugin {\n  /**\n   * Returns the `ToolSettings` for this plugin\n   */\n  public plugin(): ToolSettings {\n    return Code;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginCodeModule.html":{"url":"modules/PluginCodeModule.html","title":"module - PluginCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginCodeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\n\nPluginCode\n\nPluginCode\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginCode\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginCode } from './code.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/code) for API details\n */\n@NgModule({\n  providers: [PluginCode]\n})\nexport class PluginCodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig.html":{"url":"interfaces/PluginConfig.html","title":"interface - PluginConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig-1.html":{"url":"interfaces/PluginConfig-1.html","title":"interface - PluginConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginHeader.html":{"url":"injectables/PluginHeader.html","title":"injectable - PluginHeader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Header from '@editorjs/header';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginHeader implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Header;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginHeaderModule.html":{"url":"modules/PluginHeaderModule.html","title":"module - PluginHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\n\nPluginHeader\n\nPluginHeader\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS header block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginHeader\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginHeader } from './header.plugin';\n\n/**\n * A module that provides the default `EditorJS` header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [PluginHeader]\n})\nexport class PluginHeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginImage.html":{"url":"injectables/PluginImage.html","title":"injectable - PluginImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Image from '@editorjs/image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Image;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginImageModule.html":{"url":"modules/PluginImageModule.html","title":"module - PluginImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\n\nPluginImage\n\nPluginImage\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginImage } from './image.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginImage]\n})\nexport class PluginImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginLink.html":{"url":"injectables/PluginLink.html","title":"injectable - PluginLink","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Link from '@editorjs/link';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginLink implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Link;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginLinkModule.html":{"url":"modules/PluginLinkModule.html","title":"module - PluginLinkModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginLinkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\n\nPluginLink\n\nPluginLink\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginLink\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginLink } from './link.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/link) for API details\n */\n@NgModule({\n  providers: [PluginLink]\n})\nexport class PluginLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginList.html":{"url":"injectables/PluginList.html","title":"injectable - PluginList","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  and  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport List from '@editorjs/list';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` and `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginList implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return List;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginListModule.html":{"url":"modules/PluginListModule.html","title":"module - PluginListModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\n\nPluginList\n\nPluginList\n\n\n\nPluginListModule\n\nPluginListModule\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  and  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginList\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginList } from './list.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` and `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/list) for API details\n */\n@NgModule({\n  providers: [PluginList]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginMarker.html":{"url":"injectables/PluginMarker.html","title":"injectable - PluginMarker","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginMarker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a inline marker tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                            \n                                    Public\n                                shortcut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shortcut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shortcut()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:20\n                \n            \n\n\n            \n                \n                    Returns the plugin shortcut\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Marker from '@editorjs/marker';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a inline marker tool for `EditorJS`\n */\n@Injectable()\nexport class PluginMarker implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Marker;\n  }\n  /**\n   * Returns the plugin shortcut\n   */\n  public shortcut() {\n    return 'CMD+SHIFT+M';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginMarkerModule.html":{"url":"modules/PluginMarkerModule.html","title":"module - PluginMarkerModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginMarkerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\n\nPluginMarker\n\nPluginMarker\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS inline marker tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginMarker\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginMarker } from './marker.plugin';\n\n/**\n * A module that provides the default `EditorJS` inline marker tool.\n * See [the GitHub repo](https://github.com/editor-js/marker) for API details\n */\n@NgModule({\n  providers: [PluginMarker]\n})\nexport class PluginMarkerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginParagraph.html":{"url":"injectables/PluginParagraph.html","title":"injectable - PluginParagraph","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginParagraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Paragraph from '@editorjs/paragraph';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginParagraph implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Paragraph;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginParagraphModule.html":{"url":"modules/PluginParagraphModule.html","title":"module - PluginParagraphModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginParagraph\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginParagraph } from './paragraph.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [PluginParagraph]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginSimpleImage.html":{"url":"injectables/PluginSimpleImage.html","title":"injectable - PluginSimpleImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginSimpleImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the simple image tool for  block editor EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport SimpleImage from '@editorjs/simple-image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the simple image tool for `` block editor `EditorJS`\n */\n@Injectable()\nexport class PluginSimpleImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return SimpleImage;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginSimpleImageModule.html":{"url":"modules/PluginSimpleImageModule.html","title":"module - PluginSimpleImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginSimpleImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the simple image tools for EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginSimpleImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginSimpleImage } from './simple-image.plugin';\n\n/**\n * A module that provides the simple image tools for `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginSimpleImage]\n})\nexport class PluginSimpleImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ready.html":{"url":"classes/Ready.html","title":"class - Ready","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ready\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.Ready\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadyMap.html":{"url":"interfaces/ReadyMap.html","title":"interface - ReadyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of boolean values of the ready state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:46\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {boolean}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveEnd.html":{"url":"classes/SaveEnd.html","title":"class - SaveEnd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveEnd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.SaveEnd\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveStart.html":{"url":"classes/SaveStart.html","title":"class - SaveStart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveStart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.SaveStart\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                openSourceMenu\n                            \n                            \n                                projectsMenu\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        openSourceMenu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectsMenu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { MenuGroup } from '@tinynodes/ngx-tinynodes-core';\n\n@Component({\n  selector: 'tinynodes-sidebar',\n  templateUrl: 'sidebar.component.html',\n  styleUrls: ['sidebar.component.scss']\n})\nexport class SidebarComponent {\n  @Input()\n  projectsMenu: MenuGroup;\n\n  @Input()\n  openSourceMenu: MenuGroup;\n}\n\n    \n\n    \n        \n  {{ projectsMenu.title }}\n\n  {{ child.label }}\n\n\n\n  {{ openSourceMenu.title }}\n\n  {{ child.label }}\n -->\n\n    \n\n    \n                \n                    sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ projectsMenu.title }}  {{ child.label }}  {{ openSourceMenu.title }}  {{ child.label }} -->'\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestClass.html":{"url":"classes/TestClass.html","title":"class - TestClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/shared.ts:5\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { EditorJSConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  constructor(private config: EditorJSConfig) {\n    this.version = 'test';\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TinynodeDemos.html":{"url":"interfaces/TinynodeDemos.html","title":"interface - TinynodeDemos","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TinynodeDemos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demos on tinynodes\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ngx-editorjs-demo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ngx-editorjs-demo\n                                    \n                                \n                                \n                                    \n                                        ngx-editorjs-demo:         NgxEditorJSDemoData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NgxEditorJSDemoData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ngx-editorjs-demo data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TinynodeDemos-1.html":{"url":"interfaces/TinynodeDemos-1.html","title":"interface - TinynodeDemos-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TinynodeDemos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demos on tinynodes\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ngx-editorjs-demo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ngx-editorjs-demo\n                                    \n                                \n                                \n                                    \n                                        ngx-editorjs-demo:         NgxEditorJSDemoData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NgxEditorJSDemoData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ngx-editorjs-demo data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap.html":{"url":"interfaces/ToolSettingsMap.html","title":"interface - ToolSettingsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap-1.html":{"url":"interfaces/ToolSettingsMap-1.html","title":"interface - ToolSettingsMap-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nTinynodes Changelog\n\nThis changelog is related to the overall site. You can also find changelogs for libraries under the library docs\n\n\nWednesday, 15th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.3.2. This will be without a Forms component. In this release the main change is internally I'm using a new EditorJS Injector module I've created to handle managing the underlying instance. There are also a lot of documentation improvements and a completly new updated demo site.\nMonday, 13th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.2.0. For now I've removed any default plugins from core package, now all plugins must be added at the application level - this can be see in the demo app.\nSunday, 12th May 2019\nThe first devlog is to report that currently version 1.2 has been delayed due to current build issues.\nA bug report has been filed on @nrwl/nx project.\nIn 1.2 there is a new @tinynodes/ngx-editorjs-plugins module that provides exports for several common EditorJS plugins and will be expanded to cover all the officially released plugins.\nWith this change the current build scripts break, and until it is resolved this will block the release.\nIn the meantime I'll continue to work on this small demo site, making it more useful as a good example of an Angular app.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a\nbuild.\nUpdate the README.md with details of changes to the interface, this includes new environment\nvariables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this\nPull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you\ndo not have permission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or\nadvances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic\naddress, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at me@tane.dev. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/ngx-tinynodes-e2e/src/support/app.po.ts\n            \n            variable\n            getGreeting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/app-routing.module.ts\n            \n            variable\n            appRoutes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts\n            \n            component\n            NavBarComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/containers/app/app.component.ts\n            \n            component\n            AppContainerComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n            \n            interface\n            ApplicationState\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n            \n            interface\n            DemoData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n            \n            interface\n            NgxEditorJSDemo\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n            \n            interface\n            NgxEditorJSDemoData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n            \n            interface\n            TinynodeDemos\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/stores/app/application.query.ts\n            \n            injectable\n            ApplicationQuery\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/stores/app/application.store.ts\n            \n            injectable\n            ApplicationStore\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/types/app.ts\n            \n            interface\n            ApplicationData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/types/app.ts\n            \n            interface\n            MenuGroup\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/core/types/app.ts\n            \n            interface\n            MenuItem\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts\n            \n            component\n            HomePageComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/ngx-tinynodes/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/components/tag-component/tag.component.ts\n            \n            component\n            NgxEditorJSDemoTagComponent\n            \n                38 %\n                (14/36)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/components/tag-component/tag.component.ts\n            \n            variable\n            TAG_COMPONENT_FIELD_CONTROL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/components/tag-component/tag.component.ts\n            \n            variable\n            TAG_COMPONENT_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/config/index.ts\n            \n            function\n            createNgxEditorJSDemoTools\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts\n            \n            component\n            FormContainerComponent\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/containers/home-container/home-container.component.ts\n            \n            component\n            NgxEditorJSDemoHomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n            \n            component\n            PageContainerComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n            \n            variable\n            ngxEditorjsDemoRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            Page\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            PageBlock\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n            \n            interface\n            Tag\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n            \n            injectable\n            PagesQuery\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n            \n            injectable\n            PagesService\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n            \n            injectable\n            PagesStore\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n            \n            interface\n            PagesState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            Changed\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            NotReady\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            Ready\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            SaveEnd\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n            \n            class\n            SaveStart\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts\n            \n            injectable\n            NgxEditorJSEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts\n            \n            injectable\n            PluginCode\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts\n            \n            injectable\n            PluginHeader\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts\n            \n            injectable\n            PluginImage\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts\n            \n            injectable\n            PluginLink\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts\n            \n            injectable\n            PluginList\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts\n            \n            injectable\n            PluginMarker\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts\n            \n            injectable\n            PluginParagraph\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts\n            \n            injectable\n            PluginSimpleImage\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            interface\n            BasePlugin\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            interface\n            PluginConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            interface\n            ToolSettingsMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            variable\n            InitialPlugins\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n            \n            variable\n            UserPlugins\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/config/editor-config.ts\n            \n            function\n            createEditorJSConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/config/editor-config.ts\n            \n            variable\n            DEFAULT_HOLDER_ID\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/config/module-config.ts\n            \n            function\n            createModuleConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/containers/base/container.class.ts\n            \n            component\n            EditorJSBaseComponent\n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/containers/base/container.class.ts\n            \n            variable\n            EDITORJS_FORM_VALUE_ACCESSOR\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n            \n            component\n            NgxEditorJSMatFieldComponent\n            \n                95 %\n                (47/49)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n            \n            interface\n            EditorJSMaterialForm\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n            \n            variable\n            EDITORJS_MATERIAL_FIELD_CONTROL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts\n            \n            component\n            NgxEditorJSComponent\n            \n                95 %\n                (22/23)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n            \n            directive\n            NgxEditorJSDirective\n            \n                90 %\n                (18/20)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n            \n            function\n            createEditorJSInstance\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/editorjs-injector.ts\n            \n            injectable\n            NgxEditorJSInstanceService\n            \n                88 %\n                (24/27)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/editorjs-injector.ts\n            \n            interface\n            EditorJSInstanceConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/editorjs-injector.ts\n            \n            variable\n            EDITORJS_MODULE_IMPORT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/editorjs-injector.ts\n            \n            variable\n            EditorJSInstance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/editorjs-injector.ts\n            \n            variable\n            MAP_DEFAULTS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n            \n            injectable\n            NgxEditorJSService\n            \n                78 %\n                (11/14)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n            \n            interface\n            CreateEditorJSOptions\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n            \n            interface\n            EditorJSAction\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/services/plugins.service.ts\n            \n            injectable\n            NgxEditorJSPluginService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Block\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Header\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            HeaderBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Image\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ImageBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            List\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ListBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            Paragraph\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/blocks.ts\n            \n            interface\n            ParagraphBlock\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            interface\n            EditorJSConfig\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            interface\n            NgxEditorJSConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            variable\n            EDITIOR_JS_INSTANCE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            variable\n            FOR_ROOT_OPTIONS_TOKEN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/config.ts\n            \n            variable\n            NGX_EDITORJS_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            BlocksMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            ChangeMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            EditorMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            EventMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            EventType\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/maps.ts\n            \n            interface\n            ReadyMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            BasePlugin\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            PluginConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            interface\n            ToolSettingsMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            variable\n            InitialPlugins\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/lib/types/plugins.ts\n            \n            variable\n            UserPlugins\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/testing/ng-zone-mock.ts\n            \n            injectable\n            MockNgZone\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/testing/shared.ts\n            \n            class\n            MockEditorJS\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/testing/shared.ts\n            \n            class\n            MockPlugin\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/ngx-editorjs/src/testing/shared.ts\n            \n            class\n            TestClass\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/ngx-hideable-header-demo/src/lib/ngx-hideable-header-demo.module.ts\n            \n            variable\n            ngxHideableHeaderDemoRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts\n            \n            component\n            NgxEditorJSDemoInfoComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n            \n            interface\n            ApplicationState\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n            \n            interface\n            DemoData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n            \n            interface\n            NgxEditorJSDemo\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n            \n            interface\n            NgxEditorJSDemoData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n            \n            interface\n            TinynodeDemos\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/stores/app/application.query.ts\n            \n            injectable\n            ApplicationQuery\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/stores/app/application.store.ts\n            \n            injectable\n            ApplicationStore\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/types/app.ts\n            \n            interface\n            ApplicationData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/types/app.ts\n            \n            interface\n            MenuGroup\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/ngx-tinynodes-core/src/lib/types/app.ts\n            \n            interface\n            MenuItem\n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.15\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ~7.2.15\n        \n            @angular/compiler : ~7.2.15\n        \n            @angular/core : ~7.2.15\n        \n            @angular/flex-layout : ^7.0.0-beta.24\n        \n            @angular/forms : ~7.2.15\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ~7.2.15\n        \n            @angular/platform-browser-dynamic : ~7.2.15\n        \n            @angular/router : ~7.2.15\n        \n            @datorama/akita-ng-router-store : ^3.0.2\n        \n            @datorama/akita-ngdevtools : ^1.0.4\n        \n            @editorjs/editorjs : ^2.13.0\n        \n            @editorjs/header : ^2.2.3\n        \n            @editorjs/list : ^1.3.4\n        \n            @editorjs/paragraph : ^2.5.0\n        \n            @ngrx/effects : ^7.4.0\n        \n            @ngrx/store : ^7.4.0\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            install : ^0.12.2\n        \n            ngx-hideable-header : 0.0.5\n        \n            ngx-markdown : ^7.1.5\n        \n            npm : ^6.9.0\n        \n            rxjs : 6.3.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationStateKeys   (libs/.../application.model.ts)\n                        \n                        \n                            ApplicationStateKeys   (apps/.../application.model.ts)\n                        \n                        \n                            EditorJSActionTypes   (libs/.../editorjs.service.ts)\n                        \n                        \n                            EditorJSActionTypes   (libs/.../ngx-editorjs.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApplicationStateKeys\n                    \n                \n                    \n                        \n                            An Enum of the keys in the application state\n\n                        \n                    \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n                        \n                            \n                                 Menus\n                            \n                        \n                        \n                            \n                                Value : menus\n                            \n                        \n                        \n                            \n                                 DemoData\n                            \n                        \n                        \n                            \n                                Value : demoData\n                            \n                        \n            \n        \n\n    apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApplicationStateKeys\n                    \n                \n                    \n                        \n                            An Enum of the keys in the application state\n\n                        \n                    \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n                        \n                            \n                                 Menus\n                            \n                        \n                        \n                            \n                                Value : menus\n                            \n                        \n                        \n                            \n                                 DemoData\n                            \n                        \n                        \n                            \n                                Value : demoData\n                            \n                        \n            \n        \n\n    libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n    \n        \n            \n                \n                    \n                        \n                        EditorJSActionTypes\n                    \n                \n                    \n                        \n                            Supported actions by the API\n\n                        \n                    \n                        \n                            \n                                 CreateEditor\n                            \n                        \n                        \n                            \n                                Value : createEditor\n                            \n                        \n                        \n                            \n                                 UpdateEditor\n                            \n                        \n                        \n                            \n                                Value : updateEditor\n                            \n                        \n                        \n                            \n                                 ClearEditor\n                            \n                        \n                        \n                            \n                                Value : clearEditor\n                            \n                        \n                        \n                            \n                                 DestroyEditor\n                            \n                        \n                        \n                            \n                                Value : destroyEditor\n                            \n                        \n                        \n                            \n                                 SaveEditor\n                            \n                        \n                        \n                            \n                                Value : saveEditor\n                            \n                        \n            \n        \n\n    libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        EditorJSActionTypes\n                    \n                \n                        \n                            \n                                 SaveStart\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Start Save\n                            \n                        \n                        \n                            \n                                 SaveEnd\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Start End\n                            \n                        \n                        \n                            \n                                 NotReady\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Not Ready\n                            \n                        \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Ready\n                            \n                        \n                        \n                            \n                                 Changed\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Changed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createEditorJSConfig   (libs/.../editor-config.ts)\n                        \n                        \n                            createEditorJSInstance   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            createModuleConfig   (libs/.../module-config.ts)\n                        \n                        \n                            createNgxEditorJSDemoTools   (libs/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSConfig(inputConfig?)\n                \n            \n\n\n\n\n            \n                \n                    Creates an EditorJS config\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputConfig\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The config to merge\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EditorJSConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSInstance\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSInstance(editorjs: any)\n                \n            \n\n\n\n\n            \n                \n                    Factory function to return the EditorJS base class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editorjs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/src/lib/config/module-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createModuleConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateModuleConfig(config?)\n                \n            \n\n\n\n\n            \n                \n                    Creates the configuration from the module config\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional module configurations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorJSConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs-demo/src/lib/config/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createNgxEditorJSDemoTools\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNgxEditorJSDemoTools()\n                \n            \n\n\n\n\n            \n                \n                    Creates the tools for the ngx-tinynodes demo application\n\n\n                    \n                        Returns :         PluginConfig\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-Tinynodes\nThis repository is a collection of Angular components and demos with full documentation.\nSee the Changelog for the development diary of this site, or visit the documentation of libraries.\nYou can also find a fully searchable API documentation for all @tinynode components.\nLinks\n\nRepository\nDocumentation\nDemo Application Site\nNPM Collection\n\nLibraries\nngx-editorjs\nThe ngx-editorjs module provides an EditorJS instance within an Angular application and provides several features to use it:\n\nA Directive to attach to and block element\nAn out-of-the-box component to use within any Angular application or Angular form\nA Material Form Field component\nA Service to interact with EditorJS instances.\n\nBelow are the dependencies to use the features.\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+\n\nReadme\nChangelog\nDemo\nProject Folder\n\n@tinynodes/ngx-editorjs-plugins\nThis project provides a module that exports a set of default plugins for @tinynodes/ngx-editorjs.\n\nReadme\nChangelog\nProject Folder\n\nDevelopment Information\nThis repository is run by Tane Piper and was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nTinynodes General MIT Licence\nCopyright 2019 Tane Piper me@tane.dev\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApplicationDataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApplicationDataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsDemoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsNgrxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsPluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxHideableHeaderDemoModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesCoreMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PageStoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginCodeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginLinkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginMarkerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginSimpleImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\ncluster_NgxEditorjsNgrxModule\n\n\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\ncluster_NgxTinynodesCoreModule\n\n\n\ncluster_NgxTinynodesCoreModule_declarations\n\n\n\ncluster_NgxTinynodesCoreModule_imports\n\n\n\ncluster_NgxTinynodesCoreModule_exports\n\n\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\n\n\nAppContainerComponent\n\nAppContainerComponent\n\nAppModule -->\n\nAppContainerComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppContainerComponent \n\nAppContainerComponent \n\nAppContainerComponent  -->\n\nAppModule->AppContainerComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nEditorJSBaseComponent \n\nEditorJSBaseComponent \n\nEditorJSBaseComponent  -->\n\nNgxEditorJSModule->EditorJSBaseComponent \n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule -->\n\nNgxEditorJSModule->NgxEditorjsNgrxModule\n\n\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\nFormContainerComponent \n\nFormContainerComponent \n\nFormContainerComponent  -->\n\nNgxEditorjsDemoModule->FormContainerComponent \n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\nAppModule -->\n\nNgxTinynodesCoreModule->AppModule\n\n\n\nNgxEditorjsDemoModule -->\n\nNgxTinynodesCoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nApplicationDataModule \n\nApplicationDataModule \n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\n\n\nNgxEditorJSDemoInfoComponent \n\nNgxEditorJSDemoInfoComponent \n\nNgxEditorJSDemoInfoComponent  -->\n\nNgxTinynodesCoreModule->NgxEditorJSDemoInfoComponent \n\n\n\n\n\nNgxTinynodesCoreMaterialModule \n\nNgxTinynodesCoreMaterialModule \n\nNgxTinynodesCoreMaterialModule  -->\n\nNgxTinynodesCoreModule->NgxTinynodesCoreMaterialModule \n\n\n\n\n\nFormContainerComponent\n\nFormContainerComponent\n\nNgxEditorjsDemoModule -->\n\nFormContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoHomeComponent->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSDemoTagComponent\n\nNgxEditorJSDemoTagComponent\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoTagComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsDemoModule -->\n\nPluginCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsDemoModule -->\n\nPluginHeaderModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsDemoModule -->\n\nPluginLinkModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsDemoModule -->\n\nPluginListModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsDemoModule -->\n\nPluginMarkerModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsDemoModule -->\n\nPluginParagraphModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nPluginSimpleImageModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nEditorJSBaseComponent\n\nEditorJSBaseComponent\n\nNgxEditorJSModule -->\n\nEditorJSBaseComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSInstanceService\n\nNgxEditorJSInstanceService\n\nNgxEditorJSModule -->\n\nNgxEditorJSInstanceService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\nNgxEditorJSModule -->\n\nNgxEditorJSPluginService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nNgxEditorJSDemoInfoComponent\n\nNgxEditorJSDemoInfoComponent\n\nNgxTinynodesCoreModule -->\n\nNgxEditorJSDemoInfoComponent->NgxTinynodesCoreModule\n\n\n\n\n\nNgxTinynodesCoreMaterialModule\n\nNgxTinynodesCoreMaterialModule\n\nNgxTinynodesCoreModule -->\n\nNgxTinynodesCoreMaterialModule->NgxTinynodesCoreModule\n\n\n\n\n\nPagesQuery\n\nPagesQuery\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\nPluginCode\n\nPluginCode\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\nPluginHeader\n\nPluginHeader\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\nPluginImage\n\nPluginImage\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\nPluginLink\n\nPluginLink\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\nPluginList\n\nPluginList\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\nPluginMarker\n\nPluginMarker\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        22 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    47 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nngx-tinynodes Todo\nGeneral Todos\n\n Add CI pipeline for publishing modules\n Publish doc changes and tags back to repo\n\nngx-editorjs\n\n Add full EditorJS config support\n Add config options as @Input on component and directive\n Add autosave option support to module config\n Expose EditorJS CoreAPI via service helpers (e.g. blocks, selection, etc)\n Provide peer-dependency ngrx/effects via library to control service\n\nngx-editorjs-demo\n\n Add store for page\n Add controls for setting editor\n Add Save feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                        \n                            NgxEditorJSActions   (libs/.../ngx-editorjs.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                    Type of all the basic block type\n\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles, supports ordered and unordered.\nA custom string can also be added\n\n                \n            \n            \n                \n                        \"ordered\" | \"unordered\" | string\n\n                \n            \n        \n    \n    libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n    \n    \n        \n            \n                \n                    \n                    NgxEditorJSActions\n                \n            \n            \n                \n                        SaveStart | SaveEnd | NotReady | Ready | Changed\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appRoutes   (apps/.../app-routing.module.ts)\n                        \n                        \n                            DEFAULT_HOLDER_ID   (libs/.../editor-config.ts)\n                        \n                        \n                            EDITIOR_JS_INSTANCE   (libs/.../config.ts)\n                        \n                        \n                            EDITORJS_FORM_VALUE_ACCESSOR   (libs/.../container.class.ts)\n                        \n                        \n                            EDITORJS_MATERIAL_FIELD_CONTROL   (libs/.../editorjs-mat-field.component.ts)\n                        \n                        \n                            EDITORJS_MODULE_IMPORT   (libs/.../editorjs-injector.ts)\n                        \n                        \n                            EditorJSInstance   (libs/.../editorjs-injector.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FOR_ROOT_OPTIONS_TOKEN   (libs/.../config.ts)\n                        \n                        \n                            getGreeting   (apps/.../app.po.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            MAP_DEFAULTS   (libs/.../editorjs-injector.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            ngxEditorjsDemoRoutes   (libs/.../ngx-editorjs-demo.routes.ts)\n                        \n                        \n                            ngxHideableHeaderDemoRoutes   (libs/.../ngx-hideable-header-demo.module.ts)\n                        \n                        \n                            TAG_COMPONENT_FIELD_CONTROL   (libs/.../tag.component.ts)\n                        \n                        \n                            TAG_COMPONENT_VALUE_ACCESSOR   (libs/.../tag.component.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/ngx-tinynodes/src/app/app-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomePageComponent\n  }\n]\n                        \n                    \n\n                \n                    \n                        The main application routes\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HOLDER_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'editor-js'\n                        \n                    \n\n                \n                    \n                        The default holder ID to attach EditorJS to\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITIOR_JS_INSTANCE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITIOR_JS_INSTANCE')\n                        \n                    \n\n                \n                    \n                        Get the EditorJS instance injected into the app\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOR_ROOT_OPTIONS_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('FOR_ROOT_OPTIONS_TOKEN')\n                        \n                    \n\n                \n                    \n                        Internal token for injecting the NgxEditorJSConfig into the config factory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token provied for NgxEditorJSConfig\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/containers/base/container.class.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_FORM_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => EditorJSBaseComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        This provides the Control Value Accessor for the form component\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MATERIAL_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for the EditorJS Material Field Component\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/services/editorjs-injector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MODULE_IMPORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITORJS_MODULE_IMPORT')\n                        \n                    \n\n                \n                    \n                        Injection token for the EditorJS class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EditorJSInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EditorJSInstance')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAP_DEFAULTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [['blocksMap', []], ['changeMap', 0], ['readyMap', false]]\n                        \n                    \n\n                \n                    \n                        Default values for each internal map\n\n                    \n                \n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes-e2e/src/support/app.po.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getGreeting\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => cy.get('h1')\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorjsDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: 'ngx-editorjs-demo',\n    component: NgxEditorJSDemoHomeComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/angular-component',\n    component: PageContainerComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/angular-form',\n    component: FormContainerComponent\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-hideable-header-demo/src/lib/ngx-hideable-header-demo.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxHideableHeaderDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs-demo/src/lib/components/tag-component/tag.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSDemoTagComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for Material field support\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxEditorJSDemoTagComponent),\n  multi: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs.html":{"url":"additional-documentation/tinynodes-library-docs.html","title":"additional-page - Tinynodes Library Docs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-Tinynodes Libraries\nHere you can find all the README and CHANGELOG details of all projects released to NPM\n\nPlease note due to a bug in CompoDoc the `README.md` files are currently not generated correctly - these are rendered correctly on GitHub and NPM.\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html","title":"additional-page - ngx-editorjs Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS\nThis library provides Angular support for EditorJS via a directive, component and service.\nYou can see a demo in action or download it\non GitHub to see how it was implemented.\nFor changes see the CHANGELOG\nInstalling and usage\nInstall the library via npm along with the plugins module and EditorJS module. For each plugin you want to use you also need to install it's dependency - see the Plugin Docs for more information.\n```bash\n\nnpm install @tinynodes/ngx-editorjs @tinynodes/ngx-editorjs-plugins @editorjs/editorjs @editorjs/paragraph....\n```\n\nOnce installed, include the NgxEditorJSModule module in your project with the forRoot method. The forRoot takes an optional configuration.\nYou also need to pass a provider for UserPlugins with a factory function that returns an options map tools to provide to the EditorJS instance. An example of this is shows in the demo application\n```typescript\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { AppComponent } from './app.component';\nimport EditorJS from '@editorjs/editorjs';\nimport {\n  PluginParagraphModule,\n  PluginParagraph,\n  PluginHeaderModule,\n  PluginHeader,\n  PluginListModule,\n  PluginList\n} from '@tinynodes/ngx-editorjs-plugins';\nexport function createTools() {\n  return {\n    paragraph: new PluginParagraph(),\n    header: new PluginHeader(),\n    list: new PluginList()\n  };\n}\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    NgxEditorJSModule.forRoot({\n      editorjs: {\n        autofocus: false,\n        holder: 'editor',\n        initialBlock: 'paragraph',\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: []\n        }\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createTools\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n```\nConfiguration\nEditorJS Config\nThe configuration is deigned to be extendable in the future, so each potential feature has a key. For configuring EditorJS pass the options below into a editorjs key in the config.\nThe module configuration allows EditorJS to be provided with a set of options for use. See the EditorJS docs for more details.\n| Configuration Key | Description                                                                                       |\n| ----------------- | ------------------------------------------------------------------------------------------------- |\n| autofocus       | Sets the EditorJS instance to autofocus on load                                                   |\n| data            | Initial data to load into the editor, this is an OutputData object from EditorJS                |\n| hideToolbar     | Hides the toolbar by default                                                                      |\n| holder          | The element ID of the holder, this will set all instances in this module to use this as a default |\n| initialBlock    | The default block type to use in the editor                                                       |\n| minHeight       | Height of Editor's bottom area that allows to set focus on the last Block                         |\n| placeholder     | Placeholder of the first block                                                                    |\n| sanitizer       | Content sanitizer configurations                                                                  |\nAdding custom tools\nSee Adding Custom Tools\nWhat's in the library\nNgxEditorJSDirective\nThis is the main directive which can be used on any element with the [ngxEditorJS]. It has one input which is blocks and this takes an array of EditorJS blocks.\nNgxEditorJSComponent\nThis component can be used in any Angular component using the  tag. Again this component can take a set of blocks, it also provides a holder input for overriding the ID.\nNgxEditorJSService\nThis service provides handling the life-cycle of the EditorJS instance, and exposes the underlying EditorJS instance.API - in future releases more of the API will be exposed via service methods to make controlling the container easier.\nLinks\n\nDocumentation\nGitHub\nNPM\nAngular Demo\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html","title":"additional-page - ngx-editorjs Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.4.0] - 2019-05-21\nAdded\n\nNgxEditorJSComponent can be used in Angular Forms via it's ControlValueAccessor\nEditorJSBaseComponent exported and can be used to create custom components\nNgxEditorJSMatFieldComponent provided as a Material field component.\n\nChanged\n\nEditorJS instance service refactored\n\n[1.3.2] - 2019-05-15\nChanged\n\nFixed bug with passing data to EditorJS instance service.\nRemoved rogue console.log\n\n[1.3.0] - 2019-05-15\nAdded\n\n@Input properties on the component and directive for providing EditorJS instance configuration\ncreateEditorJSConfig function available to generate EditorJS configurations\nLots more doc improvements and updated demo\n\nChanged\n\nInternal service now uses an EditorJS injector module and service, provides more robust control and creation of EditorJS instances and controlling them.\n\n[1.2.0] - 2019-05-13\nAdded\n\nAdded all configuration options for EditorJS to the module configuration\n\nChanged\n\nRemoved all plugins from the ngx-editorjs project. All plugins are now provided by the @tinynodes/ngx-editorjs-plugins module and a default set of tools must be provided in an application.\nAdded NgxEditorJSPluginService back to core, all plugins must now be provided with a UserPlugin provider.\n\n[1.1.2] - 2019-05-11\nAdded\n\nImproved internal documentation for generated docs.\n\nRemoved\n\nGenerated docs no longer included in this module - all docs are now available via the generated docs site\n\n[1.1.1] - 2019-05-10\nAdded\n\nGenerated docs via CompoDoc in npm package\nInclude CHANGELOG.md in npm package\n\n[1.1.0] - 2019-05-10\nAdded\n\nEditorJS default paragraph plugin is now included in the default tools, fixes issue where the regenerated component failed to use the default plugin.\n\nChanged\n\nNgxEditorJSService is now provided in the root and now stores multiple editor instances. Getters removed and replaced with methods that take the holder parameter which is the ID of the DOM element the editor should be attached to.\nPlugins are now instances of an Injectable class for AOT and have an instance method of plugin. Also supports shortcut as an optional method that returns the string to set up as the shortcut.\nEditorJSPlugin now renamed BasePlugin and changed from class to interface.\nImproved documentation\n\n[1.0.0] - 2019-05-10\nAdded\n\nInitial release\nReadme, Changelog\nNgxEditorJSModule: That can be imported into the root of a project\nNgxEditorJSDirective: A directive that can attach an EditorJS instance to an element\nNgxEditorJSComponent: A component that is pre-configured to use the directive in any Angular project\nNgxEditorJSService: An Angular service for controlling an EditorJS instance\nDefault plugins for Header and List plugins, documentation on how to add plugins with AOT support\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html","title":"additional-page - ngx-editorjs-plugins Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS Plugins\nThis module provides a default set of EditorJS plugins for @tinynodes/ngx-editorjs via Angular modules.\nPeer Dependencies\nAll EditorJS plugins are listed as peerDependencies of the project - this is because Angular requires these modules to be in the root. You must manually install these are the root of your Angular application.\n```bash\n\nnpm install @editorjs/paragraph @editorjs/header ....\n```\n\nPlugin List\n| Plugin Name             | Description                                            | Links                                                                                               |\n| ----------------------- | ------------------------------------------------------ | --------------------------------------------------------------------------------------------------- |\n| PluginCodeModule        | Provides a  block editor                       | README GitHub              |\n| PluginHeaderModule      | Provides a  -  block editor                  | README GitHub          |\n| PluginImageModule       | Provides an  block editor + file upload support | README GitHub            |\n| PluginLinkModule        | Provides an  block editor                         | README GitHub              |\n| PluginIListModule       | Provides an / block editor                   | README GitHub              |\n| PluginMarkerModule      | Provides inline text marking                           | README GitHub          |\n| PluginParagraphModule   | Provides an  block editor                         | README GitHub    |\n| PluginSimpleImageModule | Provides an  block editor with paste support    | README GitHub |\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html","title":"additional-page - ngx-editorjs-plugins Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.1.1] - 2019-05-15\nChanged\n\nDocumentation updates\n\n[1.1.0] - 2019-05-13\nRemoved\n\nRemoved the NgxEditorJSPluginService from this module back to core\n\n[1.0.0] - 2019-05-11\nAdded\n\nInitial release of module with default plugins - see README.md for details.\nMoved the internal PluginService to public NgxEditorJSPluginService provided by this module\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
