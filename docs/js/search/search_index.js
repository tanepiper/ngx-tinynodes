var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppContainerComponent.html",[0,1.541,1,2.37]],["body/components/AppContainerComponent.html",[0,2.579,1,3.078,2,2.04,3,0.097,4,0.183,5,1.615,6,1.213,7,1.405,8,1.615,9,0.074,10,3.036,11,2.88,12,0.222,13,3.184,14,1.26,15,1.271,16,3.425,17,3.633,18,1.685,19,3.838,20,3.299,21,1.556,22,4.386,23,1.85,24,2.493,25,5.43,26,2.493,27,4.446,28,0.35,29,0.917,30,7.27,31,1.329,32,4.316,33,4.316,34,2.1,35,3.343,36,2.831,37,3.838,38,2.241,39,6.107,40,5.43,41,4.804,42,4.804,43,1.271,44,2.548,45,3.299,46,6.107,47,6.107,48,2.167,49,6.107,50,1.456,51,2.88,52,1.491,53,0.009,54,1.471,55,0.677,56,0.787,57,1.981,58,0.634,59,2.111,60,1.981,61,2.169,62,2.88,63,1.911,64,2.493,65,2.88,66,3.933,67,1.911,68,2.167,69,2.88,70,4.392,71,3.933,72,1.276,73,2.88,74,3.933,75,3.251,76,1.927,77,5.43,78,2.329,79,4.446,80,2.88,81,2.705,82,2.88,83,2.88,84,1.624,85,2.419,86,2.88,87,2.88,88,2.687,89,2.88,90,2.88,91,5.403,92,2.88,93,2.88,94,3.343,95,0.356,96,2.493,97,2.329,98,0.396,99,1.752,100,0.901,101,1.556,102,1.321,103,1.981,104,1.091,105,3.142,106,1.752,107,1.502,108,2.548,109,0.091,110,0.26,111,3.148,112,2.566,113,1.491,114,2.548,115,1.752,116,2.166,117,2.166,118,4.446,119,3.596,120,2.88,121,2.88,122,2.88,123,2.88,124,2.88,125,4.086,126,2.88,127,2.88,128,2.88,129,2.88,130,1.599,131,2.88,132,1.872,133,1.362,134,2.88,135,2.88,136,2.88,137,2.88,138,2.166,139,2.166,140,2.88,141,1.12,142,2.88,143,2.88,144,2.88,145,2.166,146,2.166,147,2.548,148,1.405,149,2.88,150,2.88,151,3.327,152,2.035,153,2.934,154,2.166,155,2.88,156,2.169,157,2.548,158,3.933,159,3.933,160,2.548,161,2.548,162,2.548,163,2.548,164,2.548,165,1.213,166,1.013,167,1.556,168,3.933,169,3.425,170,4.804,171,2.548,172,2.548,173,1.752,174,2.493,175,2.975,176,0.656,177,3.933,178,2.548,179,2.329,180,2.548,181,3.596,182,2.548,183,2.548,184,2.548,185,2.166,186,1.68,187,2.548,188,2.548,189,0.989,190,2.493,191,1.872,192,1.283,193,3.425,194,1.615,195,1.615,196,1.321,197,1.405,198,1.468,199,1.502,200,2.493,201,1.362,202,1.502,203,1.615,204,1.452,205,1.615,206,1.615,207,1.362,208,1.615,209,1.405,210,0.312,211,1.391,212,1.615,213,1.452,214,1.615,215,1.452,216,1.362,217,1.615,218,1.362,219,1.615,220,1.405,221,1.452,222,1.556,223,1.283,224,1.502,225,1.615,226,0.003,227,0.004,228,0.003]],["title/modules/AppModule.html",[229,0.851,230,3.323]],["body/modules/AppModule.html",[1,4.418,3,0.14,4,0.14,9,0.106,10,1.575,12,0.321,13,3.038,14,1.505,23,1.615,53,0.009,57,1.851,63,2.05,95,0.466,98,0.572,99,2.528,100,2.105,101,3.635,108,3.676,109,0.132,110,0.375,119,4.712,189,1.427,198,1.359,201,3.765,204,4.013,210,0.297,211,1.823,221,4.013,226,0.004,227,0.005,228,0.004,229,1.218,230,6.537,231,1.498,232,1.616,233,2.913,234,2.913,235,1.616,236,1.616,237,3.676,238,3.676,239,3.676,240,3.676,241,5.627,242,5.327,243,5.327,244,4.481,245,5.627,246,5.327,247,2.596,248,1.75,249,1.75,250,4.155,251,5.826,252,4.118,253,4.712,254,3.148,255,4.712,256,5.826,257,3.36,258,2.325,259,5.826,260,3.676,261,3.676,262,5.155,263,4.712,264,2.646,265,5.826,266,4.155,267,4.155,268,2.937,269,3.676,270,3.676,271,2.028,272,4.155,273,3.676,274,3.676,275,3.36,276,3.36,277,4.155,278,4.155,279,4.155,280,4.155,281,3.676,282,4.155,283,4.155,284,4.155,285,3.676,286,3.676,287,3.676,288,3.125,289,5.826,290,4.155,291,4.155,292,2.937,293,4.155,294,4.155,295,4.155,296,4.155,297,4.155]],["title/modules/AppRoutingModule.html",[229,0.851,241,3.323]],["body/modules/AppRoutingModule.html",[0,1.995,3,0.205,4,0.205,9,0.156,10,2.308,12,0.47,13,3.175,14,1.676,15,2.143,53,0.009,57,3.34,95,0.414,98,0.838,109,0.237,110,0.549,201,3.545,202,3.909,226,0.005,227,0.007,228,0.005,229,1.357,231,2.196,236,2.368,241,5.298,254,3.29,258,2.991,286,5.387,287,5.387,298,5.387,299,5.387,300,7.496,301,5.015,302,7.496,303,6.062,304,6.062,305,3.415,306,5.387,307,2.495,308,5.387,309,6.632,310,5.387,311,5.387,312,4.579,313,6.089]],["title/injectables/AppService.html",[45,2.54,314,0.991]],["body/injectables/AppService.html",[3,0.118,4,0.118,9,0.09,12,0.521,13,3.518,14,1.604,15,1.475,23,1.804,28,0.427,31,2.017,34,2.276,35,3.879,38,2.6,43,1.475,45,2.787,50,1.33,52,2.522,53,0.009,54,1.585,55,0.938,56,1.194,59,2.379,67,2.495,68,1.399,71,4.563,72,1.437,75,2.233,76,2.346,84,2.248,85,3.626,88,2.493,95,0.407,98,0.482,104,1.329,105,3.645,107,1.829,109,0.111,110,0.316,111,2.649,112,2.379,130,1.882,132,3.027,141,2.795,169,2.893,211,2.352,226,0.003,227,0.005,228,0.003,235,2.005,255,5.456,257,2.836,271,3.891,314,1.088,315,1.329,316,0.488,317,3.507,318,2.841,319,4.171,320,1.542,321,2.245,322,3.879,323,3.009,324,4.563,325,4.563,326,3.645,327,2.836,328,4.105,329,3.783,330,6.651,331,3.507,332,2.439,333,3.139,334,5.081,335,4.787,336,4.563,337,4.563,338,1.009,339,3.507,340,1.651,341,4.171,342,4.563,343,5.814,344,4.563,345,3.507,346,3.645,347,2.206,348,4.563,349,1.689,350,3.507,351,3.879,352,3.102,353,3.507,354,2.69,355,1.442,356,2.134,357,1.264,358,2.893,359,1.768,360,1.768,361,2.726,362,2.346,363,2.836,364,2.478,365,3.102,366,3.102,367,3.102,368,3.102,369,3.102,370,3.102,371,3.139,372,3.723,373,3.102,374,3.102,375,3.507,376,3.507,377,3.102,378,3.102,379,3.102,380,3.102,381,3.102,382,3.102,383,1.399,384,3.102,385,3.102,386,3.102,387,3.102]],["title/injectables/AppService-1.html",[45,2.141,314,0.836,388,1.361]],["body/injectables/AppService-1.html",[3,0.123,4,0.123,9,0.093,10,2.888,12,0.53,13,3.583,14,1.623,15,1.517,28,0.443,31,2.054,34,2.298,35,5.167,38,2.674,43,1.517,45,2.866,50,1.351,52,2.449,53,0.009,54,1.54,55,0.911,56,1.108,67,2.522,68,1.454,75,2.297,84,2.278,85,3.662,88,2.539,95,0.411,98,0.501,104,1.381,105,3.749,107,1.9,109,0.115,110,0.329,111,2.709,112,2.432,130,1.912,132,3.075,141,2.839,169,2.044,211,2.384,226,0.003,227,0.005,228,0.003,235,2.063,255,5.557,257,2.947,271,3.933,314,1.119,315,1.381,318,2.893,319,4.291,320,1.586,321,2.234,322,3.99,323,3.095,324,4.693,325,4.693,326,3.749,327,2.947,328,4.181,329,3.853,330,6.742,332,2.509,333,3.228,334,5.161,335,4.852,336,4.693,337,4.693,338,1.023,340,1.698,341,4.291,342,4.693,343,5.905,344,4.693,346,3.749,347,2.255,348,4.693,349,1.715,351,3.99,352,3.224,354,2.766,355,1.483,356,2.218,357,1.314,358,2.975,359,1.837,360,1.837,361,2.364,362,2.438,363,2.947,364,2.576,365,3.224,366,3.224,367,3.224,368,3.224,369,3.224,370,3.224,371,2.218,372,3.228,373,3.224,374,3.224,377,3.224,378,3.224,379,3.224,380,3.224,381,3.224,382,3.224,383,1.454,384,3.224,385,3.224,386,3.224,387,3.224,389,3.644,390,3.644,391,3.644,392,3.644,393,3.644,394,3.644,395,3.644]],["title/interfaces/ApplicationData.html",[358,2.637,396,0.24]],["body/interfaces/ApplicationData.html",[3,0.169,4,0.169,9,0.128,12,0.571,14,1.363,23,1.586,28,0.608,29,1.363,48,2.637,53,0.009,55,0.824,56,1.311,57,2.944,64,4.417,72,1.739,75,3.205,88,3.357,95,0.255,109,0.234,141,3.272,165,3.317,166,2.325,173,4.02,174,2.802,186,3.855,226,0.004,227,0.006,228,0.004,305,2.802,316,0.324,338,1.152,347,2.84,349,1.739,355,1.397,358,3.705,383,3.143,396,0.418,397,1.077,398,4.041,399,4.42,400,4.42,401,2.569,402,4.42,403,4.952,404,5.269,405,3.731,406,2.226,407,3.182,408,4.207,409,2.226,410,3.041,411,4.952,412,3.041,413,3.343,414,2.226,415,3.343,416,3.343,417,3.182,418,2.606]],["title/interfaces/ApplicationData-1.html",[358,2.222,388,1.361,396,0.202]],["body/interfaces/ApplicationData-1.html",[3,0.169,4,0.169,9,0.128,10,1.897,12,0.572,14,1.365,23,1.202,28,0.609,29,1.365,48,2.64,53,0.009,55,0.825,56,1.312,57,2.947,64,4.42,72,1.74,75,3.208,88,3.358,95,0.255,109,0.235,141,3.273,165,3.319,166,2.328,173,4.025,174,2.807,186,3.859,226,0.004,227,0.006,228,0.004,305,2.807,338,1.153,347,2.842,349,1.74,355,1.4,358,3.71,383,3.145,396,0.418,397,1.079,399,4.426,400,4.426,401,2.572,402,4.426,403,4.957,404,5.273,405,3.735,406,2.23,407,3.188,408,4.212,409,2.23,410,3.046,411,4.957,412,3.046,413,3.349,414,2.23,415,3.349,416,3.349,417,3.188,418,2.61,419,4.049]],["title/modules/ApplicationDataModule.html",[229,0.851,242,3.146]],["body/modules/ApplicationDataModule.html",[3,0.198,4,0.198,9,0.15,12,0.452,14,1.51,23,1.916,45,4.742,53,0.008,84,2.188,95,0.427,98,0.806,109,0.186,110,0.528,189,2.013,226,0.005,227,0.007,228,0.005,229,1.445,231,2.112,232,2.278,233,2.537,234,2.537,235,3.103,236,2.278,242,6.116,247,3.261,248,2.467,249,2.467,258,2.921,316,0.38,328,5.341,329,4.922,363,4.738,364,4.141,406,3.261,420,5.183,421,5.183,422,5.859,423,3.689,424,7.319,425,5.919,426,4.897,427,5.859]],["title/injectables/ApplicationQuery.html",[314,0.991,328,2.861]],["body/injectables/ApplicationQuery.html",[3,0.201,4,0.201,9,0.152,12,0.57,14,1.524,23,1.773,43,1.7,50,1.1,52,1.995,53,0.009,54,1.254,55,0.742,56,1.053,84,2.208,95,0.429,98,0.818,109,0.188,110,0.725,132,2.504,226,0.005,227,0.007,228,0.005,268,2.997,271,4.359,314,1.558,315,2.254,316,0.48,321,1.977,328,4.495,329,4.713,334,6.108,362,3.978,364,4.202,423,3.724,428,5.946,429,5.555,430,2.259,431,4.809,432,5.946,433,2.42,434,2.948,435,2.728,436,4.472,437,4.809]],["title/injectables/ApplicationQuery-1.html",[314,0.836,328,2.411,388,1.361]],["body/injectables/ApplicationQuery-1.html",[3,0.202,4,0.202,9,0.153,10,2.807,12,0.572,14,1.528,43,1.707,50,1.105,52,2.003,53,0.009,54,1.259,55,0.745,56,1.057,84,2.214,95,0.43,98,0.821,109,0.189,110,0.726,132,2.515,226,0.005,227,0.007,228,0.005,268,3.01,271,4.363,314,1.562,315,2.263,321,1.982,328,4.507,329,4.721,334,6.116,362,3.995,364,4.22,423,3.733,429,5.57,430,2.265,431,4.83,433,2.427,434,2.956,435,2.74,436,4.491,437,4.83,438,5.972,439,5.972]],["title/interfaces/ApplicationState.html",[396,0.24,435,2.157]],["body/interfaces/ApplicationState.html",[3,0.155,4,0.155,9,0.117,12,0.355,14,1.643,23,1.499,28,0.559,29,1.289,53,0.009,54,1.317,55,0.885,61,3.462,72,1.666,84,2.276,88,2.308,95,0.319,100,1.437,109,0.26,141,3.37,148,3.047,176,0.922,198,1.608,210,0.419,211,2.789,226,0.004,227,0.006,228,0.004,316,0.298,320,1.373,321,2.367,338,0.617,340,1.471,347,2.87,349,1.666,354,3.256,355,1.746,359,2.316,360,2.316,361,3.941,383,3.459,396,0.429,397,0.99,405,2.316,414,2.046,430,1.405,435,2.865,440,3.073,441,3.374,442,3.502,443,2.63,444,2.172,445,2.107,446,2.395,447,2.482,448,2.241,449,1.746,450,3.256,451,2.395]],["title/interfaces/ApplicationState-1.html",[388,1.361,396,0.202,435,1.818]],["body/interfaces/ApplicationState-1.html",[3,0.157,4,0.157,9,0.119,10,1.767,12,0.36,14,1.651,23,1.119,28,0.567,29,1.302,53,0.009,54,1.33,55,0.892,61,3.488,72,1.679,84,2.29,88,2.331,95,0.322,100,1.459,109,0.261,141,3.38,176,0.931,198,1.616,210,0.421,211,2.775,226,0.004,227,0.006,228,0.004,320,1.394,321,2.373,338,0.626,340,1.493,347,2.762,349,1.679,354,3.289,355,1.764,359,2.35,360,2.35,361,3.951,383,3.47,396,0.43,397,1.005,414,2.077,430,1.426,435,2.894,441,3.408,442,3.538,443,2.656,444,2.205,445,2.139,446,2.431,447,2.519,448,2.275,449,1.764,450,3.289,451,2.431,452,3.119]],["title/injectables/ApplicationStore.html",[314,0.991,329,2.637]],["body/injectables/ApplicationStore.html",[3,0.206,4,0.206,9,0.156,12,0.472,14,1.798,23,1.804,43,2.326,50,1.132,53,0.009,54,1.29,84,2.538,95,0.415,98,0.841,109,0.194,110,0.551,141,2.378,226,0.005,227,0.007,228,0.005,268,3.083,271,4.252,314,1.585,315,2.318,316,0.488,321,2.011,329,4.215,361,2.725,362,4.092,383,2.441,423,3.789,430,2.299,435,2.806,453,6.116,454,6.116,455,5.029,456,5.652,457,4.322,458,2.725]],["title/injectables/ApplicationStore-1.html",[314,0.836,329,2.222,388,1.361]],["body/injectables/ApplicationStore-1.html",[3,0.207,4,0.207,9,0.157,10,2.856,12,0.474,14,1.8,43,2.331,50,1.137,53,0.009,54,1.295,84,2.542,95,0.416,98,0.845,109,0.195,110,0.554,141,2.388,226,0.006,227,0.007,228,0.006,268,3.097,271,4.257,314,1.589,315,2.328,321,2.017,329,4.227,361,2.737,362,4.11,383,2.451,423,3.799,430,2.305,435,2.818,455,5.042,456,5.668,457,4.341,458,2.737,459,6.143,460,6.143]],["title/interfaces/BasePlugin.html",[396,0.24,461,1.876]],["body/interfaces/BasePlugin.html",[3,0.168,4,0.168,9,0.127,12,0.384,14,1.026,28,0.605,29,1.359,31,2.35,50,0.92,53,0.009,55,0.821,56,1.541,95,0.336,98,0.684,109,0.259,110,0.448,113,2.209,130,1.724,198,1.004,210,0.377,226,0.004,227,0.006,228,0.004,229,1.192,307,2.698,316,0.323,320,1.486,338,0.991,349,1.846,357,1.792,396,0.417,397,1.071,461,3.136,462,3.738,463,4.405,464,3.557,465,2.838,466,3.841,467,4.246,468,4.098,469,3.835,470,4.405,471,2.787,472,3.289,473,4.939,474,1.246,475,1.984,476,2.787,477,3.325,478,2.152,479,2.9,480,3.165,481,1.792,482,3.557,483,3.557,484,2.698,485,3.024,486,3.165,487,3.024,488,2.093,489,2.787,490,3.165]],["title/interfaces/BasePlugin-1.html",[388,1.361,396,0.202,461,1.581]],["body/interfaces/BasePlugin-1.html",[3,0.167,4,0.167,9,0.127,12,0.383,14,1.024,28,0.604,29,1.357,31,2.348,50,0.918,53,0.009,55,0.82,56,1.54,95,0.336,98,0.682,109,0.259,110,0.447,113,2.206,130,1.722,198,1.002,210,0.401,226,0.004,227,0.006,228,0.004,229,1.19,307,2.695,316,0.322,320,1.483,338,0.99,349,1.845,357,1.789,396,0.417,397,1.069,461,3.134,463,4.4,464,3.553,465,2.837,466,3.836,467,4.245,468,4.095,469,3.832,470,4.4,471,2.782,472,3.286,473,4.935,474,1.244,475,1.98,476,2.782,477,3.319,478,2.148,479,2.895,480,3.159,481,1.789,482,3.553,483,3.553,484,2.695,485,3.019,486,3.159,487,3.019,488,2.089,489,2.782,490,3.159,491,3.731]],["title/interfaces/Block.html",[176,0.694,396,0.24]],["body/interfaces/Block.html",[3,0.132,4,0.132,6,1.651,9,0.1,12,0.303,28,0.477,29,1.467,50,0.726,53,0.009,55,1.159,56,1.258,58,1.654,72,1.531,109,0.265,156,3.468,165,2.355,166,2.893,167,3.022,176,1.359,210,0.42,226,0.004,227,0.005,228,0.004,301,2.623,316,0.363,321,2.271,338,1.153,340,2.406,349,1.314,388,1.347,396,0.45,397,0.845,401,1.525,409,2.492,430,2.174,434,1.565,465,1.199,492,2.199,493,2.199,494,3.921,495,2.422,496,2.119,497,3.136,498,3.136,499,2.045,500,1.913,501,3.136,502,3.022,503,3.08,504,3.022,505,3.386,506,2.916,507,2.288,508,1.486,509,3.022,510,3.554,511,3.263,512,2.199,513,3.399,514,2.288,515,2.288,516,2.288,517,2.288,518,2.288,519,3.022,520,2.119,521,2.199]],["title/interfaces/BlocksMap.html",[396,0.24,522,2.637]],["body/interfaces/BlocksMap.html",[3,0.168,4,0.168,9,0.127,12,0.384,50,0.921,53,0.009,55,0.822,72,1.548,84,1.489,95,0.377,102,4.234,103,2.218,104,1.887,109,0.266,133,3.117,176,1.208,210,0.45,226,0.004,227,0.006,228,0.004,316,0.428,338,1.151,340,1.594,349,2.121,357,3.255,396,0.429,397,1.073,433,1.632,449,1.392,474,1.248,493,2.792,508,2.498,522,3.697,523,3.331,524,6.04,525,3.846,526,4.979,527,2.905,528,3.846,529,2.284,530,2.905,531,2.284,532,2.905,533,2.355,534,1.987,535,2.792,536,2.905,537,2.355,538,2.097,539,2.792]],["title/interfaces/ChangeMap.html",[396,0.24,539,2.637]],["body/interfaces/ChangeMap.html",[3,0.167,4,0.167,9,0.127,12,0.383,50,0.918,53,0.009,55,0.82,72,1.545,84,1.483,95,0.376,102,4.232,103,2.21,104,1.88,109,0.266,133,3.11,176,1.089,210,0.449,226,0.004,227,0.006,228,0.004,316,0.427,338,1.15,340,1.588,349,2.119,357,3.253,396,0.429,397,1.069,433,1.626,449,1.387,474,1.244,493,2.782,508,2.977,522,2.782,523,3.319,524,6.037,525,2.895,527,2.895,528,3.836,529,2.276,530,2.895,531,2.276,532,2.895,533,2.346,534,1.98,535,2.782,536,3.836,537,3.11,538,2.769,539,3.688,540,4.961]],["title/classes/Changed.html",[110,0.424,541,2.224]],["body/classes/Changed.html",[3,0.161,4,0.161,9,0.122,18,3.148,28,0.581,29,1.323,34,1.792,43,1.365,50,1.339,52,1.602,53,0.009,54,1.007,55,1.126,56,0.845,58,1.051,59,1.856,95,0.327,109,0.269,110,0.727,112,3.299,198,1.629,210,0.446,226,0.004,227,0.006,228,0.004,316,0.502,321,1.715,338,1.083,443,2.011,474,1.197,529,3.957,534,3.219,541,3.815,542,2.785,543,4.925,544,3.04,545,4.425,546,3.374,547,4.841,548,6.409,549,4.774,550,4.53,551,3.194,552,3.909,553,2.678,554,4.221,555,3.9,556,1.856,557,4.221,558,3.04,559,4.403,560,3.374,561,5.137,562,3.137,563,3.374,564,3.374,565,3.374,566,3.194]],["title/interfaces/CreateEditorJSOptions.html",[396,0.24,567,3.536]],["body/interfaces/CreateEditorJSOptions.html",[3,0.091,4,0.091,9,0.069,12,0.207,15,0.767,16,1.505,20,1.449,28,0.326,29,0.868,34,2.199,43,0.767,48,1.679,53,0.009,54,1.095,55,0.648,56,1.254,58,0.591,60,1.195,67,1.624,68,2.072,72,1.219,84,1.258,85,3.267,95,0.374,98,0.369,102,1.93,103,1.875,104,1.017,106,1.632,107,1.399,109,0.186,110,0.242,111,2.765,112,2.018,113,1.972,115,2.56,130,2.059,132,3.455,176,0.868,210,0.423,226,0.002,227,0.004,228,0.002,307,1.099,314,0.887,316,0.174,318,1.13,320,0.802,332,1.269,338,1.102,340,0.859,355,1.894,356,1.632,357,1.872,371,1.632,372,1.632,396,0.265,397,0.578,406,1.875,418,1.399,433,2.853,443,1.13,444,1.269,445,1.231,449,2.199,458,2.313,474,0.672,475,1.679,478,2.765,484,1.099,488,1.13,525,1.565,527,2.455,529,1.93,531,1.231,533,1.99,534,1.071,536,1.565,537,1.269,538,2.475,541,1.269,545,3.694,552,1.449,553,1.505,556,2.018,562,3.441,567,3.904,568,2.018,569,2.56,570,4.132,571,2.765,572,3.933,573,4.132,574,3.305,575,1.795,576,1.708,577,1.505,578,2.455,579,1.708,580,1.896,581,2.56,582,1.795,583,2.455,584,2.17,585,2.17,586,2.815,587,2.018,588,2.018,589,1.795,590,1.269,591,1.632,592,3.249,593,4.154,594,3.473,595,3.164,596,2.36,597,3.164,598,2.805,599,3.164,600,3.164,601,1.99,602,1.399,603,1.795,604,1.231,605,3.403,606,2.17,607,2.17,608,2.17,609,2.17,610,1.896,611,2.17,612,2.17,613,2.17,614,5.164,615,2.17,616,2.17,617,2.17,618,2.17,619,2.17,620,2.17,621,2.17,622,2.17,623,2.17,624,2.17,625,2.929,626,1.565,627,3.005,628,2.17,629,2.56,630,1.565,631,2.018,632,2.018,633,1.795,634,2.17,635,1.632,636,2.17,637,2.17,638,2.17,639,2.17,640,2.17,641,1.875,642,2.17,643,1.632,644,1.231,645,2.17,646,2.17,647,1.896,648,2.17,649,3.403,650,3.164,651,2.17,652,2.17,653,1.896,654,2.17,655,1.896,656,2.17,657,2.17,658,2.679,659,1.708,660,3.164,661,3.164,662,2.17,663,2.974,664,2.17,665,2.17,666,2.17,667,2.17,668,1.795,669,2.018,670,2.17,671,1.896,672,2.17]],["title/interfaces/DemoData.html",[361,2.095,396,0.24]],["body/interfaces/DemoData.html",[3,0.157,4,0.157,9,0.119,12,0.359,14,1.474,23,1.512,28,0.566,29,1.3,53,0.009,54,1.738,55,0.786,61,3.075,72,1.093,84,2.136,88,1.72,95,0.322,100,1.456,109,0.261,141,3.11,148,3.075,176,0.93,198,1.665,210,0.43,211,2.855,226,0.004,227,0.006,228,0.004,316,0.302,320,1.392,321,2.419,338,0.959,340,2.287,347,2.575,349,1.678,354,2.427,355,1.302,359,2.346,360,2.346,361,3.756,383,3.192,396,0.438,397,1.003,405,2.346,414,2.807,430,1.424,435,2.136,440,3.114,441,2.515,442,2.61,443,2.653,444,2.201,445,2.891,446,2.427,447,2.515,448,2.271,449,1.762,450,3.286,451,2.427]],["title/interfaces/DemoData-1.html",[361,1.766,388,1.361,396,0.202]],["body/interfaces/DemoData-1.html",[3,0.159,4,0.159,9,0.121,10,1.791,12,0.365,14,1.485,23,1.134,28,0.575,29,1.314,53,0.009,54,1.746,55,0.794,61,3.106,72,1.11,84,2.152,88,1.747,95,0.325,100,1.479,109,0.262,141,3.126,176,0.94,198,1.672,210,0.432,211,2.848,226,0.004,227,0.006,228,0.004,320,1.413,321,2.424,338,0.967,340,2.304,347,2.295,349,1.691,354,2.464,355,1.321,359,2.382,360,2.382,361,3.771,383,3.208,396,0.439,397,1.018,414,2.836,430,1.445,435,2.168,441,2.553,442,2.65,443,2.681,444,2.235,445,2.921,446,2.464,447,2.553,448,2.306,449,1.78,450,3.319,451,2.464,452,3.162]],["title/interfaces/EditorJSAction.html",[396,0.24,587,3.536]],["body/interfaces/EditorJSAction.html",[3,0.092,4,0.092,9,0.069,12,0.21,15,0.776,16,1.522,20,1.466,28,0.33,29,0.876,34,2.206,43,0.776,48,1.694,53,0.009,54,1.247,55,0.53,56,1.047,58,0.598,60,1.209,67,1.636,68,2.087,72,0.638,84,1.269,85,3.28,95,0.376,98,0.373,102,1.948,103,1.892,104,1.029,106,1.652,107,1.415,109,0.187,110,0.245,111,2.78,112,2.033,113,1.984,115,2.584,130,2.065,132,3.464,176,0.873,210,0.424,226,0.002,227,0.004,228,0.002,307,1.112,314,0.895,316,0.176,318,1.143,320,0.811,332,1.284,338,1.104,340,1.674,355,1.654,356,1.652,357,1.886,371,1.652,372,1.652,396,0.302,397,0.585,406,1.209,418,1.415,433,2.858,443,1.143,444,1.284,445,1.245,449,2.206,458,1.892,474,0.68,475,1.083,478,2.265,484,1.112,488,1.143,525,1.583,527,2.477,529,3.123,531,1.245,533,2.008,534,1.083,536,1.583,537,1.284,538,2.202,541,1.284,545,4.238,552,1.466,553,1.522,556,2.033,562,3.447,567,3.193,568,2.041,569,1.652,570,3.051,571,1.838,572,1.816,573,3.746,574,2.704,575,1.816,576,1.728,577,1.522,578,2.477,579,1.728,580,1.918,581,2.584,582,1.816,583,2.477,584,2.195,585,3.434,586,3.958,587,3.193,588,2.041,589,1.816,590,1.284,591,1.652,592,3.26,593,4.181,594,3.499,595,3.193,596,2.381,597,3.193,598,2.826,599,3.193,600,3.193,601,2.008,602,1.415,603,1.816,604,1.245,605,3.434,606,2.195,607,2.195,608,2.195,609,2.195,610,1.918,611,2.195,612,2.195,613,2.195,614,5.192,615,2.195,616,2.195,617,2.195,618,2.195,619,2.195,620,2.195,621,2.195,622,2.195,623,2.195,624,2.195,625,2.946,626,1.583,627,3.017,628,2.195,629,2.584,630,1.583,631,2.041,632,2.041,633,1.816,634,2.195,635,1.652,636,2.195,637,2.195,638,2.195,639,2.195,640,2.195,641,1.892,642,2.195,643,1.652,644,1.245,645,2.195,646,2.195,647,1.918,648,2.195,649,3.434,650,3.193,651,2.195,652,2.195,653,1.918,654,2.195,655,1.918,656,2.195,657,2.195,658,2.704,659,1.728,660,3.193,661,3.193,662,2.195,663,3.001,664,2.195,665,2.195,666,2.195,667,2.195,668,1.816,669,2.041,670,2.195,671,1.918,672,2.195]],["title/components/EditorJSBaseComponent.html",[0,1.541,196,2.157]],["body/components/EditorJSBaseComponent.htmltitle/interfaces/EditorJSConfig.html",[396,0.24,577,2.637]],["body/interfaces/EditorJSConfig.html",[3,0.141,4,0.141,9,0.107,12,0.323,28,0.509,29,1.209,48,2.337,53,0.009,54,1.235,55,1.043,56,1.594,57,1.865,58,1.757,72,1.875,95,0.299,98,0.576,109,0.244,113,2.266,153,3.165,176,1.178,191,2.466,210,0.427,226,0.004,227,0.005,228,0.004,292,2.959,307,2.769,316,0.272,320,2.188,321,2.136,338,1.141,355,1.638,396,0.299,397,0.902,433,2.214,458,2.61,471,2.348,474,1.049,475,3.185,482,2.262,483,3.165,503,2.4,508,2.56,537,2.77,552,3.954,562,2.845,569,2.547,571,2.925,573,3.417,577,3.285,578,3.941,579,2.666,604,1.921,625,1.921,627,2.4,685,4.896,686,4.896,687,4.896,688,4.896,689,4.896,690,5.34,700,3.417,701,3.73,703,3.919,704,4.14,706,4.14,711,3.919,712,3.919,713,3.564,714,3.919,715,3.564,716,5.172,718,4.14,748,4.14,754,3.386,755,5.182,756,4.405,757,3.919,758,5.182,759,3.386,760,3.386,761,3.386,762,3.386,763,3.386,764,2.547,765,3.148,766,3.386,767,3.148,768,3.386,769,3.386]],["title/interfaces/EditorJSInstanceConfig.html",[396,0.24,770,3.803]],["body/interfaces/EditorJSInstanceConfig.html",[3,0.063,4,0.063,7,0.913,9,0.048,12,0.144,14,0.386,15,0.535,16,1.049,20,1.011,28,0.228,29,0.648,34,2.018,43,0.535,48,1.895,53,0.009,55,0.856,56,0.841,58,0.412,59,2.366,60,2.552,67,1.486,68,2.112,70,1.513,85,3.056,95,0.311,98,0.257,102,2.428,103,2.116,104,0.709,106,1.138,107,0.975,109,0.15,110,0.428,111,3.295,112,1.22,113,2.621,116,2.36,130,1.796,132,3.533,133,1.484,138,2.36,139,1.407,145,1.407,146,1.407,165,1.708,169,1.76,176,0.899,191,0.788,210,0.451,226,0.002,227,0.003,228,0.002,307,2.617,314,0.662,316,0.121,318,2,332,1.484,333,3.22,338,1.106,355,0.523,356,1.138,357,2.194,371,3.22,372,1.91,396,0.095,397,0.403,406,0.833,429,3.05,433,2.801,434,0.746,449,2.018,458,0.833,464,1.696,468,2.987,471,1.049,474,0.469,475,2.112,482,1.011,483,1.011,513,1.637,522,2.663,528,1.091,529,0.858,530,2.366,531,1.861,532,2.366,533,1.484,534,2.112,535,2.663,538,2.412,539,2.663,556,1.846,562,3.361,571,0.81,573,4.112,575,1.251,576,1.191,581,1.138,586,3.54,591,1.138,592,3.614,594,2.713,596,2.663,598,2.191,603,1.251,604,3.047,625,2.792,626,1.091,627,3.017,635,1.138,647,1.322,653,1.322,658,1.999,659,1.191,663,3.74,671,1.322,679,3.571,694,1.138,764,1.138,770,3.28,771,1.513,772,1.513,773,2.538,774,4.201,775,4.307,776,2.538,777,2.777,778,2.538,779,1.655,780,1.655,781,1.191,782,1.513,783,1.407,784,1.513,785,1.407,786,1.513,787,1.655,788,1.513,789,1.655,790,1.407,791,1.655,792,1.655,793,2.777,794,2.777,795,1.655,796,4.922,797,1.407,798,2.36,799,1.655,800,1.655,801,1.655,802,4.681,803,1.655,804,1.655,805,1.655,806,1.655,807,3.588,808,1.655,809,3.588,810,1.655,811,3.588,812,1.655,813,4.681,814,1.655,815,1.655,816,1.655,817,4.681,818,1.655,819,1.655,820,2.777,821,3.588,822,1.655,823,1.655,824,1.91,825,4.201,826,1.655,827,1.655,828,1.655,829,4.201,830,1.655,831,5.385,832,4.681,833,1.655,834,1.655,835,1.655,836,5.65,837,1.407,838,1.655,839,1.655,840,1.655,841,1.513,842,1.655,843,2.777,844,1.655,845,1.655,846,1.655,847,1.655,848,1.655,849,1.655,850,1.655,851,1.655,852,1.655,853,1.655,854,1.655,855,3.28,856,1.655,857,1.655,858,1.655,859,2.777,860,4.681,861,1.655,862,2.777,863,1.407,864,1.513,865,1.655,866,1.655,867,1.655,868,4.201,869,1.655,870,1.655,871,1.655,872,1.655,873,1.655,874,1.655,875,1.655,876,1.407,877,1.655,878,1.655,879,2.866,880,3.05,881,1.655,882,1.655,883,1.655,884,1.655,885,3.28,886,3.05,887,1.655,888,1.655,889,1.655,890,1.655,891,1.655,892,1.655,893,2.777,894,1.655,895,1.655,896,1.049,897,1.049,898,1.655,899,1.655]],["title/interfaces/EditorJSMaterialForm.html",[396,0.24,900,4.16]],["body/interfaces/EditorJSMaterialForm.html",[0,2.216,2,1.094,3,0.08,4,0.08,9,0.061,12,0.184,14,0.492,17,2.563,18,0.904,19,3.395,20,2.07,22,1.243,24,1.337,26,1.337,32,1.685,33,1.685,34,2.083,43,0.682,53,0.009,55,0.297,56,0.85,58,0.525,59,2.959,60,1.062,68,2.195,72,1.512,81,5.302,84,2.525,85,1.707,95,0.38,96,2.149,97,1.928,98,0.328,99,1.451,103,2.14,104,0.904,107,1.243,109,0.152,110,0.345,111,3.045,112,1.49,113,1.611,115,1.451,130,1.9,132,3.265,133,1.128,151,3.41,169,2.694,186,2.235,191,1.004,196,1.758,198,0.97,210,0.345,218,1.812,223,2.14,226,0.002,227,0.003,228,0.002,235,0.927,252,2.708,301,1.595,307,0.977,316,0.155,318,1.613,333,1.451,335,3.058,338,0.645,346,1.685,355,2.345,357,0.86,396,0.245,397,0.514,407,1.518,423,1.202,430,1.469,433,1.255,434,0.952,455,4.525,458,2.14,464,3.256,467,1.163,508,0.904,538,1.004,562,0.927,570,3.209,586,2.563,592,1.613,598,1.288,601,2.272,602,2.505,604,2.204,625,1.094,626,1.391,627,2.47,661,2.881,677,1.793,694,1.451,698,1.793,700,1.391,701,4.307,715,3.347,728,3.099,734,3.837,740,3.099,743,1.595,744,1.685,746,1.928,747,1.928,748,1.685,749,3.39,751,2.109,757,2.563,781,1.518,790,2.881,863,1.793,879,1.685,896,2.149,900,5.331,901,2.109,902,1.928,903,2.109,904,4.867,905,3.831,906,2.384,907,2.384,908,2.384,909,3.831,910,3.099,911,3.831,912,3.831,913,5.501,914,4.249,915,5.501,916,4.803,917,3.099,918,3.831,919,1.928,920,1.928,921,2.109,922,3.39,923,1.595,924,2.109,925,1.685,926,1.595,927,2.384,928,2.384,929,3.214,930,2.384,931,5.501,932,2.384,933,2.384,934,2.384,935,2.384,936,2.384,937,2.384,938,7.033,939,2.384,940,3.831,941,2.384,942,2.384,943,6.435,944,2.384,945,4.803,946,2.384,947,2.384,948,2.384,949,2.384,950,3.831,951,2.384,952,2.384,953,2.384,954,2.384,955,6.435,956,2.384,957,3.831,958,2.384,959,2.384,960,2.384,961,2.384,962,3.831,963,2.384,964,2.384,965,2.109,966,2.109,967,2.109,968,2.881,969,2.109,970,2.384,971,3.831,972,2.384,973,2.384,974,2.384,975,2.384,976,2.384,977,4.803,978,2.384,979,2.384,980,3.831,981,2.384,982,2.384,983,2.384,984,2.708,985,2.384,986,2.384,987,4.803,988,3.831,989,2.384,990,2.109,991,2.109,992,3.831,993,2.384,994,1.451,995,3.831,996,2.384,997,2.384,998,2.384,999,2.384,1000,2.384,1001,2.384,1002,1.793,1003,2.384,1004,2.384,1005,2.109,1006,2.109,1007,2.384,1008,2.384,1009,2.384,1010,2.384,1011,2.384,1012,3.39,1013,4.803,1014,3.831,1015,2.384,1016,1.928,1017,2.384,1018,2.384,1019,2.384,1020,2.384,1021,2.384,1022,2.384,1023,2.384]],["title/interfaces/EditorMap.html",[396,0.24,532,2.743]],["body/interfaces/EditorMap.html",[3,0.169,4,0.169,9,0.128,12,0.386,50,0.925,53,0.009,55,0.824,72,1.552,84,1.494,95,0.378,102,4.222,103,2.226,104,1.894,109,0.267,133,3.125,176,1.093,210,0.454,226,0.004,227,0.006,228,0.004,316,0.429,338,1.152,340,1.6,349,2.122,357,3.257,396,0.429,397,1.077,433,1.637,449,1.397,474,1.253,493,2.802,508,2.504,522,2.802,523,3.343,524,6.043,525,2.915,527,2.915,528,3.855,529,2.293,530,2.915,531,3.031,532,3.855,533,2.363,534,1.994,535,2.802,536,2.915,537,2.363,538,2.104,539,2.802,1024,4.997]],["title/interfaces/EventMap.html",[396,0.24,530,2.743]],["body/interfaces/EventMap.html",[3,0.168,4,0.168,9,0.127,12,0.384,50,0.921,53,0.009,55,0.822,72,1.548,84,1.489,95,0.377,102,4.22,103,2.937,104,1.887,109,0.266,133,3.494,176,1.091,210,0.45,226,0.004,227,0.006,228,0.004,316,0.428,338,1.151,340,1.594,349,2.121,357,3.255,396,0.429,397,1.073,433,2.16,449,1.392,474,1.248,493,2.792,508,2.498,522,2.792,523,3.331,524,6.04,525,2.905,527,2.905,528,4.311,529,2.284,530,3.846,531,2.284,532,2.905,533,2.355,534,1.987,535,2.792,536,2.905,537,2.355,538,2.097,539,2.792,1025,4.979]],["title/interfaces/EventType.html",[396,0.24,528,2.743]],["body/interfaces/EventType.html",[3,0.167,4,0.167,9,0.126,12,0.381,28,0.6,29,1.352,53,0.009,55,1.084,56,1.16,72,1.539,84,1.475,95,0.375,102,4.181,103,2.199,104,1.87,109,0.266,133,3.479,176,1.086,210,0.449,226,0.004,227,0.006,228,0.004,316,0.32,338,1.167,340,2.355,349,2.086,357,3.202,396,0.428,397,1.063,433,1.617,449,1.38,474,1.237,508,2.483,522,2.768,523,3.302,524,5.942,525,2.879,527,3.823,528,4.292,529,3.596,530,2.879,531,2.264,532,2.879,533,2.334,534,1.969,535,2.768,536,2.879,537,2.334,538,2.078,539,2.768]],["title/components/FormContainerComponent.html",[0,1.541,197,2.294]],["body/components/FormContainerComponent.html",[0,2.355,1,0.82,2,1.279,3,0.055,4,0.055,5,0.912,6,0.685,7,0.794,8,0.912,9,0.042,10,0.617,12,0.335,13,1.454,14,0.575,15,1.24,17,3.56,18,1.057,19,2.586,20,1.507,21,0.879,22,3.814,23,1.277,24,1.564,26,1.564,28,0.198,29,0.575,31,0.834,32,3.065,34,2.377,38,1.406,43,1.24,45,2.343,50,1.412,52,1.455,53,0.009,54,1.515,55,0.811,56,0.768,57,1.932,58,1.074,59,2.528,63,2.818,64,3.191,67,2.098,68,2.395,72,1.25,75,0.704,81,3.653,84,1.944,85,2.674,88,1.603,94,2.752,95,0.332,98,0.224,100,1.526,102,0.746,103,1.63,104,0.617,105,1.971,106,0.99,107,0.848,109,0.052,110,0.147,111,2.903,112,1.686,113,2.103,115,3.238,125,2.448,130,1.393,132,2.396,138,1.224,139,1.224,148,1.786,151,0.82,152,3.761,153,1.507,154,2.097,156,1.786,166,1.526,169,2.432,174,0.912,176,0.72,189,0.559,190,1.564,191,1.174,192,0.725,193,2.432,194,0.912,195,0.912,196,0.746,197,2.116,198,1.477,199,4.177,200,1.564,201,0.769,202,0.848,203,0.912,204,0.82,205,0.912,206,0.912,207,0.769,208,0.912,209,0.794,210,0.44,211,2.415,212,0.912,213,0.82,214,0.912,215,0.82,216,1.731,217,0.912,218,0.769,219,0.912,220,0.794,221,0.82,222,0.879,223,0.725,224,0.848,225,0.912,226,0.001,227,0.003,228,0.003,248,2.241,252,1.971,307,0.667,316,0.501,318,2.528,320,0.834,321,1.923,322,1.224,323,1.627,326,1.15,332,1.319,333,1.697,338,0.374,346,1.971,347,0.587,351,2.097,355,1.488,388,0.958,409,1.242,412,1.697,433,1.598,434,0.649,448,1.361,449,2.181,465,0.853,475,0.649,481,1.005,495,1.207,503,1.777,505,1.541,506,0.848,508,1.387,510,1.319,533,0.769,538,1.174,555,2.639,556,2.844,562,2.334,570,4.595,592,3.346,596,3.366,601,2.051,604,0.746,625,1.279,627,1.143,632,2.097,633,1.866,641,1.63,655,1.971,713,1.697,715,1.697,734,3.623,743,1.089,757,3.56,775,3.261,798,2.097,837,1.224,841,1.316,886,2.097,896,2.432,929,1.089,965,4.316,966,5.311,984,3.065,1002,2.752,1026,7.72,1027,6.83,1028,1.316,1029,2.467,1030,2.255,1031,2.467,1032,2.467,1033,2.96,1034,2.255,1035,3.659,1036,4.336,1037,2.788,1038,2.788,1039,2.467,1040,3.836,1041,3.807,1042,1.439,1043,3.807,1044,3.836,1045,3.836,1046,4.336,1047,4.336,1048,1.627,1049,2.788,1050,1.627,1051,1.439,1052,2.788,1053,1.627,1054,4.336,1055,4.336,1056,1.627,1057,2.467,1058,2.467,1059,1.627,1060,1.627,1061,2.788,1062,1.627,1063,2.467,1064,1.627,1065,4.602,1066,2.788,1067,2.788,1068,1.971,1069,4.878,1070,3.659,1071,1.627,1072,1.439,1073,1.627,1074,1.627,1075,1.627,1076,1.627,1077,1.627,1078,1.627,1079,1.627,1080,1.627,1081,1.316,1082,1.627,1083,1.224,1084,1.627,1085,1.439,1086,1.439,1087,1.316,1088,1.439,1089,1.439,1090,1.15,1091,1.439,1092,1.439,1093,2.467,1094,1.439,1095,1.439,1096,1.627,1097,1.627,1098,1.627,1099,1.627,1100,1.627,1101,1.627,1102,1.627,1103,1.627,1104,1.627,1105,3.836,1106,1.439,1107,1.439,1108,1.15,1109,1.439,1110,3.659,1111,1.439,1112,1.439,1113,1.439,1114,1.439,1115,1.439,1116,1.439,1117,1.971,1118,3.264,1119,1.439,1120,1.439,1121,1.439,1122,2.788,1123,2.788,1124,2.788,1125,2.255,1126,2.788,1127,2.788,1128,2.097,1129,4.336,1130,3.836,1131,2.788,1132,2.788,1133,2.901,1134,2.788,1135,2.788,1136,2.788,1137,2.467,1138,2.467,1139,2.467,1140,1.439,1141,1.439,1142,1.439,1143,1.439,1144,1.439,1145,1.439,1146,2.255,1147,2.467,1148,2.255,1149,2.467,1150,2.255,1151,2.467,1152,2.752,1153,1.439,1154,2.96,1155,1.316,1156,1.316,1157,1.439,1158,1.627]],["title/interfaces/Header.html",[396,0.24,505,1.98]],["body/interfaces/Header.html",[3,0.134,4,0.134,6,1.672,9,0.102,12,0.307,28,0.483,29,1.355,53,0.009,55,1.146,56,1.266,58,1.727,72,1.542,109,0.266,156,4.025,165,2.377,166,2.902,167,3.049,176,1.35,210,0.4,226,0.004,227,0.005,228,0.004,316,0.258,321,2.16,338,1.143,340,2.102,349,0.933,388,1.939,396,0.447,397,0.856,401,1.544,409,2.514,430,2.186,434,1.585,465,1.215,492,2.227,495,1.72,496,2.146,497,3.165,498,3.165,499,2.071,500,1.938,501,3.165,502,3.049,503,3.095,504,3.049,505,3.626,506,4.091,507,3.292,508,2.488,509,3.049,510,3.571,511,3.292,512,2.227,513,3.423,514,2.317,515,2.317,516,2.317,517,2.317,518,2.317,519,3.049,520,2.146,521,2.227]],["title/interfaces/HeaderBlock.html",[396,0.24,509,2.54]],["body/interfaces/HeaderBlock.html",[3,0.137,4,0.137,6,1.706,9,0.104,12,0.313,28,0.493,29,1.37,53,0.009,55,1.151,56,1.277,58,1.675,72,1.559,109,0.267,156,3.52,165,2.411,166,2.918,167,3.093,176,1.36,210,0.414,226,0.004,227,0.005,228,0.004,316,0.263,321,2.113,338,1.113,340,2.125,349,0.952,388,1.392,396,0.452,397,0.873,401,1.576,409,2.551,430,2.327,434,1.617,465,1.239,492,2.273,495,1.755,496,2.189,497,3.211,498,3.211,499,2.113,500,1.977,501,3.211,502,3.093,503,3.118,504,3.093,505,3.491,506,2.985,507,2.364,508,1.536,509,3.586,510,3.598,511,3.34,512,2.273,513,3.461,514,2.364,515,2.364,516,2.364,517,2.364,518,2.364,519,3.093,520,2.189,521,2.273]],["title/components/HomePageComponent.html",[0,1.541,201,2.224]],["body/components/HomePageComponent.html",[0,2.309,1,2.285,2,3.474,3,0.153,4,0.153,5,2.543,6,1.909,7,2.212,8,2.543,9,0.116,10,2.671,21,2.449,22,4.721,23,2.118,24,3.471,26,3.471,28,0.551,34,1.268,38,3.12,43,1.296,44,4.011,45,4.09,50,1.145,52,1.521,53,0.008,54,1.671,55,0.566,56,0.803,57,2.757,60,2.757,61,3.02,63,2.48,75,1.963,88,2.929,95,0.316,98,0.624,100,1.418,101,2.449,109,0.144,110,0.409,112,1.763,130,1.187,147,4.011,148,2.212,151,2.285,166,2.178,189,1.557,190,3.471,191,2.606,192,2.02,193,4.246,194,2.543,195,2.543,196,2.08,197,2.212,198,1.691,199,2.364,200,3.471,201,3.58,202,4.444,203,2.543,204,2.285,205,2.543,206,2.543,207,2.144,208,2.543,209,2.212,210,0.386,211,2.369,212,2.543,213,2.285,214,2.543,215,2.285,216,2.144,217,2.543,218,2.144,219,2.543,220,2.212,221,2.285,222,2.449,223,2.02,224,2.364,225,2.543,226,0.004,227,0.006,228,0.004,253,5.005,326,3.204,426,5.065,495,2.68,1117,4.374,1118,4.141,1159,7.046,1160,4.534,1161,7.046,1162,6.189,1163,4.534,1164,4.534,1165,3.033,1166,6.189,1167,4.654,1168,5.475,1169,4.654,1170,6.189,1171,6.189,1172,5.005,1173,5.475,1174,3.941,1175,4.654,1176,5.475,1177,6.189,1178,3.941,1179,6.189]],["title/interfaces/Image.html",[396,0.24,510,2.224]],["body/interfaces/Image.html",[3,0.127,4,0.127,6,1.589,9,0.096,12,0.291,28,0.459,29,1.316,53,0.009,55,1.149,56,1.57,58,1.698,72,1.947,109,0.263,156,3.407,165,2.291,166,2.863,167,2.939,176,1.343,210,0.394,226,0.003,227,0.005,228,0.003,316,0.245,321,2.127,338,1.156,340,2.042,349,0.886,388,1.296,396,0.443,397,0.813,401,1.467,409,3.436,430,2.135,434,1.505,465,1.154,492,2.116,495,1.633,496,2.038,497,3.051,498,3.051,499,1.967,500,1.841,501,3.051,502,2.939,503,3.034,504,2.939,505,3.426,506,2.837,507,2.201,508,1.43,509,2.939,510,3.848,511,4.499,512,3.051,513,4.022,514,4.074,515,3.174,516,4.074,517,3.174,518,4.074,519,2.939,520,2.038,521,2.116]],["title/interfaces/ImageBlock.html",[396,0.24,519,2.54]],["body/interfaces/ImageBlock.html",[3,0.137,4,0.137,6,1.706,9,0.104,12,0.313,28,0.493,29,1.37,53,0.009,55,1.151,56,1.277,58,1.675,72,1.559,109,0.267,156,3.52,165,2.411,166,2.918,167,3.093,176,1.36,210,0.414,226,0.004,227,0.005,228,0.004,316,0.263,321,2.113,338,1.113,340,2.125,349,0.952,388,1.392,396,0.452,397,0.873,401,1.576,409,2.551,430,2.327,434,1.617,465,1.239,492,2.273,495,1.755,496,2.189,497,3.211,498,3.211,499,2.113,500,1.977,501,3.211,502,3.093,503,3.118,504,3.093,505,3.418,506,2.985,507,2.364,508,1.536,509,3.093,510,3.735,511,3.34,512,2.273,513,3.461,514,2.364,515,2.364,516,2.364,517,2.364,518,2.364,519,3.586,520,2.189,521,2.273]],["title/interfaces/List.html",[166,1.654,396,0.24]],["body/interfaces/List.html",[3,0.134,4,0.134,6,1.672,9,0.102,12,0.307,28,0.483,29,1.355,53,0.009,55,1.149,56,1.266,58,1.727,72,1.542,109,0.266,156,3.488,165,3.304,166,3.059,167,4.239,176,1.35,210,0.4,226,0.004,227,0.005,228,0.004,316,0.258,321,2.16,338,1.108,340,2.512,349,0.933,388,1.364,396,0.447,397,0.856,401,1.544,409,2.514,430,2.186,434,1.585,465,1.215,492,2.227,495,1.72,496,2.146,497,3.165,498,3.165,499,2.071,500,1.938,501,4.009,502,3.049,503,3.095,504,3.049,505,3.399,506,2.943,507,2.317,508,1.505,509,3.049,510,3.571,511,3.292,512,2.227,513,3.423,514,2.317,515,2.317,516,2.317,517,2.317,518,2.317,519,3.049,520,2.146,521,2.227]],["title/interfaces/ListBlock.html",[396,0.24,502,2.54]],["body/interfaces/ListBlock.html",[3,0.136,4,0.136,6,1.697,9,0.103,12,0.311,28,0.49,29,1.365,53,0.009,55,1.151,56,1.274,58,1.736,72,1.554,109,0.267,156,3.511,165,2.401,166,3.004,167,3.08,176,1.359,210,0.423,226,0.004,227,0.005,228,0.004,316,0.262,321,2.109,338,1.112,340,2.118,349,0.946,388,1.384,396,0.448,397,0.868,401,1.566,409,2.54,430,2.322,434,2.275,465,1.744,492,2.259,495,1.744,496,2.177,497,3.197,498,3.197,499,2.101,500,1.966,501,3.197,502,3.575,503,3.112,504,3.08,505,3.413,506,2.973,507,2.35,508,1.527,509,3.08,510,3.591,511,3.326,512,2.259,513,3.451,514,2.35,515,2.35,516,2.35,517,2.35,518,2.35,519,3.08,520,2.177,521,2.259]],["title/modules/MaterialModule.html",[229,0.851,243,3.146]],["body/modules/MaterialModule.html",[3,0.215,4,0.215,9,0.163,10,2.413,12,0.492,53,0.008,60,3.432,81,4.687,95,0.393,98,0.876,99,3.875,109,0.202,110,0.574,226,0.006,227,0.007,228,0.006,229,1.394,231,2.296,236,2.476,243,5.154,254,3.44,258,3.074,288,6.229,319,6.23,464,4.162,604,3.534,1180,6.367,1181,5.793,1182,8.282,1183,8.282,1184,7.327,1185,7.327,1186,6.698]],["title/interfaces/MenuGroup.html",[347,1.695,396,0.24]],["body/interfaces/MenuGroup.html",[3,0.162,4,0.162,9,0.123,12,0.56,14,0.989,23,1.542,28,0.583,29,1.326,48,2.892,53,0.009,55,0.904,56,1.504,57,2.862,64,4.903,72,1.125,75,3.138,88,3.384,95,0.244,109,0.23,141,2.498,165,3.72,166,1.686,173,3.909,174,2.687,186,3.748,226,0.004,227,0.006,228,0.004,305,2.687,316,0.311,338,1.196,347,2.613,349,2.028,355,1.796,358,2.687,383,1.912,396,0.395,397,1.032,398,3.875,399,3.205,400,3.205,401,1.863,402,3.205,403,4.849,404,5.182,405,4.071,406,2.134,407,3.051,408,4.615,409,2.134,410,2.915,411,5.182,412,3.909,413,4.298,414,2.862,415,4.298,416,4.298,417,4.091,418,3.35]],["title/interfaces/MenuGroup-1.html",[347,1.429,388,1.361,396,0.202]],["body/interfaces/MenuGroup-1.html",[3,0.162,4,0.162,9,0.123,10,1.819,12,0.56,14,0.99,23,1.152,28,0.584,29,1.327,48,2.895,53,0.009,55,0.905,56,1.504,57,2.866,64,4.905,72,1.127,75,3.141,88,3.385,95,0.245,109,0.23,141,2.501,165,3.721,166,1.689,173,3.914,174,2.691,186,3.752,226,0.004,227,0.006,228,0.004,305,2.691,338,1.197,347,2.616,349,2.028,355,1.798,358,2.691,383,1.915,396,0.396,397,1.034,399,3.211,400,3.211,401,1.866,402,3.211,403,4.854,404,5.185,405,4.074,406,2.138,407,3.056,408,4.619,409,2.138,410,2.92,411,5.185,412,3.914,413,4.303,414,2.866,415,4.303,416,4.303,417,4.095,418,3.354,419,3.881]],["title/interfaces/MenuItem.html",[396,0.24,405,2.37]],["body/interfaces/MenuItem.html",[3,0.156,4,0.156,9,0.118,12,0.649,14,0.951,23,1.706,28,0.561,29,1.291,48,2.836,53,0.009,55,0.994,56,1.579,57,3.396,64,4.47,72,1.083,75,2.71,88,3.353,95,0.235,109,0.225,141,2.433,165,3.21,166,1.622,173,5.002,174,3.51,186,4.796,226,0.004,227,0.006,228,0.004,305,2.585,316,0.299,338,1.224,347,2.257,349,1.669,355,1.289,358,2.585,383,1.839,396,0.389,397,0.993,398,3.727,399,3.083,400,3.083,401,1.792,402,3.083,403,5.5,404,5.724,405,4.144,406,2.788,407,3.985,408,4.525,409,2.788,410,4.638,411,5.626,412,2.804,413,3.083,414,2.053,415,3.083,416,3.083,417,2.935,418,2.403]],["title/interfaces/MenuItem-1.html",[388,1.361,396,0.202,405,1.998]],["body/interfaces/MenuItem-1.html",[3,0.156,4,0.156,9,0.118,10,1.75,12,0.649,14,0.953,23,1.504,28,0.562,29,1.293,48,2.838,53,0.009,55,0.995,56,1.58,57,3.398,64,4.472,72,1.084,75,2.713,88,3.354,95,0.236,109,0.225,141,2.436,165,3.212,166,1.624,173,5.004,174,3.514,186,4.798,226,0.004,227,0.006,228,0.004,305,2.589,338,1.224,347,2.259,349,1.671,355,1.291,358,2.589,383,1.842,396,0.389,397,0.995,399,3.088,400,3.088,401,1.795,402,3.088,403,5.502,404,5.726,405,4.146,406,2.791,407,3.99,408,4.529,409,2.791,410,4.642,411,5.628,412,2.809,413,3.088,414,2.057,415,3.088,416,3.088,417,2.939,418,2.407,419,3.733]],["title/classes/MockEditorJS.html",[110,0.424,1187,3.536]],["body/classes/MockEditorJS.html",[3,0.17,4,0.17,9,0.129,18,1.911,28,0.613,29,1.372,34,1.41,43,1.9,48,2.652,50,1.561,52,1.691,53,0.009,54,1.063,55,1.052,56,0.893,68,2.012,95,0.379,109,0.236,110,0.713,130,2.069,226,0.005,227,0.006,228,0.005,316,0.558,338,0.892,449,2.21,461,2.652,465,1.542,467,3.243,468,2.629,472,2.961,474,1.264,542,2.942,556,1.96,571,3.219,577,4.433,596,2.828,598,4.017,635,4.524,691,5.255,824,3.068,896,2.828,897,4.433,1108,3.564,1165,3.374,1187,4.998,1188,4.078,1189,6.013,1190,4.461,1191,6.646,1192,5.042,1193,5.042,1194,5.042,1195,5.042,1196,4.078,1197,4.078,1198,4.998,1199,4.078,1200,3.792,1201,6.013,1202,4.078,1203,4.078,1204,5.375,1205,4.078,1206,4.078,1207,4.078]],["title/injectables/MockNgZone.html",[314,0.991,1208,4.16]],["body/injectables/MockNgZone.html",[3,0.182,4,0.182,9,0.138,12,0.416,28,0.655,29,1.431,31,2.074,43,2.194,50,1.552,52,2.327,53,0.008,54,1.463,55,0.957,56,1.228,58,1.185,59,2.093,67,2.401,68,2.768,95,0.275,98,0.74,109,0.171,110,0.485,113,2.327,130,1.816,226,0.005,227,0.006,228,0.005,314,1.463,315,2.04,316,0.558,410,3.276,430,2.121,457,3.805,458,2.398,468,4.478,726,6.555,778,6.784,796,6.945,797,5.216,910,6.206,1208,6.136,1209,8.587,1210,5.383,1211,6.936,1212,6.936,1213,7.674,1214,6.936,1215,8.105,1216,6.936,1217,6.936,1218,5.383,1219,6.936,1220,5.383,1221,5.383,1222,6.936,1223,5.383,1224,5.383]],["title/classes/MockPlugin.html",[110,0.424,1200,3.536]],["body/classes/MockPlugin.html",[3,0.18,4,0.18,9,0.136,18,2.609,28,0.647,31,2.058,34,2.134,43,1.521,48,2.747,50,1.274,53,0.009,67,2.154,68,2.124,95,0.389,109,0.242,110,0.728,130,2.113,226,0.005,227,0.006,228,0.005,316,0.496,338,0.924,449,1.925,461,3.046,465,2.468,467,4.078,472,3.4,474,1.334,542,3.105,556,2.069,571,2.981,577,3.861,596,2.984,598,2.875,635,4.189,691,3.761,824,3.238,896,2.984,897,3.861,1108,3.761,1165,3.56,1187,4.002,1188,4.304,1189,4.304,1196,4.304,1197,4.304,1198,5.178,1199,4.304,1200,5.178,1201,6.172,1202,4.304,1203,4.304,1204,5.568,1205,4.304,1206,4.304,1207,4.304,1225,5.321,1226,5.321]],["title/components/NavBarComponent.html",[0,1.541,204,2.37]],["body/components/NavBarComponent.html",[0,2.752,1,2.008,2,2.595,3,0.134,4,0.134,5,2.234,6,1.677,7,1.943,8,2.234,9,0.102,10,2.713,12,0.307,13,2.949,14,1.167,15,1.617,21,2.152,22,4.636,23,2.016,24,3.171,26,3.171,28,0.484,35,4.945,36,3.601,50,1.217,53,0.008,54,1.509,55,0.705,58,0.877,59,1.549,63,1.401,64,4.53,74,6.332,75,3.273,88,2.985,95,0.289,96,3.688,98,0.548,100,1.246,101,2.152,109,0.126,110,0.359,113,1.336,125,3.783,133,2.674,151,2.008,153,3.055,156,2.759,157,3.524,158,5.003,159,5.003,160,3.524,161,3.524,162,3.524,163,3.524,164,3.524,165,1.677,166,1.401,167,2.152,168,5.003,169,4.014,170,5.817,171,3.524,172,3.524,173,2.424,174,3.171,175,3.783,176,0.835,177,5.003,178,3.524,179,3.221,180,3.524,181,4.574,182,3.524,183,3.524,184,3.524,185,2.995,186,2.324,187,3.524,188,3.524,189,1.368,190,3.171,191,2.381,192,1.774,193,4.014,194,2.234,195,2.234,196,1.827,197,1.943,198,1.631,199,2.077,200,3.171,201,1.884,202,2.077,203,2.234,204,3.608,205,4.629,206,2.234,207,1.884,208,2.234,209,1.943,210,0.365,211,1.769,212,2.234,213,2.008,214,2.234,215,2.008,216,1.884,217,2.234,218,1.884,219,2.234,220,1.943,221,2.008,222,2.152,223,1.774,224,2.077,225,2.234,226,0.004,227,0.005,228,0.004,281,6.332,347,2.371,355,1.581,602,2.949,604,2.595,757,3.783,910,5.318,1227,7.158,1228,3.983,1229,7.158,1230,5.655,1231,5.655,1232,5.655,1233,6.575,1234,5.655,1235,5.655,1236,3.983,1237,3.983,1238,3.983,1239,5.655,1240,3.983,1241,5.655]],["title/components/NgxEditorJSComponent.html",[0,1.541,207,2.224]],["body/components/NgxEditorJSComponent.html",[0,2.659,1,1.438,2,2.025,3,0.096,4,0.096,5,1.6,6,1.201,7,2.154,8,1.6,9,0.073,12,0.341,14,0.911,21,1.541,22,4.378,23,1.459,24,2.476,26,2.476,28,0.347,29,0.911,31,1.32,33,3.816,34,2.149,36,2.811,43,0.816,48,1.139,50,1.618,52,2.038,53,0.008,54,1.62,55,1.065,56,1.23,58,1.595,59,2.363,63,1.004,67,2.056,68,2.773,72,1.037,75,1.235,78,2.307,85,2.405,95,0.31,97,2.307,98,0.392,109,0.09,110,0.257,112,2.099,125,2.953,132,1.201,133,1.349,151,1.438,153,2.917,156,1.392,174,1.6,176,1.07,181,2.307,189,0.98,190,2.476,191,2.274,192,2.405,193,3.408,194,1.6,195,1.6,196,4.03,197,1.392,198,1.552,199,2.815,200,2.476,201,1.349,202,1.488,203,1.6,204,1.438,205,1.6,206,1.6,207,2.874,208,1.6,209,1.392,210,0.414,211,1.381,212,1.6,213,1.438,214,1.6,215,1.438,216,1.349,217,1.6,218,1.349,219,1.6,220,1.392,221,1.438,222,1.541,223,2.707,224,1.488,225,1.6,226,0.003,227,0.004,228,0.003,264,1.817,316,0.395,318,2.767,320,1.32,323,2.575,332,2.088,338,0.882,355,1.699,388,0.98,406,1.271,430,1.35,433,2.153,434,1.762,449,1.943,455,1.909,458,1.271,467,2.154,468,2.302,475,1.139,478,1.911,503,1.169,508,1.673,512,2.476,533,1.349,537,1.349,538,1.859,541,1.349,556,1.109,561,1.817,562,1.716,570,2.575,572,2.953,592,3.236,601,3.54,625,2.025,627,1.169,629,1.736,677,3.32,678,3.905,679,4.06,680,3.905,681,4.06,682,3.905,683,4.776,684,3.905,685,3.612,686,2.953,687,2.953,688,2.953,689,2.953,690,3.612,692,2.524,694,2.686,696,2.146,698,2.146,700,1.664,701,1.817,703,1.909,704,2.016,706,2.016,708,3.12,711,1.909,712,1.909,713,1.736,714,1.909,715,1.736,716,2.016,718,2.016,720,2.524,722,2.524,724,2.524,725,3.12,726,3.57,727,2.524,728,2.307,730,2.524,732,2.524,734,3.869,737,2.524,744,2.016,919,2.307,920,2.307,921,2.524,923,2.953,924,3.905,925,3.12,926,2.953,929,1.909,967,3.905,968,3.32,969,3.905,990,2.524,1152,4.57,1154,4.366,1157,2.524,1176,2.524,1242,2.853,1243,5.399,1244,4.414,1245,4.414,1246,4.414,1247,8.594,1248,2.853,1249,2.853,1250,2.853,1251,2.853,1252,2.853,1253,2.853,1254,2.853,1255,2.853,1256,2.853,1257,2.853,1258,2.853,1259,2.853,1260,2.853,1261,2.853,1262,2.853,1263,2.853,1264,2.853,1265,2.853,1266,2.853,1267,4.414,1268,4.414,1269,2.853,1270,2.853,1271,2.853,1272,2.853,1273,2.853,1274,2.853]],["title/interfaces/NgxEditorJSConfig.html",[396,0.24,578,2.743]],["body/interfaces/NgxEditorJSConfig.html",[3,0.165,4,0.165,9,0.125,12,0.378,28,0.595,29,1.344,48,1.952,53,0.009,54,1.031,55,0.61,56,1.153,57,2.179,58,1.613,72,1.53,95,0.332,98,0.673,109,0.258,113,2.457,153,2.643,176,1.081,191,2.06,210,0.453,226,0.004,227,0.006,228,0.004,292,4.604,307,3.002,316,0.318,320,1.948,321,1.743,338,0.983,355,1.368,396,0.332,397,1.054,433,2.135,458,2.179,471,2.743,474,1.226,475,3.338,482,2.643,483,3.52,503,2.005,508,1.854,537,2.313,552,3.52,562,1.902,569,3.964,571,2.821,573,4.556,577,2.743,578,4.556,579,3.115,604,2.244,625,2.989,627,2.005,685,3.273,686,3.273,687,3.273,688,3.273,689,3.273,690,4.358,700,2.854,701,3.115,703,3.273,704,3.457,706,3.457,711,3.273,712,3.273,713,2.977,714,3.273,715,2.977,716,4.604,718,3.457,748,3.457,754,3.956,755,4.328,756,3.679,757,3.273,758,4.328,759,5.269,760,5.269,761,3.956,762,3.956,763,3.956,764,2.977,765,3.679,766,3.956,767,3.679,768,3.956,769,3.956]],["title/interfaces/NgxEditorJSDemo.html",[396,0.24,448,2.294]],["body/interfaces/NgxEditorJSDemo.html",[3,0.157,4,0.157,9,0.119,12,0.359,14,1.474,23,1.512,28,0.566,29,1.3,53,0.009,54,1.329,55,0.786,61,3.075,72,1.093,84,2.136,88,1.72,95,0.322,100,1.456,109,0.261,141,3.11,148,4.023,176,1.13,198,1.665,210,0.43,211,2.843,226,0.004,227,0.006,228,0.004,316,0.302,320,1.884,321,2.351,338,0.625,340,1.49,347,2.884,349,1.678,354,2.427,355,1.302,359,2.346,360,2.346,361,3.673,383,3.192,396,0.438,397,1.003,405,2.346,414,2.074,430,1.424,435,2.136,440,3.114,441,2.515,442,2.61,443,2.653,444,2.201,445,2.136,446,3.286,447,3.404,448,3.075,449,2.305,450,3.286,451,2.427]],["title/interfaces/NgxEditorJSDemo-1.html",[388,1.361,396,0.202,448,1.934]],["body/interfaces/NgxEditorJSDemo-1.html",[3,0.162,4,0.162,9,0.123,10,1.819,12,0.37,14,1.497,23,1.152,28,0.584,29,1.327,53,0.009,54,1.356,55,0.599,61,3.138,72,1.127,84,2.169,88,1.774,95,0.328,100,1.501,109,0.263,141,3.142,176,1.144,198,1.68,210,0.434,211,2.826,226,0.004,227,0.006,228,0.004,320,1.923,321,2.365,338,0.644,340,1.536,347,2.319,349,1.704,354,2.503,355,1.342,359,2.419,360,2.419,361,3.706,383,3.225,396,0.441,397,1.034,414,2.138,430,1.468,435,2.202,441,2.593,442,2.691,443,2.708,444,2.27,445,2.202,446,3.354,447,3.475,448,3.138,449,2.326,450,3.354,451,2.503,452,3.211]],["title/interfaces/NgxEditorJSDemoData.html",[396,0.24,450,2.452]],["body/interfaces/NgxEditorJSDemoData.html",[3,0.163,4,0.163,9,0.124,12,0.373,14,1.502,23,1.551,53,0.009,54,1.363,61,3.153,72,1.135,84,2.176,88,1.786,95,0.33,100,1.512,109,0.264,141,3.149,148,3.153,176,0.954,198,1.683,210,0.434,211,2.843,226,0.004,227,0.006,228,0.004,316,0.314,320,1.445,321,2.368,338,0.649,340,1.547,347,2.625,349,1.71,354,2.52,355,1.351,359,2.436,360,2.436,361,3.792,383,3.232,396,0.434,397,1.041,405,2.436,414,2.153,430,1.976,435,2.217,440,3.233,441,2.611,442,2.71,443,2.721,444,2.285,445,2.217,446,2.52,447,2.611,448,2.358,449,1.807,450,3.796,451,2.52]],["title/interfaces/NgxEditorJSDemoData-1.html",[388,1.361,396,0.202,450,2.067]],["body/interfaces/NgxEditorJSDemoData-1.html",[3,0.166,4,0.166,9,0.126,10,1.86,12,0.379,14,1.514,23,1.178,53,0.009,54,1.377,61,3.186,72,1.153,84,2.194,88,1.814,95,0.333,100,1.536,109,0.265,141,3.166,176,0.964,198,1.691,210,0.436,211,2.835,226,0.004,227,0.006,228,0.004,320,1.468,321,2.374,338,0.659,340,1.572,347,2.354,349,1.723,354,2.56,355,1.373,359,2.475,360,2.475,361,3.807,383,3.249,396,0.436,397,1.058,414,2.187,430,1.997,435,2.252,441,2.652,442,2.753,443,2.75,444,2.322,445,2.252,446,2.56,447,2.652,448,2.395,449,1.826,450,3.826,451,2.56,452,3.284]],["title/components/NgxEditorJSDemoHomeComponent.html",[0,1.541,209,2.294]],["body/components/NgxEditorJSDemoHomeComponent.html",[0,2.848,1,2.346,2,2.891,3,0.157,4,0.157,5,2.61,6,1.96,7,2.271,8,2.61,9,0.119,14,1.3,15,1.801,21,2.515,22,4.738,23,1.837,24,3.534,26,3.534,53,0.008,54,1.614,60,3.82,61,3.735,63,1.638,75,2.015,81,4.658,95,0.238,98,0.64,100,2.579,109,0.147,110,0.42,148,3.075,151,2.346,189,1.599,190,3.534,191,2.653,192,2.074,193,4.293,194,2.61,195,2.61,196,2.136,197,2.271,198,1.755,199,4.171,200,3.534,201,2.201,202,4.472,203,2.61,204,2.346,205,2.61,206,2.61,207,2.201,208,2.61,209,3.735,210,0.444,211,2.795,212,2.61,213,2.346,214,2.61,215,2.346,216,2.201,217,2.61,218,2.201,219,2.61,220,2.271,221,2.346,222,2.515,223,2.074,224,2.427,225,2.61,226,0.004,227,0.006,228,0.004,229,1.385,316,0.302,406,3.41,520,3.404,590,2.98,592,3.223,643,3.834,725,5.41,781,4.012,926,4.216,1028,3.765,1033,5.777,1034,5.096,1117,4.453,1167,4.738,1275,4.655,1276,4.118,1277,6.301,1278,4.738,1279,3.676]],["title/components/NgxEditorJSDemoInfoComponent.html",[0,1.541,213,2.37]],["body/components/NgxEditorJSDemoInfoComponent.html",[0,2.536,1,1.744,2,2.343,3,0.226,4,0.117,5,1.94,6,1.456,7,1.688,8,1.94,9,0.088,18,1.935,21,1.869,22,4.534,23,2.071,24,2.863,26,2.863,28,0.421,31,1.527,34,1.874,36,3.251,38,2.574,50,1.432,52,1.16,53,0.009,54,1.507,55,0.892,56,0.612,59,1.345,63,1.217,64,4.548,67,1.899,68,2.422,72,1.679,75,1.498,84,2.004,85,2.704,88,2.642,94,5.376,95,0.31,96,4.009,98,0.476,102,1.587,104,1.311,109,0.11,110,0.312,111,1.498,113,1.16,119,4.129,125,3.416,130,0.905,148,3.65,151,1.744,153,2.759,154,2.601,189,1.188,190,2.863,191,2.15,192,1.541,193,3.758,194,1.94,195,1.94,196,1.587,197,1.688,198,1.637,199,1.804,200,2.863,201,1.636,202,1.804,203,1.94,204,1.744,205,1.94,206,1.94,207,1.636,208,1.94,209,1.688,210,0.382,211,2.699,212,1.94,213,3.378,214,1.94,215,1.744,216,1.636,217,1.94,218,1.636,219,1.94,220,1.688,221,1.744,222,1.869,223,1.541,224,1.804,225,1.94,226,0.003,227,0.005,228,0.003,316,0.516,332,2.415,338,0.686,346,3.609,347,2.188,351,3.84,359,1.744,371,2.105,372,2.105,412,3.107,633,3.416,644,2.343,904,5.369,929,2.314,984,4.736,991,5.929,1039,4.517,1040,5.929,1063,4.517,1065,6.258,1093,3.06,1094,3.06,1095,3.06,1118,3.416,1152,3.84,1155,2.797,1156,2.797,1279,2.979,1280,7.942,1281,7.027,1282,3.459,1283,6.069,1284,5.106,1285,5.369,1286,7.148,1287,6.069,1288,3.459,1289,3.459,1290,3.459,1291,3.459,1292,3.459,1293,3.459,1294,3.459,1295,3.459,1296,3.459,1297,3.459,1298,4.517,1299,5.106,1300,5.106,1301,5.106,1302,4.517,1303,5.106,1304,3.84,1305,5.106,1306,3.459]],["title/directives/NgxEditorJSDirective.html",[192,2.095,223,2.095]],["body/directives/NgxEditorJSDirective.html",[0,2.027,2,1.64,3,0.074,4,0.074,7,1.744,9,0.056,12,0.404,13,1.863,15,1.022,18,1.354,19,3.202,20,2.447,21,1.182,22,1.863,28,0.266,31,1.068,32,3.696,33,3.696,34,2.265,36,2.275,38,1.801,43,0.625,48,1.426,50,1.538,52,1.52,53,0.009,54,1.215,55,0.961,56,0.802,58,1.362,59,1.389,60,1.592,67,1.935,68,2.468,72,1.453,76,1.464,84,1.068,85,2.908,95,0.333,96,4.16,98,0.301,102,1.004,104,0.829,109,0.069,110,0.197,111,1.961,112,1.389,113,1.754,116,1.645,117,3.933,130,1.709,132,2.202,152,2.526,153,1.931,169,1.227,176,1.04,191,3.292,192,3.609,198,0.722,210,0.409,222,1.182,223,1.592,224,1.863,226,0.002,227,0.003,228,0.002,264,2.275,307,1.464,316,0.543,318,2.966,320,1.564,323,3.609,332,2.473,338,0.996,355,1.903,433,2.562,449,2.153,455,2.391,458,1.592,474,0.548,475,2.3,478,2.264,488,1.505,503,1.464,508,1.354,513,2.727,534,1.426,537,1.69,538,1.908,556,1.389,562,2.537,570,3.051,571,2.678,572,3.499,573,3.609,576,1.393,577,1.227,580,1.546,591,3.507,592,3.336,593,2.526,598,1.931,601,3.219,602,1.863,610,3.696,626,3.051,627,2.535,629,2.174,630,3.051,660,1.645,677,1.645,685,4.366,686,3.031,687,3.856,688,3.856,689,3.499,690,4.138,694,2.174,696,2.687,698,3.933,700,2.085,701,3.33,703,2.391,704,2.526,706,2.526,708,3.696,711,2.391,712,2.391,713,2.174,714,2.391,715,2.174,716,3.202,718,2.526,744,1.546,824,1.331,855,2.89,863,2.687,885,2.89,896,1.227,897,1.227,926,2.391,929,2.391,984,4.074,1002,1.645,1012,1.935,1108,2.526,1128,2.687,1165,1.464,1278,2.687,1279,2.085,1307,8.37,1308,2.188,1309,3.933,1310,3.573,1311,4.53,1312,5.23,1313,3.573,1314,6.185,1315,2.188,1316,5.23,1317,2.188,1318,4.53,1319,3.161,1320,2.188,1321,2.188,1322,2.188,1323,2.188,1324,2.188,1325,2.188,1326,2.188,1327,2.188,1328,2.188,1329,2.188,1330,2.188,1331,3.573,1332,2.188,1333,2.188,1334,3.573,1335,5.23,1336,2.188,1337,3.161,1338,3.573,1339,3.573,1340,3.161,1341,3.573,1342,3.573,1343,2.188,1344,1.935,1345,2.188,1346,2.188,1347,2.188,1348,2.188,1349,2.188,1350,2.188,1351,2.188,1352,2.188,1353,2.89,1354,2.188,1355,2.188,1356,2.188,1357,2.188,1358,2.188,1359,2.188,1360,2.188,1361,2.188,1362,2.188,1363,2.188,1364,2.188,1365,2.188,1366,2.188,1367,6.185,1368,2.188,1369,2.188,1370,2.188,1371,2.188,1372,2.188,1373,2.188,1374,3.573,1375,2.188,1376,2.188,1377,2.188,1378,2.188,1379,2.188,1380,2.188,1381,2.188,1382,2.188,1383,2.188,1384,2.188,1385,2.188,1386,2.188,1387,2.188,1388,1.769]],["title/injectables/NgxEditorJSEffects.html",[314,0.991,1389,4.16]],["body/injectables/NgxEditorJSEffects.html",[3,0.164,4,0.164,9,0.124,28,0.591,29,1.338,43,1.389,50,1.2,52,1.63,53,0.009,54,1.024,55,0.606,56,0.86,58,1.07,59,1.889,78,3.929,85,3.252,95,0.435,98,0.668,100,1.52,104,1.841,107,2.533,109,0.154,110,0.438,111,2.103,112,2.521,113,2.175,130,2.039,176,0.717,210,0.414,226,0.004,227,0.006,228,0.004,314,1.367,315,1.841,316,0.474,321,1.735,357,1.751,449,2.334,458,2.889,474,1.218,545,4.353,553,2.724,554,4.972,556,2.838,557,4.258,562,2.521,589,5.585,601,3.683,610,5.158,824,3.946,896,3.636,897,3.636,917,3.929,1165,3.25,1388,5.244,1389,5.736,1390,7.299,1391,4.858,1392,4.858,1393,4.858,1394,6.484,1395,6.484,1396,7.788,1397,6.484,1398,7.299,1399,6.484,1400,6.484,1401,6.484,1402,6.484,1403,4.858,1404,4.858,1405,6.484,1406,4.858,1407,3.653,1408,4.858,1409,4.858,1410,4.858,1411,4.858,1412,4.858]],["title/injectables/NgxEditorJSInstanceService.html",[314,0.991,581,2.861]],["body/injectables/NgxEditorJSInstanceService.html",[3,0.051,4,0.051,7,1.269,9,0.038,12,0.502,14,0.536,15,0.429,16,0.841,20,0.81,28,0.182,29,0.536,31,0.777,34,2.365,38,1.311,43,0.743,48,1.638,50,1.32,52,2.242,53,0.009,54,1.41,55,0.954,56,1.184,58,0.572,59,2.599,60,2.574,67,2.392,68,2.668,70,1.213,85,3.368,95,0.295,98,0.206,102,2.13,103,2.068,104,0.568,106,0.913,107,0.782,109,0.13,110,0.459,111,3.089,112,1.011,113,2.536,116,1.955,130,1.701,132,3.388,133,1.23,138,1.955,139,1.128,145,1.128,146,1.128,165,1.449,169,1.93,176,0.893,191,1.095,210,0.454,226,0.001,227,0.002,228,0.001,307,2.368,314,0.548,315,0.568,316,0.471,318,2.142,332,1.23,333,3.095,338,1.16,355,0.419,356,0.913,357,1.968,371,2.825,372,1.582,396,0.077,406,0.668,429,2.588,433,2.839,434,0.599,449,2.029,458,0.668,464,0.81,468,1.356,471,0.841,474,0.376,475,1.638,482,0.81,483,0.81,508,0.568,513,0.782,522,2.302,528,0.875,529,0.688,530,2.007,531,1.883,532,2.007,533,1.627,534,2.03,535,2.302,538,1.955,539,2.302,556,2.123,562,3.415,571,1.126,573,3.37,575,1.004,576,0.955,581,1.582,586,3.403,591,1.582,592,3.533,594,3.403,596,3.062,598,2.95,603,1.004,604,2.776,625,2.505,626,1.517,627,3.166,635,1.582,647,1.837,653,1.837,658,2.191,659,1.655,663,3.858,671,1.837,679,2.588,681,1.955,694,0.913,764,1.582,770,3.32,771,5.867,772,1.213,773,1.213,774,3.044,775,3.825,776,1.213,777,3.632,778,3.32,779,1.327,780,1.327,781,0.955,782,1.213,783,1.128,784,1.213,785,1.128,786,1.213,787,3.632,788,2.103,789,2.3,790,2.588,791,3.044,792,3.044,793,2.3,794,2.3,795,1.327,796,5.256,797,1.955,798,3.087,799,2.3,800,2.3,801,1.327,802,4.5,803,2.3,804,2.3,805,1.327,806,1.327,807,3.044,808,1.327,809,3.044,810,1.327,811,3.044,812,1.327,813,4.107,814,1.327,815,1.327,816,1.327,817,4.107,818,1.327,819,1.327,820,2.3,821,3.044,822,2.3,823,1.327,824,1.582,825,3.632,826,1.327,827,1.327,828,2.3,829,3.632,830,2.3,831,4.83,832,4.107,833,2.3,834,2.3,835,2.3,836,5.111,837,1.128,838,1.327,839,2.3,840,1.327,841,1.213,842,1.327,843,2.3,844,1.327,845,2.3,846,2.3,847,1.327,848,1.327,849,1.327,850,1.327,851,1.327,852,1.327,853,1.327,854,1.327,855,2.783,856,1.327,857,1.327,858,1.327,859,2.3,860,4.107,861,1.327,862,2.3,863,1.128,864,1.213,865,1.327,866,1.327,867,1.327,868,3.632,869,1.327,870,1.327,871,1.327,872,1.327,873,1.327,874,1.327,875,1.327,876,1.128,877,1.327,878,1.327,879,2.432,880,2.588,881,1.327,882,2.3,883,1.327,884,1.327,885,2.783,886,2.588,887,1.327,888,1.327,889,1.327,890,1.327,891,1.327,892,1.327,893,2.3,894,1.327,895,1.327,896,0.841,897,0.841,898,1.327,899,1.327,1083,1.955,1413,2.6,1414,2.6,1415,2.6,1416,1.5,1417,1.5,1418,1.5,1419,1.5,1420,1.5,1421,1.5,1422,1.5,1423,1.5,1424,1.5,1425,1.5,1426,1.5,1427,1.5,1428,1.5,1429,1.5,1430,1.5,1431,1.5,1432,1.5]],["title/modules/NgxEditorJSModule.html",[229,0.851,244,2.743]],["body/modules/NgxEditorJSModule.html",[3,0.12,4,0.12,9,0.091,12,0.403,14,1.402,15,1.491,16,3.811,31,1.064,43,1.018,50,0.659,52,1.194,53,0.009,54,0.751,55,0.444,56,1.447,57,2.324,58,1.148,60,2.324,67,1.114,76,2.382,95,0.449,98,0.49,99,2.166,100,1.632,109,0.165,110,0.47,130,1.616,132,1.499,151,2.629,189,1.223,196,3.907,207,4.027,210,0.399,218,4.027,223,3.794,226,0.003,227,0.005,228,0.003,229,1.309,231,1.284,232,1.384,233,2.673,234,1.542,235,2.642,236,2.4,244,5.303,247,2.324,248,1.499,249,1.499,254,1.924,258,2.463,292,3.686,301,2.382,316,0.339,332,2.467,423,3.81,433,2.227,434,2.081,466,3.043,468,2.72,474,0.892,475,2.712,571,3.381,578,4.41,579,3.321,580,2.516,581,4.599,582,2.382,583,4.41,601,3.575,602,2.72,625,3.118,669,5.11,743,2.382,744,2.516,764,2.166,765,4.642,783,4.642,785,3.922,790,3.922,902,2.879,919,2.879,920,2.879,1167,3.922,1181,3.922,1279,4.672,1433,3.15,1434,3.15,1435,3.15,1436,3.15,1437,4.614,1438,3.15,1439,5.461,1440,4.614,1441,3.56,1442,3.56,1443,6.012,1444,6.172,1445,3.49,1446,2.267,1447,5.216,1448,5.216,1449,4.614,1450,4.614,1451,4.614,1452,3.56,1453,3.56,1454,3.56,1455,3.56,1456,3.56,1457,3.56,1458,3.56,1459,3.15,1460,3.56,1461,5.216,1462,4.218,1463,3.15,1464,5.216,1465,3.56,1466,3.56]],["title/injectables/NgxEditorJSPluginService.html",[314,0.991,583,2.743]],["body/injectables/NgxEditorJSPluginService.html",[3,0.119,4,0.119,9,0.09,12,0.522,14,1.396,15,1.481,16,1.979,28,0.429,31,1.549,34,2.4,38,2.612,43,1.009,50,1.394,52,2.418,53,0.009,54,1.589,55,0.899,56,1.379,58,1.141,59,1.372,66,5.986,67,2.55,68,2.068,95,0.264,98,0.485,109,0.112,110,0.61,111,1.528,130,1.973,132,3.279,210,0.264,226,0.003,227,0.005,228,0.003,229,0.639,252,3.662,271,3.898,314,1.093,315,1.337,316,0.506,318,3.173,320,1.549,338,1.141,349,1.947,357,3.095,401,2.015,433,1.698,444,2.451,445,1.619,461,3.007,465,2.728,467,1.722,476,4.367,478,2.244,479,3.582,481,1.868,484,3.548,485,2.147,489,4.042,531,2.377,571,2.244,575,2.361,583,3.023,592,2.182,603,2.361,629,3.153,760,4.191,767,5.089,776,4.191,788,4.191,879,2.494,880,2.654,1133,5.041,1467,3.529,1468,5.182,1469,5.182,1470,5.986,1471,3.529,1472,3.529,1473,6.766,1474,5.182,1475,5.182,1476,3.529,1477,5.182,1478,3.529,1479,5.182,1480,3.529,1481,6.766,1482,5.182,1483,3.529,1484,3.529,1485,3.529,1486,5.182,1487,2.059,1488,2.654,1489,3.529,1490,3.529,1491,3.529,1492,3.529,1493,3.529,1494,3.529,1495,6.766,1496,3.529,1497,3.529,1498,3.529,1499,3.529,1500,3.529,1501,5.182,1502,5.182,1503,5.182]],["title/injectables/NgxEditorJSService.html",[314,0.991,601,2.224]],["body/injectables/NgxEditorJSService.html",[3,0.071,4,0.071,9,0.053,12,0.393,15,0.984,16,1.172,20,1.129,28,0.254,31,1.029,34,2.438,38,1.735,43,0.984,48,1.373,50,1.382,52,2.453,53,0.009,54,1.672,55,1.019,56,1.346,58,0.46,60,1.533,67,2.481,68,2.668,72,0.491,84,1.312,85,3.49,95,0.341,98,0.287,102,1.579,103,1.533,104,0.792,106,1.271,107,1.09,109,0.161,110,0.188,111,2.435,112,1.706,113,1.887,115,3.095,130,1.914,132,3.253,176,0.751,210,0.432,226,0.002,227,0.003,228,0.002,307,0.856,314,0.726,315,0.792,316,0.494,318,1.449,320,0.625,332,1.627,338,1.122,340,0.669,355,1.422,356,1.271,357,2.028,371,1.271,372,1.271,396,0.224,406,0.931,418,1.794,433,2.883,443,0.88,444,0.988,445,1.579,449,2.19,458,1.533,474,0.524,475,0.834,478,1.9,484,1.798,488,1.449,525,1.219,527,2.968,529,1.579,531,1.579,533,2.406,534,1.373,536,2.008,537,1.627,538,2.369,541,1.627,545,3.486,547,4.473,552,1.859,553,1.172,556,2.353,562,3.421,567,3.825,568,1.571,569,2.094,570,2.56,571,1.9,572,1.398,573,3.281,574,2.191,575,1.398,576,1.33,577,1.172,578,2.968,579,1.33,580,1.477,581,3.095,582,1.398,583,2.968,584,1.69,585,1.69,586,2.302,587,1.571,588,1.571,589,1.398,590,1.627,591,1.271,592,3.079,593,4.725,594,3.763,595,2.588,596,2.853,597,2.588,598,3.269,599,2.588,600,2.588,601,2.406,602,1.794,603,1.398,604,0.959,605,4.114,606,2.783,607,1.69,608,1.69,609,1.69,610,3.101,611,1.69,612,1.69,613,1.69,614,4.549,615,1.69,616,1.69,617,1.69,618,1.69,619,1.69,620,1.69,621,1.69,622,1.69,623,1.69,624,1.69,625,3.273,626,2.008,627,2.996,628,1.69,629,2.094,630,1.219,631,1.571,632,1.571,633,2.935,634,2.783,635,2.094,636,1.69,637,1.69,638,1.69,639,1.69,640,1.69,641,2.266,642,1.69,643,2.094,644,1.579,645,2.783,646,1.69,647,2.432,648,1.69,649,4.114,650,3.825,651,2.783,652,1.69,653,2.432,654,1.69,655,2.432,656,2.783,657,1.69,658,3.239,659,2.191,660,3.825,661,3.825,662,1.69,663,3.595,664,1.69,665,2.783,666,1.69,667,2.783,668,2.302,669,2.588,670,2.783,671,2.432,672,1.69,681,2.588,691,2.432,1083,2.588,1190,1.848,1344,3.044,1504,3.441,1505,2.089,1506,2.089,1507,2.089,1508,2.089,1509,2.089,1510,2.089,1511,2.089,1512,2.089,1513,2.089,1514,2.089,1515,2.089,1516,2.089,1517,2.089,1518,2.089,1519,2.089,1520,2.089,1521,2.089]],["title/modules/NgxEditorjsDemoModule.html",[229,0.851,245,3.323]],["body/modules/NgxEditorjsDemoModule.html",[3,0.133,4,0.133,9,0.101,10,1.49,23,0.944,53,0.009,95,0.458,98,0.541,99,2.393,100,2.043,109,0.125,110,0.355,189,1.351,197,4.302,198,1.132,209,3.816,210,0.384,215,3.942,220,4.302,226,0.004,227,0.005,228,0.004,229,0.712,231,1.418,232,1.529,233,2.827,234,1.703,235,2.179,236,2.539,243,5.232,244,4.562,245,6.625,246,5.232,247,2.497,248,1.656,249,1.656,254,3.028,258,2.236,274,3.479,275,3.18,288,4.214,304,3.18,305,2.205,316,0.255,423,1.982,484,1.611,489,3.143,571,1.703,743,2.631,1027,3.479,1087,3.18,1184,4.958,1186,4.532,1276,3.479,1445,3.749,1446,2.504,1449,4.958,1450,4.958,1462,3.18,1522,3.479,1523,3.479,1524,3.479,1525,3.479,1526,6.133,1527,4.98,1528,4.759,1529,4.98,1530,4.98,1531,4.98,1532,4.759,1533,4.98,1534,3.18,1535,3.18,1536,5.604,1537,5.604,1538,4.958,1539,4.958,1540,5.604,1541,5.604,1542,4.958,1543,3.932,1544,3.479,1545,6.529,1546,3.479,1547,3.932,1548,3.932,1549,3.932,1550,3.932,1551,3.932,1552,3.932,1553,3.932,1554,3.932,1555,3.932]],["title/modules/NgxEditorjsNgrxModule.html",[229,0.851,1556,3.536]],["body/modules/NgxEditorjsNgrxModule.html",[3,0.195,4,0.195,9,0.148,12,0.446,15,2.073,53,0.008,95,0.424,98,0.794,100,1.806,109,0.183,110,0.521,115,4.413,189,1.983,210,0.437,226,0.005,227,0.007,228,0.005,229,1.551,231,2.082,232,2.245,233,2.5,234,2.5,235,2.245,236,2.245,244,5.102,247,3.231,248,2.431,249,2.431,254,3.918,258,2.894,271,3.539,316,0.375,355,2.028,433,2.376,466,4.231,488,3.054,589,4.852,602,3.782,1407,4.342,1445,4.852,1446,3.676,1556,6.576,1557,5.108,1558,5.774,1559,5.774,1560,5.774,1561,6.416,1562,5.865,1563,7.252,1564,7.252,1565,5.774,1566,5.774,1567,5.774,1568,5.774]],["title/modules/NgxEditorjsPluginsModule.html",[229,0.851,1569,3.536]],["body/modules/NgxEditorjsPluginsModule.html",[3,0.144,4,0.144,9,0.109,12,0.33,15,1.698,53,0.009,95,0.449,98,0.587,109,0.135,110,0.385,175,3.973,176,0.877,189,1.467,210,0.377,226,0.004,227,0.005,228,0.004,229,1.236,231,2.797,232,1.66,233,1.849,234,1.849,235,1.66,236,2.655,247,2.646,248,1.798,249,1.798,254,3.208,258,2.37,316,0.277,423,2.993,464,3.208,478,2.571,495,2.571,574,3.781,781,3.781,1278,4.466,1445,3.973,1446,2.719,1527,5.607,1528,5.359,1529,5.607,1530,5.607,1531,5.607,1532,5.359,1533,5.607,1569,7.048,1570,3.777,1571,3.777,1572,3.777,1573,5.892,1574,4.27,1575,4.27,1576,4.803,1577,5.938,1578,5.938,1579,5.938,1580,5.938,1581,5.254,1582,4.27,1583,4.27,1584,4.27,1585,4.27,1586,4.27,1587,4.27,1588,4.27,1589,4.27,1590,3.453,1591,4.27]],["title/modules/NgxHideableHeaderDemoModule.html",[229,0.851,1592,3.803]],["body/modules/NgxHideableHeaderDemoModule.html",[3,0.224,4,0.224,9,0.169,53,0.008,95,0.43,98,0.911,109,0.25,110,0.597,226,0.006,227,0.007,228,0.006,231,2.389,254,3.579,258,3.148,303,6.38,304,6.38,305,3.715,307,2.715,316,0.43,505,3.322,1445,5.278,1446,4.218,1534,5.358,1535,5.358,1592,6.38,1593,6.38,1594,5.861]],["title/modules/NgxTinynodesCoreMaterialModule.html",[229,0.851,1595,3.323]],["body/modules/NgxTinynodesCoreMaterialModule.html",[3,0.22,4,0.22,9,0.167,23,1.875,53,0.008,95,0.427,98,0.896,99,3.965,101,3.521,109,0.206,110,0.588,226,0.006,227,0.007,228,0.006,231,2.35,236,2.534,254,3.521,258,3.117,288,6.291,316,0.423,1185,7.401,1186,6.765,1445,5.597,1446,4.149,1538,7.401,1539,7.401,1595,5.521,1596,5.765,1597,6.516]],["title/modules/NgxTinynodesCoreModule.html",[229,0.851,246,3.146]],["body/modules/NgxTinynodesCoreModule.html",[3,0.178,4,0.178,9,0.135,12,0.406,15,2.297,23,1.999,45,3.692,53,0.008,84,2.043,95,0.41,98,0.724,101,4.101,109,0.167,110,0.474,189,1.807,198,1.062,213,4.588,226,0.005,227,0.006,228,0.005,229,1.374,231,1.897,232,2.046,233,3.287,234,2.278,235,2.046,236,2.951,242,6.147,246,6.12,247,3.045,248,2.216,249,2.216,254,3.692,258,2.727,285,4.655,316,0.342,321,1.829,426,4.572,488,2.878,1030,5.527,1128,5.139,1181,5.139,1281,4.655,1595,6.432,1596,4.655,1598,4.655,1599,4.655,1600,4.655,1601,4.655,1602,5.261,1603,6.834,1604,6.046,1605,5.261,1606,5.261,1607,5.261]],["title/classes/NotReady.html",[110,0.424,559,2.861]],["body/classes/NotReady.html",[3,0.161,4,0.161,9,0.122,18,3.148,28,0.581,29,1.323,34,1.792,43,1.365,50,1.339,52,1.602,53,0.009,54,1.007,55,1.126,56,0.845,58,1.051,59,1.856,95,0.327,109,0.269,110,0.727,112,3.299,198,1.629,210,0.446,226,0.004,227,0.006,228,0.004,316,0.502,321,1.715,338,1.083,443,2.011,474,1.197,529,3.957,534,3.219,541,3.657,542,2.785,543,4.925,544,3.04,545,4.425,546,3.374,547,4.841,550,3.374,551,3.194,552,3.909,553,2.678,554,4.221,555,3.9,556,1.856,557,4.221,558,3.04,559,4.706,560,3.374,561,5.137,562,3.137,563,3.374,564,4.53,565,3.374,566,3.194,1608,6.409,1609,4.774]],["title/interfaces/Page.html",[63,1.654,396,0.24]],["body/interfaces/Page.html",[3,0.206,4,0.206,9,0.156,28,0.742,29,1.549,37,5.994,53,0.008,55,1.058,63,2.641,95,0.383,100,1.909,109,0.258,176,1.108,210,0.383,216,4.011,226,0.005,227,0.007,228,0.005,268,3.076,316,0.396,338,1.139,349,1.433,396,0.415,397,1.315,430,1.866,449,2.372,627,3.77,1068,5.994,1610,4.935,1611,5.994]],["title/interfaces/PageBlock.html",[396,0.24,1611,3.323]],["body/interfaces/PageBlock.html",[3,0.215,4,0.215,9,0.163,28,0.775,29,1.59,37,4.5,53,0.008,55,0.794,63,2.241,95,0.393,100,1.992,109,0.262,176,1.223,210,0.393,216,3.643,226,0.006,227,0.007,228,0.006,268,3.21,316,0.413,338,1.034,349,1.496,396,0.423,397,1.372,430,2.356,449,1.78,627,3.793,1068,4.5,1610,5.15,1611,5.853]],["title/components/PageContainerComponent.html",[0,1.541,220,2.294]],["body/components/PageContainerComponent.html",[0,2.223,1,1.211,2,1.769,3,0.081,4,0.081,5,1.348,6,1.012,7,1.173,8,1.348,9,0.061,10,0.911,12,0.298,13,2.01,14,0.796,15,1.58,17,3.697,18,1.461,19,3.412,20,2.083,21,1.298,22,4.223,23,1.55,24,2.162,26,2.162,28,0.292,29,0.796,31,1.153,32,3.905,34,2.264,38,1.943,43,1.58,45,2.985,50,1.381,52,0.806,53,0.009,54,1.276,55,0.481,56,0.425,57,2.462,58,1.063,59,0.934,63,2.975,67,1.893,68,2.205,75,1.04,85,2.151,88,2.042,95,0.371,98,0.33,100,1.893,102,1.102,103,2.151,104,0.911,105,1.698,106,1.462,107,1.253,109,0.076,110,0.217,111,2.796,112,1.877,113,1.293,125,2.579,130,1.584,132,2.327,148,2.356,151,1.211,152,2.725,153,2.083,154,2.899,166,1.944,176,1.002,189,0.825,190,2.162,191,1.623,192,1.071,193,3.099,194,1.348,195,1.348,196,1.102,197,1.173,198,1.594,199,1.253,200,2.162,201,1.136,202,1.253,203,1.348,204,1.211,205,1.348,206,1.348,207,1.136,208,1.348,209,1.173,210,0.445,211,2.627,212,1.348,213,1.211,214,1.348,215,1.211,216,2.283,217,1.348,218,1.136,219,1.348,220,2.696,221,1.211,222,1.298,223,1.071,224,1.253,225,1.348,226,0.002,227,0.003,228,0.004,248,2.97,252,2.725,316,0.495,318,2.97,320,1.153,321,1.998,326,1.698,332,1.823,333,2.346,338,0.323,347,0.866,356,1.462,357,0.866,388,0.825,409,1.718,433,1.811,448,1.881,449,2.33,465,1.179,481,1.39,495,1.669,503,1.58,505,1.623,510,1.823,538,1.623,555,3.362,556,2.742,562,2.742,592,3.509,596,3.955,601,2.613,604,1.102,625,1.769,627,1.58,633,2.579,641,1.718,655,2.725,713,2.346,757,4.047,775,2.899,798,2.899,837,1.807,879,1.698,886,2.899,917,3.118,929,1.608,984,2.725,1002,3.631,1028,1.943,1029,3.411,1030,3.118,1031,3.411,1032,3.411,1033,3.905,1034,3.118,1041,4.539,1042,2.126,1043,4.539,1044,4.888,1045,4.888,1051,2.126,1057,3.411,1058,3.411,1065,3.118,1072,2.126,1081,1.943,1083,1.807,1085,2.126,1086,2.126,1087,1.943,1088,2.126,1089,2.126,1090,1.698,1091,2.126,1092,2.126,1105,2.126,1106,2.126,1107,2.126,1109,2.126,1111,2.126,1112,2.126,1113,2.126,1114,2.126,1115,2.126,1116,2.126,1118,3.697,1119,2.126,1120,2.126,1121,2.126,1133,2.579,1137,3.411,1138,3.411,1139,3.411,1140,2.126,1141,2.126,1142,2.126,1143,2.126,1144,2.126,1145,2.126,1146,3.118,1147,3.411,1148,3.118,1149,3.411,1150,3.118,1151,3.411,1152,2.899,1153,2.126,1154,1.943,1155,1.943,1156,1.943,1544,6.749,1612,7.628,1613,6.049,1614,2.403,1615,2.403,1616,2.403,1617,2.403,1618,2.403,1619,2.403,1620,2.403,1621,2.403,1622,2.403,1623,3.855,1624,2.403,1625,2.403,1626,2.403,1627,2.403,1628,2.403,1629,2.403]],["title/modules/PageStoreModule.html",[229,0.851,1526,3.323]],["body/modules/PageStoreModule.html",[3,0.191,4,0.191,9,0.145,12,0.438,53,0.008,63,2.522,95,0.422,98,0.78,109,0.18,110,0.511,189,1.947,198,1.447,210,0.401,211,2.243,226,0.005,227,0.006,228,0.005,229,1.542,231,2.044,232,2.204,233,2.454,234,2.454,235,3.057,236,2.204,247,3.194,248,2.387,249,2.387,258,2.861,271,3.498,316,0.368,466,4.182,604,3.289,756,5.391,994,4.362,1041,4.796,1043,5.823,1526,6.427,1561,6.342,1562,5.797,1630,5.014,1631,5.014,1632,6.151,1633,5.542,1634,5.668,1635,5.797,1636,6.342,1637,5.014,1638,5.668,1639,4.584]],["title/injectables/PagesQuery.html",[314,0.991,1632,3.323]],["body/injectables/PagesQuery.html",[3,0.215,4,0.215,9,0.163,43,1.825,50,1.181,52,2.141,53,0.008,54,1.346,55,0.796,56,1.13,63,2.246,95,0.44,98,0.878,109,0.202,110,0.575,210,0.394,226,0.006,227,0.007,228,0.006,268,3.217,271,3.764,314,1.627,315,2.419,316,0.501,430,2.359,431,5.162,436,4.8,437,5.162,1632,5.452,1633,5.484,1639,5.162,1640,6.382,1641,8.29,1642,6.382,1643,4.8,1644,4.8]],["title/injectables/PagesService.html",[314,0.991,1043,3.146]],["body/injectables/PagesService.html",[3,0.116,4,0.116,9,0.088,12,0.517,15,1.457,28,0.42,29,1.052,31,1.524,34,1.997,37,2.438,38,2.569,43,0.986,48,2.034,50,1.525,52,2.594,53,0.009,54,1.63,55,1.011,56,1.435,63,3.239,67,2.419,68,2.983,76,2.308,85,3.33,95,0.395,98,0.475,100,1.079,104,1.308,109,0.109,110,0.311,111,1.494,112,2.906,113,1.157,130,0.903,132,2.552,176,1.234,210,0.432,226,0.003,227,0.005,228,0.003,268,1.739,271,4.08,307,1.414,314,1.075,315,1.308,316,0.543,318,2.146,323,2.973,327,2.79,334,4.731,401,1.982,449,2.162,488,2.146,500,2.487,556,1.982,561,2.197,626,2.973,627,3.608,658,3.245,694,3.101,880,3.833,1041,5.31,1043,3.41,1068,2.438,1081,2.79,1133,4.478,1278,3.833,1611,5.464,1632,5.047,1633,4.547,1637,3.052,1639,2.79,1643,2.595,1645,3.45,1646,5.096,1647,5.096,1648,5.096,1649,5.096,1650,3.45,1651,5.096,1652,3.45,1653,5.096,1654,3.45,1655,7.141,1656,5.096,1657,3.45,1658,5.096,1659,3.602,1660,5.096,1661,3.45,1662,5.096,1663,3.45,1664,5.096,1665,3.45,1666,5.096,1667,3.45,1668,3.45,1669,3.45,1670,6.693,1671,5.096,1672,3.45,1673,3.45,1674,3.45,1675,5.096,1676,3.45,1677,3.45,1678,6.06,1679,5.096,1680,3.45,1681,3.45,1682,3.45]],["title/interfaces/PagesState.html",[396,0.24,1644,3.536]],["body/interfaces/PagesState.html",[3,0.22,4,0.22,9,0.167,43,1.867,53,0.008,54,1.377,63,2.298,95,0.427,98,0.898,109,0.248,110,0.589,210,0.333,226,0.006,227,0.007,228,0.006,268,3.293,314,1.649,316,0.424,396,0.333,397,1.407,430,2.561,456,5.883,457,4.616,1041,4.37,1633,4.159,1643,4.912,1644,5.883,1683,5.779,1684,7.408,1685,6.92]],["title/injectables/PagesStore.html",[314,0.991,1633,2.994]],["body/injectables/PagesStore.html",[3,0.217,4,0.217,9,0.165,43,2.38,50,1.192,53,0.008,54,1.358,63,2.266,95,0.425,98,0.886,109,0.246,110,0.581,210,0.396,226,0.006,227,0.007,228,0.006,268,3.247,314,1.636,315,2.441,316,0.504,396,0.329,430,2.545,456,5.833,457,4.552,1041,4.309,1633,4.939,1643,4.844,1644,4.844,1683,5.698,1684,6.862,1685,7.364,1686,6.441]],["title/interfaces/Paragraph.html",[396,0.24,503,1.927]],["body/interfaces/Paragraph.html",[3,0.136,4,0.136,6,1.699,9,0.103,12,0.311,28,0.491,29,1.366,53,0.009,55,1.145,56,1.275,58,1.736,72,1.556,109,0.267,156,4.041,165,2.403,166,2.914,167,3.083,176,1.352,210,0.402,226,0.004,227,0.005,228,0.004,316,0.262,321,2.169,338,1.147,340,2.12,349,0.948,388,1.386,396,0.449,397,0.869,401,1.569,409,2.543,430,2.202,434,1.61,465,1.234,492,2.263,495,1.747,496,2.18,497,3.201,498,3.201,499,2.104,500,1.969,501,3.201,502,3.083,503,3.394,504,3.083,505,3.414,506,2.976,507,2.354,508,1.529,509,3.083,510,3.593,511,3.33,512,2.263,513,3.453,514,2.354,515,2.354,516,2.354,517,2.354,518,2.354,519,3.083,520,2.18,521,2.263]],["title/interfaces/ParagraphBlock.html",[396,0.24,504,2.54]],["body/interfaces/ParagraphBlock.html",[3,0.137,4,0.137,6,1.706,9,0.104,12,0.313,28,0.493,29,1.37,53,0.009,55,1.151,56,1.277,58,1.675,72,1.559,109,0.267,156,3.52,165,2.411,166,2.918,167,3.093,176,1.36,210,0.414,226,0.004,227,0.005,228,0.004,316,0.263,321,2.113,338,1.113,340,2.125,349,0.952,388,1.392,396,0.452,397,0.873,401,1.576,409,2.551,430,2.327,434,1.617,465,1.239,492,2.273,495,1.755,496,2.189,497,3.211,498,3.211,499,2.113,500,1.977,501,3.211,502,3.093,503,3.237,504,3.586,505,3.418,506,2.985,507,2.364,508,1.536,509,3.093,510,3.598,511,3.34,512,2.273,513,3.461,514,2.364,515,2.364,516,2.364,517,2.364,518,2.364,519,3.093,520,2.189,521,2.273]],["title/injectables/PluginCode.html",[314,0.991,1687,3.536]],["body/injectables/PluginCode.html",[3,0.204,4,0.204,9,0.154,12,0.466,18,2.288,28,0.734,31,2.229,34,2.262,50,1.117,53,0.008,67,2.716,95,0.431,98,0.83,109,0.191,110,0.544,130,1.58,176,1.101,210,0.431,226,0.005,227,0.007,228,0.005,314,1.572,315,2.288,316,0.484,461,2.975,465,2.768,469,3.638,472,3.867,474,1.513,481,3.046,1117,5.269,1487,3.522,1687,5.607,1688,6.036,1689,6.036,1690,6.036]],["title/modules/PluginCodeModule.html",[229,0.851,1527,2.994]],["body/modules/PluginCodeModule.html",[3,0.206,4,0.206,9,0.156,12,0.472,15,2.149,53,0.008,58,1.655,95,0.384,98,0.841,109,0.194,110,0.551,176,1.11,189,2.101,210,0.415,226,0.005,227,0.007,228,0.005,229,1.473,231,2.205,232,2.378,233,2.648,234,2.648,235,3.164,236,2.378,247,3.349,248,2.575,249,2.575,258,2.999,316,0.397,481,2.71,590,3.554,641,3.349,644,3.448,1527,5.648,1687,6.671,1691,5.411,1692,5.411,1693,6.116,1694,4.061,1695,3.568,1696,6.116,1697,3.722,1698,6.116]],["title/interfaces/PluginConfig.html",[396,0.24,476,2.637]],["body/interfaces/PluginConfig.html",[3,0.175,4,0.175,9,0.133,12,0.4,14,1.07,31,2.023,50,1.252,53,0.009,56,1.334,95,0.345,98,0.713,109,0.263,110,0.61,113,2.27,130,1.357,198,1.047,210,0.345,226,0.005,227,0.006,228,0.005,229,1.364,307,2.773,316,0.439,320,1.55,338,1.073,349,1.997,357,1.869,396,0.408,397,1.117,461,3.307,462,3.898,463,3.468,464,2.8,465,2.805,466,3.024,467,3.677,469,3.677,470,3.468,471,2.907,472,3.357,473,5.042,474,1.299,475,2.701,476,3.795,477,4.528,478,2.244,479,3.024,480,3.3,481,1.869,482,3.656,483,3.656,484,2.773,485,3.154,486,3.3,487,3.154,488,2.183,489,2.907,490,3.3,493,2.907,1699,5.183]],["title/interfaces/PluginConfig-1.html",[388,1.361,396,0.202,476,2.222]],["body/interfaces/PluginConfig-1.html",[3,0.174,4,0.174,9,0.132,12,0.399,14,1.066,31,2.018,50,1.249,53,0.009,56,1.332,95,0.345,98,0.71,109,0.262,110,0.609,113,2.265,130,1.352,198,1.043,210,0.407,226,0.005,227,0.006,228,0.005,229,1.362,307,2.767,316,0.438,320,1.544,338,1.071,349,1.995,357,1.862,396,0.407,397,1.113,461,3.304,463,3.455,464,2.79,465,2.803,466,3.013,467,3.671,469,3.671,470,3.455,471,2.896,472,3.351,473,5.033,474,1.294,475,2.694,476,3.786,477,4.517,478,2.236,479,3.013,480,3.288,481,1.862,482,3.648,483,3.648,484,2.767,485,3.142,486,3.288,487,3.142,488,2.174,489,2.896,490,3.288,491,3.883,493,2.896,1700,5.164]],["title/injectables/PluginHeader.html",[314,0.991,1701,3.323]],["body/injectables/PluginHeader.html",[3,0.203,4,0.203,9,0.154,12,0.465,18,2.283,28,0.733,31,2.226,34,2.26,50,1.115,53,0.008,67,2.714,95,0.431,98,0.828,109,0.191,110,0.543,130,1.577,176,1.099,210,0.431,226,0.005,227,0.007,228,0.005,314,1.57,315,2.283,316,0.483,461,2.971,465,2.767,469,4.12,472,3.601,474,1.51,481,3.044,505,3.135,1487,3.514,1701,5.262,1702,6.023,1703,6.023,1704,4.871]],["title/modules/PluginHeaderModule.html",[229,0.851,1528,2.861]],["body/modules/PluginHeaderModule.html",[3,0.206,4,0.206,9,0.156,12,0.471,15,2.146,53,0.008,58,1.653,95,0.383,98,0.839,109,0.193,110,0.55,176,1.108,189,2.096,210,0.415,226,0.005,227,0.007,228,0.005,229,1.471,231,2.2,232,2.373,233,2.642,234,2.642,235,3.161,236,2.373,247,3.344,248,2.57,249,2.57,258,2.995,316,0.396,481,2.706,505,3.161,590,3.55,641,3.344,644,3.444,1528,5.395,1694,4.055,1695,3.56,1697,3.713,1701,6.266,1705,5.399,1706,5.399,1707,6.102,1708,6.102,1709,6.102]],["title/injectables/PluginImage.html",[314,0.991,1710,3.536]],["body/injectables/PluginImage.html",[3,0.203,4,0.203,9,0.154,12,0.465,18,2.283,28,0.733,31,2.226,34,2.26,50,1.115,53,0.008,67,2.714,95,0.431,98,0.828,109,0.191,110,0.543,130,1.577,176,1.099,210,0.431,226,0.005,227,0.007,228,0.005,314,1.57,315,2.283,316,0.483,461,2.971,465,2.767,469,4.12,472,3.601,474,1.51,481,3.044,510,3.521,1487,3.514,1710,5.6,1711,6.023,1712,6.023,1713,6.023]],["title/modules/PluginImageModule.html",[229,0.851,1573,3.146]],["body/modules/PluginImageModule.html",[3,0.206,4,0.206,9,0.156,12,0.472,15,2.149,53,0.008,58,1.655,95,0.384,98,0.841,109,0.194,110,0.551,176,1.11,189,2.101,210,0.415,226,0.005,227,0.007,228,0.005,229,1.473,231,2.205,232,2.378,233,2.648,234,2.648,235,3.164,236,2.378,247,3.349,248,2.575,249,2.575,258,2.999,316,0.397,481,2.71,590,3.554,641,3.349,644,3.448,1573,5.934,1694,4.061,1695,3.568,1697,3.722,1710,6.671,1714,5.411,1715,5.411,1716,6.116,1717,5.411,1718,5.411]],["title/injectables/PluginLink.html",[314,0.991,1719,3.536]],["body/injectables/PluginLink.html",[3,0.204,4,0.204,9,0.154,12,0.466,18,2.288,28,0.734,31,2.229,34,2.262,50,1.117,53,0.008,67,2.716,95,0.431,98,0.83,109,0.191,110,0.544,130,1.58,176,1.101,210,0.431,226,0.005,227,0.007,228,0.005,314,1.572,315,2.288,316,0.484,410,4.537,461,2.975,465,2.768,469,4.123,472,3.604,474,1.513,481,3.046,1487,3.522,1719,5.607,1720,6.036,1721,6.036,1722,6.036]],["title/modules/PluginLinkModule.html",[229,0.851,1529,2.994]],["body/modules/PluginLinkModule.html",[3,0.206,4,0.206,9,0.156,12,0.472,15,2.149,53,0.008,58,1.655,95,0.384,98,0.841,109,0.194,110,0.551,176,1.11,189,2.101,210,0.415,226,0.005,227,0.007,228,0.005,229,1.473,231,2.205,232,2.378,233,2.648,234,2.648,235,3.164,236,2.378,247,3.349,248,2.575,249,2.575,258,2.999,316,0.397,481,2.71,590,3.554,641,3.349,644,3.448,1529,5.648,1694,4.061,1695,3.568,1697,3.722,1719,6.671,1723,5.411,1724,5.411,1725,6.116,1726,6.116,1727,6.116]],["title/injectables/PluginList.html",[314,0.991,1728,3.323]],["body/injectables/PluginList.html",[3,0.203,4,0.203,9,0.154,12,0.465,18,2.283,28,0.733,31,2.226,34,2.26,50,1.115,53,0.008,67,2.714,95,0.431,98,0.828,109,0.191,110,0.543,130,1.577,166,2.62,176,1.099,210,0.431,226,0.005,227,0.007,228,0.005,314,1.57,315,2.283,316,0.483,461,2.971,465,2.767,469,4.12,472,3.601,474,1.51,481,3.044,1487,3.514,1728,5.262,1729,6.023,1730,6.023,1731,5.329]],["title/modules/PluginListModule.html",[229,0.851,1530,2.994]],["body/modules/PluginListModule.html",[3,0.206,4,0.206,9,0.156,12,0.471,15,2.146,53,0.008,58,1.653,95,0.383,98,0.839,109,0.193,110,0.55,176,1.108,189,2.096,210,0.415,226,0.005,227,0.007,228,0.005,229,1.471,231,2.2,232,2.373,233,2.642,234,2.642,235,3.161,236,2.373,247,3.344,248,2.57,249,2.57,258,2.995,316,0.396,481,2.706,590,3.55,641,3.344,644,3.444,1530,5.645,1694,4.055,1695,3.56,1697,3.713,1728,6.266,1732,5.399,1733,5.399,1734,6.102,1735,6.102,1736,6.102]],["title/injectables/PluginMarker.html",[314,0.991,1737,3.536]],["body/injectables/PluginMarker.html",[3,0.192,4,0.192,9,0.146,12,0.439,18,2.157,28,0.692,31,2.149,34,2.436,50,1.33,53,0.009,67,2.8,95,0.422,98,0.783,109,0.18,110,0.513,130,1.881,175,4.808,210,0.435,226,0.005,227,0.006,228,0.005,314,1.515,315,2.157,316,0.511,338,0.764,461,2.868,465,2.783,467,4.252,469,4.037,472,3.509,474,1.426,481,2.983,1487,3.32,1737,5.405,1738,5.691,1739,7.32,1740,5.691,1741,5.691,1742,5.691,1743,5.691]],["title/modules/PluginMarkerModule.html",[229,0.851,1531,2.994]],["body/modules/PluginMarkerModule.html",[3,0.206,4,0.206,9,0.156,12,0.471,15,2.146,53,0.008,58,1.653,95,0.383,98,0.839,109,0.193,110,0.55,175,5.022,189,2.096,210,0.415,226,0.005,227,0.007,228,0.005,229,1.471,231,2.2,232,2.373,233,2.642,234,2.642,235,3.161,236,2.373,247,3.344,248,2.57,249,2.57,258,2.995,316,0.396,481,2.706,590,3.55,641,3.344,644,3.444,1531,5.645,1694,4.055,1695,3.56,1697,3.713,1737,6.667,1739,6.641,1744,5.399,1745,5.399,1746,6.102,1747,6.102,1748,6.102]],["title/injectables/PluginParagraph.html",[314,0.991,1749,3.323]],["body/injectables/PluginParagraph.html",[3,0.204,4,0.204,9,0.154,12,0.466,18,2.288,28,0.734,31,2.229,34,2.262,50,1.117,53,0.008,67,2.716,95,0.431,98,0.83,109,0.191,110,0.544,130,1.58,176,1.101,210,0.431,226,0.005,227,0.007,228,0.005,314,1.572,315,2.288,316,0.484,461,2.975,465,2.768,469,4.123,472,3.604,474,1.513,481,3.046,503,3.056,1487,3.522,1749,5.269,1750,6.036,1751,6.036,1752,4.54]],["title/modules/PluginParagraphModule.html",[229,0.851,1532,2.861]],["body/modules/PluginParagraphModule.html",[3,0.206,4,0.206,9,0.156,12,0.472,15,2.149,53,0.008,58,1.655,95,0.384,98,0.841,109,0.194,110,0.551,176,1.11,189,2.101,210,0.415,226,0.005,227,0.007,228,0.005,229,1.473,231,2.205,232,2.378,233,2.648,234,2.648,235,3.164,236,2.378,247,3.349,248,2.575,249,2.575,258,2.999,316,0.397,481,2.71,590,3.554,641,3.349,644,3.448,1532,5.397,1694,4.061,1695,3.568,1697,3.722,1749,6.269,1753,5.411,1754,5.411,1755,6.116,1756,6.116,1757,6.116]],["title/injectables/PluginSimpleImage.html",[314,0.991,1758,3.536]],["body/injectables/PluginSimpleImage.html",[3,0.201,4,0.201,9,0.152,12,0.459,18,2.254,28,0.723,31,2.208,34,2.247,50,1.1,53,0.008,67,2.704,95,0.429,98,0.818,109,0.188,110,0.536,130,1.557,176,1.091,210,0.429,226,0.005,227,0.007,228,0.005,314,1.558,315,2.254,316,0.48,461,2.948,465,2.76,469,3.604,472,3.58,474,1.49,481,2.663,510,3.8,592,3.111,1148,5.974,1487,3.469,1590,5.974,1758,5.555,1759,6.535,1760,5.946,1761,6.535,1762,5.946,1763,5.946]],["title/modules/PluginSimpleImageModule.html",[229,0.851,1533,2.994]],["body/modules/PluginSimpleImageModule.html",[3,0.203,4,0.203,9,0.154,12,0.465,15,2.129,53,0.008,95,0.38,98,0.828,109,0.191,110,0.543,176,1.099,189,2.069,210,0.412,226,0.005,227,0.007,228,0.005,229,1.463,231,2.172,232,2.342,233,2.608,234,2.608,235,3.142,236,2.342,247,3.317,248,2.536,249,2.536,258,2.971,316,0.391,478,3.224,481,2.685,510,3.521,590,3.521,641,3.317,644,3.416,1533,5.627,1590,4.871,1694,4.023,1695,3.514,1697,3.665,1717,5.329,1718,5.329,1758,6.646,1759,5.329,1761,7.15,1764,5.329,1765,5.329,1766,6.023]],["title/classes/Ready.html",[110,0.424,534,1.876]],["body/classes/Ready.html",[3,0.161,4,0.161,9,0.122,18,3.148,28,0.581,29,1.323,34,1.792,43,1.365,50,1.339,52,1.602,53,0.009,54,1.007,55,1.126,56,0.845,58,1.051,59,1.856,95,0.327,109,0.269,110,0.727,112,3.299,198,1.629,210,0.446,226,0.004,227,0.006,228,0.004,316,0.502,321,1.715,338,1.083,443,2.011,474,1.197,529,3.957,534,3.315,541,3.657,542,2.785,543,4.925,544,3.04,545,4.425,546,3.374,547,4.841,550,3.374,551,3.194,552,3.909,553,2.678,554,4.221,555,3.9,556,1.856,557,4.221,558,3.04,559,4.403,560,3.374,561,5.137,562,3.137,563,3.374,564,3.374,565,4.53,566,3.194,1767,6.409,1768,4.774]],["title/interfaces/ReadyMap.html",[396,0.24,535,2.637]],["body/interfaces/ReadyMap.html",[3,0.167,4,0.167,9,0.127,12,0.383,50,0.918,53,0.009,55,0.82,72,1.845,84,1.966,95,0.376,102,4.232,103,2.21,104,1.88,109,0.266,133,3.11,176,1.089,210,0.449,226,0.004,227,0.006,228,0.004,316,0.427,338,1.15,340,1.588,349,2.119,357,3.253,396,0.429,397,1.069,433,1.626,449,1.387,474,1.244,493,2.782,508,2.492,522,2.782,523,3.319,524,6.037,525,2.895,527,2.895,528,3.836,529,2.276,530,2.895,531,2.276,532,2.895,533,3.11,534,2.624,535,3.688,536,2.895,537,2.346,538,2.089,539,2.782,1769,4.961]],["title/classes/SaveEnd.html",[110,0.424,557,2.743]],["body/classes/SaveEnd.html",[3,0.161,4,0.161,9,0.122,18,3.148,28,0.581,29,1.323,34,1.792,43,1.365,50,1.339,52,1.602,53,0.009,54,1.007,55,1.126,56,0.845,58,1.051,59,1.856,95,0.327,109,0.269,110,0.727,112,3.299,198,1.629,210,0.446,226,0.004,227,0.006,228,0.004,316,0.502,321,1.715,338,1.083,443,2.011,474,1.197,529,3.957,534,3.219,541,3.657,542,2.785,543,4.925,544,3.04,545,4.425,546,3.374,547,4.841,550,3.374,551,3.194,552,3.909,553,2.678,554,4.221,555,3.9,556,1.856,557,4.512,558,3.04,559,4.403,560,3.374,561,5.137,562,3.137,563,4.53,564,3.374,565,3.374,566,3.194,1770,6.409,1771,4.774]],["title/classes/SaveStart.html",[110,0.424,554,2.743]],["body/classes/SaveStart.html",[3,0.161,4,0.161,9,0.122,18,3.148,28,0.581,29,1.323,34,1.792,43,1.365,50,1.339,52,1.602,53,0.009,54,1.007,55,1.126,56,0.845,58,1.051,59,1.856,95,0.327,109,0.269,110,0.727,112,3.299,198,1.629,210,0.446,226,0.004,227,0.006,228,0.004,316,0.502,321,1.715,338,1.083,443,2.011,474,1.197,529,3.957,534,3.219,541,3.657,542,2.785,543,4.925,544,3.04,545,4.425,546,3.374,547,4.841,550,3.374,551,3.194,552,3.909,553,2.678,554,4.512,555,3.9,556,1.856,557,4.221,558,3.04,559,4.403,560,4.53,561,5.137,562,3.137,563,3.374,564,3.374,565,3.374,566,3.194,1772,6.409,1773,4.774]],["title/components/SidebarComponent.html",[0,1.541,221,2.37]],["body/components/SidebarComponent.html",[0,2.411,1,2.488,2,3.006,3,0.167,4,0.167,5,2.768,6,2.078,7,2.408,8,2.768,9,0.126,10,2.788,21,2.666,22,4.773,23,2.054,24,3.675,26,3.675,28,0.6,36,4.172,41,6.508,42,6.508,50,1.213,53,0.009,54,1.653,55,0.817,63,1.737,75,3.185,95,0.334,96,4.126,98,0.679,100,1.544,101,2.666,109,0.156,110,0.445,151,2.488,189,1.695,190,3.675,191,2.759,192,2.199,193,4.395,194,2.768,195,2.768,196,2.264,197,2.408,198,1.728,199,2.573,200,3.675,201,2.334,202,2.573,203,2.768,204,2.488,205,2.768,206,2.768,207,2.334,208,2.768,209,2.408,210,0.4,211,2.05,212,2.768,213,2.488,214,2.768,215,2.488,216,2.334,217,2.768,218,2.334,219,2.768,220,2.408,221,3.951,222,2.666,223,2.199,224,2.573,225,2.768,226,0.004,227,0.006,228,0.004,347,2.941,1774,7.356,1775,4.935,1776,7.356,1777,6.553,1778,4.935,1779,4.935,1780,6.553,1781,7.837,1782,6.553]],["title/interfaces/Tag.html",[216,2.224,396,0.24]],["body/interfaces/Tag.html",[3,0.216,4,0.216,9,0.164,28,0.778,29,1.594,37,4.521,53,0.008,55,0.798,63,2.251,95,0.394,100,2.001,109,0.263,176,1.141,210,0.394,216,3.925,226,0.006,227,0.007,228,0.006,268,3.225,316,0.415,338,1.157,349,2.025,396,0.424,397,1.378,430,1.956,449,1.789,627,3.616,1068,4.521,1610,5.173,1611,5.459]],["title/classes/TestClass.html",[110,0.424,1198,3.536]],["body/classes/TestClass.html",[3,0.183,4,0.183,9,0.138,18,2.052,28,0.659,31,2.082,34,1.514,43,2.2,48,3.353,50,1.288,53,0.009,67,1.694,68,2.161,95,0.393,109,0.244,110,0.732,130,2.127,226,0.005,227,0.006,228,0.005,316,0.5,338,0.727,449,1.947,461,2.778,465,1.656,467,3.397,472,3.102,474,1.357,542,3.159,556,2.105,571,3.014,577,3.904,596,3.037,598,2.925,635,4.236,691,3.827,824,3.295,896,3.037,897,3.904,1108,3.827,1165,3.623,1187,4.072,1188,4.379,1189,4.379,1196,4.379,1197,4.379,1198,5.787,1199,4.379,1200,4.072,1201,6.224,1202,4.379,1203,4.379,1204,5.631,1205,4.379,1206,4.379,1207,4.379,1783,5.415,1784,5.415]],["title/interfaces/TinynodeDemos.html",[396,0.24,451,2.452]],["body/interfaces/TinynodeDemos.html",[3,0.159,4,0.159,9,0.12,12,0.364,14,1.483,23,1.725,28,0.573,29,1.311,53,0.009,54,1.339,55,0.587,61,3.506,72,1.106,84,2.148,88,1.741,95,0.324,100,1.474,109,0.262,141,3.122,148,3.099,176,0.938,198,1.759,210,0.449,211,2.859,226,0.004,227,0.006,228,0.004,316,0.306,320,1.408,321,2.356,338,0.632,340,1.508,347,2.591,349,1.688,354,2.456,355,1.317,359,2.374,360,2.374,361,3.686,383,3.205,396,0.432,397,1.015,405,2.374,414,2.098,430,1.44,435,2.161,440,3.151,441,2.545,442,2.641,443,2.674,444,2.227,445,2.161,446,2.456,447,2.545,448,2.298,449,1.776,450,4.011,451,3.312]],["title/interfaces/TinynodeDemos-1.html",[388,1.361,396,0.202,451,2.067]],["body/interfaces/TinynodeDemos-1.html",[3,0.161,4,0.161,9,0.122,10,1.813,12,0.369,14,1.494,23,1.54,28,0.582,29,1.324,53,0.009,54,1.353,55,0.597,61,3.534,72,1.123,84,2.165,88,1.768,95,0.327,100,1.496,109,0.263,141,3.138,176,0.947,198,1.765,210,0.451,211,2.852,226,0.004,227,0.006,228,0.004,320,1.43,321,2.363,338,0.642,340,1.531,347,2.314,349,1.701,354,2.494,355,1.337,359,2.411,360,2.411,361,3.702,383,3.221,396,0.433,397,1.031,414,2.131,430,1.463,435,2.194,441,2.584,442,2.682,443,2.702,444,2.262,445,2.194,446,2.494,447,2.584,448,2.334,449,1.794,450,4.036,451,3.346,452,3.2]],["title/interfaces/ToolSettingsMap.html",[396,0.24,479,2.743]],["body/interfaces/ToolSettingsMap.html",[3,0.174,4,0.174,9,0.132,12,0.399,14,1.066,31,2.018,50,1.249,53,0.009,56,1.332,95,0.345,98,0.71,109,0.262,110,0.466,113,2.265,130,1.352,198,1.043,210,0.345,226,0.005,227,0.006,228,0.005,229,1.222,307,2.767,316,0.438,320,1.544,338,1.071,349,1.995,357,2.434,396,0.407,397,1.113,461,3.002,462,3.883,463,3.455,464,2.79,465,2.791,466,3.013,467,3.671,469,4.039,470,3.455,471,2.896,472,3.554,473,5.337,474,1.294,475,2.061,476,2.896,477,3.455,478,2.923,479,3.939,480,4.299,481,2.434,482,3.648,483,3.648,484,2.767,485,3.142,486,3.288,487,3.142,488,2.174,489,2.896,490,3.288,493,2.896,1785,5.164]],["title/interfaces/ToolSettingsMap-1.html",[388,1.361,396,0.202,479,2.312]],["body/interfaces/ToolSettingsMap-1.html",[3,0.174,4,0.174,9,0.132,12,0.397,14,1.062,31,2.014,50,1.246,53,0.009,56,1.329,95,0.344,98,0.708,109,0.262,110,0.464,113,2.259,130,1.347,198,1.039,210,0.407,226,0.005,227,0.006,228,0.005,229,1.219,307,2.76,316,0.437,320,1.538,338,1.07,349,1.993,357,2.428,396,0.407,397,1.109,461,2.996,463,3.442,464,2.78,465,2.789,466,3.001,467,3.664,469,4.035,470,3.442,471,2.885,472,3.549,473,5.33,474,1.29,475,2.053,476,2.885,477,3.442,478,2.916,479,3.929,480,4.288,481,2.428,482,3.639,483,3.639,484,2.76,485,3.131,486,3.276,487,3.131,488,2.166,489,2.885,490,3.276,491,3.869,493,2.885,1786,5.145]],["title/changelog.html",[1787,2.801,1788,2.801,1789,2.312]],["body/changelog.html",[0,1.809,13,2.88,14,1.139,15,1.579,23,1.325,53,0.006,57,3.141,58,1.216,60,2.46,100,2.43,101,2.983,113,2.605,115,4.29,176,0.815,210,0.396,211,2.43,226,0.005,227,0.006,228,0.005,229,1.276,236,2.147,323,3.222,418,2.88,426,5.196,433,1.809,484,3.465,500,2.695,506,2.88,538,2.969,582,3.694,641,2.46,643,3.36,694,3.36,700,3.222,725,3.903,864,4.466,897,3.097,923,3.694,925,3.903,926,3.694,968,4.153,1125,5.702,1169,4.153,1172,6.281,1173,4.885,1175,4.153,1178,3.516,1302,4.885,1576,4.466,1635,4.466,1659,3.903,1789,4.113,1790,5.522,1791,5.522,1792,4.153,1793,5.522,1794,5.522,1795,5.841,1796,7.05,1797,5.522,1798,5.702,1799,5.522,1800,5.522,1801,7.05,1802,5.522,1803,5.522,1804,4.885,1805,5.522,1806,5.522,1807,5.522,1808,5.522,1809,4.466,1810,5.522,1811,5.522,1812,5.522,1813,7.05,1814,7.05,1815,5.522,1816,4.885,1817,6.237,1818,4.885,1819,4.466,1820,5.522,1821,5.522,1822,3.516,1823,5.522,1824,5.522,1825,5.522,1826,5.522,1827,5.522,1828,5.522,1829,5.522,1830,5.522,1831,5.522,1832,5.522,1833,5.522,1834,5.522,1835,5.522,1836,4.885,1837,4.885,1838,4.885]],["title/contributing.html",[1787,2.801,1788,2.801,1839,3.506]],["body/contributing.html",[9,0.099,17,2.598,34,1.553,50,0.718,52,1.303,53,0.005,94,2.92,111,2.405,113,1.863,133,1.836,179,3.14,226,0.005,227,0.005,228,0.003,232,1.51,276,5.244,341,3.14,396,0.198,401,1.51,441,2.098,488,2.339,506,2.025,531,2.548,538,2.339,545,2.025,558,2.472,574,4.128,594,2.598,625,1.781,630,2.265,644,2.548,650,4.177,659,2.472,696,5.321,700,2.265,773,3.14,876,2.92,897,3.636,923,3.716,925,2.744,1090,2.744,1117,5.667,1279,3.24,1285,3.435,1304,2.92,1337,3.435,1340,3.435,1470,3.435,1581,3.435,1604,3.435,1659,2.744,1817,4.913,1818,3.435,1822,5.561,1836,4.913,1837,3.435,1838,3.435,1839,4.913,1840,4.913,1841,5.736,1842,3.883,1843,3.883,1844,3.435,1845,3.435,1846,3.883,1847,3.883,1848,3.435,1849,8.018,1850,5.554,1851,3.883,1852,6.483,1853,3.883,1854,2.92,1855,3.883,1856,3.883,1857,4.492,1858,3.14,1859,3.435,1860,3.883,1861,3.883,1862,3.883,1863,3.883,1864,7.076,1865,3.14,1866,3.883,1867,3.14,1868,3.883,1869,3.883,1870,4.492,1871,3.883,1872,3.883,1873,4.913,1874,3.883,1875,3.883,1876,5.554,1877,3.883,1878,3.883,1879,5.554,1880,3.883,1881,7.486,1882,3.883,1883,7.486,1884,5.554,1885,3.435,1886,5.554,1887,3.883,1888,3.883,1889,3.883,1890,3.883,1891,3.883,1892,3.883,1893,3.883,1894,5.554,1895,3.883,1896,3.883,1897,5.554,1898,3.883,1899,3.883,1900,3.883,1901,5.554,1902,3.883,1903,5.554,1904,7.486,1905,3.883,1906,3.883,1907,3.883,1908,5.554,1909,3.883,1910,3.883,1911,3.883,1912,3.883,1913,3.883,1914,3.883,1915,3.883,1916,3.883,1917,3.883,1918,3.883,1919,3.883,1920,3.883,1921,3.883,1922,3.883,1923,5.554,1924,6.483,1925,3.883,1926,3.883,1927,3.883,1928,3.883,1929,3.883,1930,3.883,1931,3.883,1932,3.883,1933,5.554,1934,3.883,1935,3.883,1936,3.435,1937,3.883,1938,3.883,1939,3.883,1940,3.883,1941,5.554,1942,3.883,1943,3.883,1944,3.883,1945,5.554,1946,3.883,1947,3.435,1948,3.883,1949,3.883,1950,3.883,1951,3.883,1952,3.883,1953,5.554,1954,3.883,1955,3.883,1956,5.554,1957,3.883,1958,3.883,1959,3.883,1960,3.883,1961,3.883,1962,3.883,1963,3.883,1964,3.883,1965,3.883,1966,3.883,1967,3.883,1968,5.554,1969,3.883,1970,3.883,1971,3.883,1972,3.883,1973,3.883,1974,3.883,1975,3.883,1976,3.883,1977,5.554,1978,5.554,1979,5.554,1980,3.883,1981,3.883,1982,3.883,1983,3.883,1984,3.883,1985,3.883,1986,3.883,1987,3.883,1988,3.883,1989,3.883,1990,3.883,1991,5.554,1992,3.883,1993,5.554,1994,3.883,1995,3.883,1996,3.435,1997,3.883,1998,3.883,1999,5.554,2000,3.435,2001,3.883,2002,3.883,2003,3.883,2004,3.883,2005,3.883,2006,3.883,2007,3.883,2008,3.883,2009,3.883,2010,3.883,2011,3.883,2012,3.883,2013,3.883,2014,3.883,2015,3.883,2016,3.883,2017,3.883,2018,3.883,2019,3.883,2020,3.883,2021,3.883,2022,3.883,2023,3.883,2024,3.883,2025,3.883,2026,3.883,2027,3.883,2028,3.883,2029,3.883,2030,3.883]],["title/dependencies.html",[232,2.191,1809,3.205]],["body/dependencies.html",[53,0.009,98,0.811,99,3.588,101,3.185,104,2.234,198,1.484,226,0.005,227,0.007,228,0.005,232,2.292,260,5.216,261,5.216,263,5.942,264,4.679,268,3.704,269,5.216,270,5.216,271,2.877,273,5.216,275,4.768,305,3.306,474,1.478,505,2.483,551,3.945,743,3.945,1174,3.754,1407,4.434,1446,3.754,1593,4.768,1704,4.768,1731,5.216,1752,4.434,1854,4.434,2031,5.896,2032,9.012,2033,5.896,2034,7.348,2035,5.896,2036,5.896,2037,5.896,2038,5.896,2039,5.896,2040,5.896,2041,5.896,2042,5.896,2043,5.896,2044,5.896,2045,7.348,2046,5.216,2047,5.896,2048,5.896,2049,5.896,2050,5.896,2051,5.896,2052,5.896,2053,5.896,2054,5.896,2055,5.896,2056,5.896]],["title/miscellaneous/enumerations.html",[2057,2.411,2058,4.985]],["body/miscellaneous/enumerations.html",[10,2.148,14,1.479,23,1.36,28,0.689,53,0.008,59,3.627,84,2.143,141,3.212,198,1.721,210,0.444,226,0.005,227,0.006,228,0.005,316,0.51,360,4.164,361,3.681,383,3.297,440,3.792,443,3.019,444,3.39,452,3.792,534,3.137,541,3.39,543,3.609,544,4.564,553,4.633,554,3.307,555,4.362,556,2.204,557,3.307,558,3.609,559,3.449,568,4.263,588,4.263,589,3.792,590,2.68,593,5.066,595,5.391,597,5.391,599,5.391,600,5.391,2057,3.449,2058,5.014,2059,5.668,2060,5.668,2061,5.668,2062,4.263]],["title/miscellaneous/functions.html",[425,4.557,2057,2.411]],["body/miscellaneous/functions.html",[12,0.573,14,1.238,23,1.44,28,0.73,52,2.706,53,0.008,54,1.701,55,0.748,56,1.493,67,2.524,76,4.968,110,0.541,130,1.57,198,1.211,210,0.43,211,1.876,226,0.005,227,0.007,228,0.005,229,1.344,301,4.013,316,0.547,425,4.85,468,3.127,475,2.393,476,3.363,478,2.597,571,3.65,573,3.499,578,3.499,626,4.706,764,3.649,1353,6.006,1437,5.306,1438,6.57,1451,6.57,1459,5.306,1463,6.57,1488,4.51,1542,7.136,1870,4.85,2057,3.649,2062,4.51,2063,5.306,2064,7.458,2065,5.997,2066,5.997,2067,5.306,2068,5.997,2069,5.997,2070,5.997,2071,5.997,2072,5.997]],["title/index.html",[28,0.482,1787,2.801,1788,2.801]],["body/index.html",[0,2.349,2,3.289,14,1.622,15,2.362,23,1.36,53,0.006,58,1.248,60,3.796,61,2.766,81,3.449,100,2.46,148,2.766,176,0.837,191,2.387,192,2.525,198,1.587,199,3.738,210,0.456,211,2.243,226,0.005,227,0.006,228,0.005,229,1.298,232,2.204,236,2.204,249,2.387,253,4.584,312,4.263,318,2.387,355,2.004,426,4.796,433,1.857,484,2.938,531,2.601,590,2.68,641,2.525,659,5.006,734,3.609,797,4.263,923,4.796,1118,3.792,1167,5.391,1169,5.391,1174,3.609,1175,4.263,1178,5.26,1181,5.912,1279,4.586,1304,4.263,1309,4.263,1562,5.797,1576,4.584,1789,4.586,1822,5.26,1840,6.955,2073,5.668,2074,5.668,2075,5.668,2076,5.668,2077,5.668,2078,5.668,2079,5.668,2080,4.796,2081,7.168,2082,5.014,2083,5.014,2084,4.584,2085,5.668]],["title/license.html",[1787,2.801,1788,2.801,2086,3.963]],["body/license.html",[23,1.415,53,0.007,103,2.627,133,2.788,226,0.005,227,0.007,228,0.005,249,2.483,434,2.353,545,3.074,708,4.167,925,5.657,1178,3.754,1279,4.287,1795,4.434,1865,4.768,1870,4.768,1873,6.5,1885,5.216,1996,5.216,2000,5.216,2082,5.216,2083,5.216,2087,5.216,2088,5.896,2089,5.896,2090,8.005,2091,5.896,2092,5.896,2093,5.896,2094,5.896,2095,5.896,2096,7.348,2097,9.088,2098,5.896,2099,5.896,2100,5.896,2101,7.348,2102,5.896,2103,5.896,2104,5.896,2105,5.216,2106,5.896,2107,5.896,2108,5.896,2109,5.896,2110,7.348,2111,5.896,2112,5.896,2113,5.896,2114,5.896,2115,5.896,2116,5.896,2117,7.348,2118,7.348,2119,5.896,2120,5.896,2121,5.896,2122,5.896,2123,5.896,2124,5.896,2125,5.896,2126,5.896,2127,5.896,2128,5.896,2129,5.896,2130,5.896,2131,5.896,2132,5.896,2133,5.896,2134,5.896,2135,5.896,2136,5.896,2137,5.896,2138,5.896,2139,5.896,2140,5.896,2141,5.896,2142,5.896,2143,5.896]],["title/modules.html",[231,2.287]],["body/modules.html",[53,0.006,226,0.005,227,0.006,228,0.005,230,4.064,231,2.073,241,4.064,242,4.839,243,3.847,244,3.354,245,4.064,246,4.839,264,5.976,401,3.229,994,5.711,1526,4.064,1527,3.661,1528,3.499,1529,3.661,1530,3.661,1531,3.661,1532,3.499,1533,3.661,1556,4.324,1569,4.324,1573,3.847,1592,4.65,1595,4.064,2144,9.385,2145,9.449,2146,8.304]],["title/overview.html",[2147,5.612]],["body/overview.html",[1,3.752,2,1.412,45,3.415,53,0.009,189,1.057,192,1.371,196,3.415,197,3.632,201,2.676,204,2.852,207,3.52,209,2.761,213,3.752,215,2.852,218,3.52,220,3.632,221,2.852,223,3.316,226,0.003,227,0.004,228,0.003,229,0.557,230,6.296,231,1.109,232,1.196,233,1.332,234,1.332,235,1.196,236,1.196,237,2.722,238,2.722,239,2.722,240,2.722,241,3.999,242,5.96,243,4.229,244,5.197,245,6.498,246,5.744,247,2.084,248,1.296,249,1.296,315,1.166,328,3.847,329,3.545,388,1.057,397,0.663,420,2.722,421,2.722,542,1.795,581,3.443,583,3.301,601,2.676,1043,3.786,1433,2.722,1434,2.722,1435,2.722,1436,2.722,1522,2.722,1523,2.722,1524,2.722,1525,2.722,1526,5.905,1527,5.101,1528,4.875,1529,5.101,1530,5.101,1531,5.101,1532,4.875,1533,5.101,1556,4.754,1557,2.722,1569,6.767,1570,2.722,1571,2.722,1572,2.722,1573,5.256,1595,5.26,1598,2.722,1599,2.722,1600,2.722,1601,2.722,1630,2.722,1631,2.722,1632,3.999,1633,3.603,1687,4.255,1691,2.722,1692,2.722,1701,3.999,1705,2.722,1706,2.722,1710,4.255,1714,2.722,1715,2.722,1719,4.255,1723,2.722,1724,2.722,1728,3.999,1732,2.722,1733,2.722,1737,4.255,1744,2.722,1745,2.722,1749,3.999,1753,2.722,1754,2.722,1758,4.255,1764,2.722,1765,2.722,2147,2.722,2148,4.677,2149,3.077,2150,3.077,2151,3.077]],["title/todo.html",[446,2.067,1787,2.801,1788,2.801]],["body/todo.html",[0,2.058,23,1.508,53,0.007,63,2.21,96,3.523,192,2.798,198,1.662,210,0.437,211,1.965,226,0.006,227,0.007,228,0.006,229,1.137,231,2.265,271,3.065,312,4.724,318,3.217,408,4,414,2.798,423,3.166,446,3.275,449,1.756,488,3.217,556,2.442,569,3.822,570,3.665,571,3.565,592,2.645,602,3.275,630,3.665,668,4.203,759,5.08,994,4.649,1130,5.557,1133,6.045,1150,5.08,1407,4.724,1695,3.665,1792,4.724,1936,5.557,1947,5.557,2087,5.557,2105,5.557,2152,6.281,2153,6.281,2154,6.281,2155,5.557,2156,6.281,2157,6.281,2158,6.281,2159,6.281,2160,5.557,2161,5.557,2162,5.557]],["title/miscellaneous/typealiases.html",[2057,2.411,2163,5.635]],["body/miscellaneous/typealiases.html",[6,2.706,28,0.782,53,0.008,55,1.037,166,2.261,176,1.144,210,0.328,226,0.006,227,0.007,228,0.006,316,0.503,338,1.04,401,2.499,492,3.604,496,3.472,497,4.344,498,4.344,499,3.351,500,3.136,501,4.344,502,3.472,504,3.472,509,3.472,519,3.472,520,3.472,521,4.344,534,2.564,541,3.039,543,4.092,544,4.932,554,3.749,557,3.749,559,3.91,566,5.182,2057,3.91,2062,4.833,2164,6.426,2165,7.746]],["title/miscellaneous/variables.html",[1858,4.557,2057,2.411]],["body/miscellaneous/variables.html",[0,2.547,10,2.557,13,1.829,14,1.262,15,1.003,23,0.842,28,0.427,50,0.954,53,0.009,55,1.047,57,1.562,58,1.992,59,3.506,81,3.139,110,0.316,113,2.73,151,3.084,169,1.967,196,1.609,197,1.711,198,1.452,199,2.69,201,1.658,202,2.69,209,1.711,210,0.441,211,1.097,215,2.6,218,1.658,220,1.711,226,0.003,227,0.005,228,0.003,229,0.934,276,5.456,298,3.102,299,4.563,303,4.948,306,3.102,308,4.563,309,6.36,310,3.102,311,3.102,312,2.637,316,0.537,320,1.542,335,4.787,338,0.471,357,1.264,423,3.401,433,1.149,445,2.366,458,2.298,462,2.637,482,4.062,483,4.199,484,2.765,485,4.105,486,3.284,487,3.139,488,2.172,489,3.783,490,3.284,491,2.637,505,2.576,522,1.967,533,1.658,535,1.967,539,1.967,562,1.363,571,1.518,578,3.009,579,3.284,592,1.477,602,1.829,604,2.366,627,1.437,673,3.102,676,4.563,734,3.284,740,5.456,742,4.563,745,3.102,746,5.456,747,5.456,748,5.081,754,2.836,761,2.836,762,2.836,763,2.836,764,2.134,765,3.879,766,2.836,767,2.637,768,4.171,769,2.836,771,2.836,772,5.456,781,2.233,782,4.171,783,3.879,784,2.836,785,3.879,786,2.836,901,3.102,902,2.836,903,4.563,914,4.563,922,4.563,994,2.134,1309,2.637,1534,4.171,1535,4.171,1546,4.563,1593,4.948,1594,4.563,1858,2.836,2046,3.102,2057,2.134,2062,3.879,2063,3.102,2064,4.563,2067,3.102,2166,3.507,2167,5.158,2168,6.118,2169,3.507,2170,6.746,2171,3.507,2172,3.507,2173,5.158,2174,3.507,2175,6.746,2176,5.158,2177,5.158,2178,5.158,2179,5.158,2180,3.507,2181,5.158,2182,3.507,2183,3.507,2184,3.507,2185,5.158,2186,3.507,2187,3.507]],["title/additional-documentation/tinynodes-library-docs.html",[23,0.724,63,1.061,495,1.306,643,1.835,1792,2.268]],["body/additional-documentation/tinynodes-library-docs.html",[23,1.661,53,0.007,91,6.123,198,1.398,226,0.006,227,0.007,228,0.006,322,5.205,644,3.175,1169,5.205,1172,5.597,1174,5.154,1175,5.205,1635,5.597,1694,3.739,1789,4.038,1816,6.123,1819,5.597,1841,6.123,1848,6.123,1857,5.597,1865,5.597,2080,4.631,2084,5.597,2188,6.123,2189,8.095,2190,6.921]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[63,1.061,198,0.609,210,0.154,495,1.306,2080,2.017]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[0,2.078,2,1.712,12,0.288,13,1.946,14,0.77,15,1.813,17,2.497,31,1.116,53,0.009,55,0.466,56,0.661,58,1.396,60,2.825,67,1.168,95,0.392,96,3.027,98,0.513,100,2.174,109,0.171,110,0.337,113,2.127,117,2.807,130,0.977,148,1.821,152,2.638,153,2.016,166,1.313,176,0.936,191,2.273,192,2.405,198,0.754,207,1.765,210,0.46,211,1.984,216,1.765,223,1.663,224,1.946,226,0.003,227,0.005,228,0.003,229,1.334,230,2.638,233,1.616,234,1.616,235,1.451,244,3.149,254,2.016,258,2.154,262,4.775,263,3.018,264,2.376,292,2.638,318,2.67,320,1.116,321,1.697,332,1.765,335,2.376,343,4.365,349,1.489,355,1.943,357,1.346,406,2.405,417,2.376,418,3.307,423,2.721,433,2.078,434,1.489,445,1.712,449,1.943,458,1.663,465,1.651,468,2.815,474,1.353,475,2.942,478,2.746,484,2.599,487,3.284,488,2.67,489,3.027,499,2.815,503,2.212,505,1.572,531,1.712,537,1.765,545,1.946,552,2.016,562,2.701,569,3.858,571,2.337,574,2.376,590,1.765,592,2.67,601,1.765,625,1.712,627,2.212,629,2.271,630,2.177,631,2.807,641,3.423,643,3.284,644,1.712,685,4.242,686,2.497,687,2.497,688,3.611,689,2.497,690,3.611,700,2.177,701,2.376,703,2.497,711,2.497,712,2.497,713,2.271,714,3.611,715,2.271,764,2.271,781,3.437,824,2.271,876,2.807,896,2.093,897,2.093,923,2.497,926,2.497,968,2.807,994,2.271,1005,3.302,1006,3.302,1090,2.638,1118,2.497,1128,4.059,1168,3.302,1174,4.038,1178,2.376,1279,4.053,1298,3.302,1304,2.807,1388,3.018,1439,4.775,1440,4.775,1443,4.775,1462,3.018,1488,2.807,1528,2.271,1530,2.376,1532,2.271,1694,2.916,1701,3.815,1728,3.815,1749,3.815,1752,2.807,1789,2.177,1792,4.769,1822,2.376,1844,3.302,1854,4.769,1859,3.302,2161,3.302,2162,3.302,2191,3.732,2192,3.732,2193,3.732,2194,3.732,2195,3.302,2196,3.732,2197,3.732,2198,6.341,2199,3.732,2200,5.398,2201,3.732,2202,3.732,2203,5.398,2204,3.732,2205,3.732,2206,3.732,2207,3.732,2208,3.732,2209,3.732,2210,3.732,2211,3.732,2212,3.732,2213,3.732,2214,3.302,2215,3.732]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[63,1.061,198,0.609,210,0.154,495,1.306,1789,1.759]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[0,2.398,2,1.921,7,2.043,9,0.107,14,0.864,15,1.197,16,3.285,29,0.864,31,1.252,53,0.005,56,0.741,58,1.696,60,3.01,67,1.31,81,2.547,96,2.348,100,1.31,101,2.262,110,0.528,114,3.704,117,3.148,166,1.473,185,4.405,191,2.466,192,3.01,196,1.921,198,0.845,207,2.77,210,0.448,211,1.31,218,1.98,223,1.865,226,0.004,227,0.005,228,0.004,229,1.325,244,2.442,314,0.883,318,3.243,320,1.252,321,1.12,323,2.442,333,2.547,335,2.666,338,0.562,355,1.638,396,0.214,401,2.277,406,2.61,418,3.054,426,2.801,433,2.615,434,3.073,461,1.671,465,2.066,467,2.858,468,2.183,475,2.696,478,2.536,480,2.666,484,3.426,488,2.845,496,2.262,499,2.183,500,4.145,503,1.716,505,1.763,531,3.1,541,3.774,562,1.628,569,2.547,574,2.666,582,2.801,583,2.442,591,2.547,592,2.466,601,2.77,602,2.183,604,2.687,625,2.687,627,1.716,630,2.442,643,4.686,668,2.801,675,3.704,708,4.14,725,2.959,734,2.666,756,3.148,994,2.547,1016,3.386,1090,2.959,1125,6.87,1133,2.801,1174,3.73,1178,4.302,1279,3.417,1309,3.148,1319,3.704,1353,3.386,1488,3.148,1636,3.704,1659,5.172,1789,3.941,1795,6.287,1798,3.386,1804,3.704,1809,4.737,1819,3.386,1822,4.904,1845,3.704,1867,3.386,2080,2.801,2084,5.918,2155,3.704,2188,3.704,2214,5.182,2216,3.704,2217,3.704,2218,3.704,2219,3.704,2220,3.704,2221,3.704,2222,4.186,2223,7.396,2224,4.186,2225,4.186,2226,4.186,2227,4.186,2228,4.186,2229,4.186,2230,4.186,2231,4.186,2232,4.186,2233,4.186,2234,4.186,2235,4.186,2236,4.186,2237,4.186,2238,3.704,2239,4.186,2240,4.186,2241,3.704,2242,5.857,2243,4.186,2244,3.704,2245,6.756,2246,4.186,2247,3.704,2248,4.186,2249,4.186,2250,4.186,2251,4.186,2252,4.186,2253,4.186,2254,5.857,2255,4.186,2256,4.186,2257,3.704,2258,4.186,2259,4.186,2260,4.186]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[63,0.948,198,0.544,210,0.137,484,1.104,495,1.166,2080,1.802]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[9,0.138,12,0.416,14,1.113,15,2.557,16,3.895,53,0.009,54,1.137,58,1.188,60,3.422,100,1.688,148,2.632,156,2.632,166,1.898,175,3.609,176,1.29,198,1.089,210,0.414,226,0.005,227,0.006,228,0.005,229,0.976,231,2.504,232,2.097,355,1.508,465,2.124,484,3.148,488,2.271,592,3.68,994,4.226,1146,4.362,1174,3.434,1527,3.434,1528,3.282,1529,3.434,1531,3.434,1532,3.282,1533,3.434,1573,3.609,1694,4.784,1704,4.362,1752,4.056,1822,3.434,1854,5.223,2080,5.924,2160,4.772,2195,4.772,2261,5.394,2262,5.394,2263,5.394,2264,5.394,2265,5.394,2266,5.394,2267,5.394]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[63,0.948,198,0.544,210,0.137,484,1.104,495,1.166,1789,1.571]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[9,0.166,34,1.818,53,0.007,58,1.431,101,3.512,185,4.889,226,0.006,227,0.007,228,0.006,229,1.513,320,1.944,434,2.594,447,3.512,484,2.664,500,3.172,541,3.075,583,4.551,604,2.983,630,3.793,641,2.896,644,2.983,658,4.14,668,4.35,1016,5.258,1178,4.14,1659,5.513,1789,4.551,1795,6.285,1798,5.258,1822,4.967,1857,5.258,1867,5.258,2216,5.752,2217,5.752,2218,5.752,2219,5.752,2220,5.752,2221,5.752,2223,7.393,2238,5.752,2241,5.752,2244,5.752,2247,5.752,2257,5.752,2268,6.501]]],"invertedIndex":[["",{"_index":53,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["0",{"_index":169,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["0.0.5",{"_index":2051,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":2050,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":2056,"title":{},"body":{"dependencies.html":{}}}],["05",{"_index":2223,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1",{"_index":388,"title":{"injectables/AppService-1.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["1.0.0",{"_index":2257,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.0.4",{"_index":2040,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2247,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.1.1",{"_index":2244,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.1.2",{"_index":2240,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.2",{"_index":1814,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":2237,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.0",{"_index":2231,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.2",{"_index":2226,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.4",{"_index":2043,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":2028,"title":{},"body":{"contributing.html":{}}}],["1.4.0",{"_index":2222,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["10",{"_index":2245,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["100",{"_index":1152,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["100vh",{"_index":154,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["11",{"_index":2241,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["12",{"_index":2149,"title":{},"body":{"overview.html":{}}}],["12th",{"_index":1811,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":2238,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["13th",{"_index":1807,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":185,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["15th",{"_index":1794,"title":{},"body":{"changelog.html":{}}}],["1em",{"_index":1274,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["2.0.8",{"_index":2049,"title":{},"body":{"dependencies.html":{}}}],["2.13.0",{"_index":2041,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":2042,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":2044,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":2047,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":1795,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["21",{"_index":2224,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["22",{"_index":2148,"title":{},"body":{"overview.html":{}}}],["250px",{"_index":155,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["2px",{"_index":1270,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["3.0.2",{"_index":2039,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":177,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["4",{"_index":1629,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["47",{"_index":2151,"title":{},"body":{"overview.html":{}}}],["5px",{"_index":180,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["6",{"_index":507,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["6.3.3",{"_index":2054,"title":{},"body":{"dependencies.html":{}}}],["6.9.0",{"_index":2053,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":2079,"title":{},"body":{"index.html":{}}}],["7.0.0",{"_index":2036,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":2052,"title":{},"body":{"dependencies.html":{}}}],["7.2.15",{"_index":2032,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":2034,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":2045,"title":{},"body":{"dependencies.html":{}}}],["768px",{"_index":126,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["8",{"_index":2150,"title":{},"body":{"overview.html":{}}}],["85",{"_index":188,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["_disabled",{"_index":956,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_empty",{"_index":961,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_focused",{"_index":944,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_placeholder",{"_index":939,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_required",{"_index":949,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_value",{"_index":678,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["a:active",{"_index":162,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["a:hover",{"_index":161,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["above",{"_index":2116,"title":{},"body":{"license.html":{}}}],["abusive",{"_index":1994,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":1951,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":1915,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":967,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["accessor",{"_index":745,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":38,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["account",{"_index":1985,"title":{},"body":{"contributing.html":{}}}],["acting",{"_index":1986,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":545,"title":{},"body":{"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["action.action",{"_index":608,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["action.payload.holder",{"_index":1402,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["actions",{"_index":589,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"miscellaneous/enumerations.html":{}}}],["actions/ngx",{"_index":1408,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["active",{"_index":1135,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["actual_component",{"_index":225,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["adapted",{"_index":2026,"title":{},"body":{"contributing.html":{}}}],["add",{"_index":1133,"title":{},"body":{"components/FormContainerComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["add(key",{"_index":1475,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["add(page",{"_index":1651,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock",{"_index":1646,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock(pageid",{"_index":1653,"title":{},"body":{"injectables/PagesService.html":{}}}],["added",{"_index":500,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["adding",{"_index":487,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["additional",{"_index":495,"title":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["address",{"_index":1941,"title":{},"body":{"contributing.html":{}}}],["adds",{"_index":803,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["adheres",{"_index":2220,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["advances",{"_index":1930,"title":{},"body":{"contributing.html":{}}}],["aftercontentinit",{"_index":19,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["again",{"_index":2208,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["age",{"_index":1889,"title":{},"body":{"contributing.html":{}}}],["aggregate",{"_index":399,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["akitangdevtools",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangdevtools.forroot",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["akitangrouterstoremodule.forroot",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["aliases",{"_index":2164,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":181,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["aligned",{"_index":1964,"title":{},"body":{"contributing.html":{}}}],["allow",{"_index":466,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["allows",{"_index":714,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["along",{"_index":2194,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["and/or",{"_index":2108,"title":{},"body":{"license.html":{}}}],["angular",{"_index":60,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["angular/animations",{"_index":2031,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2033,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":906,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/cdk/coercion",{"_index":908,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/cdk/layout",{"_index":108,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{}}}],["angular/common",{"_index":1446,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["angular/compiler",{"_index":2035,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":98,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"components/SidebarComponent.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/core/src/render3/jit/compiler_facade_interface",{"_index":741,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["angular/flex",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":743,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":99,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/router",{"_index":305,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"dependencies.html":{}}}],["any)(editorconfig",{"_index":815,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["any).onready",{"_index":1207,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["aot",{"_index":2254,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["api",{"_index":590,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["api](https://editorjs.io/api",{"_index":642,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["app",{"_index":57,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":2199,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["app.component.html",{"_index":27,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["app.component.scss",{"_index":25,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["appcomponent",{"_index":2198,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appcontainercomponent",{"_index":1,"title":{"components/AppContainerComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["appear",{"_index":1138,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["appearance",{"_index":1898,"title":{},"body":{"contributing.html":{}}}],["application",{"_index":14,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["application.model",{"_index":362,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{}}}],["application.query",{"_index":363,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{}}}],["application.service",{"_index":427,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["application.store",{"_index":364,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{}}}],["applicationdata",{"_index":358,"title":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["applicationdatamodule",{"_index":242,"title":{"modules/ApplicationDataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["applicationquery",{"_index":328,"title":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"overview.html":{}}}],["applicationref",{"_index":777,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["applicationstate",{"_index":435,"title":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{}},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["applicationstatekeys",{"_index":360,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["applicationstatekeys.hidden",{"_index":370,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["applicationstore",{"_index":329,"title":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"overview.html":{}}}],["applies",{"_index":1975,"title":{},"body":{"contributing.html":{}}}],["appmodule",{"_index":230,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appointed",{"_index":1987,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1953,"title":{},"body":{"contributing.html":{}}}],["approutes",{"_index":308,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":241,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":402,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["apps/.../app",{"_index":2166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.po.ts",{"_index":2174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../application.model.ts",{"_index":2060,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../environment.prod.ts",{"_index":2171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":2172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/ngx",{"_index":10,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["appservice",{"_index":45,"title":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"overview.html":{}}}],["area",{"_index":713,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["aria",{"_index":407,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["arising",{"_index":2141,"title":{},"body":{"license.html":{}}}],["array",{"_index":629,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["arrayadd",{"_index":1668,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayadd(entity.blocks",{"_index":1680,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove",{"_index":1669,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove(entity.blocks",{"_index":1681,"title":{},"body":{"injectables/PagesService.html":{}}}],["asjson",{"_index":1613,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["associated",{"_index":2098,"title":{},"body":{"license.html":{}}}],["async",{"_index":633,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["attach",{"_index":1309,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attached",{"_index":1319,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attacks",{"_index":1935,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1929,"title":{},"body":{"contributing.html":{}}}],["attr.aria",{"_index":930,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["attributes",{"_index":924,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["attribution",{"_index":2025,"title":{},"body":{"contributing.html":{}}}],["authors",{"_index":2132,"title":{},"body":{"license.html":{}}}],["auto",{"_index":178,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["autofocus",{"_index":685,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["autofocused",{"_index":755,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["autosave",{"_index":570,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{}}}],["autosavetime",{"_index":1055,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["available",{"_index":401,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"contributing.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["await",{"_index":639,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["back",{"_index":668,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["background",{"_index":515,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["ban",{"_index":1965,"title":{},"body":{"contributing.html":{}}}],["bar",{"_index":1232,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar'},{'name",{"_index":206,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["bar.component",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":1234,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.scss",{"_index":1233,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts",{"_index":1228,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:18",{"_index":1237,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:21",{"_index":1236,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar.component.ts:27",{"_index":1238,"title":{},"body":{"components/NavBarComponent.html":{}}}],["bar/nav",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"components/NavBarComponent.html":{}}}],["base",{"_index":301,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Block.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["base/container.class",{"_index":921,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["based",{"_index":1016,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["baseplugin",{"_index":461,"title":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["bash",{"_index":2195,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["basic",{"_index":520,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["before",{"_index":650,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["behavior",{"_index":1904,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":1969,"title":{},"body":{"contributing.html":{}}}],["behaviorsubject",{"_index":102,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{}}}],["behaviorsubject(0",{"_index":841,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["behaviorsubject(d",{"_index":826,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["behaviorsubject(editor",{"_index":858,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["behaviorsubject(false",{"_index":116,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["behaviorsubject(true",{"_index":1093,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["behaviorsubject(undefined",{"_index":837,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["behaviorsubject(value",{"_index":861,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["being",{"_index":1909,"title":{},"body":{"contributing.html":{}}}],["below",{"_index":1118,"title":{},"body":{"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["best",{"_index":1919,"title":{},"body":{"contributing.html":{}}}],["beta.24",{"_index":2037,"title":{},"body":{"dependencies.html":{}}}],["binding",{"_index":971,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["block",{"_index":176,"title":{"interfaces/Block.html":{}},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["block.id",{"_index":1682,"title":{},"body":{"injectables/PagesService.html":{}}}],["blockplaceholder",{"_index":686,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["blocks",{"_index":449,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["blocks.subscribe",{"_index":1401,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["blocksmap",{"_index":522,"title":{"interfaces/BlocksMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/ReadyMap.html":{},"miscellaneous/variables.html":{}}}],["blocktypes",{"_index":521,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["body",{"_index":1285,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"contributing.html":{}}}],["boolean",{"_index":72,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["bootstrap",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["border",{"_index":512,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["both",{"_index":1976,"title":{},"body":{"contributing.html":{}}}],["bottom",{"_index":712,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["box",{"_index":2077,"title":{},"body":{"index.html":{}}}],["break",{"_index":1828,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":2145,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["browser/animations",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["bug",{"_index":1819,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["build",{"_index":1817,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["builder",{"_index":1049,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["builds",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["calc(300px",{"_index":1306,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["call",{"_index":775,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["called",{"_index":698,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["calling",{"_index":527,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["calls",{"_index":663,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["caption",{"_index":511,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["card",{"_index":1153,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["case",{"_index":614,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["cd",{"_index":1044,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["center",{"_index":182,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["change",{"_index":538,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"changelog.html":{},"contributing.html":{}}}],["changed",{"_index":541,"title":{"classes/Changed.html":{}},"body":{"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changedetection",{"_index":1031,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectionstrategy",{"_index":1085,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1032,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectorref",{"_index":1045,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["changelog",{"_index":1789,"title":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changelog.md",{"_index":2246,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["changelogs",{"_index":1791,"title":{},"body":{"changelog.html":{}}}],["changemap",{"_index":539,"title":{"interfaces/ChangeMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/ReadyMap.html":{},"miscellaneous/variables.html":{}}}],["changes",{"_index":630,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changes.blocks",{"_index":1364,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.currentvalue",{"_index":1368,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.firstchange",{"_index":1365,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys",{"_index":1369,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys.includes(key",{"_index":1373,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["charge",{"_index":2093,"title":{},"body":{"license.html":{}}}],["check",{"_index":655,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["child.label",{"_index":1781,"title":{},"body":{"components/SidebarComponent.html":{}}}],["children",{"_index":411,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["ci",{"_index":2153,"title":{},"body":{"todo.html":{}}}],["circumstances",{"_index":2006,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":2135,"title":{},"body":{"license.html":{}}}],["clarified",{"_index":1992,"title":{},"body":{"contributing.html":{}}}],["clarifying",{"_index":1950,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":110,"title":{"classes/Changed.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["classes",{"_index":542,"title":{},"body":{"classes/Changed.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"overview.html":{}}}],["cleaning",{"_index":875,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["cleans",{"_index":845,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["cleanupsubjects(holder",{"_index":877,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["clear",{"_index":596,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"classes/TestClass.html":{}}}],["clear(holder",{"_index":833,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["clear(undefined",{"_index":1506,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cleareditor",{"_index":597,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/enumerations.html":{}}}],["clearhandler(holder",{"_index":890,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["clears",{"_index":665,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["click",{"_index":984,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["click)=\"disableautosave()\">disable",{"_index":1122,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["client",{"_index":336,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["close",{"_index":1299,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["cluster_applicationdatamodule",{"_index":420,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_applicationdatamodule_providers",{"_index":421,"title":{},"body":{"modules/ApplicationDataModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule",{"_index":1522,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_declarations",{"_index":1523,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_exports",{"_index":1525,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_imports",{"_index":1524,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule",{"_index":1433,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_declarations",{"_index":1434,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_exports",{"_index":1435,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_providers",{"_index":1436,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsngrxmodule",{"_index":1557,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsngrxmodule_imports",{"_index":1558,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["cluster_ngxeditorjspluginsmodule",{"_index":1570,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_exports",{"_index":1572,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_imports",{"_index":1571,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule",{"_index":1598,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule_declarations",{"_index":1599,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule_exports",{"_index":1601,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescoremodule_imports",{"_index":1600,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule",{"_index":1630,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule_providers",{"_index":1631,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule",{"_index":1691,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule_providers",{"_index":1692,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule",{"_index":1705,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule_providers",{"_index":1706,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule",{"_index":1714,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule_providers",{"_index":1715,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule",{"_index":1723,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule_providers",{"_index":1724,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule",{"_index":1732,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule_providers",{"_index":1733,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule",{"_index":1744,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule_providers",{"_index":1745,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule",{"_index":1753,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule_providers",{"_index":1754,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule",{"_index":1764,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule_providers",{"_index":1765,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cmd+shift+m",{"_index":1743,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["code",{"_index":1117,"title":{},"body":{"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/PluginCode.html":{},"contributing.html":{}}}],["code.plugin",{"_index":1696,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["coercebooleanproperty",{"_index":907,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(disabled",{"_index":960,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(focused",{"_index":948,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(required",{"_index":954,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["collection",{"_index":1167,"title":{},"body":{"components/HomePageComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["color",{"_index":159,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["column",{"_index":1158,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["combinelatest",{"_index":779,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["combinelatest([this.eventmap[holder",{"_index":866,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["comma",{"_index":1132,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["comments",{"_index":1933,"title":{},"body":{"contributing.html":{}}}],["commits",{"_index":1960,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":1823,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":1445,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["community",{"_index":1883,"title":{},"body":{"contributing.html":{}}}],["complaints",{"_index":2001,"title":{},"body":{"contributing.html":{}}}],["completes",{"_index":670,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["completly",{"_index":1805,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":2188,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component",{"_index":0,"title":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component'},{'name",{"_index":217,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["component/sidebar.component",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["component/sidebar.component.ts",{"_index":1775,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/sidebar.component.ts:11",{"_index":1779,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/sidebar.component.ts:14",{"_index":1778,"title":{},"body":{"components/SidebarComponent.html":{}}}],["component/tag.component",{"_index":1553,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["component/tag.component.ts",{"_index":2187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component_template",{"_index":194,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["components/demo",{"_index":1606,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["components/nav",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["components/sidebar",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["components/tag",{"_index":1552,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["conditions",{"_index":2115,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1849,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":2009,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":571,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"classes/TestClass.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["config.data",{"_index":1387,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config.editorconfig",{"_index":805,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["config.onchange",{"_index":807,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["config.onready",{"_index":811,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["config.ts",{"_index":2064,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["config/editor",{"_index":1354,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config/module",{"_index":1452,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["configuration",{"_index":475,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configurations",{"_index":1488,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configured",{"_index":2260,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configuring",{"_index":2205,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["connection",{"_index":2142,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1944,"title":{},"body":{"contributing.html":{}}}],["console.log",{"_index":2230,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["const",{"_index":307,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["constructive",{"_index":1916,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}}}],["constructor(@inject(userplugins",{"_index":1491,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(actions",{"_index":1392,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["constructor(app",{"_index":44,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{}}}],["constructor(config",{"_index":1190,"title":{},"body":{"classes/MockEditorJS.html":{},"injectables/NgxEditorJSService.html":{}}}],["constructor(editorjs",{"_index":1416,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["constructor(el",{"_index":1315,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["constructor(pagesservice",{"_index":1042,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["constructor(payload",{"_index":546,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["constructor(private",{"_index":1165,"title":{},"body":{"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/TestClass.html":{}}}],["constructor(protected",{"_index":436,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"components/EditorJSBaseComponent.html":{},"injectables/PagesQuery.html":{}}}],["constructor(public",{"_index":561,"title":{},"body":{"classes/Changed.html":{},"components/NgxEditorJSComponent.html":{},"classes/NotReady.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["constructor(query",{"_index":327,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/PagesService.html":{}}}],["constructor(service",{"_index":692,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["constructor(store",{"_index":431,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesQuery.html":{}}}],["constructor(userplugins",{"_index":1471,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructs",{"_index":1246,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["contacting",{"_index":1998,"title":{},"body":{"contributing.html":{}}}],["contain",{"_index":416,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["container",{"_index":17,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["container'},{'name",{"_index":200,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["container.component",{"_index":1545,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["container.component.html",{"_index":1034,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.scss",{"_index":1033,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts",{"_index":1028,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts:102",{"_index":1051,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts:109",{"_index":1079,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:111",{"_index":1048,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:114",{"_index":1615,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:145",{"_index":1071,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:154",{"_index":1080,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:161",{"_index":1082,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:168",{"_index":1084,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:175",{"_index":1060,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:184",{"_index":1050,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:193",{"_index":1059,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:247",{"_index":1056,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:26",{"_index":1073,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:30",{"_index":1618,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:35",{"_index":1072,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts:54",{"_index":1619,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:55",{"_index":1075,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:61",{"_index":1620,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:62",{"_index":1064,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:68",{"_index":1621,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:75",{"_index":1617,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:79",{"_index":1077,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:82",{"_index":1614,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:87",{"_index":1062,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container.component.ts:89",{"_index":1616,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:95",{"_index":1053,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["container/form",{"_index":1027,"title":{},"body":{"components/FormContainerComponent.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["container/home",{"_index":1276,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["container/page",{"_index":1544,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{}}}],["containers/app/app.component",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["containers/base/container.class",{"_index":1453,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/editorjs",{"_index":1454,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/editorjs/editorjs.component",{"_index":1456,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/form",{"_index":1550,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containers/home",{"_index":1551,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containers/page",{"_index":1543,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containing",{"_index":524,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{}}}],["contains",{"_index":1171,"title":{},"body":{"components/HomePageComponent.html":{}}}],["content",{"_index":152,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["continue",{"_index":1833,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":2139,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1905,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":1839,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1963,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1968,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":1880,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":602,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controlling",{"_index":2214,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controls",{"_index":1150,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"todo.html":{}}}],["controltype",{"_index":934,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["controlvalueaccessor",{"_index":675,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["copies",{"_index":2110,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2096,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2090,"title":{},"body":{"license.html":{}}}],["core",{"_index":101,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/SidebarComponent.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["core.module.ts",{"_index":1602,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["core/src",{"_index":1087,"title":{},"body":{"components/FormContainerComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{}}}],["core/src/lib/components/demo",{"_index":1280,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["core/src/lib/ngx",{"_index":1596,"title":{},"body":{"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{}}}],["core/src/lib/stores/app/application.model",{"_index":1088,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["core/src/lib/stores/app/application.model.ts",{"_index":440,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/DemoData.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/TinynodeDemos.html":{},"miscellaneous/enumerations.html":{}}}],["core/src/lib/stores/app/application.module.ts",{"_index":422,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["core/src/lib/stores/app/application.query.ts",{"_index":428,"title":{},"body":{"injectables/ApplicationQuery.html":{}}}],["core/src/lib/stores/app/application.query.ts:10",{"_index":432,"title":{},"body":{"injectables/ApplicationQuery.html":{}}}],["core/src/lib/stores/app/application.service.ts",{"_index":317,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:15",{"_index":331,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:34",{"_index":353,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:41",{"_index":350,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:52",{"_index":339,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.service.ts:65",{"_index":345,"title":{},"body":{"injectables/AppService.html":{}}}],["core/src/lib/stores/app/application.store.ts",{"_index":453,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["core/src/lib/stores/app/application.store.ts:10",{"_index":454,"title":{},"body":{"injectables/ApplicationStore.html":{}}}],["core/src/lib/types/app.ts",{"_index":398,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuItem.html":{}}}],["coreapi",{"_index":2157,"title":{},"body":{"todo.html":{}}}],["corrective",{"_index":1955,"title":{},"body":{"contributing.html":{}}}],["correctly",{"_index":2189,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["covenant",{"_index":2027,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":2030,"title":{},"body":{"contributing.html":{}}}],["cover",{"_index":1825,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":591,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["createconfig",{"_index":1379,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["created",{"_index":694,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["createeditor",{"_index":593,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/enumerations.html":{}}}],["createeditor(config",{"_index":1331,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["createeditor(options",{"_index":634,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["createeditorjsconfig",{"_index":1353,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["createeditorjsconfig(inputconfig",{"_index":2068,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createeditorjsinstance",{"_index":1463,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsinstance(editorjs",{"_index":1459,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsoptions",{"_index":567,"title":{"interfaces/CreateEditorJSOptions.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["createinstance",{"_index":787,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["createinstance(config",{"_index":804,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["createmoduleconfig",{"_index":1451,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createmoduleconfig(config",{"_index":2071,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createngxeditorjsdemotools",{"_index":1542,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":626,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["createtools",{"_index":2200,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["creating",{"_index":773,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"contributing.html":{}}}],["creation",{"_index":756,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/PageStoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["criticism",{"_index":1917,"title":{},"body":{"contributing.html":{}}}],["current",{"_index":115,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"changelog.html":{}}}],["currently",{"_index":1635,"title":{},"body":{"modules/PageStoreModule.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["cursor",{"_index":171,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["custom",{"_index":499,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["cy.get('h1",{"_index":2184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cycle",{"_index":1006,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["d",{"_index":823,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["damages",{"_index":2136,"title":{},"body":{"license.html":{}}}],["darkgray",{"_index":1272,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["data",{"_index":321,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["data.blocks",{"_index":1116,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["data.json').subscribe((appdata",{"_index":366,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["data.length",{"_index":376,"title":{},"body":{"injectables/AppService.html":{}}}],["date.now",{"_index":824,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"classes/TestClass.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["datorama/akita",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{},"dependencies.html":{}}}],["deal",{"_index":2099,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2143,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["decoration",{"_index":157,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["decorators",{"_index":78,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSEffects.html":{}}}],["deem",{"_index":1970,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":2004,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":58,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["default_holder_id",{"_index":2167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":669,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["define",{"_index":718,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["defined",{"_index":50,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":463,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["deigned",{"_index":2201,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["delayed",{"_index":1815,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":880,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{}}}],["delete(pageid",{"_index":1656,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo",{"_index":211,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["demo.module.ts",{"_index":1535,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["demo.name",{"_index":379,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demo.routes",{"_index":1547,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes.ts",{"_index":2176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/angular",{"_index":2185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/src/lib/components/tag",{"_index":2186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/src/lib/config/index.ts",{"_index":2072,"title":{},"body":{"miscellaneous/functions.html":{}}}],["demo/src/lib/containers/form",{"_index":1026,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["demo/src/lib/containers/home",{"_index":1275,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["demo/src/lib/containers/page",{"_index":1612,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["demo/src/lib/ngx",{"_index":1534,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["demo/src/lib/store/pages/pages.models.ts",{"_index":1610,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{}}}],["demo/src/lib/store/pages/pages.module.ts",{"_index":1634,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["demo/src/lib/store/pages/pages.query.ts",{"_index":1640,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.query.ts:7",{"_index":1642,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.service.ts",{"_index":1645,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:15",{"_index":1650,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:17",{"_index":1666,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:24",{"_index":1667,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:32",{"_index":1652,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:47",{"_index":1665,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:56",{"_index":1657,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:60",{"_index":1663,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:64",{"_index":1654,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:70",{"_index":1661,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.store.ts",{"_index":1683,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["demo/src/lib/store/pages/pages.store.ts:9",{"_index":1686,"title":{},"body":{"injectables/PagesStore.html":{}}}],["demo](https://tinynodes",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["demodata",{"_index":361,"title":{"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["demodata.find(demo",{"_index":378,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demoname",{"_index":342,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demoname).data",{"_index":380,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["demos",{"_index":61,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/HomePageComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"index.html":{}}}],["dependencies",{"_index":232,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["dependency",{"_index":2161,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["deps",{"_index":1464,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["describedby",{"_index":931,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["describes",{"_index":413,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["describing",{"_index":585,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["destroy",{"_index":598,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{}}}],["destroy(undefined",{"_index":1509,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroyed",{"_index":70,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["destroyeditor",{"_index":599,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/enumerations.html":{}}}],["destroyinstance",{"_index":1413,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["destroyinstance(holder",{"_index":846,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["destroys",{"_index":671,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["destructive",{"_index":1339,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["details",{"_index":644,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["detection",{"_index":886,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["determined",{"_index":2022,"title":{},"body":{"contributing.html":{}}}],["developers",{"_index":1872,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":1562,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"index.html":{}}}],["devlog",{"_index":1812,"title":{},"body":{"changelog.html":{}}}],["diary",{"_index":2073,"title":{},"body":{"index.html":{}}}],["differing",{"_index":1911,"title":{},"body":{"contributing.html":{}}}],["direction",{"_index":1157,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["directive",{"_index":192,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["directives",{"_index":222,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["directives/ngx",{"_index":919,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["disability",{"_index":1891,"title":{},"body":{"contributing.html":{}}}],["disable",{"_index":632,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSService.html":{}}}],["disableautosave",{"_index":1036,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["disabled",{"_index":955,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["disabled(disabled",{"_index":959,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["discuss",{"_index":1842,"title":{},"body":{"contributing.html":{}}}],["dispatch",{"_index":1412,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["display",{"_index":174,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["displays",{"_index":1231,"title":{},"body":{"components/NavBarComponent.html":{}}}],["distinctuntilchanged",{"_index":105,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["distribute",{"_index":2106,"title":{},"body":{"license.html":{}}}],["doc",{"_index":2155,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["docheck",{"_index":909,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["docs",{"_index":643,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["document.createelement('div",{"_index":1199,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["documentation",{"_index":1178,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["documented",{"_index":2217,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["doing",{"_index":1856,"title":{},"body":{"contributing.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["download",{"_index":2191,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["due",{"_index":1816,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["dynamic",{"_index":2038,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1980,"title":{},"body":{"contributing.html":{}}}],["e.g",{"_index":414,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{}}}],["e2e/src/support/app.po.ts",{"_index":2183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["each",{"_index":781,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["easier",{"_index":2215,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["easily",{"_index":1577,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["edit",{"_index":1958,"title":{},"body":{"contributing.html":{}}}],["editior_js_instance",{"_index":768,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["editor",{"_index":592,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PluginSimpleImage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editor's",{"_index":711,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editor.blocks.clear",{"_index":891,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["editor.blocks.render",{"_index":895,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["editor.destroy",{"_index":851,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["editor.isready.then",{"_index":816,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["editor.saver.save().then(data",{"_index":888,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["editoraction.action",{"_index":613,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["editoractions",{"_index":605,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorconfig",{"_index":573,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["editorconfig.holder",{"_index":809,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["editorconfig.onchange",{"_index":806,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["editorconfig.onready",{"_index":810,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["editorel",{"_index":970,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorform",{"_index":1035,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["editorform.value.pagename",{"_index":1134,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["editorform.valuechanges",{"_index":1136,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["editorjs",{"_index":210,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs'},{'name",{"_index":208,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["editorjs.actions",{"_index":1409,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.actions.ts",{"_index":544,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs.actions.ts:13",{"_index":1772,"title":{},"body":{"classes/SaveStart.html":{}}}],["editorjs.actions.ts:14",{"_index":1773,"title":{},"body":{"classes/SaveStart.html":{}}}],["editorjs.actions.ts:18",{"_index":1770,"title":{},"body":{"classes/SaveEnd.html":{}}}],["editorjs.actions.ts:19",{"_index":1771,"title":{},"body":{"classes/SaveEnd.html":{}}}],["editorjs.actions.ts:23",{"_index":1608,"title":{},"body":{"classes/NotReady.html":{}}}],["editorjs.actions.ts:24",{"_index":1609,"title":{},"body":{"classes/NotReady.html":{}}}],["editorjs.actions.ts:28",{"_index":1767,"title":{},"body":{"classes/Ready.html":{}}}],["editorjs.actions.ts:29",{"_index":1768,"title":{},"body":{"classes/Ready.html":{}}}],["editorjs.actions.ts:33",{"_index":548,"title":{},"body":{"classes/Changed.html":{}}}],["editorjs.actions.ts:34",{"_index":549,"title":{},"body":{"classes/Changed.html":{}}}],["editorjs.component.html",{"_index":1244,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.component.scss",{"_index":1243,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs.directive",{"_index":920,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"modules/NgxEditorJSModule.html":{}}}],["editorjs.directive.ts",{"_index":1308,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:102",{"_index":1330,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:104",{"_index":1317,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:116",{"_index":1345,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:123",{"_index":1347,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:130",{"_index":1349,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:137",{"_index":1351,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:145",{"_index":1332,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:161",{"_index":1336,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:180",{"_index":1333,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:192",{"_index":1343,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:40",{"_index":1325,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:46",{"_index":1320,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:52",{"_index":1324,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:58",{"_index":1327,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:64",{"_index":1328,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:70",{"_index":1322,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:76",{"_index":1329,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:83",{"_index":1326,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:90",{"_index":1321,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:96",{"_index":1323,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.effects.ts",{"_index":1391,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.effects.ts:10",{"_index":1393,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.effects.ts:14",{"_index":1404,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["editorjs.module.ts",{"_index":1438,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["editorjs.module.ts:62",{"_index":1442,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.version",{"_index":1388,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/code",{"_index":1690,"title":{},"body":{"injectables/PluginCode.html":{}}}],["editorjs/editorjs",{"_index":474,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/header",{"_index":1704,"title":{},"body":{"injectables/PluginHeader.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs/image",{"_index":1713,"title":{},"body":{"injectables/PluginImage.html":{}}}],["editorjs/link",{"_index":1722,"title":{},"body":{"injectables/PluginLink.html":{}}}],["editorjs/list",{"_index":1731,"title":{},"body":{"injectables/PluginList.html":{},"dependencies.html":{}}}],["editorjs/marker",{"_index":1742,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["editorjs/paragraph",{"_index":1752,"title":{},"body":{"injectables/PluginParagraph.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs/simple",{"_index":1763,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["editorjs/src",{"_index":1086,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["editorjs/src/lib/config/editor",{"_index":2067,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/config/module",{"_index":2070,"title":{},"body":{"miscellaneous/functions.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts",{"_index":673,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:102",{"_index":733,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:107",{"_index":736,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:112",{"_index":735,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:118",{"_index":731,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:125",{"_index":723,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:132",{"_index":729,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:136",{"_index":721,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:144",{"_index":739,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:151",{"_index":719,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:34",{"_index":695,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:40",{"_index":702,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:46",{"_index":705,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:52",{"_index":709,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:58",{"_index":710,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:64",{"_index":699,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:70",{"_index":717,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:77",{"_index":707,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:84",{"_index":697,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/base/container.class.ts:90",{"_index":693,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["editorjs/src/lib/containers/editorjs",{"_index":901,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts",{"_index":1242,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts:23",{"_index":1245,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts:29",{"_index":1263,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjs/src/lib/directives/ngx",{"_index":1307,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs/src/lib/ngx",{"_index":1437,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["editorjs/src/lib/services/editorjs",{"_index":771,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts",{"_index":568,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/enumerations.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:128",{"_index":1508,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:143",{"_index":1513,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:151",{"_index":1511,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:160",{"_index":1515,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:169",{"_index":1512,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:177",{"_index":1514,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:187",{"_index":1519,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:197",{"_index":1517,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:205",{"_index":1507,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:215",{"_index":1510,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:88",{"_index":1521,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:90",{"_index":1505,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts",{"_index":1467,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:15",{"_index":1472,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:32",{"_index":1476,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:40",{"_index":1483,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:49",{"_index":1478,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:56",{"_index":1485,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/services/plugins.service.ts:64",{"_index":1480,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["editorjs/src/lib/types/blocks.ts",{"_index":492,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs/src/lib/types/blocks.ts:13",{"_index":494,"title":{},"body":{"interfaces/Block.html":{}}}],["editorjs/src/lib/types/config.ts",{"_index":754,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/maps.ts",{"_index":523,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:16",{"_index":1025,"title":{},"body":{"interfaces/EventMap.html":{}}}],["editorjs/src/lib/types/maps.ts:26",{"_index":1024,"title":{},"body":{"interfaces/EditorMap.html":{}}}],["editorjs/src/lib/types/maps.ts:36",{"_index":526,"title":{},"body":{"interfaces/BlocksMap.html":{}}}],["editorjs/src/lib/types/maps.ts:46",{"_index":1769,"title":{},"body":{"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:56",{"_index":540,"title":{},"body":{"interfaces/ChangeMap.html":{}}}],["editorjs/src/lib/types/plugins.ts",{"_index":462,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/plugins.ts:17",{"_index":1785,"title":{},"body":{"interfaces/ToolSettingsMap.html":{}}}],["editorjs/src/lib/types/plugins.ts:7",{"_index":1699,"title":{},"body":{"interfaces/PluginConfig.html":{}}}],["editorjs/src/testing/ng",{"_index":1209,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["editorjs/src/testing/shared.ts",{"_index":1188,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["editorjs/src/testing/shared.ts:13",{"_index":1225,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:16",{"_index":1226,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:22",{"_index":1192,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:23",{"_index":1194,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:24",{"_index":1195,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:25",{"_index":1193,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:27",{"_index":1191,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:5",{"_index":1783,"title":{},"body":{"classes/TestClass.html":{}}}],["editorjs/src/testing/shared.ts:7",{"_index":1784,"title":{},"body":{"classes/TestClass.html":{}}}],["editorjs@1.2.0",{"_index":1808,"title":{},"body":{"changelog.html":{}}}],["editorjs@1.3.2",{"_index":1797,"title":{},"body":{"changelog.html":{}}}],["editorjs](http://editorjs.io",{"_index":1460,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs_form_value_accessor",{"_index":676,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"miscellaneous/variables.html":{}}}],["editorjs_material_field_control",{"_index":922,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["editorjs_module_import",{"_index":783,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["editorjsaction",{"_index":587,"title":{"interfaces/EditorJSAction.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjsactiontypes",{"_index":553,"title":{},"body":{"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{}}}],["editorjsactiontypes.changed",{"_index":550,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.cleareditor",{"_index":617,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjsactiontypes.createeditor",{"_index":615,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjsactiontypes.destroyeditor",{"_index":619,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjsactiontypes.notready",{"_index":564,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.ready",{"_index":565,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.saveeditor",{"_index":621,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjsactiontypes.saveend",{"_index":563,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.savestart",{"_index":560,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["editorjsactiontypes.updateeditor",{"_index":623,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjsbasecomponent",{"_index":196,"title":{"components/EditorJSBaseComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["editorjsbasecomponent:102",{"_index":1264,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:107",{"_index":1266,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:112",{"_index":1265,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:118",{"_index":1262,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:125",{"_index":1260,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:132",{"_index":1261,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:136",{"_index":1259,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:151",{"_index":1258,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:34",{"_index":1248,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:40",{"_index":1252,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:46",{"_index":1253,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:52",{"_index":1255,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:58",{"_index":1256,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:64",{"_index":1250,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:70",{"_index":1257,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:77",{"_index":1254,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:84",{"_index":1249,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsbasecomponent:90",{"_index":1251,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["editorjsconfig",{"_index":577,"title":{"interfaces/EditorJSConfig.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{}}}],["editorjsinstance",{"_index":785,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["editorjsinstanceconfig",{"_index":770,"title":{"interfaces/EditorJSInstanceConfig.html":{}},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["editorjsmaterialform",{"_index":900,"title":{"interfaces/EditorJSMaterialForm.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjsplugin",{"_index":2255,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["editormap",{"_index":532,"title":{"interfaces/EditorMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/ReadyMap.html":{}}}],["editorservice",{"_index":610,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSService.html":{}}}],["edits",{"_index":1962,"title":{},"body":{"contributing.html":{}}}],["effect",{"_index":1405,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["effect({dispatch",{"_index":1403,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["effects",{"_index":1565,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effects](https://ngrx.io/guide/effects",{"_index":1567,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effectsmodule",{"_index":1566,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["effectsmodule.forfeature",{"_index":1568,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["el",{"_index":1318,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["electronic",{"_index":1940,"title":{},"body":{"contributing.html":{}}}],["element",{"_index":191,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["elementref",{"_index":1316,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["elements",{"_index":525,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["email",{"_index":1846,"title":{},"body":{"contributing.html":{}}}],["empathy",{"_index":1921,"title":{},"body":{"contributing.html":{}}}],["empty",{"_index":455,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["empty(empty",{"_index":963,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["enable",{"_index":1054,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["enableautosave",{"_index":1037,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["enableautosave(autosavetime",{"_index":1052,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["enabled",{"_index":1124,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["enablelongstacktrace",{"_index":1223,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["end",{"_index":558,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"miscellaneous/enumerations.html":{}}}],["enforce",{"_index":2016,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":1993,"title":{},"body":{"contributing.html":{}}}],["ensure",{"_index":1853,"title":{},"body":{"contributing.html":{}}}],["enter",{"_index":1129,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["entity",{"_index":1679,"title":{},"body":{"injectables/PagesService.html":{}}}],["entitystate",{"_index":1684,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entitystore",{"_index":1685,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entrycomponents",{"_index":1536,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["enum",{"_index":443,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":2058,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":661,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["error('error",{"_index":1376,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["errorstate",{"_index":935,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["etc",{"_index":408,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"todo.html":{}}}],["ethnicity",{"_index":1892,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":133,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/ReadyMap.html":{},"contributing.html":{},"license.html":{}}}],["event.payload.blocks",{"_index":873,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["event.type",{"_index":868,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["eventemitter",{"_index":910,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{}}}],["eventemitter(false",{"_index":1222,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["eventmap",{"_index":530,"title":{"interfaces/EventMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/ReadyMap.html":{}}}],["events",{"_index":795,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["eventtype",{"_index":528,"title":{"interfaces/EventType.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/ReadyMap.html":{}}}],["everyone",{"_index":1887,"title":{},"body":{"contributing.html":{}}}],["example",{"_index":926,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["examples",{"_index":1864,"title":{},"body":{"contributing.html":{}}}],["exclude",{"_index":1481,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["exclude.includes(key",{"_index":1499,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["excludetools",{"_index":628,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["existing",{"_index":1342,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["expanded",{"_index":1824,"title":{},"body":{"changelog.html":{}}}],["expected",{"_index":1952,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":1886,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":1913,"title":{},"body":{"contributing.html":{}}}],["explicit",{"_index":1942,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":109,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["exported",{"_index":480,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["exports",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["expose",{"_index":2156,"title":{},"body":{"todo.html":{}}}],["exposed",{"_index":1859,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["exposes",{"_index":2211,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["express",{"_index":2123,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1895,"title":{},"body":{"contributing.html":{}}}],["extendable",{"_index":2202,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["extended",{"_index":674,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["extending",{"_index":477,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["extends",{"_index":430,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/Block.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["face",{"_index":2018,"title":{},"body":{"contributing.html":{}}}],["factory",{"_index":764,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["failed",{"_index":2250,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fair",{"_index":1954,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":2017,"title":{},"body":{"contributing.html":{}}}],["false",{"_index":458,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["fb",{"_index":1046,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["feature",{"_index":2162,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["features",{"_index":1181,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"index.html":{}}}],["field",{"_index":734,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["field'},{'name",{"_index":219,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["field.component",{"_index":1455,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["field.component.html",{"_index":927,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["field.component.scss",{"_index":928,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["field.component.ts",{"_index":903,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["field/editorjs",{"_index":902,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["filed",{"_index":1820,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1865,"title":{},"body":{"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["filter",{"_index":356,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["filter(([event",{"_index":867,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["filter(([key",{"_index":1498,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["filter((data",{"_index":375,"title":{},"body":{"injectables/AppService.html":{}}}],["filter(data",{"_index":395,"title":{},"body":{"injectables/AppService-1.html":{}}}],["filter(editor",{"_index":848,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["filter(menus",{"_index":382,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["finaltools",{"_index":1503,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["find",{"_index":1175,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["first",{"_index":700,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["fitness",{"_index":2128,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2227,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fixes",{"_index":2248,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["flex",{"_index":1154,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/PageContainerComponent.html":{}}}],["flexlayoutmodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["float",{"_index":974,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["fm",{"_index":988,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["fn",{"_index":726,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{}}}],["focus",{"_index":715,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["focused",{"_index":943,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["focused(focused",{"_index":947,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["focusing",{"_index":1918,"title":{},"body":{"contributing.html":{}}}],["focusmonitor",{"_index":905,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["folder",{"_index":2081,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1850,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":2114,"title":{},"body":{"license.html":{}}}],["for_root_options_token",{"_index":765,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["foreach(([key",{"_index":1493,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["form",{"_index":199,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":2218,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["formatted",{"_index":1623,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["formbuilder",{"_index":1047,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["formcontainercomponent",{"_index":197,"title":{"components/FormContainerComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":1069,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["forms",{"_index":725,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["formsmodule",{"_index":1448,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot",{"_index":1439,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["forroot(@optional",{"_index":1466,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot(config",{"_index":1441,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forwardref",{"_index":740,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["fostering",{"_index":1878,"title":{},"body":{"contributing.html":{}}}],["free",{"_index":1885,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["full",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["fully",{"_index":2074,"title":{},"body":{"index.html":{}}}],["function",{"_index":468,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["functions",{"_index":425,"title":{"miscellaneous/functions.html":{}},"body":{"modules/ApplicationDataModule.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":2113,"title":{},"body":{"license.html":{}}}],["further",{"_index":1991,"title":{},"body":{"contributing.html":{}}}],["future",{"_index":2203,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["gender",{"_index":1893,"title":{},"body":{"contributing.html":{}}}],["general",{"_index":2087,"title":{},"body":{"license.html":{},"todo.html":{}}}],["generate",{"_index":2233,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["generated",{"_index":2084,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["get(key",{"_index":1477,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getasjson",{"_index":1622,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getautosave",{"_index":1078,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["getblocks",{"_index":1083,"title":{},"body":{"components/FormContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["getblocks(holder",{"_index":647,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["getblocks(this.holder",{"_index":1102,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["getchanged",{"_index":681,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["getchanged(holder",{"_index":653,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["getdemodata",{"_index":325,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getdemodata('ngx",{"_index":1113,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["getdemodata(demoname",{"_index":337,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["geteditor",{"_index":1344,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditor(holder",{"_index":645,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditoractions",{"_index":1520,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getelement",{"_index":1346,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getgreeting",{"_index":2173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gethidden",{"_index":352,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getidvalue",{"_index":1431,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["getinstance",{"_index":1414,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["getinstance(holder",{"_index":835,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["getispanelopen",{"_index":1294,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["getisready",{"_index":738,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["getissaved",{"_index":1076,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["getmainmenu",{"_index":86,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getmenu",{"_index":326,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/PageContainerComponent.html":{}}}],["getmenu(key",{"_index":344,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["getopensourcemenu",{"_index":92,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getpages",{"_index":1081,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["getpanelopen",{"_index":1074,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["getplugins",{"_index":1484,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getprojectsmenu",{"_index":89,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getready",{"_index":1415,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["getready(holder",{"_index":839,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["gets",{"_index":346,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["getservice",{"_index":1348,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getsidebarhidden",{"_index":82,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["getters",{"_index":2251,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["gettimer(time",{"_index":996,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["getting",{"_index":1787,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["gettools",{"_index":1469,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gettools(exclude",{"_index":1479,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gettouched",{"_index":1350,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["github",{"_index":1694,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["goes",{"_index":1305,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["good",{"_index":1838,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":1914,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":2092,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2146,"title":{},"body":{"modules.html":{}}}],["group",{"_index":412,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["groups",{"_index":400,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["guid",{"_index":1670,"title":{},"body":{"injectables/PagesService.html":{}}}],["hammerjs",{"_index":2048,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":864,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"changelog.html":{}}}],["handler",{"_index":429,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["handles",{"_index":874,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["handling",{"_index":2210,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["harassing",{"_index":1995,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":1884,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":1973,"title":{},"body":{"contributing.html":{}}}],["haschanged",{"_index":1504,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["haschanged(holder",{"_index":656,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["header",{"_index":505,"title":{"interfaces/Header.html":{}},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["header.plugin",{"_index":1708,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["headerblock",{"_index":509,"title":{"interfaces/HeaderBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["height",{"_index":153,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["helper",{"_index":424,"title":{},"body":{"modules/ApplicationDataModule.html":{}}}],["helpers",{"_index":2158,"title":{},"body":{"todo.html":{}}}],["here",{"_index":322,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["hereby",{"_index":2091,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":141,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["hide",{"_index":120,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["hideable",{"_index":1593,"title":{},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["hides",{"_index":2206,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hidetoolbar",{"_index":687,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hold",{"_index":706,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["holder",{"_index":562,"title":{},"body":{"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["holders",{"_index":2133,"title":{},"body":{"license.html":{}}}],["home",{"_index":202,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":212,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["homepagecomponent",{"_index":201,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":929,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["hostbinding",{"_index":911,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('attr.aria",{"_index":979,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('class.floating",{"_index":975,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostlistener",{"_index":1352,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlistener('click",{"_index":1355,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlisteners",{"_index":1313,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["html",{"_index":190,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["http",{"_index":330,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["http://contributor",{"_index":2029,"title":{},"body":{"contributing.html":{}}}],["httpclient",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["httpclientmodule",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["i'll",{"_index":1832,"title":{},"body":{"changelog.html":{}}}],["i'm",{"_index":1800,"title":{},"body":{"changelog.html":{}}}],["i've",{"_index":1801,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":173,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{}}}],["id",{"_index":627,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["identity",{"_index":1894,"title":{},"body":{"contributing.html":{}}}],["ids",{"_index":980,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ids.join",{"_index":983,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["idvalue",{"_index":792,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["ignore",{"_index":1371,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["image",{"_index":510,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginImage.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.module",{"_index":1591,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["image.module.ts",{"_index":1766,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["image.plugin",{"_index":1717,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.plugin.ts",{"_index":1760,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["image.plugin.ts:14",{"_index":1762,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["image/simple",{"_index":1590,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["imageblock",{"_index":519,"title":{"interfaces/ImageBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["imagery",{"_index":1927,"title":{},"body":{"contributing.html":{}}}],["implementation",{"_index":1212,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["implemented",{"_index":2192,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["implements",{"_index":18,"title":{},"body":{"components/AppContainerComponent.html":{},"classes/Changed.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{}}}],["implied",{"_index":2124,"title":{},"body":{"license.html":{}}}],["import",{"_index":95,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["imported",{"_index":2258,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["importing",{"_index":1579,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["imports",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["improved",{"_index":2242,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["improvements",{"_index":1804,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["inappropriate",{"_index":1945,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":2012,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":574,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["included",{"_index":708,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["includes",{"_index":1604,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{},"contributing.html":{}}}],["includetools",{"_index":572,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["including",{"_index":2101,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":1907,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1862,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":493,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["individual",{"_index":1581,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["info'},{'name",{"_index":214,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["info.component",{"_index":1607,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["info.component.html",{"_index":1284,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.scss",{"_index":1283,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts",{"_index":1282,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:20",{"_index":1290,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:26",{"_index":1289,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:32",{"_index":1291,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:35",{"_index":1288,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:37",{"_index":1292,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:46",{"_index":1295,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info.component.ts:53",{"_index":1293,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["info/demo",{"_index":1281,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxTinynodesCoreModule.html":{}}}],["information",{"_index":1304,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["inherited",{"_index":1247,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["init",{"_index":1057,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["initial",{"_index":320,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["initialblock",{"_index":688,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["initialized",{"_index":66,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["initialplugins",{"_index":485,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":575,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject(editorjsinstance",{"_index":801,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["inject(ngx_editorjs_config",{"_index":609,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["injectable",{"_index":314,"title":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["injectables",{"_index":315,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"overview.html":{}}}],["injected",{"_index":767,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"miscellaneous/variables.html":{}}}],["injecting",{"_index":763,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injection",{"_index":482,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":471,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["injectiontoken('editior_js_instance",{"_index":769,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjs_module_import",{"_index":784,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjsinstance",{"_index":786,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('for_root_options_token",{"_index":766,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('initialplugins",{"_index":486,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx_editorjs_config",{"_index":762,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('userplugins",{"_index":490,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":582,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["injector.ts",{"_index":772,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["injector.ts:101",{"_index":1419,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:125",{"_index":1426,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:133",{"_index":1427,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:144",{"_index":1428,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:154",{"_index":1418,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:163",{"_index":1429,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:174",{"_index":1424,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:185",{"_index":1425,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:196",{"_index":1423,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:207",{"_index":1422,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:218",{"_index":1421,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:311",{"_index":1420,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:48",{"_index":1430,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:50",{"_index":1432,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["injector.ts:82",{"_index":1417,"title":{},"body":{"injectables/NgxEditorJSInstanceService.html":{}}}],["inline",{"_index":175,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["input",{"_index":96,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["input('disabled",{"_index":958,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('focused",{"_index":946,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('placeholder",{"_index":941,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('required",{"_index":952,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('value",{"_index":936,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["inputconfig",{"_index":2069,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inputs",{"_index":36,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/SidebarComponent.html":{}}}],["inside",{"_index":1004,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["install",{"_index":1854,"title":{},"body":{"contributing.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["installed",{"_index":2196,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["installing",{"_index":2193,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["instance",{"_index":433,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["instance.api",{"_index":2212,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["instancedestroyed",{"_index":847,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["instancedestroyed.complete",{"_index":854,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["instancedestroyed.next(true",{"_index":853,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["instances",{"_index":531,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["instructions",{"_index":1300,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["insulting/derogatory",{"_index":1932,"title":{},"body":{"contributing.html":{}}}],["interact",{"_index":2078,"title":{},"body":{"index.html":{}}}],["interactions",{"_index":1851,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":1877,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":396,"title":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["interfaces",{"_index":397,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"overview.html":{}}}],["internal",{"_index":604,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"modules/MaterialModule.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["internally",{"_index":1799,"title":{},"body":{"changelog.html":{}}}],["interval.interval",{"_index":1000,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["investigated",{"_index":2003,"title":{},"body":{"contributing.html":{}}}],["ispanelopen",{"_index":1286,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["isready",{"_index":691,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{}}}],["isready(holder",{"_index":651,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["issaved",{"_index":966,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{}}}],["issue",{"_index":1845,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["issues",{"_index":1818,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["it's",{"_index":117,"title":{},"body":{"components/AppContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["item",{"_index":404,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["items",{"_index":165,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["js",{"_index":2046,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["js/code",{"_index":1698,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["js/header",{"_index":1709,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["js/image",{"_index":1718,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["js/link",{"_index":1727,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["js/list",{"_index":1736,"title":{},"body":{"modules/PluginListModule.html":{}}}],["js/marker",{"_index":1748,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["js/paragraph",{"_index":1757,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["json",{"_index":1137,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["json.stringify(blocks",{"_index":1628,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["keep",{"_index":2219,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["key",{"_index":349,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["keys",{"_index":444,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["kind",{"_index":2122,"title":{},"body":{"license.html":{}}}],["label",{"_index":186,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{}}}],["language",{"_index":1908,"title":{},"body":{"contributing.html":{}}}],["last",{"_index":537,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["layer",{"_index":1855,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["layoutmodule",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["leadership",{"_index":2024,"title":{},"body":{"contributing.html":{}}}],["left",{"_index":1176,"title":{},"body":{"components/HomePageComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["legend",{"_index":189,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["level",{"_index":506,"title":{},"body":{"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"contributing.html":{}}}],["liability",{"_index":2137,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2134,"title":{},"body":{"license.html":{}}}],["lib/types/config",{"_index":1197,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["lib/types/plugins",{"_index":1196,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["libraries",{"_index":1169,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["library",{"_index":1792,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["libs/.../application.model.ts",{"_index":2059,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../blocks.ts",{"_index":2165,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../config.ts",{"_index":2168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../container.class.ts",{"_index":2169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editor",{"_index":2063,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../editorjs",{"_index":2170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editorjs.service.ts",{"_index":2061,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../index.ts",{"_index":2066,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../module",{"_index":2065,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ngx",{"_index":2062,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../plugins.ts",{"_index":2175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../tag.component.ts",{"_index":2178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":316,"title":{},"body":{"injectables/AppService.html":{},"interfaces/ApplicationData.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"injectables/ApplicationStore.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuItem.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["licence",{"_index":2089,"title":{},"body":{"license.html":{}}}],["license",{"_index":2086,"title":{"license.html":{}},"body":{}}],["life",{"_index":1005,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["lightgray",{"_index":163,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["limitation",{"_index":2102,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2125,"title":{},"body":{"license.html":{}}}],["line",{"_index":187,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["link",{"_index":410,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/MockNgZone.html":{},"injectables/PluginLink.html":{}}}],["link.label",{"_index":1303,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["link.plugin",{"_index":1726,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["links",{"_index":148,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationState.html":{},"interfaces/DemoData.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/TinynodeDemos.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["list",{"_index":166,"title":{"interfaces/List.html":{}},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginList.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["list.plugin",{"_index":1735,"title":{},"body":{"modules/PluginListModule.html":{}}}],["listblock",{"_index":502,"title":{"interfaces/ListBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["listed",{"_index":2261,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["listener",{"_index":863,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["liststyle",{"_index":501,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["literal",{"_index":547,"title":{},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["load",{"_index":343,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["loaded",{"_index":442,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["loader",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["loading",{"_index":1030,"title":{},"body":{"components/FormContainerComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{}}}],["loads",{"_index":319,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/MaterialModule.html":{}}}],["locations",{"_index":1861,"title":{},"body":{"contributing.html":{}}}],["longer",{"_index":2243,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["lot",{"_index":1803,"title":{},"body":{"changelog.html":{}}}],["lots",{"_index":2234,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["lt;code",{"_index":1145,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;h1",{"_index":1141,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;h6",{"_index":1142,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;img",{"_index":1147,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;li",{"_index":1144,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;ol",{"_index":1143,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;p",{"_index":1140,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["mail",{"_index":1981,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":13,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["mainmenu",{"_index":40,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["maintain",{"_index":2008,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":1881,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":1844,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["makes",{"_index":776,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["making",{"_index":1836,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["managing",{"_index":1802,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":2264,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["map",{"_index":357,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ReadyMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["map((action",{"_index":1396,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["map((demodata",{"_index":377,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["map(blocks",{"_index":1627,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["map(interval",{"_index":999,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["map(menus",{"_index":385,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["map_defaults",{"_index":782,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"miscellaneous/variables.html":{}}}],["map_defaults.foreach(([mapkay",{"_index":859,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["maps",{"_index":667,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["margin",{"_index":170,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["markdown",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"dependencies.html":{}}}],["markdownmodule",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forchild",{"_index":1555,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["markdownmodule.forroot",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["marker",{"_index":1739,"title":{},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{}}}],["marker.plugin",{"_index":1747,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["marking",{"_index":2267,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["mat",{"_index":151,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["matbadgemodule",{"_index":1541,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["matbuttonmodule",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["matcardmodule",{"_index":1186,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["matcher",{"_index":46,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["matching",{"_index":227,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["matchipsmodule",{"_index":1540,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["matchview(event",{"_index":134,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["material",{"_index":81,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"modules/MaterialModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["material.module",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"modules/NgxTinynodesCoreModule.html":{}}}],["material.module.ts",{"_index":1597,"title":{},"body":{"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["materialmodule",{"_index":243,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":1539,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["matformfieldcontrol",{"_index":914,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":1449,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matgridlistmodule",{"_index":1538,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["maticonmodule",{"_index":1184,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matinputmodule",{"_index":1450,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["matlistmodule",{"_index":1185,"title":{},"body":{"modules/MaterialModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{}}}],["matsidenav",{"_index":77,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["matsidenavmodule",{"_index":1182,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":1183,"title":{},"body":{"modules/MaterialModule.html":{}}}],["me@tane.dev",{"_index":2000,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["means",{"_index":885,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["meantime",{"_index":1831,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1984,"title":{},"body":{"contributing.html":{}}}],["mediamatcher",{"_index":47,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["mediaquerylist",{"_index":122,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["members",{"_index":1923,"title":{},"body":{"contributing.html":{}}}],["men",{"_index":348,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menu",{"_index":88,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["menu.key",{"_index":387,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menu.label",{"_index":1179,"title":{},"body":{"components/HomePageComponent.html":{}}}],["menugroup",{"_index":347,"title":{"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["menuitem",{"_index":405,"title":{"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/DemoData.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/TinynodeDemos.html":{}}}],["menuitem.label",{"_index":1241,"title":{},"body":{"components/NavBarComponent.html":{}}}],["menus",{"_index":383,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["menus.find(menu",{"_index":386,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["menus.length",{"_index":384,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["merchantability",{"_index":2127,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1870,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["merged",{"_index":1474,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["mergemap",{"_index":1411,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["mergemap(([action",{"_index":1400,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["method",{"_index":625,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["middle",{"_index":184,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["minheight",{"_index":689,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["minheight'].find(key",{"_index":1372,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["miscellaneous",{"_index":2057,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2088,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":118,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["mobileview",{"_index":121,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["mock",{"_index":1211,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts",{"_index":1210,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:16",{"_index":1216,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:22",{"_index":1218,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:26",{"_index":1220,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:30",{"_index":1221,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mockeditorjs",{"_index":1187,"title":{"classes/MockEditorJS.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["mockngzone",{"_index":1208,"title":{"injectables/MockNgZone.html":{}},"body":{"injectables/MockNgZone.html":{}}}],["mockplugin",{"_index":1200,"title":{"classes/MockPlugin.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["modify",{"_index":2104,"title":{},"body":{"license.html":{}}}],["module",{"_index":229,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/MaterialModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["modules",{"_index":231,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["modulewithproviders",{"_index":1444,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["monday",{"_index":1806,"title":{},"body":{"changelog.html":{}}}],["monitor",{"_index":989,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["monitoring",{"_index":1021,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["more",{"_index":418,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["mouseevent",{"_index":728,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["moved",{"_index":447,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["multi",{"_index":747,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":1636,"title":{},"body":{"modules/PageStoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["name",{"_index":54,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["nationality",{"_index":1896,"title":{},"body":{"contributing.html":{}}}],["nav",{"_index":205,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["navbar",{"_index":1229,"title":{},"body":{"components/NavBarComponent.html":{}}}],["navbarcomponent",{"_index":204,"title":{"components/NavBarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["navigation",{"_index":164,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["nbsp",{"_index":1240,"title":{},"body":{"components/NavBarComponent.html":{}}}],["necessary",{"_index":2005,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":1128,"title":{},"body":{"components/FormContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxTinynodesCoreModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["new",{"_index":113,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["newpage",{"_index":1673,"title":{},"body":{"injectables/PagesService.html":{}}}],["nextid",{"_index":932,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["nextidvalue",{"_index":791,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["ng",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ng_value_accessor",{"_index":742,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":32,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["ngcontrol",{"_index":913,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngdevtools",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngdocheck",{"_index":1017,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngmodule",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ApplicationDataModule.html":{},"modules/MaterialModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngonchanges",{"_index":1312,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngonchanges(changes",{"_index":1334,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngondestroy",{"_index":33,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["ngoninit",{"_index":991,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["ngrx",{"_index":1564,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx.module.ts",{"_index":1560,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx/effects",{"_index":1407,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorjsNgrxModule.html":{},"dependencies.html":{},"todo.html":{}}}],["ngrx/src/lib/actions/ngx",{"_index":543,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ngrx/src/lib/effects/ngx",{"_index":1390,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["ngrx/src/lib/ngx",{"_index":1559,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["ngrx/store",{"_index":551,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"dependencies.html":{}}}],["ngx",{"_index":198,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/Changed.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["ngx.firebaseapp.com",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["ngx_editorjs_config",{"_index":579,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjs",{"_index":224,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsactions",{"_index":566,"title":{},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/typealiases.html":{}}}],["ngxeditorjscomponent",{"_index":207,"title":{"components/NgxEditorJSComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsconfig",{"_index":578,"title":{"interfaces/NgxEditorJSConfig.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemo",{"_index":448,"title":{"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/PageContainerComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["ngxeditorjsdemodata",{"_index":450,"title":{"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["ngxeditorjsdemohomecomponent",{"_index":209,"title":{"components/NgxEditorJSDemoHomeComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemoinfocomponent",{"_index":213,"title":{"components/NgxEditorJSDemoInfoComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["ngxeditorjsdemomodule",{"_index":245,"title":{"modules/NgxEditorjsDemoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemoroutes",{"_index":1546,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemotagcomponent",{"_index":215,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdirective",{"_index":223,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsdirective::ngaftercontentinit",{"_index":1377,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngxeditorjseffects",{"_index":1389,"title":{"injectables/NgxEditorJSEffects.html":{}},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["ngxeditorjsinstanceservice",{"_index":581,"title":{"injectables/NgxEditorJSInstanceService.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"overview.html":{}}}],["ngxeditorjsinstanceservice.nextidvalue",{"_index":793,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["ngxeditorjsmatfieldcomponent",{"_index":218,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmatfieldcomponent.nextid",{"_index":973,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngxeditorjsmodule",{"_index":244,"title":{"modules/NgxEditorJSModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmodule.forroot",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsngrxmodule",{"_index":1556,"title":{"modules/NgxEditorjsNgrxModule.html":{}},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjspluginservice",{"_index":583,"title":{"injectables/NgxEditorJSPluginService.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["ngxeditorjspluginsmodule",{"_index":1569,"title":{"modules/NgxEditorjsPluginsModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsservice",{"_index":601,"title":{"injectables/NgxEditorJSService.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxhideableheaderdemomodule",{"_index":1592,"title":{"modules/NgxHideableHeaderDemoModule.html":{}},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"modules.html":{}}}],["ngxhideableheaderdemoroutes",{"_index":1594,"title":{},"body":{"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["ngxtinynodescorematerialmodule",{"_index":1595,"title":{"modules/NgxTinynodesCoreMaterialModule.html":{}},"body":{"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodescoremodule",{"_index":246,"title":{"modules/NgxTinynodesCoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["ngzone",{"_index":778,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["none",{"_index":158,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["noninfringement",{"_index":2131,"title":{},"body":{"license.html":{}}}],["notable",{"_index":2216,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["note",{"_index":1848,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["notice",{"_index":2117,"title":{},"body":{"license.html":{}}}],["notready",{"_index":559,"title":{"classes/NotReady.html":{}},"body":{"classes/Changed.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["now",{"_index":1125,"title":{},"body":{"components/FormContainerComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["npm",{"_index":1174,"title":{},"body":{"components/HomePageComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["nrwl/nx",{"_index":1821,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":879,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{}}}],["number",{"_index":508,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{}}}],["numbers",{"_index":1863,"title":{},"body":{"contributing.html":{}}}],["nx",{"_index":2085,"title":{},"body":{"index.html":{}}}],["object",{"_index":445,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["object.entries",{"_index":1492,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.entries(this.pluginsmap",{"_index":1497,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.keys(changes",{"_index":1370,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["object.keys(this.editormap).foreach(key",{"_index":883,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["obligated",{"_index":2007,"title":{},"body":{"contributing.html":{}}}],["observable",{"_index":85,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["obtaining",{"_index":2095,"title":{},"body":{"license.html":{}}}],["offensive",{"_index":1972,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":1979,"title":{},"body":{"contributing.html":{}}}],["officially",{"_index":1826,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1990,"title":{},"body":{"contributing.html":{}}}],["oftype",{"_index":1406,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["oftype(editorjsactiontypes.savestart",{"_index":1395,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["once",{"_index":876,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["onchange",{"_index":679,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["onchange(holder",{"_index":822,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["onchanges",{"_index":1311,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["onclick",{"_index":1356,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["oncontainerclick(event",{"_index":985,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ondestroy",{"_index":20,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["one",{"_index":417,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["oninit",{"_index":904,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["online",{"_index":1989,"title":{},"body":{"contributing.html":{}}}],["onready",{"_index":774,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["onready(holder",{"_index":828,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["onstable",{"_index":1213,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["ontouch",{"_index":680,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["open",{"_index":94,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"contributing.html":{}}}],["opensourcemenu",{"_index":42,"title":{},"body":{"components/AppContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["opensourcemenu.title",{"_index":1782,"title":{},"body":{"components/SidebarComponent.html":{}}}],["option",{"_index":759,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"todo.html":{}}}],["optional",{"_index":56,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["options",{"_index":569,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["options.config",{"_index":637,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["ordered",{"_index":497,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["orientation",{"_index":1902,"title":{},"body":{"contributing.html":{}}}],["origin",{"_index":1011,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["others",{"_index":1937,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":1996,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["out",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":757,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/PageContainerComponent.html":{}}}],["outputdata",{"_index":552,"title":{},"body":{"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["outputs",{"_index":1235,"title":{},"body":{"components/NavBarComponent.html":{}}}],["outside",{"_index":802,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["over",{"_index":1230,"title":{},"body":{"components/NavBarComponent.html":{}}}],["overall",{"_index":1790,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":1155,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["overide",{"_index":1058,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["overriding",{"_index":2209,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["overview",{"_index":2147,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":1847,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1809,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["padding",{"_index":168,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["page",{"_index":63,"title":{"interfaces/Page.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"todo.html":{}}}],["page'},{'name",{"_index":203,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["page.component",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":1162,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.scss",{"_index":1161,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts",{"_index":1160,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:12",{"_index":1164,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:9",{"_index":1163,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.id",{"_index":1675,"title":{},"body":{"injectables/PagesService.html":{}}}],["pageblock",{"_index":1611,"title":{"interfaces/PageBlock.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagecontainercomponent",{"_index":220,"title":{"components/PageContainerComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pageeditor",{"_index":1070,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["pageid",{"_index":1655,"title":{},"body":{"injectables/PagesService.html":{}}}],["pagename",{"_index":1067,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["pages",{"_index":1041,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.models",{"_index":1643,"title":{},"body":{"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.query",{"_index":1637,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesService.html":{}}}],["pages.service",{"_index":1638,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["pages.store",{"_index":1639,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{}}}],["pages/home/home",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pagesquery",{"_index":1632,"title":{"injectables/PagesQuery.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"overview.html":{}}}],["pagesservice",{"_index":1043,"title":{"injectables/PagesService.html":{}},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"overview.html":{}}}],["pagesstate",{"_index":1644,"title":{"interfaces/PagesState.html":{}},"body":{"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pagesstore",{"_index":1633,"title":{"injectables/PagesStore.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"overview.html":{}}}],["pagestoremodule",{"_index":1526,"title":{"modules/PageStoreModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/PageStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["pagetags",{"_index":1068,"title":{},"body":{"components/FormContainerComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagetitle",{"_index":37,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["panel",{"_index":1065,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["panelopen",{"_index":1040,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["paragraph",{"_index":503,"title":{"interfaces/Paragraph.html":{}},"body":{"interfaces/Block.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginParagraph.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["paragraph.plugin",{"_index":1756,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["paragraphblock",{"_index":504,"title":{"interfaces/ParagraphBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":132,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["parameter",{"_index":2253,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["parameters",{"_index":52,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"classes/Changed.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["parentmodule",{"_index":1465,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["participants",{"_index":1925,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":1882,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":2129,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1443,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["passed",{"_index":760,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["passing",{"_index":2228,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["paste",{"_index":1146,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["path",{"_index":309,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["paths",{"_index":1338,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["payload",{"_index":529,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["peer",{"_index":2160,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["peerdependencies",{"_index":2262,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["permanent",{"_index":2020,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":1967,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":1873,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["permit",{"_index":2111,"title":{},"body":{"license.html":{}}}],["person",{"_index":2094,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1897,"title":{},"body":{"contributing.html":{}}}],["persons",{"_index":2112,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1939,"title":{},"body":{"contributing.html":{}}}],["pipe",{"_index":138,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["pipe(take(1",{"_index":1114,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["pipeline",{"_index":2154,"title":{},"body":{"todo.html":{}}}],["piper",{"_index":2083,"title":{},"body":{"index.html":{},"license.html":{}}}],["placeholder",{"_index":701,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["placeholder(placeholder",{"_index":942,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["please",{"_index":1841,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["pledge",{"_index":1876,"title":{},"body":{"contributing.html":{}}}],["pluck",{"_index":1624,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["plug",{"_index":1578,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugin",{"_index":465,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugin.plugin",{"_index":1502,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.shortcut",{"_index":1501,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugincode",{"_index":1687,"title":{"injectables/PluginCode.html":{}},"body":{"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"overview.html":{}}}],["plugincodemodule",{"_index":1527,"title":{"modules/PluginCodeModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginconfig",{"_index":476,"title":{"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{}}}],["pluginheader",{"_index":1701,"title":{"injectables/PluginHeader.html":{}},"body":{"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginheadermodule",{"_index":1528,"title":{"modules/PluginHeaderModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginHeaderModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginilistmodule",{"_index":2266,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginimage",{"_index":1710,"title":{"injectables/PluginImage.html":{}},"body":{"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"overview.html":{}}}],["pluginimagemodule",{"_index":1573,"title":{"modules/PluginImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlink",{"_index":1719,"title":{"injectables/PluginLink.html":{}},"body":{"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"overview.html":{}}}],["pluginlinkmodule",{"_index":1529,"title":{"modules/PluginLinkModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginLinkModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlist",{"_index":1728,"title":{"injectables/PluginList.html":{}},"body":{"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginlistmodule",{"_index":1530,"title":{"modules/PluginListModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginListModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginmarker",{"_index":1737,"title":{"injectables/PluginMarker.html":{}},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["pluginmarkermodule",{"_index":1531,"title":{"modules/PluginMarkerModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginMarkerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginparagraph",{"_index":1749,"title":{"injectables/PluginParagraph.html":{}},"body":{"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginparagraphmodule",{"_index":1532,"title":{"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugins",{"_index":484,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["plugins.module.ts",{"_index":1575,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins.service",{"_index":584,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["plugins/code/code.module",{"_index":1582,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/header/header.module",{"_index":1583,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/image/image.module",{"_index":1584,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/link/link.module",{"_index":1585,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/list/list.module",{"_index":1586,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/marker/marker.module",{"_index":1587,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/paragraph/paragraph.module",{"_index":1588,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/simple",{"_index":1589,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/ngx",{"_index":1574,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/plugins/code/code.module.ts",{"_index":1693,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts",{"_index":1688,"title":{},"body":{"injectables/PluginCode.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts:14",{"_index":1689,"title":{},"body":{"injectables/PluginCode.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts",{"_index":1707,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts",{"_index":1702,"title":{},"body":{"injectables/PluginHeader.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts:14",{"_index":1703,"title":{},"body":{"injectables/PluginHeader.html":{}}}],["plugins/src/lib/plugins/image/image.module.ts",{"_index":1716,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts",{"_index":1711,"title":{},"body":{"injectables/PluginImage.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts:14",{"_index":1712,"title":{},"body":{"injectables/PluginImage.html":{}}}],["plugins/src/lib/plugins/link/link.module.ts",{"_index":1725,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts",{"_index":1720,"title":{},"body":{"injectables/PluginLink.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts:14",{"_index":1721,"title":{},"body":{"injectables/PluginLink.html":{}}}],["plugins/src/lib/plugins/list/list.module.ts",{"_index":1734,"title":{},"body":{"modules/PluginListModule.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts",{"_index":1729,"title":{},"body":{"injectables/PluginList.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts:14",{"_index":1730,"title":{},"body":{"injectables/PluginList.html":{}}}],["plugins/src/lib/plugins/marker/marker.module.ts",{"_index":1746,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts",{"_index":1738,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:14",{"_index":1740,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:20",{"_index":1741,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.module.ts",{"_index":1755,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts",{"_index":1750,"title":{},"body":{"injectables/PluginParagraph.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14",{"_index":1751,"title":{},"body":{"injectables/PluginParagraph.html":{}}}],["plugins/src/lib/plugins/simple",{"_index":1759,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["plugins/src/lib/types/plugins.ts",{"_index":491,"title":{},"body":{"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["plugins/src/lib/types/plugins.ts:17",{"_index":1786,"title":{},"body":{"interfaces/ToolSettingsMap-1.html":{}}}],["plugins/src/lib/types/plugins.ts:7",{"_index":1700,"title":{},"body":{"interfaces/PluginConfig-1.html":{}}}],["pluginservice",{"_index":2268,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["pluginsimpleimage",{"_index":1758,"title":{"injectables/PluginSimpleImage.html":{}},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["pluginsimpleimagemodule",{"_index":1533,"title":{"modules/PluginSimpleImageModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginsmap",{"_index":1489,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["pointer",{"_index":172,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["pointing",{"_index":1149,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["policies",{"_index":2013,"title":{},"body":{"contributing.html":{}}}],["political",{"_index":1934,"title":{},"body":{"contributing.html":{}}}],["portions",{"_index":2120,"title":{},"body":{"license.html":{}}}],["ports",{"_index":1860,"title":{},"body":{"contributing.html":{}}}],["position",{"_index":1267,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["positive",{"_index":1906,"title":{},"body":{"contributing.html":{}}}],["possible",{"_index":1580,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["posted",{"_index":2014,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":1982,"title":{},"body":{"contributing.html":{}}}],["potential",{"_index":2204,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pre",{"_index":2259,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["press",{"_index":1131,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["pressed",{"_index":1239,"title":{},"body":{"components/NavBarComponent.html":{}}}],["private",{"_index":111,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"contributing.html":{}}}],["process",{"_index":1340,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["produced",{"_index":1490,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["production",{"_index":2181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professional",{"_index":1946,"title":{},"body":{"contributing.html":{}}}],["project",{"_index":1822,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["project's",{"_index":2023,"title":{},"body":{"contributing.html":{}}}],["projects",{"_index":91,"title":{},"body":{"components/AppContainerComponent.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["projectsmenu",{"_index":41,"title":{},"body":{"components/AppContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["projectsmenu.title",{"_index":1780,"title":{},"body":{"components/SidebarComponent.html":{}}}],["promise",{"_index":635,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"classes/TestClass.html":{}}}],["promise.resolve",{"_index":1204,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["properties",{"_index":29,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["property",{"_index":513,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["protected",{"_index":677,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{}}}],["provide",{"_index":423,"title":{},"body":{"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["provided",{"_index":434,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/Block.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["providedin",{"_index":603,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["provider",{"_index":335,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["providers",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["provides",{"_index":15,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["providing",{"_index":2232,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["provied",{"_index":761,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":34,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["publish",{"_index":2105,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1563,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{}}}],["publishing",{"_index":1936,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["pull",{"_index":1852,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":2130,"title":{},"body":{"license.html":{}}}],["queried",{"_index":324,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["query",{"_index":334,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesService.html":{}}}],["queryentity",{"_index":1641,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["race",{"_index":1899,"title":{},"body":{"contributing.html":{}}}],["radius",{"_index":1273,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["reactive",{"_index":1126,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["reactiveformsmodule",{"_index":1537,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["readme",{"_index":2080,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["readme.md",{"_index":1857,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["readonly",{"_index":112,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{}}}],["ready",{"_index":534,"title":{"classes/Ready.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["readymap",{"_index":535,"title":{"interfaces/ReadyMap.html":{}},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/ReadyMap.html":{},"miscellaneous/variables.html":{}}}],["reasonably",{"_index":1943,"title":{},"body":{"contributing.html":{}}}],["redirectto",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["reduce((finaltools",{"_index":1500,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["ref",{"_index":798,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{}}}],["refactored",{"_index":2225,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["reference",{"_index":799,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["regard",{"_index":2010,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":1888,"title":{},"body":{"contributing.html":{}}}],["regenerated",{"_index":2249,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["register",{"_index":724,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["registered",{"_index":1486,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["registeronchange",{"_index":682,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["registeronchange(fn",{"_index":722,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["registerontouched",{"_index":683,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["registerontouched(fn",{"_index":727,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["reject",{"_index":1959,"title":{},"body":{"contributing.html":{}}}],["related",{"_index":1302,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"changelog.html":{}}}],["relative",{"_index":1268,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["release",{"_index":1798,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["released",{"_index":1172,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["releases",{"_index":2213,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["religion",{"_index":1900,"title":{},"body":{"contributing.html":{}}}],["remove",{"_index":1470,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"contributing.html":{}}}],["remove(key",{"_index":1482,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["removeblock",{"_index":1647,"title":{},"body":{"injectables/PagesService.html":{}}}],["removeblock(pageid",{"_index":1660,"title":{},"body":{"injectables/PagesService.html":{}}}],["removed",{"_index":1659,"title":{},"body":{"injectables/PagesService.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["removes",{"_index":1658,"title":{},"body":{"injectables/PagesService.html":{}}}],["renamed",{"_index":2256,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["render",{"_index":48,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"classes/TestClass.html":{}}}],["rendered",{"_index":2190,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["renderer2",{"_index":49,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["repercussions",{"_index":2021,"title":{},"body":{"contributing.html":{}}}],["replaced",{"_index":2252,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["repo",{"_index":1695,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"todo.html":{}}}],["repo](https://github.com/editor",{"_index":1697,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["report",{"_index":1813,"title":{},"body":{"changelog.html":{}}}],["reported",{"_index":1997,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":2011,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":1840,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":1866,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":441,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"contributing.html":{}}}],["representative",{"_index":1988,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":1978,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":696,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["requied",{"_index":951,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["required",{"_index":464,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/MaterialModule.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["required(required",{"_index":953,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["requires",{"_index":2263,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["reset",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"components/FormContainerComponent.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["resolved",{"_index":1830,"title":{},"body":{"changelog.html":{}}}],["respectful",{"_index":1910,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":1956,"title":{},"body":{"contributing.html":{}}}],["responsibilities",{"_index":1948,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":1957,"title":{},"body":{"contributing.html":{}}}],["responsible",{"_index":1949,"title":{},"body":{"contributing.html":{}}}],["restriction",{"_index":2100,"title":{},"body":{"license.html":{}}}],["result",{"_index":226,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["results",{"_index":228,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["retrieved",{"_index":789,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["return",{"_index":130,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["returned",{"_index":470,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["returns",{"_index":67,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["reviewed",{"_index":2002,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":1875,"title":{},"body":{"contributing.html":{}}}],["right",{"_index":179,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{},"contributing.html":{}}}],["rights",{"_index":2103,"title":{},"body":{"license.html":{}}}],["robust",{"_index":2236,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["rogue",{"_index":2229,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["root'},{'name",{"_index":195,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["roots",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routable",{"_index":1029,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["route",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["routerlink",{"_index":403,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["routermodule",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{}}}],["routermodule.forchild(ngxeditorjsdemoroutes",{"_index":1554,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forroot(approutes",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":306,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["routing",{"_index":300,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":299,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":1269,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["run",{"_index":797,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSInstanceService.html":{},"index.html":{}}}],["run(fn",{"_index":1217,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular",{"_index":1214,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular(fn",{"_index":1219,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["rxjs",{"_index":104,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":107,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["sanitizer",{"_index":690,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["sanitizerconfig",{"_index":716,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["save",{"_index":556,"title":{},"body":{"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"classes/TestClass.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["save(holder",{"_index":830,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["save(undefined",{"_index":1516,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["saved",{"_index":965,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{}}}],["saveeditor",{"_index":600,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/enumerations.html":{}}}],["saveend",{"_index":557,"title":{"classes/SaveEnd.html":{}},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["savehandler(holder",{"_index":887,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["saver",{"_index":1189,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["savestart",{"_index":554,"title":{"classes/SaveStart.html":{}},"body":{"classes/Changed.html":{},"injectables/NgxEditorJSEffects.html":{},"classes/NotReady.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["saving",{"_index":1151,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["scheme",{"_index":1868,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1974,"title":{},"body":{"contributing.html":{}}}],["scripts",{"_index":1827,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":1156,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["searchable",{"_index":2075,"title":{},"body":{"index.html":{}}}],["second",{"_index":1874,"title":{},"body":{"contributing.html":{}}}],["seconds",{"_index":1123,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["section",{"_index":1277,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["see",{"_index":641,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["selection",{"_index":2159,"title":{},"body":{"todo.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["self",{"_index":912,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["sell",{"_index":2109,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2221,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["semver",{"_index":1869,"title":{},"body":{"contributing.html":{}}}],["separately",{"_index":2015,"title":{},"body":{"contributing.html":{}}}],["service",{"_index":318,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"index.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["services",{"_index":1310,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["services/editorjs",{"_index":1457,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["services/editorjs.service",{"_index":744,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{}}}],["services/plugins.service",{"_index":1458,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["set",{"_index":355,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["setblocks",{"_index":1648,"title":{},"body":{"injectables/PagesService.html":{}}}],["setblocks(pageid",{"_index":1662,"title":{},"body":{"injectables/PagesService.html":{}}}],["setdescribedbyids(ids",{"_index":981,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["setissaved",{"_index":1038,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["setissaved(issaved",{"_index":1061,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["sets",{"_index":332,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["setting",{"_index":1947,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["settings",{"_index":469,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["setupevents(holder",{"_index":865,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["setupsubjects(holder",{"_index":856,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["several",{"_index":1576,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"changelog.html":{},"index.html":{}}}],["sexual",{"_index":1901,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1926,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":2118,"title":{},"body":{"license.html":{}}}],["shared",{"_index":1603,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["shortcut",{"_index":467,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginMarker.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["shouldlabelfloat",{"_index":976,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["showing",{"_index":1920,"title":{},"body":{"contributing.html":{}}}],["shown",{"_index":704,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{}}}],["shows",{"_index":2197,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["side",{"_index":354,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["sidebar",{"_index":75,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":1777,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1776,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":221,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"overview.html":{}}}],["sidebarhidden",{"_index":39,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["sidenav",{"_index":30,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["sign",{"_index":1871,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":1761,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["simplechanges",{"_index":1335,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["simpleimage",{"_index":1148,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PluginSimpleImage.html":{}}}],["simulatezoneexit",{"_index":1215,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["single",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{}}}],["singleton",{"_index":1468,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["site",{"_index":426,"title":{},"body":{"modules/ApplicationDataModule.html":{},"components/HomePageComponent.html":{},"modules/NgxTinynodesCoreModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["sites",{"_index":1177,"title":{},"body":{"components/HomePageComponent.html":{}}}],["size",{"_index":1890,"title":{},"body":{"contributing.html":{}}}],["skipself",{"_index":1447,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["small",{"_index":1835,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":1983,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":2097,"title":{},"body":{"license.html":{}}}],["solid",{"_index":1271,"title":{},"body":{"components/NgxEditorJSComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/MaterialModule.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxHideableHeaderDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["spaces",{"_index":1977,"title":{},"body":{"contributing.html":{}}}],["specific",{"_index":341,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"contributing.html":{}}}],["standards",{"_index":1903,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":555,"title":{},"body":{"classes/Changed.html":{},"components/FormContainerComponent.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":1788,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["state",{"_index":84,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxTinynodesCoreModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["statechanges",{"_index":933,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["states",{"_index":794,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["static",{"_index":790,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{}}}],["status",{"_index":720,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["still",{"_index":1127,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["store",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"dependencies.html":{},"todo.html":{}}}],["store/pages/pages.models",{"_index":1091,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["store/pages/pages.module",{"_index":1548,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["store/pages/pages.service",{"_index":1092,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["storeconfig",{"_index":456,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["stored",{"_index":788,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{}}}],["stores",{"_index":114,"title":{},"body":{"components/AppContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["stores/app/application.module",{"_index":1605,"title":{},"body":{"modules/NgxTinynodesCoreModule.html":{}}}],["stream",{"_index":606,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["stretch",{"_index":517,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["stretched",{"_index":518,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["string",{"_index":338,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginMarker.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"interfaces/Tag.html":{},"classes/TestClass.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["style",{"_index":167,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"components/SidebarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":24,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["subject",{"_index":103,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"license.html":{}}}],["subjects",{"_index":855,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["sublicense",{"_index":2107,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1007,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["subscribe(([event",{"_index":869,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["subscribe((data",{"_index":1115,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["subscribe(blocks",{"_index":1103,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["subscribe(editor",{"_index":850,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["subscribe(hidden",{"_index":140,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["subscribed",{"_index":649,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["subscription",{"_index":915,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["subscriptions",{"_index":882,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["substantial",{"_index":2119,"title":{},"body":{"license.html":{}}}],["such",{"_index":1938,"title":{},"body":{"contributing.html":{}}}],["sunday",{"_index":1810,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":457,"title":{},"body":{"injectables/ApplicationStore.html":{},"injectables/ApplicationStore-1.html":{},"injectables/MockNgZone.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["super(service",{"_index":990,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["super(store",{"_index":437,"title":{},"body":{"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"injectables/PagesQuery.html":{}}}],["support",{"_index":994,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/PageStoreModule.html":{},"modules.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["supported",{"_index":588,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/enumerations.html":{}}}],["supports",{"_index":496,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["svg",{"_index":2144,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":612,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["switchmap",{"_index":1410,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["t",{"_index":340,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["tag",{"_index":216,"title":{"interfaces/Tag.html":{}},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["tag_component_field_control",{"_index":2177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tag_component_value_accessor",{"_index":2179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tags",{"_index":1130,"title":{},"body":{"components/FormContainerComponent.html":{},"todo.html":{}}}],["take",{"_index":1090,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["takes",{"_index":1440,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["takeuntil",{"_index":106,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["takeuntil(instancedestroyed",{"_index":849,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["takeuntil(this.ondestroy",{"_index":139,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["tane",{"_index":2082,"title":{},"body":{"index.html":{},"license.html":{}}}],["tap",{"_index":917,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSEffects.html":{},"components/PageContainerComponent.html":{}}}],["team",{"_index":1999,"title":{},"body":{"contributing.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["templateref",{"_index":1287,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["temporarily",{"_index":1966,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":2019,"title":{},"body":{"contributing.html":{}}}],["test",{"_index":1201,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["testclass",{"_index":1198,"title":{"classes/TestClass.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["text",{"_index":156,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["things",{"_index":1301,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this._disabled",{"_index":957,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._empty",{"_index":962,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._focused",{"_index":945,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._placeholder",{"_index":940,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._required",{"_index":950,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._value",{"_index":749,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{}}}],["this.actions$.pipe",{"_index":1394,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.add(key",{"_index":1494,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.app",{"_index":1112,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.app.getmenu('main",{"_index":147,"title":{},"body":{"components/AppContainerComponent.html":{},"components/HomePageComponent.html":{}}}],["this.app.getmenu('other",{"_index":150,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.getmenu('tinynode",{"_index":149,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.hidden.pipe(takeuntil(this.ondestroy$)).subscribe(hidden",{"_index":128,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.app.togglesidebar(value",{"_index":136,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.autofocus",{"_index":1380,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.autosave",{"_index":1012,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["this.autosave$.asobservable",{"_index":1100,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.autosave$.next(0",{"_index":1099,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.autosave$.next(autosavetime",{"_index":1098,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.blockplaceholder",{"_index":1383,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks",{"_index":1108,"title":{},"body":{"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"classes/TestClass.html":{}}}],["this.blocks.length",{"_index":1386,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks.pipe",{"_index":1626,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.blocksmap[holder",{"_index":843,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.blocksmap[holder].asobservable",{"_index":844,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.blocksmap[holder].next",{"_index":892,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.blocksmap[holder].next(blocks",{"_index":899,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.blocksmap[holder].next(data.blocks",{"_index":889,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.cd.markforcheck",{"_index":1105,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.changemap[holder",{"_index":825,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.changemap[holder].asobservable",{"_index":842,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.changemap[holder].next(d",{"_index":827,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.changemap[holder].next(date.now",{"_index":893,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.cleanupsubjects(holder",{"_index":852,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.clear(editoraction.payload",{"_index":618,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.clearhandler(holder",{"_index":871,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.config.editorjs",{"_index":636,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(editoraction.payload",{"_index":616,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(this.createconfig",{"_index":1374,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.describedby",{"_index":982,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.destroy",{"_index":1205,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.destroy(editoraction.payload",{"_index":620,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.destroyinstance(key",{"_index":884,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.editor",{"_index":1101,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.editor.clear",{"_index":1111,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.editor.getblocks(this.holder",{"_index":1625,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editor.save",{"_index":1109,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.editor.update",{"_index":1120,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.editoractions$.pipe(filter(action",{"_index":607,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editoractions.pipe(takeuntil(this.ondestroy$)).subscribe(editoraction",{"_index":611,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorform.patchvalue",{"_index":1104,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.editorjs",{"_index":814,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.editorjs.version",{"_index":898,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.editormap[holder",{"_index":836,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.editormap[holder].asobservable",{"_index":838,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.editormap[holder].next(editor",{"_index":857,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.editorservice",{"_index":1360,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.editorservice.clear(holder",{"_index":666,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.createinstance",{"_index":640,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.destroyinstance(holder",{"_index":672,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getblocks(action.payload.holder",{"_index":1399,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.editorservice.getblocks(holder",{"_index":648,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getchanged(holder",{"_index":654,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getinstance(holder).pipe(filter(editor",{"_index":646,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.getready(holder",{"_index":652,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.onchange(holder",{"_index":657,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.save(action.payload.holder",{"_index":1397,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["this.editorservice.save(holder",{"_index":664,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.editorservice.update(holder",{"_index":662,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.el.nativeelement",{"_index":1359,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.el.nativeelement.id",{"_index":1375,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.empty",{"_index":978,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.errorstate",{"_index":1018,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.eventmap[holder",{"_index":831,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.eventmap[holder].complete",{"_index":881,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.eventmap[holder].next",{"_index":832,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.fb.group",{"_index":1066,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.fm.monitor(this.editorel.element",{"_index":1009,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.fm.stopmonitoring(this.editorel.element",{"_index":1022,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.focused",{"_index":977,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.gettimer(this.autosave).subscribe",{"_index":1015,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.hidetoolbar",{"_index":1381,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.holder",{"_index":1002,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["this.http.get('/assets/app",{"_index":365,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.id",{"_index":1367,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.includetools",{"_index":1363,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.initialblock",{"_index":1382,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.isready",{"_index":1203,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.issaved$.asobservable",{"_index":1096,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.issaved$.next(issaved",{"_index":1097,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.issaved.emit(false",{"_index":987,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.issaved.emit(true",{"_index":1003,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.matcher.matchmedia('(max",{"_index":124,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.menu",{"_index":1106,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.menu$.next(data.links",{"_index":1119,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.minheight",{"_index":1384,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.mobileview",{"_index":123,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.mobileview.addlistener(this.matchview.bind(this",{"_index":127,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.mobileview.removelistener(this.matchview",{"_index":144,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.ngcontrol",{"_index":992,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.invalid",{"_index":1019,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.touched",{"_index":1020,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.valueaccessor",{"_index":993,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.onchange",{"_index":750,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["this.onchange.bind(this",{"_index":808,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.ondestroy$.complete",{"_index":146,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.ondestroy$.next(true",{"_index":145,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.onready.bind(this",{"_index":812,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.onstable.emit(null",{"_index":1224,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["this.ontouch",{"_index":751,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{}}}],["this.ontouch(event",{"_index":986,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.pages",{"_index":1671,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.pagesservice.pages",{"_index":1107,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.panelopen",{"_index":1296,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this.panelopen$.asobservable",{"_index":1094,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this.panelopen$.next(this.panelopen",{"_index":1297,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this.panelopen$.next(value",{"_index":1095,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["this.plugins.gettools(options.includetools",{"_index":638,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.pluginsmap",{"_index":1496,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.pluginsmap[key",{"_index":1495,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.query.select('menus').pipe",{"_index":381,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.select(applicationstatekeys.demodata).pipe",{"_index":374,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.select(applicationstatekeys.hidden",{"_index":368,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.query.selectall",{"_index":1672,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.readymap[holder",{"_index":829,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.readymap[holder].asobservable",{"_index":840,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.readymap[holder].next(true",{"_index":820,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.ref.tick",{"_index":821,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.reset",{"_index":1121,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.sanitizer",{"_index":1385,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.save(editoraction.payload",{"_index":622,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.savehandler(holder",{"_index":870,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.saver",{"_index":1206,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.service.createeditor",{"_index":1362,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.destroy",{"_index":1378,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.getchanged(this.holder",{"_index":753,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["this.service.geteditor(this.id",{"_index":1358,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.isready(this.holder",{"_index":752,"title":{},"body":{"components/EditorJSBaseComponent.html":{}}}],["this.service.save",{"_index":1001,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.service.update",{"_index":1366,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.setissaved(true",{"_index":1110,"title":{},"body":{"components/FormContainerComponent.html":{}}}],["this.setupevents(holder",{"_index":819,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.setupsubjects(holder",{"_index":818,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.sidebarhidden",{"_index":137,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidebarhidden$.asobservable",{"_index":131,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidebarhidden$.next(hidden",{"_index":129,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidenav.close",{"_index":142,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.sidenav.open",{"_index":143,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.statechanges.next",{"_index":938,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.store._value()[applicationstatekeys.hidden",{"_index":373,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.add(newpage",{"_index":1674,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.remove(pageid",{"_index":1677,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.update",{"_index":369,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.update(appdata",{"_index":367,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{}}}],["this.store.update(pageid",{"_index":1678,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.upsert(page.id",{"_index":1676,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.timersubscription",{"_index":1013,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.timersubscription$.closed",{"_index":1023,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.timersubscription$.unsubscribe",{"_index":1014,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.togglesidebar(!event.matches",{"_index":135,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["this.touched$.asobservable",{"_index":1361,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.touched$.next(true",{"_index":1357,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.update(editoraction.payload",{"_index":624,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.updatehandler(holder",{"_index":872,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.version",{"_index":1202,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"classes/TestClass.html":{}}}],["this.zone.run",{"_index":817,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this.zone.runoutsideangular",{"_index":813,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this[mapkay][holder",{"_index":860,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this[mapkay][holder].complete",{"_index":878,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["this[mapkay][holder].next(value",{"_index":862,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["threatening",{"_index":1971,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":660,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["tick",{"_index":800,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["time",{"_index":896,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"classes/TestClass.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["time).pipe",{"_index":998,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["timeinterval",{"_index":918,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["timer",{"_index":916,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["timer(timestart",{"_index":997,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["timersubscription",{"_index":964,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["timestamp",{"_index":536,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{}}}],["timestart",{"_index":995,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["tinynode",{"_index":2076,"title":{},"body":{"index.html":{}}}],["tinynodedemos",{"_index":451,"title":{"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["tinynodes",{"_index":23,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"injectables/ApplicationQuery.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"injectables/ApplicationStore.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesCoreMaterialModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["tinynodes/ngx",{"_index":100,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSEffects.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["tinynodes/src/app/app",{"_index":298,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/src/app/app.module.ts",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["tinynodes/src/app/components/nav",{"_index":1227,"title":{},"body":{"components/NavBarComponent.html":{}}}],["tinynodes/src/app/components/sidebar",{"_index":1774,"title":{},"body":{"components/SidebarComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts",{"_index":11,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:103",{"_index":87,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:110",{"_index":90,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:117",{"_index":93,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:21",{"_index":62,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:26",{"_index":80,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:41",{"_index":51,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:59",{"_index":83,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:75",{"_index":73,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:82",{"_index":65,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/containers/app/app.component.ts:94",{"_index":69,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["tinynodes/src/app/core/stores/app/application.model.ts",{"_index":452,"title":{},"body":{"interfaces/ApplicationState-1.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/enumerations.html":{}}}],["tinynodes/src/app/core/stores/app/application.query.ts",{"_index":438,"title":{},"body":{"injectables/ApplicationQuery-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.query.ts:10",{"_index":439,"title":{},"body":{"injectables/ApplicationQuery-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts",{"_index":389,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:15",{"_index":390,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:34",{"_index":394,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:41",{"_index":393,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:49",{"_index":391,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.service.ts:62",{"_index":392,"title":{},"body":{"injectables/AppService-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.store.ts",{"_index":459,"title":{},"body":{"injectables/ApplicationStore-1.html":{}}}],["tinynodes/src/app/core/stores/app/application.store.ts:10",{"_index":460,"title":{},"body":{"injectables/ApplicationStore-1.html":{}}}],["tinynodes/src/app/core/types/app",{"_index":1089,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["tinynodes/src/app/core/types/app.ts",{"_index":419,"title":{},"body":{"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem-1.html":{}}}],["tinynodes/src/app/material.module",{"_index":1549,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["tinynodes/src/app/material.module.ts",{"_index":1180,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tinynodes/src/app/pages/home/home",{"_index":1159,"title":{},"body":{"components/HomePageComponent.html":{}}}],["tinynodes/src/environments/environment.prod.ts",{"_index":2180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tinynodes/src/environments/environment.ts",{"_index":2182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":64,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"components/FormContainerComponent.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["today",{"_index":1796,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":446,"title":{"todo.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"todo.html":{}}}],["todos",{"_index":2152,"title":{},"body":{"todo.html":{}}}],["toggle",{"_index":74,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["togglepanel",{"_index":1039,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["togglepanel(value",{"_index":1063,"title":{},"body":{"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["toggles",{"_index":351,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["togglesidebar",{"_index":35,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/NavBarComponent.html":{}}}],["togglesidebar(value",{"_index":71,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{}}}],["token",{"_index":483,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/NgxEditorJSConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":481,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/PageContainerComponent.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["toolbar",{"_index":703,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["toolconstructable",{"_index":473,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["tools",{"_index":478,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["toolsettings",{"_index":472,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"classes/TestClass.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["toolsettingsmap",{"_index":479,"title":{"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["topnav",{"_index":415,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{}}}],["tort",{"_index":2140,"title":{},"body":{"license.html":{}}}],["touch",{"_index":737,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["touched",{"_index":1314,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["towards",{"_index":1922,"title":{},"body":{"contributing.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["trigger",{"_index":586,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["trolling",{"_index":1931,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":748,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"miscellaneous/variables.html":{}}}],["true).subscribe(origin",{"_index":1010,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["two",{"_index":1337,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["type",{"_index":55,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"injectables/ApplicationQuery.html":{},"injectables/ApplicationQuery-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"classes/Changed.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSConfig.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"components/HomePageComponent.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"classes/NotReady.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"classes/Ready.html":{},"interfaces/ReadyMap.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"components/SidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["typealiases",{"_index":2163,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":371,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/app",{"_index":359,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/ApplicationState.html":{},"interfaces/ApplicationState-1.html":{},"interfaces/DemoData.html":{},"interfaces/DemoData-1.html":{},"interfaces/NgxEditorJSDemo.html":{},"interfaces/NgxEditorJSDemo-1.html":{},"interfaces/NgxEditorJSDemoData.html":{},"interfaces/NgxEditorJSDemoData-1.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"interfaces/TinynodeDemos.html":{},"interfaces/TinynodeDemos-1.html":{}}}],["types/blocks",{"_index":576,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/config",{"_index":580,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/maps",{"_index":780,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["types/plugins",{"_index":1487,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}}}],["typescript",{"_index":1168,"title":{},"body":{"components/HomePageComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["typing",{"_index":1139,"title":{},"body":{"components/FormContainerComponent.html":{},"components/PageContainerComponent.html":{}}}],["unacceptable",{"_index":1924,"title":{},"body":{"contributing.html":{}}}],["undefined",{"_index":372,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{}}}],["under",{"_index":1173,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{}}}],["underlying",{"_index":968,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["unique",{"_index":972,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["unordered",{"_index":498,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["unsubscribe",{"_index":1008,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["until",{"_index":1829,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1928,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":333,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"components/PageContainerComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["update",{"_index":594,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["update(holder",{"_index":834,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["update(undefined",{"_index":1518,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["updated",{"_index":323,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppService-1.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["updateeditor",{"_index":595,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/enumerations.html":{}}}],["updatehandler(holder",{"_index":894,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["updates",{"_index":658,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["upload",{"_index":2265,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["upsert",{"_index":1649,"title":{},"body":{"injectables/PagesService.html":{}}}],["upsert(page",{"_index":1664,"title":{},"body":{"injectables/PagesService.html":{}}}],["url",{"_index":409,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"interfaces/Block.html":{},"components/FormContainerComponent.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["usage",{"_index":1298,"title":{},"body":{"components/NgxEditorJSDemoInfoComponent.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["use",{"_index":1279,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"contributing.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["used",{"_index":406,"title":{},"body":{"interfaces/ApplicationData.html":{},"interfaces/ApplicationData-1.html":{},"modules/ApplicationDataModule.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/MenuGroup.html":{},"interfaces/MenuGroup-1.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["useexisting",{"_index":746,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":1462,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["useful",{"_index":1837,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["user",{"_index":1473,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["userplugin",{"_index":2239,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["userplugins",{"_index":489,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["uses",{"_index":2235,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["usevalue",{"_index":1461,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["using",{"_index":923,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["value",{"_index":59,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"classes/Changed.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"injectables/MockNgZone.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"classes/NotReady.html":{},"components/PageContainerComponent.html":{},"classes/Ready.html":{},"classes/SaveEnd.html":{},"classes/SaveStart.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value(value",{"_index":937,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["values",{"_index":533,"title":{},"body":{"interfaces/BlocksMap.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/EventMap.html":{},"interfaces/EventType.html":{},"components/FormContainerComponent.html":{},"components/NgxEditorJSComponent.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":193,"title":{},"body":{"components/AppContainerComponent.html":{},"components/EditorJSBaseComponent.html":{},"components/FormContainerComponent.html":{},"components/HomePageComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{},"components/SidebarComponent.html":{}}}],["variables",{"_index":1858,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":897,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSEffects.html":{},"injectables/NgxEditorJSInstanceService.html":{},"classes/TestClass.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["versioning",{"_index":1867,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["vertical",{"_index":183,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["via",{"_index":488,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfig-1.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["view",{"_index":119,"title":{},"body":{"components/AppContainerComponent.html":{},"modules/AppModule.html":{},"components/NgxEditorJSDemoInfoComponent.html":{}}}],["viewchild",{"_index":97,"title":{},"body":{"components/AppContainerComponent.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["viewchild(matsidenav",{"_index":79,"title":{},"body":{"components/AppContainerComponent.html":{}}}],["viewchild(ngxeditorjsdirective",{"_index":969,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{}}}],["viewpoints",{"_index":1912,"title":{},"body":{"contributing.html":{}}}],["visit",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"components/HomePageComponent.html":{},"index.html":{}}}],["void",{"_index":68,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"injectables/AppService-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"components/EditorJSBaseComponent.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/FormContainerComponent.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"classes/TestClass.html":{}}}],["wait",{"_index":1341,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["want",{"_index":631,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["warning",{"_index":1561,"title":{},"body":{"modules/NgxEditorjsNgrxModule.html":{},"modules/PageStoreModule.html":{}}}],["warranties",{"_index":2126,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2121,"title":{},"body":{"license.html":{}}}],["way",{"_index":1278,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PagesService.html":{}}}],["web",{"_index":1170,"title":{},"body":{"components/HomePageComponent.html":{}}}],["wednesday",{"_index":1793,"title":{},"body":{"changelog.html":{}}}],["welcome",{"_index":1166,"title":{},"body":{"components/HomePageComponent.html":{}}}],["welcoming",{"_index":1879,"title":{},"body":{"contributing.html":{}}}],["what's",{"_index":2207,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["whether",{"_index":2138,"title":{},"body":{"license.html":{}}}],["white",{"_index":160,"title":{},"body":{"components/AppContainerComponent.html":{},"components/NavBarComponent.html":{}}}],["width",{"_index":125,"title":{},"body":{"components/AppContainerComponent.html":{},"components/FormContainerComponent.html":{},"components/NavBarComponent.html":{},"components/NgxEditorJSComponent.html":{},"components/NgxEditorJSDemoInfoComponent.html":{},"components/PageContainerComponent.html":{}}}],["wiki",{"_index":1961,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":1843,"title":{},"body":{"contributing.html":{}}}],["withbackground",{"_index":516,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["withborder",{"_index":514,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["within",{"_index":659,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSAction.html":{},"interfaces/EditorJSInstanceConfig.html":{},"injectables/NgxEditorJSInstanceService.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{}}}],["withlatestfrom",{"_index":1398,"title":{},"body":{"injectables/NgxEditorJSEffects.html":{}}}],["without",{"_index":925,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSComponent.html":{},"changelog.html":{},"contributing.html":{},"license.html":{}}}],["won't",{"_index":758,"title":{},"body":{"interfaces/EditorJSConfig.html":{},"interfaces/NgxEditorJSConfig.html":{}}}],["work",{"_index":1834,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":732,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["writevalue",{"_index":684,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["writevalue(blocks",{"_index":730,"title":{},"body":{"components/EditorJSBaseComponent.html":{},"components/NgxEditorJSComponent.html":{}}}],["yes",{"_index":76,"title":{},"body":{"components/AppContainerComponent.html":{},"injectables/AppService.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["zone",{"_index":796,"title":{},"body":{"interfaces/EditorJSInstanceConfig.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSInstanceService.html":{}}}],["zone.js",{"_index":2055,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/ApplicationDataModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsNgrxModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesCoreModule.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppContainerComponent.html":{"url":"components/AppContainerComponent.html","title":"component - AppContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/containers/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The main application component that provides the root container\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageTitle\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sidebarHidden\n                                \n                                \n                                    mainMenu\n                                \n                                \n                                    projectsMenu\n                                \n                                \n                                    openSourceMenu\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService, matcher: MediaMatcher, render: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matcher\n                                                  \n                                                        \n                                                                    MediaMatcher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        render\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pageTitle\n                    \n                \n                \n                    \n                        Default value : 'Tinynodes Angular Demos'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:21\n                            \n                        \n                \n                    \n                        The page title\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:82\n                \n            \n\n\n            \n                \n                    Component initialized\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:94\n                \n            \n\n\n            \n                \n                    Component destroyed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar(value?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:75\n                \n            \n\n\n            \n                \n                    Toggle sidebar\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:26\n                            \n                        \n\n                \n                    \n                        The Material sidebar\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sidebarHidden\n                    \n                \n\n                \n                    \n                        getsidebarHidden()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:59\n                                \n                            \n                    \n                        \n                                Sidebar State\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mainMenu\n                    \n                \n\n                \n                    \n                        getmainMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:103\n                                \n                            \n                    \n                        \n                                Get the application main menu\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        projectsMenu\n                    \n                \n\n                \n                    \n                        getprojectsMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:110\n                                \n                            \n                    \n                        \n                                Get the projects menu\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        openSourceMenu\n                    \n                \n\n                \n                    \n                        getopenSourceMenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/containers/app/app.component.ts:117\n                                \n                            \n                    \n                        \n                                Get the open source menu\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, Component, Input, OnDestroy, ViewChild, Renderer2 } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { MediaMatcher } from '@angular/cdk/layout';\n\n/**\n * The main application component that provides the root container\n */\n@Component({\n  selector: 'tinynodes-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppContainerComponent implements AfterContentInit, OnDestroy {\n  /**\n   * The page title\n   */\n  @Input()\n  public pageTitle = 'Tinynodes Angular Demos';\n\n  /**\n   * The Material sidebar\n   */\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * When the component is destroyed\n   */\n  private readonly onDestroy$ = new Subject();\n\n  /**\n   * Stores the current sidebar state\n   */\n  private readonly sidebarHidden$ = new BehaviorSubject(false);\n\n  /**\n   * If it's a mobile view, hide the menu\n   */\n  private mobileView: MediaQueryList;\n\n  constructor(\n    private readonly app: AppService,\n    private readonly matcher: MediaMatcher,\n    private readonly render: Renderer2\n  ) {\n    this.mobileView = this.matcher.matchMedia('(max-width: 768px)');\n    this.mobileView.addListener(this.matchView.bind(this));\n\n    this.app.hidden.pipe(takeUntil(this.onDestroy$)).subscribe(hidden => {\n      this.sidebarHidden$.next(hidden);\n    });\n  }\n\n  /**\n   * Sidebar State\n   */\n  public get sidebarHidden(): Observable {\n    return this.sidebarHidden$.asObservable();\n  }\n\n  /**\n   * View matcher for mobile\n   * @param event\n   */\n  private matchView(event: any) {\n    this.toggleSidebar(!event.matches);\n  }\n\n  /**\n   * Toggle sidebar\n   * @param value\n   */\n  public toggleSidebar(value?: boolean) {\n    this.app.toggleSidebar(value);\n  }\n\n  /**\n   * Component initialized\n   */\n  ngAfterContentInit() {\n    this.sidebarHidden$\n      .pipe(\n        distinctUntilChanged(),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(hidden => (hidden ? this.sidenav.close() : this.sidenav.open()));\n  }\n\n  /**\n   * Component destroyed\n   */\n  ngOnDestroy() {\n    this.mobileView.removeListener(this.matchView);\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * Get the application main menu\n   */\n  public get mainMenu() {\n    return this.app.getMenu('main-links');\n  }\n\n  /**\n   * Get the projects menu\n   */\n  public get projectsMenu() {\n    return this.app.getMenu('tinynode-projects');\n  }\n\n  /**\n   * Get the open source menu\n   */\n  public get openSourceMenu() {\n    return this.app.getMenu('other-projects');\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                mat-sidenav-container,\nmat-sidenav-content,\nmat-sidenav {\n  height: 100vh;\n}\n\nmat-sidenav {\n  width: 250px;\n}\n\na {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppContainerComponent\n\nAppContainerComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppContainerComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppContainerComponent \n\nAppContainerComponent \n\nAppContainerComponent  -->\n\nAppModule->AppContainerComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nAppModule -->\n\nNgxTinynodesCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The main ngx-tinynodes module that builds the core single page application.\nTo view the application visit the demo\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppContainerComponent\n                        \n                        \n                            HomePageComponent\n                        \n                        \n                            NavBarComponent\n                        \n                        \n                            SidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ApplicationDataModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxEditorjsDemoModule\n                        \n                        \n                            NgxTinynodesCoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppContainerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AkitaNgRouterStoreModule } from '@datorama/akita-ng-router-store';\nimport { AkitaNgDevtools } from '@datorama/akita-ngdevtools';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { NgxEditorjsDemoModule } from '@tinynodes/ngx-editorjs-demo';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppContainerComponent } from './containers/app/app.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { SidebarComponent } from './components/sidebar-component/sidebar.component';\nimport { MaterialModule } from './material.module';\nimport { HomePageComponent } from './pages/home/home-page.component';\nimport { MatButtonModule } from '@angular/material';\nimport { ApplicationDataModule, NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core';\nimport { LayoutModule } from '@angular/cdk/layout';\n\n/**\n * The main `ngx-tinynodes` module that builds the core single page application.\n * To view the application visit [the demo](https://tinynodes-ngx.firebaseapp.com/)\n */\n@NgModule({\n  declarations: [AppContainerComponent, NavBarComponent, SidebarComponent, HomePageComponent],\n  imports: [\n    BrowserModule,\n    LayoutModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    ApplicationDataModule,\n    AppRoutingModule,\n    NgxTinynodesCoreModule,\n    NgxEditorJSModule.forRoot(),\n    NgxEditorjsDemoModule,\n    MarkdownModule.forRoot({ loader: HttpClient }),\n    environment.production ? [] : [AkitaNgDevtools.forRoot(), AkitaNgRouterStoreModule.forRoot()]\n  ],\n  bootstrap: [AppContainerComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/app-routing.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The App routing module provides the base roots of the application\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Route, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { HomePageComponent } from './pages/home/home-page.component';\n\n/**\n * The main application routes\n */\nexport const appRoutes: Route[] = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomePageComponent\n  }\n];\n\n/**\n * The App routing module provides the base roots of the application\n */\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts\n        \n\n            \n                Description\n            \n            \n                The main application service, this loads the initial data and then provides\nit to the store, from here the main state can be updated and queried.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDemoData\n                            \n                            \n                                    Public\n                                getMenu\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: ApplicationQuery, store: ApplicationStore, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up the providers for service methods\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        ApplicationQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application query provider\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application store provider\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HTTP client provider\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDemoData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDemoData(demoName: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:52\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the demo data for a specific demo \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    demoName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the demo data to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMenu\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenu(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:65\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Gets a {MenuGroup} from the men data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the menu to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar(value?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:41\n                \n            \n\n\n            \n                \n                    Toggles the sidebar state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.service.ts:34\n                                \n                            \n                    \n                        \n                                Returns if the side menu hidden state is set\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { ApplicationData, MenuGroup } from '../../types/app';\nimport { ApplicationStateKeys, DemoData } from './application.model';\nimport { ApplicationQuery } from './application.query';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The main application service, this loads the initial data and then provides\n * it to the store, from here the main state can be updated and queried.\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Sets up the providers for service methods\n   * @param query The application query provider\n   * @param store The application store provider\n   * @param http  The HTTP client provider\n   */\n  constructor(\n    private readonly query: ApplicationQuery,\n    private readonly store: ApplicationStore,\n    private readonly http: HttpClient\n  ) {\n    // Load the application data\n    this.http.get('/assets/app-data.json').subscribe((appData: ApplicationData) => this.store.update(appData));\n  }\n\n  /**\n   * Returns if the side menu hidden state is set\n   */\n  get hidden(): Observable {\n    return this.query.select(ApplicationStateKeys.Hidden);\n  }\n\n  /**\n   * Toggles the sidebar state\n   */\n  public toggleSidebar(value?: boolean) {\n    this.store.update({\n      [ApplicationStateKeys.Hidden]:\n        typeof value !== 'undefined' ? value : !this.store._value()[ApplicationStateKeys.Hidden]\n    });\n  }\n\n  /**\n   * Returns the demo data for a specific demo \n   * @param demoName The name of the demo data to load\n   */\n  public getDemoData(demoName: string): Observable {\n    return this.query.select(ApplicationStateKeys.DemoData).pipe(\n      filter((data: DemoData[]) => typeof data !== 'undefined' && (data && data.length > 0)),\n      map((demoData: DemoData[]) => {\n        return demoData.find(demo => demo.name === demoName).data;\n      })\n    ) as Observable;\n  }\n\n  /**\n   * Gets a {MenuGroup} from the men data\n   * @param key The key of the menu to load\n   */\n  public getMenu(key: string): Observable> {\n    return this.query.select('menus').pipe(\n      distinctUntilChanged(),\n      filter(menus => menus !== undefined && menus.length > 0),\n      map(menus => {\n        return menus.find(menu => menu.key == key);\n      })\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService-1.html":{"url":"injectables/AppService-1.html","title":"injectable - AppService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts\n        \n\n            \n                Description\n            \n            \n                The main application service, this loads the initial data and then provides\nit to the store, from here the main state can be updated and queried.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDemoData\n                            \n                            \n                                    Public\n                                getMenu\n                            \n                            \n                                    Public\n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hidden\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: ApplicationQuery, store: ApplicationStore, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up the providers for service methods\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        ApplicationQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application query provider\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application store provider\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HTTP client provider\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDemoData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDemoData(demoName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:49\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the demo data for a specific demo \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    demoName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The name of the demo data to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMenu\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenu(key: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:62\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Gets a {MenuGroup} from the men data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the menu to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:41\n                \n            \n\n\n            \n                \n                    Toggles the sidebar state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n\n                \n                    \n                        gethidden()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.service.ts:34\n                                \n                            \n                    \n                        \n                                Returns if the side menu hidden state is set\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { ApplicationData, MenuGroup } from '../../types/app';\nimport { ApplicationStateKeys, DemoData } from './application.model';\nimport { ApplicationQuery } from './application.query';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The main application service, this loads the initial data and then provides\n * it to the store, from here the main state can be updated and queried.\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Sets up the providers for service methods\n   * @param query The application query provider\n   * @param store The application store provider\n   * @param http  The HTTP client provider\n   */\n  constructor(\n    private readonly query: ApplicationQuery,\n    private readonly store: ApplicationStore,\n    private readonly http: HttpClient\n  ) {\n    // Load the application data\n    this.http.get('/assets/app-data.json').subscribe((appData: ApplicationData) => this.store.update(appData));\n  }\n\n  /**\n   * Returns if the side menu hidden state is set\n   */\n  get hidden(): Observable {\n    return this.query.select(ApplicationStateKeys.Hidden);\n  }\n\n  /**\n   * Toggles the sidebar state\n   */\n  public toggleSidebar() {\n    this.store.update({ [ApplicationStateKeys.Hidden]: !this.store._value()[ApplicationStateKeys.Hidden] });\n  }\n\n  /**\n   * Returns the demo data for a specific demo \n   * @param demoName The name of the demo data to load\n   */\n  public getDemoData(demoName: string): Observable {\n    return this.query.select(ApplicationStateKeys.DemoData).pipe(\n      filter(data => typeof data !== 'undefined'),\n      map((demoData: DemoData[]) => {\n        return demoData.find(demo => demo.name === demoName).data;\n      })\n    ) as Observable;\n  }\n\n  /**\n   * Gets a {MenuGroup} from the men data\n   * @param key The key of the menu to load\n   */\n  public getMenu(key: string): Observable> {\n    return this.query.select('menus').pipe(\n      distinctUntilChanged(),\n      filter(menus => menus !== undefined && menus.length > 0),\n      map(menus => {\n        return menus.find(menu => menu.key === key);\n      })\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationData.html":{"url":"interfaces/ApplicationData.html","title":"interface - ApplicationData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                The aggregate application interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the sidebar menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An list of menu groups available in the apps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationData-1.html":{"url":"interfaces/ApplicationData-1.html","title":"interface - ApplicationData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                The aggregate application interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the sidebar menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An list of menu groups available in the apps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApplicationDataModule.html":{"url":"modules/ApplicationDataModule.html","title":"module - ApplicationDataModule","body":"\n                   \n\n\n\n\n    Modules\n    ApplicationDataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module provide the Application state and helper functions that\nare used across the Tinynodes site\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            ApplicationQuery\n                        \n                        \n                            ApplicationStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApplicationQuery } from './application.query';\nimport { AppService } from './application.service';\nimport { ApplicationStore } from './application.store';\n\n/**\n * This module provide the Application state and helper functions that\n * are used across the Tinynodes site\n */\n@NgModule({\n  providers: [AppService, ApplicationQuery, ApplicationStore]\n})\nexport class ApplicationDataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationQuery.html":{"url":"injectables/ApplicationQuery.html","title":"injectable - ApplicationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.query.ts\n        \n\n            \n                Description\n            \n            \n                The {Query} handler for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.query.ts:10\n                            \n                        \n\n                \n                    \n                            Provide the store for the class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store to be provided\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { ApplicationState } from './application.model';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The {Query} handler for the Application state data\n */\n@Injectable()\nexport class ApplicationQuery extends Query {\n  /**\n   * Provide the store for the class instance\n   * @param store Store to be provided\n   */\n  constructor(protected store: ApplicationStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationQuery-1.html":{"url":"injectables/ApplicationQuery-1.html","title":"injectable - ApplicationQuery-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.query.ts\n        \n\n            \n                Description\n            \n            \n                The {Query} handler for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                        Query\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: ApplicationStore)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.query.ts:10\n                            \n                        \n\n                \n                    \n                            Provide the store for the class instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ApplicationStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store to be provided\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { ApplicationState } from './application.model';\nimport { ApplicationStore } from './application.store';\n\n/**\n * The {Query} handler for the Application state data\n */\n@Injectable()\nexport class ApplicationQuery extends Query {\n  /**\n   * Provide the store for the class instance\n   * @param store Store to be provided\n   */\n  constructor(protected store: ApplicationStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationState.html":{"url":"interfaces/ApplicationState.html","title":"interface - ApplicationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                A representation of the application state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        demoData\n                                \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        demoData\n                                    \n                                \n                                \n                                    \n                                        demoData:     DemoData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DemoData[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data for demos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the side menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of menus loaded from application data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationState-1.html":{"url":"interfaces/ApplicationState-1.html","title":"interface - ApplicationState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                A representation of the application state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        demoData\n                                \n                                \n                                        hidden\n                                \n                                \n                                        menus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        demoData\n                                    \n                                \n                                \n                                    \n                                        demoData:     DemoData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DemoData[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data for demos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If the side menu is hidden\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     MenuGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuGroup[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A set of menus loaded from application data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationStore.html":{"url":"injectables/ApplicationStore.html","title":"injectable - ApplicationStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.store.ts\n        \n\n            \n                Description\n            \n            \n                Store for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                    Store\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-core/src/lib/stores/app/application.store.ts:10\n                            \n                        \n\n                \n                    \n                            Provide an empty state for the application\n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Store, StoreConfig } from '@datorama/akita';\nimport { Injectable } from '@angular/core';\nimport { ApplicationState } from './application.model';\n\n/**\n * Store for the Application state data\n */\n@Injectable()\n@StoreConfig({ name: 'application' })\nexport class ApplicationStore extends Store {\n  /**\n   * Provide an empty state for the application\n   */\n  constructor() {\n    super({\n      hidden: false,\n      menus: [],\n      demoData: []\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationStore-1.html":{"url":"injectables/ApplicationStore-1.html","title":"injectable - ApplicationStore-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.store.ts\n        \n\n            \n                Description\n            \n            \n                Store for the Application state data\n\n            \n\n            \n                Extends\n            \n            \n                    Store\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/core/stores/app/application.store.ts:10\n                            \n                        \n\n                \n                    \n                            Provide an empty state for the application\n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Store, StoreConfig } from '@datorama/akita';\nimport { Injectable } from '@angular/core';\nimport { ApplicationState } from './application.model';\n\n/**\n * Store for the Application state data\n */\n@Injectable()\n@StoreConfig({ name: 'application' })\nexport class ApplicationStore extends Store {\n  /**\n   * Provide an empty state for the application\n   */\n  constructor() {\n    super({\n      hidden: false,\n      menus: [],\n      demoData: []\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin.html":{"url":"interfaces/BasePlugin.html","title":"interface - BasePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin-1.html":{"url":"interfaces/BasePlugin-1.html","title":"interface - BasePlugin-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/blocks.ts:13\n                            \n                        \n                \n                    \n                        Additional properties on the type\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data interface for the block type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlocksMap.html":{"url":"interfaces/BlocksMap.html","title":"interface - BlocksMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlocksMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of Block elements from EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:36\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {Block[]}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChangeMap.html":{"url":"interfaces/ChangeMap.html","title":"interface - ChangeMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChangeMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of number which is the timestamp of the last EditorJS change\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:56\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {number}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Changed.html":{"url":"classes/Changed.html","title":"class - Changed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Changed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.Changed\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateEditorJSOptions.html":{"url":"interfaces/CreateEditorJSOptions.html","title":"interface - CreateEditorJSOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateEditorJSOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                EditorJS options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoSave\n                                \n                                \n                                        config\n                                \n                                \n                                            Optional\n                                        includeTools\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoSave\n                                    \n                                \n                                \n                                    \n                                        autoSave:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Autosave on change, is set to false\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includeTools\n                                    \n                                \n                                \n                                    \n                                        includeTools:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tools to include, Optional - if not set all tools will be used\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Block } from '../types/blocks';\nimport { EditorJSConfig, NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { NgxEditorJSInstanceService } from './editorjs-injector';\nimport { NgxEditorJSPluginService } from './plugins.service';\n\n/**\n * Interface describing an action to trigger EditorJS\n */\nexport interface EditorJSAction {\n  /**\n   * The name of the action to trigger\n   */\n  action: string;\n\n  /**\n   * The payload for the action \n   */\n  payload?: T;\n}\n\n/**\n * Supported actions by the API\n */\nexport enum EditorJSActionTypes {\n  /**\n   * Create a new editor\n   */\n  CreateEditor = 'createEditor',\n\n  /**\n   * Update an editor instance\n   */\n  UpdateEditor = 'updateEditor',\n  /**\n   * Clear a editor instance\n   */\n  ClearEditor = 'clearEditor',\n  /**\n   * Destroy an Editor instance\n   */\n  DestroyEditor = 'destroyEditor',\n  /**\n   * Save the blocks in an editor instance\n   */\n  SaveEditor = 'saveEditor'\n}\n\n/**\n * EditorJS options\n */\nexport interface CreateEditorJSOptions {\n  /**\n   * Configuration\n   */\n  config: EditorConfig;\n  /**\n   * Tools to include, Optional - if not set all tools will be used\n   */\n  includeTools?: string[];\n  /**\n   * Autosave on change, is set to false\n   */\n  autoSave?: boolean;\n}\n\n/**\n * The NgxEditorJSService provides control EditorJS instances via Angular.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  private onDestroy$ = new Subject();\n  /**\n   * Internal editor action state\n   */\n  private readonly editorActions$ = new BehaviorSubject({\n    action: ''\n  });\n\n  /**\n   * Editor action stream\n   */\n  public get editorActions() {\n    return this.editorActions$.pipe(filter(action => action.action !== ''));\n  }\n\n  constructor(\n    @Inject(NGX_EDITORJS_CONFIG) private config: NgxEditorJSConfig,\n    private readonly editorService: NgxEditorJSInstanceService,\n    private readonly plugins: NgxEditorJSPluginService\n  ) {\n    this.editorActions.pipe(takeUntil(this.onDestroy$)).subscribe(editorAction => {\n      switch (editorAction.action) {\n        case EditorJSActionTypes.CreateEditor: {\n          return this.createEditor(editorAction.payload);\n        }\n        case EditorJSActionTypes.ClearEditor: {\n          return this.clear(editorAction.payload);\n        }\n        case EditorJSActionTypes.DestroyEditor: {\n          return this.destroy(editorAction.payload);\n        }\n        case EditorJSActionTypes.SaveEditor: {\n          return this.save(editorAction.payload);\n        }\n        case EditorJSActionTypes.UpdateEditor: {\n          return this.update(editorAction.payload);\n        }\n        default: {\n          return;\n        }\n      }\n    });\n  }\n\n  /**\n   * This method creates a new EditorJS instance\n   * @param holder The ID of the holder of the instance\n   * @param blocks Optional initial set of blocks to render in the editor\n   * @param excludeTools String array of keys to not include with this editor\n   * @param autoSave When an instance changes we update the block map, set to false if you want to disable\n   */\n  public async createEditor(options: CreateEditorJSOptions): Promise {\n    const editorConfig: EditorConfig = {\n      ...this.config.editorjs,\n      ...options.config,\n      tools: this.plugins.getTools(options.includeTools)\n    };\n\n    await this.editorService.createInstance({ editorConfig });\n  }\n\n  /**\n   * Get an `EditorJS` instance\n   * See the [EditorJS API](https://editorjs.io/api) docs for more details\n   * @param holder The ID of the holder of the instance\n   */\n  public getEditor(holder: string): Observable {\n    return this.editorService.getInstance(holder).pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Get an observable of the blocks for an `EditorJS` instance\n   * @param holder The ID of the holder of the instance\n   */\n  public getBlocks(holder: string): Observable {\n    return this.editorService.getBlocks(holder);\n  }\n\n  /**\n   * Returns an `Observable` of the current ready state, this can be subscribed to before calling\n   * the `createEditor` method\n   * @param holder\n   */\n  public isReady(holder: string): Observable {\n    return this.editorService.getReady(holder);\n  }\n\n  /**\n   * Returns an `Observable` of the current timestamp of the last change\n   * this can be subscribed to before calling the `createEditor` method\n   * @param holder\n   */\n  public getChanged(holder: string): Observable {\n    return this.editorService.getChanged(holder);\n  }\n\n  /**\n   * Check to see if the `EditorJS` instance has changed\n   * @param holder The ID of the holder of the instance\n   */\n  public hasChanged(holder: string) {\n    this.editorService.onChange(holder);\n  }\n\n  /**\n   * This method updates the blocks within the `EditorJS` instance.\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   * @param blocks The array of `Block` elements to render\n   */\n  public update({ holder, blocks }: { holder: string; blocks: Block[] }) {\n    this.editorService.update(holder, blocks);\n  }\n\n  /**\n   * Calls the `EditorJS` save method which returns an `OutputData` object.\n   * From this the service updates the blocks map and change map values\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   */\n  public save({ holder }: { holder: string }): void {\n    this.editorService.save(holder);\n  }\n\n  /**\n   * Clears all blocks from an `EditorJS instance`\n   * @param holder The ID of the holder of the instance\n   */\n  public clear({ holder }: { holder: string }): void {\n    this.editorService.clear(holder);\n  }\n\n  /**\n   * Destroy the `EditorJS` instance\n   * It also calls the maps and sets their values back to their defaults and then\n   * completes and destroys them\n   * @param holder The ID of the holder of the instance\n   */\n  public destroy({ holder }: { holder: string }): void {\n    this.editorService.destroyInstance(holder);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DemoData.html":{"url":"interfaces/DemoData.html","title":"interface - DemoData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a demo data object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data for the demo as \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the demo (e.g. ngx-editorjs-demo)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DemoData-1.html":{"url":"interfaces/DemoData-1.html","title":"interface - DemoData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a demo data object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data for the demo as \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the demo (e.g. ngx-editorjs-demo)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSAction.html":{"url":"interfaces/EditorJSAction.html","title":"interface - EditorJSAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface describing an action to trigger EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                            Optional\n                                        payload\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the action to trigger\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The payload for the action \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Block } from '../types/blocks';\nimport { EditorJSConfig, NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { NgxEditorJSInstanceService } from './editorjs-injector';\nimport { NgxEditorJSPluginService } from './plugins.service';\n\n/**\n * Interface describing an action to trigger EditorJS\n */\nexport interface EditorJSAction {\n  /**\n   * The name of the action to trigger\n   */\n  action: string;\n\n  /**\n   * The payload for the action \n   */\n  payload?: T;\n}\n\n/**\n * Supported actions by the API\n */\nexport enum EditorJSActionTypes {\n  /**\n   * Create a new editor\n   */\n  CreateEditor = 'createEditor',\n\n  /**\n   * Update an editor instance\n   */\n  UpdateEditor = 'updateEditor',\n  /**\n   * Clear a editor instance\n   */\n  ClearEditor = 'clearEditor',\n  /**\n   * Destroy an Editor instance\n   */\n  DestroyEditor = 'destroyEditor',\n  /**\n   * Save the blocks in an editor instance\n   */\n  SaveEditor = 'saveEditor'\n}\n\n/**\n * EditorJS options\n */\nexport interface CreateEditorJSOptions {\n  /**\n   * Configuration\n   */\n  config: EditorConfig;\n  /**\n   * Tools to include, Optional - if not set all tools will be used\n   */\n  includeTools?: string[];\n  /**\n   * Autosave on change, is set to false\n   */\n  autoSave?: boolean;\n}\n\n/**\n * The NgxEditorJSService provides control EditorJS instances via Angular.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  private onDestroy$ = new Subject();\n  /**\n   * Internal editor action state\n   */\n  private readonly editorActions$ = new BehaviorSubject({\n    action: ''\n  });\n\n  /**\n   * Editor action stream\n   */\n  public get editorActions() {\n    return this.editorActions$.pipe(filter(action => action.action !== ''));\n  }\n\n  constructor(\n    @Inject(NGX_EDITORJS_CONFIG) private config: NgxEditorJSConfig,\n    private readonly editorService: NgxEditorJSInstanceService,\n    private readonly plugins: NgxEditorJSPluginService\n  ) {\n    this.editorActions.pipe(takeUntil(this.onDestroy$)).subscribe(editorAction => {\n      switch (editorAction.action) {\n        case EditorJSActionTypes.CreateEditor: {\n          return this.createEditor(editorAction.payload);\n        }\n        case EditorJSActionTypes.ClearEditor: {\n          return this.clear(editorAction.payload);\n        }\n        case EditorJSActionTypes.DestroyEditor: {\n          return this.destroy(editorAction.payload);\n        }\n        case EditorJSActionTypes.SaveEditor: {\n          return this.save(editorAction.payload);\n        }\n        case EditorJSActionTypes.UpdateEditor: {\n          return this.update(editorAction.payload);\n        }\n        default: {\n          return;\n        }\n      }\n    });\n  }\n\n  /**\n   * This method creates a new EditorJS instance\n   * @param holder The ID of the holder of the instance\n   * @param blocks Optional initial set of blocks to render in the editor\n   * @param excludeTools String array of keys to not include with this editor\n   * @param autoSave When an instance changes we update the block map, set to false if you want to disable\n   */\n  public async createEditor(options: CreateEditorJSOptions): Promise {\n    const editorConfig: EditorConfig = {\n      ...this.config.editorjs,\n      ...options.config,\n      tools: this.plugins.getTools(options.includeTools)\n    };\n\n    await this.editorService.createInstance({ editorConfig });\n  }\n\n  /**\n   * Get an `EditorJS` instance\n   * See the [EditorJS API](https://editorjs.io/api) docs for more details\n   * @param holder The ID of the holder of the instance\n   */\n  public getEditor(holder: string): Observable {\n    return this.editorService.getInstance(holder).pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Get an observable of the blocks for an `EditorJS` instance\n   * @param holder The ID of the holder of the instance\n   */\n  public getBlocks(holder: string): Observable {\n    return this.editorService.getBlocks(holder);\n  }\n\n  /**\n   * Returns an `Observable` of the current ready state, this can be subscribed to before calling\n   * the `createEditor` method\n   * @param holder\n   */\n  public isReady(holder: string): Observable {\n    return this.editorService.getReady(holder);\n  }\n\n  /**\n   * Returns an `Observable` of the current timestamp of the last change\n   * this can be subscribed to before calling the `createEditor` method\n   * @param holder\n   */\n  public getChanged(holder: string): Observable {\n    return this.editorService.getChanged(holder);\n  }\n\n  /**\n   * Check to see if the `EditorJS` instance has changed\n   * @param holder The ID of the holder of the instance\n   */\n  public hasChanged(holder: string) {\n    this.editorService.onChange(holder);\n  }\n\n  /**\n   * This method updates the blocks within the `EditorJS` instance.\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   * @param blocks The array of `Block` elements to render\n   */\n  public update({ holder, blocks }: { holder: string; blocks: Block[] }) {\n    this.editorService.update(holder, blocks);\n  }\n\n  /**\n   * Calls the `EditorJS` save method which returns an `OutputData` object.\n   * From this the service updates the blocks map and change map values\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   */\n  public save({ holder }: { holder: string }): void {\n    this.editorService.save(holder);\n  }\n\n  /**\n   * Clears all blocks from an `EditorJS instance`\n   * @param holder The ID of the holder of the instance\n   */\n  public clear({ holder }: { holder: string }): void {\n    this.editorService.clear(holder);\n  }\n\n  /**\n   * Destroy the `EditorJS` instance\n   * It also calls the maps and sets their values back to their defaults and then\n   * completes and destroys them\n   * @param holder The ID of the holder of the instance\n   */\n  public destroy({ holder }: { holder: string }): void {\n    this.editorService.destroyInstance(holder);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorJSBaseComponent.html":{"url":"components/EditorJSBaseComponent.html","title":"component - EditorJSBaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditorJSBaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/src/lib/containers/base/container.class.ts\n\n\n    \n        Description\n    \n    \n        A base EditorJS component, can be used to create other extended components\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                EDITORJS_FORM_VALUE_ACCESSOR\n                \n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _value\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getChanged\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                includeTools\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isReady\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:90\n                            \n                        \n\n                \n                    \n                            When created an instance of the service is available as\na public interface\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:34\n                            \n                        \n                \n                    \n                        Sets if the EditorJS component will request autofocus in the browser\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:84\n                            \n                        \n                \n                    \n                        If set, when the EditorJS save is called the Observable of blocks will be updated,\nif set to false on the change Observable will be updated\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:64\n                            \n                        \n                \n                    \n                        First Block placeholder\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:90\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:40\n                            \n                        \n                \n                    \n                        Sets if the toolbar will be shown in EditorJS\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:46\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        includeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:77\n                            \n                        \n                \n                    \n                        A string array of tools that will be included in this instance, if empty\nall tools will be included\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:52\n                            \n                        \n                \n                    \n                        The name of the initial block (default \"paragraph\")\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:58\n                            \n                        \n                \n                    \n                        Height of Editor's bottom area that allows to set focus on the last Block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:70\n                            \n                        \n                \n                    \n                        Define default sanitizer configuration\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getChanged()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:151\n                \n            \n\n\n            \n                \n                    Get the changed status for the EditorJS instance\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: (blocks: Block[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:125\n                \n            \n\n\n            \n                \n                    Register on Change for forms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: (event: MouseEvent) => void)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:132\n                \n            \n\n\n            \n                \n                    registerOnTouched for forms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(blocks: Block[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:118\n                \n            \n\n\n            \n                \n                    Form Write Values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:102\n                            \n                        \n\n                \n                    \n                        Form field value if used as a field component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:112\n                            \n                        \n\n                \n                    \n                        Field onChange method\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:107\n                            \n                        \n\n                \n                    \n                        Field on touch method\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isReady\n                    \n                \n\n                \n                    \n                        getisReady()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/containers/base/container.class.ts:144\n                                \n                            \n                    \n                        \n                                Get the ready status for the EditorJS instance\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, forwardRef, Input, OnDestroy } from '@angular/core';\nimport { Provider } from '@angular/core/src/render3/jit/compiler_facade_interface';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { SanitizerConfig } from '@editorjs/editorjs';\nimport { Observable, Subject } from 'rxjs';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { Block } from '../../types/blocks';\n\n/**\n * This provides the Control Value Accessor for the form component\n */\nexport const EDITORJS_FORM_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => EditorJSBaseComponent),\n  multi: true\n};\n\n/**\n * A base EditorJS component, can be used to create other extended components\n */\n@Component({\n  template: '',\n  providers: [EDITORJS_FORM_VALUE_ACCESSOR]\n})\nexport class EditorJSBaseComponent implements OnDestroy, ControlValueAccessor {\n  /**\n   * Private destroy subject\n   */\n  private onDestroy$ = new Subject();\n  /**\n   * Sets if the `EditorJS` component will request autofocus in the browser\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Sets if the toolbar will be shown in `EditorJS`\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * The ID of the dom element that will hold the editor\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  @Input()\n  public initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  @Input()\n  public minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  @Input()\n  public blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  @Input()\n  public sanitizer?: SanitizerConfig;\n\n  /**\n   * A string array of tools that will be included in this instance, if empty\n   * all tools will be included\n   */\n  @Input()\n  public includeTools: string[] = [];\n\n  /**\n   * If set, when the `EditorJS` save is called the `Observable` of blocks will be updated,\n   * if set to `false` on the change `Observable` will be updated\n   */\n  @Input()\n  public autosave: number;\n\n  /**\n   * An initial set of blocks to render in the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * When created an instance of the service is available as\n   * a public interface\n   * @param service The editor service\n   */\n  constructor(protected readonly service: NgxEditorJSService) {}\n\n  /**\n   * Form field value if used as a field component\n   */\n  protected _value: any;\n\n  /**\n   * Field on touch method\n   */\n  onTouch = (event?: MouseEvent) => {};\n\n  /**\n   * Field onChange method\n   */\n  onChange = (blocks: Block[]) => {};\n\n  /**\n   * Form Write Values\n   * @param blocks\n   */\n  public writeValue(blocks: Block[]) {\n    this._value = blocks;\n  }\n\n  /**\n   * Register on Change for forms\n   */\n  registerOnChange(fn: (blocks: Block[]) => void) {\n    this.onChange = fn;\n  }\n\n  /**\n   * registerOnTouched for forms\n   */\n  registerOnTouched(fn: (event?: MouseEvent) => void) {\n    this.onTouch = fn;\n  }\n\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * Get the ready status for the `EditorJS` instance\n   */\n  public get isReady(): Observable {\n    return this.service.isReady(this.holder);\n  }\n\n  /**\n   * Get the changed status for the `EditorJS` instance\n   */\n  public getChanged(): Observable {\n    return this.service.getChanged(this.holder);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditorJSBaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSConfig.html":{"url":"interfaces/EditorJSConfig.html","title":"interface - EditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        blockPlaceholder\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hideToolbar\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                                \n                                            Optional\n                                        minHeight\n                                \n                                \n                                            Optional\n                                        sanitizer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockPlaceholder\n                                    \n                                \n                                \n                                    \n                                        blockPlaceholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    First Block placeholder\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideToolbar\n                                    \n                                \n                                \n                                    \n                                        hideToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, toolbar won't be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minHeight\n                                    \n                                \n                                \n                                    \n                                        minHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Height of Editor's bottom area that allows to set focus on the last Block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sanitizer\n                                    \n                                \n                                \n                                    \n                                        sanitizer:     SanitizerConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SanitizerConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define default sanitizer configuration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * Configuration options for `EditorJS`\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSInstanceConfig.html":{"url":"interfaces/EditorJSInstanceConfig.html","title":"interface - EditorJSInstanceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSInstanceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs-injector.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for creating an EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        editorConfig\n                                \n                                \n                                            Optional\n                                        onChange\n                                \n                                \n                                            Optional\n                                        onReady\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorConfig\n                                    \n                                \n                                \n                                    \n                                        editorConfig:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The editor configuration, this is required with at least the holder property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call when the editor makes a change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onReady\n                                    \n                                \n                                \n                                    \n                                        onReady:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call with an editor is ready\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ApplicationRef, Inject, Injectable, InjectionToken, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Block } from '../types/blocks';\nimport { BlocksMap, ChangeMap, EditorMap, EventMap, EventType, ReadyMap } from '../types/maps';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nconst MAP_DEFAULTS = [['blocksMap', []], ['changeMap', 0], ['readyMap', false]];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * EditorJS factory service, call `createInstance` with an `EditorConfig` to\n * return an instance after the DOM element is ready, this is stored in a subject to\n * be retrieved when ready.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSInstanceService {\n  static nextIdValue = 0;\n\n  get idValue() {\n    NgxEditorJSInstanceService.nextIdValue++;\n    return NgxEditorJSInstanceService.nextIdValue;\n  }\n  /**\n   * Internal destroy method for the service\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * Internal map of all EditorJS instances\n   */\n  private editorMap: EditorMap = {};\n\n  /**\n   * Internal map of all Block `BehaviorSubject` instances\n   */\n  private blocksMap: BlocksMap = {};\n\n  /**\n   * Internal map of all EditorJS ready states\n   */\n  private readyMap: ReadyMap = {};\n\n  /**\n   * Internal map of all EditorJS change states\n   */\n  private changeMap: ChangeMap = {};\n\n  /**\n   * The Event map is used to trigger events\n   */\n  private eventMap: EventMap = {};\n\n  /**\n   * Import the `EditorJS` class\n   * @param editorJs The `EditorJS` class\n   * @param zone Angular zone to run\n   * @param ref The application reference to trigger a tick\n   */\n  constructor(\n    @Inject(EditorJSInstance) private editorJs: any,\n    private readonly zone: NgZone,\n    private readonly ref: ApplicationRef\n  ) {}\n\n  /**\n   * Creates a new `EditorJS` instance outside of the Angular zone and\n   * then adds it to the editor instances\n   * @param config The {EditorConfig} configuration to create\n   */\n  public createInstance(config: EditorJSInstanceConfig): Promise {\n    const editorConfig = {\n      ...config.editorConfig\n    };\n    editorConfig.onChange = (config.onChange && typeof config.onChange === 'function'\n      ? config.onChange\n      : this.onChange.bind(this, editorConfig.holder as string)) as any;\n    editorConfig.onReady = (config.onReady && typeof config.onReady === 'function'\n      ? config.onReady\n      : this.onReady.bind(this, editorConfig.holder as string)) as any;\n    return this.zone.runOutsideAngular(() => {\n      const editor = new (this.editorJs as any)(editorConfig);\n      const holder = editorConfig.holder as string;\n      return editor.isReady.then(() => {\n        return this.zone.run(() => {\n          this.setupSubjects(holder, editor);\n          this.setupEvents(holder);\n          this.readyMap[holder].next(true);\n          this.ref.tick();\n        });\n      });\n    });\n  }\n\n  public onChange(holder: string): void {\n    const d = Date.now();\n    if (!this.changeMap[holder]) {\n      this.changeMap[holder] = new BehaviorSubject(d);\n    }\n    this.changeMap[holder].next(d);\n  }\n\n  public onReady(holder: string) {\n    if (!this.readyMap[holder]) {\n      this.readyMap[holder] = new BehaviorSubject(false);\n    }\n    this.readyMap[holder].next(true);\n  }\n\n  /**\n   * Calls the save method on an editor\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public save(holder: string) {\n    if (!this.eventMap[holder]) {\n      this.eventMap[holder].next({ type: 'save' });\n    }\n  }\n\n  /**\n   * Calls a clear method on an editor\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public clear(holder: string) {\n    this.eventMap[holder].next({ type: 'clear' });\n  }\n\n  /**\n   * Updates the editor with new blocks\n   * @param holder The holder ID of the `EditorJS` instance\n   * @param blocks The blocks to update the editor with\n   */\n  public update(holder: string, blocks: Block[]) {\n    if (!this.eventMap[holder]) {\n      this.eventMap[holder] = new BehaviorSubject({ type: '' });\n    }\n    this.eventMap[holder].next({ type: 'update', payload: { blocks } });\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getInstance(holder: string): Observable {\n    if (!this.editorMap[holder]) {\n      this.editorMap[holder] = new BehaviorSubject(undefined);\n    }\n    return this.editorMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getReady(holder: string): Observable {\n    if (!this.readyMap[holder]) {\n      this.readyMap[holder] = new BehaviorSubject(false);\n    }\n    return this.readyMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getChanged(holder: string): Observable {\n    if (!this.changeMap[holder]) {\n      this.changeMap[holder] = new BehaviorSubject(0);\n    }\n    return this.changeMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getBlocks(holder: string): Observable {\n    if (!this.blocksMap[holder]) {\n      this.blocksMap[holder] = new BehaviorSubject([]);\n    }\n    return this.blocksMap[holder].asObservable();\n  }\n\n  /**\n   * Destroys an instance of an editor and cleans up all Observable values\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public destroyInstance(holder: string): void {\n    const instanceDestroyed = new Subject();\n    this.editorMap[holder]\n      .pipe(\n        filter(editor => typeof editor !== 'undefined'),\n        takeUntil(instanceDestroyed)\n      )\n      .subscribe(editor => {\n        this.zone.runOutsideAngular(() => {\n          editor.destroy();\n          this.zone.run(() => {\n            this.cleanupSubjects(holder);\n            instanceDestroyed.next(true);\n            instanceDestroyed.complete();\n            this.ref.tick();\n          });\n        });\n      });\n  }\n\n  /**\n   * Sets up the Subjects provided by this service\n   * @param holder The holder to set up the subjects for\n   * @param editor The Editor instance created outside of Angular\n   */\n  private setupSubjects(holder: string, editor: EditorJS): void {\n    if (this.editorMap[holder]) {\n      this.editorMap[holder].next(editor);\n    } else {\n      this.editorMap[holder] = new BehaviorSubject(editor);\n    }\n    MAP_DEFAULTS.forEach(([mapKay, value]: [string, typeof value]) => {\n      if (!this[mapKay][holder]) {\n        this[mapKay][holder] = new BehaviorSubject(value);\n      }\n      this[mapKay][holder].next(value);\n    });\n    if (!this.eventMap[holder]) {\n      this.eventMap[holder] = new BehaviorSubject({ type: '' });\n    }\n  }\n\n  /**\n   * Sets up a listener for the event map and provides the editor and blocks to handle\n   * updates\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  private setupEvents(holder: string) {\n    combineLatest([this.eventMap[holder], this.editorMap[holder]])\n      .pipe(\n        filter(([event, editor]) => event.type && typeof editor !== 'undefined'),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(([event, editor]) => {\n        if (event.type === 'save') {\n          this.saveHandler(holder, editor);\n        }\n        if (event.type === 'clear') {\n          this.clearHandler(holder, editor);\n        }\n        if (event.type === 'update') {\n          this.updateHandler(holder, editor, event.payload.blocks);\n        }\n        this.eventMap[holder].next({ type: '' });\n      });\n    this.ref.tick();\n  }\n\n  /**\n   * Handles cleaning up all the subjects once an `EditorJS` instance has been\n   * destroyed\n   * @param holder The holder ID for the `EditorJS` instance\n   */\n  private cleanupSubjects(holder: string) {\n    MAP_DEFAULTS.forEach(([mapKay, value]: [string, any]) => {\n      if (this[mapKay][holder]) {\n        this[mapKay][holder].next(value);\n        this[mapKay][holder].complete();\n        this[mapKay][holder] = null;\n        delete this[mapKay][holder];\n      }\n    });\n    this.eventMap[holder].next({ type: '' });\n    this.eventMap[holder].complete();\n    this.eventMap[holder] = null;\n    delete this.eventMap[holder];\n    this.editorMap[holder] = null;\n    delete this.editorMap[holder];\n  }\n\n  /**\n   * Call this to destroy all subscriptions within the service\n   */\n  public destroy() {\n    Object.keys(this.editorMap).forEach(key => {\n      this.destroyInstance(key);\n    });\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * This internal handler calls the `EditorJS` instance save outside of the\n   * Angular zone, this means it will not trigger change detection\n   * @param holder The holder ID for the `EditorJS` instance\n   * @param editor The `EditorJS` instance\n   * @param blocks The {Block} items to render\n   */\n  private saveHandler(holder: string, editor: EditorJS) {\n    this.zone.runOutsideAngular(() => {\n      editor.saver.save().then(data => {\n        this.zone.run(() => {\n          this.blocksMap[holder].next(data.blocks);\n        });\n      });\n    });\n  }\n\n  /**\n   * This internal handler calls the `EditorJS` instance clear outside of the\n   * Angular zone, this means it will not trigger change detection\n   * @param holder The holder ID for the `EditorJS` instance\n   * @param editor The `EditorJS` instance\n   * @param blocks The {Block} items to render\n   */\n  private clearHandler(holder: string, editor: EditorJS) {\n    this.zone.runOutsideAngular(() => {\n      editor.blocks.clear();\n      this.zone.run(() => {\n        this.blocksMap[holder].next([]);\n        this.changeMap[holder].next(Date.now());\n      });\n    });\n  }\n\n  /**\n   * This internal handler calls the `EditorJS` instance render outside of the\n   * Angular zone, this means it will not trigger change detection\n   * @param holder The holder ID for the `EditorJS` instance\n   * @param editor The `EditorJS` instance\n   * @param blocks The {Block} items to render\n   */\n  private updateHandler(holder: string, editor: EditorJS, blocks: Block[]) {\n    if (!blocks) {\n      return;\n    }\n    this.zone.runOutsideAngular(() => {\n      editor.blocks.render({\n        time: Date.now(),\n        version: this.editorJs.version,\n        blocks\n      });\n      this.zone.run(() => {\n        this.blocksMap[holder].next(blocks);\n        this.changeMap[holder].next(Date.now());\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSMaterialForm.html":{"url":"interfaces/EditorJSMaterialForm.html","title":"interface - EditorJSMaterialForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSMaterialForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n        \n\n            \n                Description\n            \n            \n                Single interface for EditorJSMaterialForm\n\n            \n\n            \n                Extends\n            \n            \n                        OnInit\n            \n\n\n\n\n    \n\n\n    \n        import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Component,\n  DoCheck,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Provider,\n  Self,\n  ViewChild\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material';\nimport { Observable, Subject, Subscription, timer } from 'rxjs';\nimport { map, tap, timeInterval } from 'rxjs/operators';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { EditorJSBaseComponent } from '../base/container.class';\n\n/**\n * Provider for the EditorJS Material Field Component\n */\nexport const EDITORJS_MATERIAL_FIELD_CONTROL: Provider = {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n};\n\n/**\n * Single interface for EditorJSMaterialForm\n */\nexport interface EditorJSMaterialForm\n  extends OnInit,\n    AfterContentInit,\n    OnDestroy,\n    DoCheck,\n    MatFormFieldControl {}\n\n/**\n * This component is provided as a shortcut to using EditorJS in your\n * application. The attributes are optional and without a default component\n * will be created\n *\n * @example\n * \n *  \n * \n */\n@Component({\n  selector: 'ngx-editorjs-mat-field',\n  templateUrl: 'editorjs-mat-field.component.html',\n  styleUrls: ['editorjs-mat-field.component.scss'],\n  host: {\n    '[id]': 'id',\n    '[attr.aria-describedby]': 'describedBy'\n  },\n  providers: [EDITORJS_MATERIAL_FIELD_CONTROL]\n})\nexport class NgxEditorJSMatFieldComponent extends EditorJSBaseComponent implements EditorJSMaterialForm {\n  /**\n   * Internal Static ID for Material for each editor instance\n   */\n  static nextId = 0;\n  /**\n   * Material state change subject\n   */\n  public stateChanges = new Subject();\n\n  /**\n   * Material control type\n   */\n  public controlType = 'ngx-editorjs-mat-field';\n\n  /**\n   * Material error state\n   */\n  public errorState = false;\n\n  /**\n   * Get the component value\n   */\n  get value(): any {\n    return this._value;\n  }\n\n  /**\n   * Set the component value\n   * @param value The value to set\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material placeholder value\n   */\n  private _placeholder: string;\n\n  /**\n   * Get the Material placeholder value\n   */\n  get placeholder() {\n    return this._placeholder;\n  }\n  /**\n   * Set the material Placeholder value\n   * @input placeholder The placeholder state to set\n   */\n  @Input('placeholder')\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material focused state\n   */\n  private _focused: boolean;\n  /**\n   * Get the Material focused state\n   */\n  get focused() {\n    return this._focused;\n  }\n  /**\n   * Set the Material focused state\n   * @param focused The focused state to set\n   */\n  @Input('focused')\n  set focused(focused: boolean) {\n    this._focused = coerceBooleanProperty(focused);\n    if (this._focused) {\n      this.onTouch();\n    }\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material Required Value\n   */\n  private _required = false;\n\n  /**\n   * Get the Material required state\n   */\n  get required() {\n    return this._required;\n  }\n  /**\n   * Set the Material requied state\n   * @param required The required state to set\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material disabled state\n   */\n  private _disabled = false;\n\n  /**\n   * Get the Material disabled state\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  /**\n   * Set the Material disabled state\n   * @param disabled The disabled state to set\n   */\n  @Input('disabled')\n  set disabled(disabled: boolean) {\n    this._disabled = coerceBooleanProperty(disabled);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material empty state\n   */\n  private _empty: boolean;\n  /**\n   * Get the Material empty state\n   */\n  public get empty() {\n    return this._empty;\n  }\n  /**\n   * Set the Material empty state\n   * @param empty The empty value\n   */\n  public set empty(empty: boolean) {\n    this._empty = empty;\n  }\n\n  /**\n   * Internal Subscription for the timer subscription\n   */\n  private timerSubscription$: Subscription;\n\n  /**\n   * Get the current saved state\n   */\n  @Output()\n  public isSaved = new EventEmitter();\n\n  /**\n   * Access to the underlying {NgxEditorJSDirective}\n   */\n  @ViewChild(NgxEditorJSDirective) public editorEl: NgxEditorJSDirective;\n\n  /**\n   * Host binding to the unique ID for this editor for material\n   */\n  @HostBinding()\n  id = `ngx-editorjs-mat-field-${NgxEditorJSMatFieldComponent.nextId++}`;\n\n  /**\n   * Gets if the Material label should float\n   */\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  /**\n   * Host binding for ARIA label\n   */\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  /**\n   *\n   * @param ids The IDs of the Material components\n   */\n  public setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  /**\n   * Material on container click\n   * @param event The {MouseEvent} for the container click\n   */\n  public onContainerClick(event: MouseEvent) {\n    this.onTouch(event);\n    this.isSaved.emit(false);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Creates the Material field\n   * @param service The {NgxEditorJSService} instance\n   * @param fm Focus monitor for the Material element\n   * @param ngControl The Angular control base class\n   */\n  constructor(\n    protected readonly service: NgxEditorJSService,\n    private readonly fm: FocusMonitor,\n    @Optional() @Self() public ngControl: NgControl\n  ) {\n    super(service);\n  }\n\n  /**\n   * Called on OnInit\n   */\n  ngOnInit(): void {\n    if (this.ngControl !== null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  /**\n   * Internal method to return a new timer for the autosave support\n   * @param time Time to do with autosave\n   * @param timeStart When to trigger the first autosave\n   */\n  private getTimer(time: number, timeStart = 0): Observable {\n    return timer(timeStart, time).pipe(\n      timeInterval(),\n      map(interval => interval.interval),\n      tap(() => {\n        this.service.save({ holder: this.holder });\n        this.isSaved.emit(true);\n      })\n    );\n  }\n\n  /**\n   * Inside the AfterContentInit life-cycle we set up a listener for focus\n   * and trigger focus autosave subscribe and unsubscribe\n   */\n  ngAfterContentInit(): void {\n    this.fm.monitor(this.editorEl.element, true).subscribe(origin => {\n      this.focused = !!origin;\n      if (!this.focused) {\n        if (!this.autosave) {\n          this.isSaved.emit(false);\n        }\n        if (this.timerSubscription$) {\n          this.timerSubscription$.unsubscribe();\n        }\n      }\n      this.isSaved.emit(false);\n      if (this.autosave > 0) {\n        this.timerSubscription$ = this.getTimer(this.autosave).subscribe();\n      }\n      this.stateChanges.next();\n    });\n  }\n\n  /**\n   * Set the error state based on the underlying control state\n   */\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      this.errorState = this.ngControl.invalid && this.ngControl.touched;\n      this.stateChanges.next();\n    }\n  }\n\n  /**\n   * Destroy the focus monitoring\n   */\n  ngOnDestroy(): void {\n    this.fm.stopMonitoring(this.editorEl.element);\n    if (this.timerSubscription$ && !this.timerSubscription$.closed) {\n      this.timerSubscription$.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorMap.html":{"url":"interfaces/EditorMap.html","title":"interface - EditorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing instances of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:26\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {EditorJS}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventMap.html":{"url":"interfaces/EventMap.html","title":"interface - EventMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing an event subject for an EditorJS instance\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:16\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {EventType}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventType.html":{"url":"interfaces/EventType.html","title":"interface - EventType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EventType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                An event type for calling EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        payload\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormContainerComponent.html":{"url":"components/FormContainerComponent.html","title":"component - FormContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container component provides the main routable page for loading\nthe ngx-editorjs-demo\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-form-container\n            \n\n            \n                styleUrls\n                form-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                form-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editorForm\n                            \n                            \n                                    Public\n                                holder\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                disableAutosave\n                            \n                            \n                                    Public\n                                enableAutosave\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                setIsSaved\n                            \n                            \n                                    Public\n                                togglePanel\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    panelOpen\n                                \n                                \n                                    isSaved\n                                \n                                \n                                    autosave\n                                \n                                \n                                    menu\n                                \n                                \n                                    pages\n                                \n                                \n                                    blocks\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editor: NgxEditorJSService, cd: ChangeDetectorRef, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:111\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editor\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The form builder\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:184\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disableAutosave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disableAutosave()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:102\n                \n            \n\n\n            \n                \n                    Disable autosave\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enableAutosave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableAutosave(autosaveTime: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:95\n                \n            \n\n\n            \n                \n                    Enable autosave, set the value from the autosaveTime\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    autosaveTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Time to set for autosave\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:247\n                \n            \n\n\n            \n                \n                    After the content has init overide the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:193\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:175\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setIsSaved\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setIsSaved(isSaved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:87\n                \n            \n\n\n            \n                \n                    Set the current saved state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isSaved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current saved state\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            togglePanel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    togglePanel(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:62\n                \n            \n\n\n            \n                \n                    Toggles the panel state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editorForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    pageName: [''],\n    pageTags: new FormControl([]),\n    pageEditor: new FormControl([])\n  })\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:145\n                            \n                        \n\n                \n                    \n                        Editor form group\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            holder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs-demo'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:35\n                            \n                        \n\n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs Material Field'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:26\n                            \n                        \n\n                \n                    \n                        Title of the page\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        panelOpen\n                    \n                \n\n                \n                    \n                        getpanelOpen()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:55\n                                \n                            \n                    \n                        \n                                Gets if the panel is open or not\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isSaved\n                    \n                \n\n                \n                    \n                        getisSaved()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:79\n                                \n                            \n                    \n                        \n                                Get isSaved state\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n\n                \n                    \n                        getautosave()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:109\n                                \n                            \n                    \n                        \n                                Get the current autosave value\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:154\n                                \n                            \n                    \n                        \n                                Get the page links\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:161\n                                \n                            \n                    \n                        \n                                Get a list of pages\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n\n                \n                    \n                        getblocks()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/form-container/form-container.component.ts:168\n                                \n                            \n                    \n                        \n                                Get the blocks for the container\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { Block, NgxEditorJSService } from '@tinynodes/ngx-editorjs/src';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core/src';\nimport { NgxEditorJSDemo } from '@tinynodes/ngx-tinynodes-core/src/lib/stores/app/application.model';\nimport { MenuGroup } from 'apps/ngx-tinynodes/src/app/core/types/app';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, take, takeUntil } from 'rxjs/operators';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\n\n/**\n * The Page Container component provides the main routable page for loading\n * the `ngx-editorjs-demo`\n */\n@Component({\n  selector: 'ngx-form-container',\n  templateUrl: 'form-container.component.html',\n  styleUrls: ['form-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormContainerComponent implements AfterContentInit {\n  /**\n   * Title of the page\n   */\n  public title = 'ngx-editorjs Material Field';\n  /**\n   * Internal onDestroy$ subject\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * The holder ID for this demo\n   */\n  public holder = 'ngx-editorjs-demo';\n\n  /**\n   * The blocks on the page\n   */\n  private blocks$: Observable;\n\n  /**\n   * If the panel is open or not\n   */\n  private panelOpen$ = new BehaviorSubject(true);\n\n  /**\n   * Links for the page\n   */\n  private menu$ = new BehaviorSubject(undefined);\n\n  /**\n   * Gets if the panel is open or not\n   */\n  public get panelOpen() {\n    return this.panelOpen$.asObservable();\n  }\n\n  /**\n   * Toggles the panel state\n   */\n  public togglePanel(value: boolean) {\n    this.panelOpen$.next(value);\n  }\n\n  /**\n   * Autosave state\n   */\n  private autoSave$ = new BehaviorSubject(0);\n\n  /**\n   * Is saved state\n   */\n  private isSaved$ = new BehaviorSubject(true);\n\n  /**\n   * Get `isSaved` state\n   */\n  public get isSaved(): Observable {\n    return this.isSaved$.asObservable();\n  }\n\n  /**\n   * Set the current saved state\n   * @param isSaved The current saved state\n   */\n  public setIsSaved(isSaved: boolean) {\n    this.isSaved$.next(isSaved);\n  }\n\n  /**\n   * Enable autosave, set the value from the autosaveTime\n   * @param autosaveTime Time to set for autosave\n   */\n  public enableAutosave(autosaveTime: number) {\n    this.autoSave$.next(autosaveTime);\n  }\n\n  /**\n   * Disable autosave\n   */\n  public disableAutosave() {\n    this.autoSave$.next(0);\n  }\n\n  /**\n   * Get the current autosave value\n   */\n  public get autosave() {\n    return this.autoSave$.asObservable();\n  }\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editor The Editor service\n   * @param cd The change detection ref\n   * @param fb The form builder\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private app: AppService,\n    private readonly editor: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef,\n    private readonly fb: FormBuilder\n  ) {\n    this.editor\n      .getBlocks(this.holder)\n      .pipe(\n        distinctUntilChanged(),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(blocks => {\n        this.editorForm.patchValue({\n          pageEditor: blocks\n        });\n        this.cd.markForCheck();\n      });\n  }\n\n  /**\n   * Editor form group\n   */\n  public editorForm = this.fb.group({\n    pageName: [''],\n    pageTags: new FormControl([]),\n    pageEditor: new FormControl([])\n  });\n\n  /**\n   * Get the page links\n   */\n  public get menu() {\n    return this.menu$;\n  }\n\n  /**\n   * Get a list of pages\n   */\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n\n  /**\n   * Get the blocks for the container\n   */\n  get blocks(): Observable {\n    return this.blocks$;\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editor.save({ holder: this.holder });\n    this.setIsSaved(true);\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Clear the editor\n   */\n  public clear() {\n    this.editor.clear({ holder: this.holder });\n    this.setIsSaved(true);\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app\n      .getDemoData('ngx-editorjs-demo')\n      .pipe(take(1))\n      .subscribe((data: NgxEditorJSDemo) => {\n        const blocks = [\n          ...data.blocks,\n          {\n            type: 'header',\n            data: {\n              text: 'Material Form Component',\n              level: 1\n            }\n          },\n          {\n            type: 'paragraph',\n            data: {\n              text:\n                'This component is provided as a Material form component.  Here is the configuration for this field on this page:'\n            }\n          },\n          {\n            type: 'code',\n            data: {\n              code: `\n  \n    \n    \n  \n`\n            }\n          },\n          {\n            type: 'paragraph',\n            data: {\n              text: 'When you save the form, you can see the output below of the form instance values'\n            }\n          }\n        ];\n        this.menu$.next(data.links);\n        this.editor.update({ holder: this.holder, blocks });\n        this.setIsSaved(true);\n        this.cd.markForCheck();\n      });\n  }\n\n  /**\n   * After the content has init overide the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Material Field Demo\n      A single page demo of the EditorJS Material Field component\n    \n\n    \n      \n    \n\n    \n      Demo\n      Save\n      Clear\n      \n        Enable Autosave\n      \n       0\" (click)=\"disableAutosave()\">Disable Autosave\n      save\n      \n        Autosave Time\n        \n        seconds\n         0\">\n          EditorJS Autosave is enabled, now when you focus on the component the reactive form value will be updated - You still need to call\n          save to save all the form data.\n      \n    \n    \n      \n        \n          Page Name\n          \n          Enter the name for this page\n        \n        \n          Page Tags\n          \n          Press Enter or , (comma) to add tags\n        \n        \n          Content Editor for {{ editorForm.value.pageName || 'Page Name' }}\n          Click on the editor to active it\n          \n        \n      \n    \n    \n      \n        \n          Output\n          Data from the EditorJS instance\n        \n        \n          {{ editorForm.valueChanges | async | json }}\n        \n      \n    \n     \n  \n\n\n\n  \n    Below is an instance of an {{ title }} EditorJS component. Click on the area and the block tool will appear, or you can\n    just start typing.\n  \n  \n    The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks, list with\n    &lt;ol> / &lt;li> and &lt;code> blocks.\n  \n\n  \n    You can also paste in an &lt;img> url into the editor and it will start the SimpleImage plugin which provides\n    an &lt;img> tag pointing to the image, and with some additional controls.\n  \n  \n    When saving check the output panel below to see the data results.\n  \n\n\n    \n\n    \n                \n                    form-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n.form-content form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-content > * {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Material Field Demo      A single page demo of the EditorJS Material Field component                            Demo      Save      Clear              Enable Autosave             0\" (click)=\"disableAutosave()\">Disable Autosave      save              Autosave Time                seconds         0\">          EditorJS Autosave is enabled, now when you focus on the component the reactive form value will be updated - You still need to call          save to save all the form data.                                      Page Name                    Enter the name for this page                          Page Tags                    Press Enter or , (comma) to add tags                          Content Editor for {{ editorForm.value.pageName || \\'Page Name\\' }}          Click on the editor to active it                                                        Output          Data from the EditorJS instance                          {{ editorForm.valueChanges | async | json }}                               Below is an instance of an {{ title }} EditorJS component. Click on the area and the block tool will appear, or you can    just start typing.        The default block is a  paragraph, you can also add header  -  blocks, list with     /  and  blocks.        You can also paste in an  url into the editor and it will start the SimpleImage plugin which provides    an  tag pointing to the image, and with some additional controls.        When saving check the output panel below to see the data results.  '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Header.html":{"url":"interfaces/Header.html","title":"interface - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header level from 1-6\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderBlock.html":{"url":"interfaces/HeaderBlock.html","title":"interface - HeaderBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a header block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-home-page\n            \n\n            \n                styleUrls\n                home-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                home-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    menu\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppService)\n                    \n                \n                        \n                            \n                                Defined in apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in apps/ngx-tinynodes/src/app/pages/home/home-page.component.ts:12\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core';\n\n@Component({\n  selector: 'tinynodes-home-page',\n  templateUrl: 'home-page.component.html',\n  styleUrls: ['home-page.component.scss']\n})\nexport class HomePageComponent {\n  constructor(private readonly app: AppService) {}\n\n  public get menu() {\n    return this.app.getMenu('main-links');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Welcome to the Tinynodes Demo Site\n      A collection of Angular and TypeScript libraries for the web\n    \n    \n      \n        This site contains demos of components released under @tinynodes on npm, you can find a list of them on\n        the menu to the left.\n      \n      You can also visit the sites below for additional documentation and code:\n      \n        \n          \n            {{ menu.label }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    home-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome to the Tinynodes Demo Site      A collection of Angular and TypeScript libraries for the web                      This site contains demos of components released under @tinynodes on npm, you can find a list of them on        the menu to the left.            You can also visit the sites below for additional documentation and code:                                    {{ menu.label }}                              '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        caption\n                                \n                                \n                                            Optional\n                                        stretched\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        withBackground\n                                \n                                \n                                            Optional\n                                        withBorder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional image caption\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stretched\n                                    \n                                \n                                \n                                    \n                                        stretched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional stretch property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBackground\n                                    \n                                \n                                \n                                    \n                                        withBackground:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional background property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBorder\n                                    \n                                \n                                \n                                    \n                                        withBorder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional border property\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageBlock.html":{"url":"interfaces/ImageBlock.html","title":"interface - ImageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a image block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/List.html":{"url":"interfaces/List.html","title":"interface - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a list block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List items of type T\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list style\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListBlock.html":{"url":"interfaces/ListBlock.html","title":"interface - ListBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                The default list block is provided by the EditorJS list plugin\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/material.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This internal module loads the required features for Angular Material\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport {\n  MatSidenavModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatListModule,\n  MatCardModule,\n  MatButtonModule\n} from '@angular/material';\n\n/**\n * This internal module loads the required features for Angular Material\n */\n@NgModule({\n  imports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule, MatButtonModule],\n  exports: [MatSidenavModule, MatToolbarModule, MatIconModule, MatListModule, MatCardModule, MatButtonModule]\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuGroup.html":{"url":"interfaces/MenuGroup.html","title":"interface - MenuGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu group describes a set of menu items with a key and optional title\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        key\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The menu items, can contain one or more items with children\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the menu (e.g. sidebar, topnav, etc)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional title to render in the menu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuGroup-1.html":{"url":"interfaces/MenuGroup-1.html","title":"interface - MenuGroup-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu group describes a set of menu items with a key and optional title\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        key\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The menu items, can contain one or more items with children\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the menu (e.g. sidebar, topnav, etc)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional title to render in the menu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu item in the Tinynodes app\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        link\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any children to render in the menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description of the item, used for title, aria, etc\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon for the menu item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display label for the app\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     RouterLink | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterLink | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {RouterLink} for the menu item or a string url\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem-1.html":{"url":"interfaces/MenuItem-1.html","title":"interface - MenuItem-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/types/app.ts\n        \n\n            \n                Description\n            \n            \n                A menu item in the Tinynodes app\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        link\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     MenuItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuItem[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any children to render in the menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Description of the item, used for title, aria, etc\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon for the menu item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display label for the app\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                    \n                                \n                                \n                                    \n                                        link:     RouterLink | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterLink | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The {RouterLink} for the menu item or a string url\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { RouterLink } from '@angular/router';\n\n/**\n * A menu item in the Tinynodes app\n */\nexport interface MenuItem {\n  /**\n   * The display label for the app\n   */\n  label: string;\n  /**\n   * Optional icon for the menu item\n   */\n  icon?: string;\n  /**\n   * Description of the item, used for title, aria, etc\n   */\n  description?: string;\n  /**\n   * The {RouterLink} for the menu item or a string url\n   */\n  link?: RouterLink | string;\n\n  /**\n   * Any children to render in the menu\n   */\n  children?: MenuItem[];\n}\n\n/**\n * A menu group describes a set of menu items with a key and optional title\n */\nexport interface MenuGroup {\n  /**\n   * The key of the menu (e.g. `sidebar`, `topnav`, etc)\n   */\n  key: string;\n  /**\n   * Optional title to render in the menu\n   */\n  title?: string;\n\n  /**\n   * The menu items, can contain one or more items with children\n   */\n  items: MenuItem[];\n}\n\n/**\n * The aggregate application interface\n */\nexport interface ApplicationData {\n  /**\n   * If the sidebar menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * An list of menu groups available in the apps\n   */\n  menus: MenuGroup[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockEditorJS.html":{"url":"classes/MockEditorJS.html","title":"class - MockEditorJS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockEditorJS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                destroy\n                            \n                            \n                                isReady\n                            \n                            \n                                saver\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EditorJSConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/shared.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EditorJSConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blocks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/shared.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { EditorJSConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  isReady: Promise;\n\n  constructor(private config: EditorJSConfig) {\n    this.version = 'test';\n\n    this.isReady = Promise.resolve();\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockNgZone.html":{"url":"injectables/MockNgZone.html","title":"injectable - MockNgZone","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockNgZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/ng-zone-mock.ts\n        \n\n            \n                Description\n            \n            \n                A mock implementation of NgZone.\n\n            \n\n            \n                Extends\n            \n            \n                        NgZone\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onStable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                            \n                                runOutsideAngular\n                            \n                            \n                                simulateZoneExit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            run\n                        \n                        \n                    \n                \n            \n            \n                \nrun(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runOutsideAngular\n                        \n                        \n                    \n                \n            \n            \n                \nrunOutsideAngular(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            simulateZoneExit\n                        \n                        \n                    \n                \n            \n            \n                \nsimulateZoneExit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onStable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter(false)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable, NgZone } from '@angular/core';\n\n/**\n * A mock implementation of {@link NgZone}.\n */\n@Injectable()\nexport class MockNgZone extends NgZone {\n  onStable: EventEmitter = new EventEmitter(false);\n\n  constructor() {\n    super({ enableLongStackTrace: false });\n  }\n\n  run(fn: Function): any {\n    return fn();\n  }\n\n  runOutsideAngular(fn: Function): any {\n    return fn();\n  }\n\n  simulateZoneExit(): void {\n    this.onStable.emit(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockPlugin.html":{"url":"classes/MockPlugin.html","title":"class - MockPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            BasePlugin\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                            \n                                shortcut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shortcut\n                        \n                        \n                    \n                \n            \n            \n                \nshortcut()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { EditorJSConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  isReady: Promise;\n\n  constructor(private config: EditorJSConfig) {\n    this.version = 'test';\n\n    this.isReady = Promise.resolve();\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavBarComponent.html":{"url":"components/NavBarComponent.html","title":"component - NavBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts\n\n\n    \n        Description\n    \n    \n        Internal NavBar component for the Tinynodes application, provides\ncontrol over the sidebar toggle and displays the main menu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-nav-bar\n            \n\n            \n                styleUrls\n                nav-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                nav-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                menu\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggleSidebar\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : 'Navbar Component'\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:18\n                            \n                        \n                \n                    \n                        Set the title of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggleSidebar\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/nav-bar/nav-bar.component.ts:27\n                            \n                        \n                \n                    \n                        Get an event when the sidebar toggle has been pressed\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MenuGroup } from '@tinynodes/ngx-tinynodes-core';\n\n/**\n * Internal NavBar component for the Tinynodes application, provides\n * control over the sidebar toggle and displays the main menu\n */\n@Component({\n  selector: 'tinynodes-nav-bar',\n  templateUrl: 'nav-bar.component.html',\n  styleUrls: ['nav-bar.component.scss']\n})\nexport class NavBarComponent {\n  /**\n   * Set the title of the component\n   */\n  @Input()\n  title = 'Navbar Component';\n\n  @Input()\n  menu: MenuGroup;\n\n  /**\n   * Get an event when the sidebar toggle has been pressed\n   */\n  @Output()\n  toggleSidebar = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    menu\n  \n  &nbsp;\n  \n    {{ title }}\n  \n  \n    \n      \n        \n          {{ menuItem.label }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    nav-bar.component.scss\n                \n                a {\n  text-decoration: none;\n  color: white;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n  width: 15%;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n  width: 85%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu           {{ title }}                                {{ menuItem.label }}                    '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSComponent.html":{"url":"components/NgxEditorJSComponent.html","title":"component - NgxEditorJSComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts\n\n\n    \n        Description\n    \n    \n        This component is provided as a shortcut to using EditorJS in your\napplication. The attributes are optional and without a default component\nwill be created\n\n    \n\n    \n        Extends\n    \n    \n                EditorJSBaseComponent\n    \n\n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs\n            \n\n            \n                styleUrls\n                editorjs.component.scss\n            \n\n\n\n            \n                templateUrl\n                editorjs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editor\n                            \n                            \n                                    Public\n                                    Readonly\n                                service\n                            \n                            \n                                    Protected\n                                _value\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getChanged\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                includeTools\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts:23\n                            \n                        \n\n                \n                    \n                            Constructs the Editor component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The NgxEditorJSService instance\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:34\n\n                            \n                        \n                \n                    \n                        Sets if the EditorJS component will request autofocus in the browser\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:84\n\n                            \n                        \n                \n                    \n                        If set, when the EditorJS save is called the Observable of blocks will be updated,\nif set to false on the change Observable will be updated\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:64\n\n                            \n                        \n                \n                    \n                        First Block placeholder\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:90\n\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:40\n\n                            \n                        \n                \n                    \n                        Sets if the toolbar will be shown in EditorJS\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:46\n\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        includeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:77\n\n                            \n                        \n                \n                    \n                        A string array of tools that will be included in this instance, if empty\nall tools will be included\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:52\n\n                            \n                        \n                \n                    \n                        The name of the initial block (default \"paragraph\")\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:58\n\n                            \n                        \n                \n                    \n                        Height of Editor's bottom area that allows to set focus on the last Block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:70\n\n                            \n                        \n                \n                    \n                        Define default sanitizer configuration\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getChanged()\n                \n            \n\n\n            \n                \n                    Inherited from         EditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         EditorJSBaseComponent:151\n\n                \n            \n\n\n            \n                \n                    Get the changed status for the EditorJS instance\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         EditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         EditorJSBaseComponent:136\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: (blocks: Block[]) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         EditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         EditorJSBaseComponent:125\n\n                \n            \n\n\n            \n                \n                    Register on Change for forms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: (event: MouseEvent) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         EditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         EditorJSBaseComponent:132\n\n                \n            \n\n\n            \n                \n                    registerOnTouched for forms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(blocks: Block[])\n                \n            \n\n\n            \n                \n                    Inherited from         EditorJSBaseComponent\n\n                \n            \n            \n                \n                        Defined in         EditorJSBaseComponent:118\n\n                \n            \n\n\n            \n                \n                    Form Write Values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxEditorJSDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(NgxEditorJSDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts:23\n                            \n                        \n\n                \n                    \n                        Access to the underlying editor directive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts:29\n                            \n                        \n\n                \n                    \n                        The NgxEditorJSService instance\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:102\n\n                            \n                        \n\n                \n                    \n                        Form field value if used as a field component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:112\n\n                            \n                        \n\n                \n                    \n                        Field onChange method\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTouch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         EditorJSBaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EditorJSBaseComponent:107\n\n                            \n                        \n\n                \n                    \n                        Field on touch method\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { EditorJSBaseComponent } from '../base/container.class';\n\n/**\n * This component is provided as a shortcut to using EditorJS in your\n * application. The attributes are optional and without a default component\n * will be created\n *\n * @example\n * \n */\n@Component({\n  selector: 'ngx-editorjs',\n  templateUrl: 'editorjs.component.html',\n  styleUrls: ['editorjs.component.scss']\n})\nexport class NgxEditorJSComponent extends EditorJSBaseComponent {\n  /**\n   * Access to the underlying editor directive\n   */\n  @ViewChild(NgxEditorJSDirective) public editor: NgxEditorJSDirective;\n\n  /**\n   * Constructs the Editor component\n   * @param service The NgxEditorJSService instance\n   */\n  constructor(public readonly service: NgxEditorJSService) {\n    super(service);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    editorjs.component.scss\n                \n                :host {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n}\n\n.editor {\n  flex: 1;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: 2px solid darkgray;\n  border-radius: 1em;\n  text-align: left;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSConfig.html":{"url":"interfaces/NgxEditorJSConfig.html","title":"interface - NgxEditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                The configuration option that can be passed to the NgxEditorJSModule.forRoot method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration options for EditorJS\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface EditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * Configuration options for `EditorJS`\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemo.html":{"url":"interfaces/NgxEditorJSDemo.html","title":"interface - NgxEditorJSDemo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for ngx-editorjs-demo data\nTODO: This should be moved\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        links\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The initial blocks for the demo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                    \n                                \n                                \n                                    \n                                        links:         MenuGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuGroup\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Links for this demo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemo-1.html":{"url":"interfaces/NgxEditorJSDemo-1.html","title":"interface - NgxEditorJSDemo-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface for ngx-editorjs-demo data\nTODO: This should be moved\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The initial blocks for the demo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemoData.html":{"url":"interfaces/NgxEditorJSDemoData.html","title":"interface - NgxEditorJSDemoData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demo data for ngx-editorjs-demo\n\n            \n\n            \n                Extends\n            \n            \n                        DemoData\n            \n\n\n\n\n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSDemoData-1.html":{"url":"interfaces/NgxEditorJSDemoData-1.html","title":"interface - NgxEditorJSDemoData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSDemoData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demo data for ngx-editorjs-demo\n\n            \n\n            \n                Extends\n            \n            \n                        DemoData\n            \n\n\n\n\n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSDemoHomeComponent.html":{"url":"components/NgxEditorJSDemoHomeComponent.html","title":"component - NgxEditorJSDemoHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSDemoHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/home-container/home-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs-demo-home\n            \n\n            \n                styleUrls\n                home-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                home-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-editorjs-demo-home',\n  templateUrl: 'home-container.component.html',\n  styleUrls: ['home-container.component.scss']\n})\nexport class NgxEditorJSDemoHomeComponent {}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A collection of demos for the @tinynodes/ngx-editor module with example code and links to API docs.\n    \n    \n      \n        The demos in this section are for the\n        @tinynodes/ngx-editorjs module.\n      \n      \n        Each demo provides a way to use the component in an application or form in Angular. It can be used as a basic component, used with\n        Angular forms or Material forms.\n      \n    \n    \n      Angular Component Demo\n      Angular Material Form Demo\n    \n  \n\n\n    \n\n    \n                \n                    home-container.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A collection of demos for the @tinynodes/ngx-editor module with example code and links to API docs.                      The demos in this section are for the        @tinynodes/ngx-editorjs module.                    Each demo provides a way to use the component in an application or form in Angular. It can be used as a basic component, used with        Angular forms or Material forms.                    Angular Component Demo      Angular Material Form Demo      '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSDemoHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSDemoInfoComponent.html":{"url":"components/NgxEditorJSDemoInfoComponent.html","title":"component - NgxEditorJSDemoInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSDemoInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs-demo-info\n            \n\n            \n                styleUrls\n                demo-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                demo-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                togglePanel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                menu\n                            \n                            \n                                panelOpen\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isPanelOpen\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:26\n                            \n                        \n                \n                    \n                        The menu group for the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        panelOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:20\n                            \n                        \n                \n                    \n                        Sets the panel open state\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:32\n                            \n                        \n                \n                    \n                        The title of the component\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            togglePanel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    togglePanel(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:53\n                \n            \n\n\n            \n                \n                    Toggles the panel state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isPanelOpen\n                    \n                \n\n                \n                    \n                        getisPanelOpen()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-tinynodes-core/src/lib/components/demo-info/demo-info.component.ts:46\n                                \n                            \n                    \n                        \n                                Gets if the panel is open or not\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { MenuGroup } from '../../types/app';\n\n@Component({\n  selector: 'ngx-editorjs-demo-info',\n  templateUrl: 'demo-info.component.html',\n  styleUrls: ['demo-info.component.scss']\n})\nexport class NgxEditorJSDemoInfoComponent implements OnInit {\n  /**\n   * If the panel is open or not\n   */\n  private panelOpen$ = new BehaviorSubject(true);\n\n  /**\n   * Sets the panel open state\n   */\n  @Input()\n  panelOpen: boolean;\n\n  /**\n   * The menu group for the component\n   */\n  @Input()\n  menu: MenuGroup;\n\n  /**\n   * The title of the component\n   */\n  @Input()\n  title: string;\n\n  @Input()\n  body: TemplateRef;\n\n  ngOnInit() {\n    if (typeof this.panelOpen !== 'undefined') {\n      this.panelOpen$.next(this.panelOpen);\n    }\n  }\n\n  /**\n   * Gets if the panel is open or not\n   */\n  public get isPanelOpen(): Observable {\n    return this.panelOpen$.asObservable();\n  }\n\n  /**\n   * Toggles the panel state\n   */\n  public togglePanel(value: boolean): void {\n    this.panelOpen$.next(value);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ title }}\n    Details on usage and links - {{ (isPanelOpen | async) ? 'Click To Close' : 'Click To View' }}\n  \n  \n    \n      \n        \n          How To Use...\n          Instructions on the demo below\n        \n        \n          \n        \n      \n    \n    \n      \n        \n          Links\n          Links for all things related to @tinynodes/{{ title }}\n        \n        \n          \n            \n              {{ link.label }}\n            \n          \n        \n      \n    \n  \n\n\n\n  This is where some demo information goes\n\n\n    \n\n    \n                \n                    demo-info.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.demo-info {\n  width: 100%;\n  height: calc(300px);\n  overflow: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title }}    Details on usage and links - {{ (isPanelOpen | async) ? \\'Click To Close\\' : \\'Click To View\\' }}                                How To Use...          Instructions on the demo below                                                                        Links          Links for all things related to @tinynodes/{{ title }}                                                    {{ link.label }}                                            This is where some demo information goes'\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSDemoInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxEditorJSDirective.html":{"url":"directives/NgxEditorJSDirective.html","title":"directive - NgxEditorJSDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createEditor\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                includeTools\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    element\n                                \n                                \n                                    service\n                                \n                                \n                                    touched\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:104\n                            \n                        \n\n                \n                    \n                            Creates the directive instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The element the directive is attached to\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:46\n                            \n                        \n                \n                    \n                        Sets if the EditorJS component will request autofocus in the browser\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:90\n                            \n                        \n                \n                    \n                        If set, when the EditorJS save is called the Observable of blocks will be updated,\nif set to false on the change Observable will be updated\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:70\n                            \n                        \n                \n                    \n                        First Block placeholder\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:96\n                            \n                        \n                \n                    \n                        An initial set of blocks to render in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:52\n                            \n                        \n                \n                    \n                        Sets if the toolbar will be shown in EditorJS\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:40\n                            \n                        \n                \n                    \n                        The ID of the dom element that will hold the editor\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        includeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:83\n                            \n                        \n                \n                    \n                        A string array of tools that will be included in this instance, if empty\nall tools will be included\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:58\n                            \n                        \n                \n                    \n                        The name of the initial block (default \"paragraph\")\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:64\n                            \n                        \n                \n                    \n                        Height of Editor's bottom area that allows to set focus on the last Block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:76\n                            \n                        \n                \n                    \n                        Define default sanitizer configuration\n\n                    \n                \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:102\n                \n            \n\n\n            \n                \n                    Host click listener\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(config?: EditorConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:145\n                \n            \n\n\n            \n                \n                    Creates an EditorJS instance for this directive\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            EditorConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Configuration for this instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:180\n                \n            \n\n\n            \n                \n                    After content is created, we create the editor instance\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:161\n                \n            \n\n\n            \n                \n                    When ngOnChanges are called, there are two paths\nIf it's just blocks, then the service is updated with the blocks\nIf it's any other property it means we create a new editor, as this\nis a destructive process we also need to wait for an existing editor\nto be ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes on the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:192\n                \n            \n\n\n            \n                \n                    Destroy the editor and subjects for this service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:116\n                                \n                            \n                    \n                        \n                                Get the EditorJS instance for this directive\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:123\n                                \n                            \n                    \n                        \n                                Get the element for the directive\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:130\n                                \n                            \n                    \n                        \n                                Get the NgxEditorJSService for this directive\n\n\n                                \n                                    Returns :         NgxEditorJSService\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n\n                \n                    \n                        gettouched()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:137\n                                \n                            \n                    \n                        \n                                Get the touched state\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges\n} from '@angular/core';\nimport EditorJS, { SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { createEditorJSConfig } from '../config/editor-config';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\nimport { EditorJSConfig } from '../types/config';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * \n */\n@Directive({\n  selector: '[ngxEditorJS]'\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterContentInit {\n  private touched$ = new BehaviorSubject(false);\n\n  private id: string;\n\n  /**\n   * The ID of the dom element that will hold the editor\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * Sets if the `EditorJS` component will request autofocus in the browser\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Sets if the toolbar will be shown in `EditorJS`\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  @Input()\n  public initialBlock: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  @Input()\n  public minHeight: number;\n\n  /**\n   * First Block placeholder\n   */\n  @Input()\n  public blockPlaceholder: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  @Input()\n  public sanitizer: SanitizerConfig;\n\n  /**\n   * A string array of tools that will be included in this instance, if empty\n   * all tools will be included\n   */\n  @Input()\n  public includeTools: string[] = [];\n\n  /**\n   * If set, when the `EditorJS` save is called the `Observable` of blocks will be updated,\n   * if set to `false` on the change `Observable` will be updated\n   */\n  @Input()\n  public autosave: boolean;\n\n  /**\n   * An initial set of blocks to render in the component\n   */\n  @Input()\n  public blocks: Block[] = [];\n\n  /**\n   * Host click listener\n   */\n  @HostListener('click')\n  onclick() {\n    this.touched$.next(true);\n  }\n\n  /**\n   * Creates the directive instance\n   * @param el The element the directive is attached to\n   * @param editorService The editor service\n   */\n  constructor(private readonly el: ElementRef, protected readonly editorService: NgxEditorJSService) {}\n\n  /**\n   * Get the `EditorJS` instance for this directive\n   */\n  public get editor(): Observable {\n    return this.service.getEditor(this.id);\n  }\n\n  /**\n   * Get the element for the directive\n   */\n  public get element() {\n    return this.el.nativeElement;\n  }\n\n  /**\n   * Get the `NgxEditorJSService` for this directive\n   */\n  public get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  /**\n   * Get the touched state\n   */\n  public get touched() {\n    return this.touched$.asObservable();\n  }\n\n  /**\n   * Creates an `EditorJS` instance for this directive\n   * @param config Configuration for this instance\n   */\n  public createEditor(config?: EditorConfig): void {\n    this.service.createEditor({\n      config,\n      includeTools: this.includeTools,\n      autoSave: this.autosave\n    });\n  }\n\n  /**\n   * When ngOnChanges are called, there are two paths\n   * If it's just blocks, then the service is updated with the blocks\n   * If it's any other property it means we create a new editor, as this\n   * is a destructive process we also need to wait for an existing editor\n   * to be ready\n   * @param changes Changes on the component\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.blocks && !changes.blocks.firstChange) {\n      return this.service.update({ holder: this.id, blocks: changes.blocks.currentValue });\n    }\n    const changesKeys = Object.keys(changes);\n    if (\n      this.id &&\n      // Ignore placeholder change\n      ['autofocus', 'holder', 'hideToolbar', 'initialBlock', 'minHeight'].find(key => {\n        return changesKeys.includes(key);\n      })\n    ) {\n      this.createEditor(this.createConfig());\n    }\n  }\n\n  /**\n   * After content is created, we create the editor instance\n   */\n  ngAfterContentInit() {\n    this.id = this.el.nativeElement.id || this.holder;\n\n    if (!this.id) {\n      throw new Error('Error in NgxEditorJSDirective::ngAfterContentInit - Directive element has no ID');\n    }\n    this.createEditor(this.createConfig());\n  }\n\n  /**\n   * Destroy the editor and subjects for this service\n   */\n  ngOnDestroy() {\n    this.service.destroy({ holder: this.id });\n  }\n\n  /**\n   * Create a configuration for EditorJS\n   */\n  private createConfig(): EditorConfig {\n    const config: EditorConfig = createEditorJSConfig({\n      holder: this.id,\n      autofocus: this.autofocus,\n      hideToolbar: this.hideToolbar,\n      initialBlock: this.initialBlock,\n      placeholder: this.blockPlaceholder,\n      minHeight: this.minHeight,\n      sanitizer: this.sanitizer\n    });\n    if (this.blocks && this.blocks.length > 0) {\n      config.data = {\n        time: Date.now(),\n        version: EditorJS.version,\n        blocks: this.blocks\n      };\n    }\n    return config;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSEffects.html":{"url":"injectables/NgxEditorJSEffects.html","title":"injectable - NgxEditorJSEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $save\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, editorService: NgxEditorJSService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $save\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.actions$.pipe(\n    ofType(EditorJSActionTypes.SaveStart),\n    map((action: SaveStart) => {\n      this.editorService.save(action.payload.holder);\n      return action;\n    }),\n    withLatestFrom([\n      map((action: SaveStart) => action),\n      (action: SaveStart): Observable => this.editorService.getBlocks(action.payload.holder)\n    ]),\n    mergeMap(([action, blocks]) => {\n      blocks.subscribe();\n      return new SaveEnd({\n        holder: action.payload.holder,\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: blocks\n        }\n      });\n    })\n  )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect({dispatch: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/effects/ngx-editorjs.effects.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Effect, Actions, ofType } from '@ngrx/effects';\nimport { NgxEditorJSService, Block } from '@tinynodes/ngx-editorjs';\nimport { EditorJSActionTypes, SaveStart, SaveEnd } from '../actions/ngx-editorjs.actions';\nimport { switchMap, map, withLatestFrom, tap, mergeMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport EditorJS from '@editorjs/editorjs';\n\n@Injectable()\nexport class NgxEditorJSEffects {\n  constructor(private readonly actions$: Actions, private readonly editorService: NgxEditorJSService) {}\n\n  @Effect({ dispatch: false })\n  $save = this.actions$.pipe(\n    ofType(EditorJSActionTypes.SaveStart),\n    map((action: SaveStart) => {\n      this.editorService.save(action.payload.holder);\n      return action;\n    }),\n    withLatestFrom([\n      map((action: SaveStart) => action),\n      (action: SaveStart): Observable => this.editorService.getBlocks(action.payload.holder)\n    ]),\n    mergeMap(([action, blocks]) => {\n      blocks.subscribe();\n      return new SaveEnd({\n        holder: action.payload.holder,\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: blocks\n        }\n      });\n    })\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSInstanceService.html":{"url":"injectables/NgxEditorJSInstanceService.html","title":"injectable - NgxEditorJSInstanceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSInstanceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs-injector.ts\n        \n\n            \n                Description\n            \n            \n                EditorJS factory service, call createInstance with an EditorConfig to\nreturn an instance after the DOM element is ready, this is stored in a subject to\nbe retrieved when ready.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                nextIdValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                createInstance\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                destroyInstance\n                            \n                            \n                                    Public\n                                getBlocks\n                            \n                            \n                                    Public\n                                getChanged\n                            \n                            \n                                    Public\n                                getInstance\n                            \n                            \n                                    Public\n                                getReady\n                            \n                            \n                                    Public\n                                onChange\n                            \n                            \n                                    Public\n                                onReady\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    idValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorJs: any, zone: NgZone, ref: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:82\n                            \n                        \n\n                \n                    \n                            Import the EditorJS class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        editorJs\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The EditorJS class\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular zone to run\n\n                                                        \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application reference to trigger a tick\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:154\n                \n            \n\n\n            \n                \n                    Calls a clear method on an editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(config: EditorJSInstanceConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:101\n                \n            \n\n\n            \n                \n                    Creates a new EditorJS instance outside of the Angular zone and\nthen adds it to the editor instances\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                EditorJSInstanceConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The {EditorConfig} configuration to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:311\n                \n            \n\n\n            \n                \n                    Call this to destroy all subscriptions within the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroyInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyInstance(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:218\n                \n            \n\n\n            \n                \n                    Destroys an instance of an editor and cleans up all Observable values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBlocks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBlocks(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:207\n                \n            \n\n\n            \n                \n                    Returns an Observable value of an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getChanged(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:196\n                \n            \n\n\n            \n                \n                    Returns an Observable value of an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInstance(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:174\n                \n            \n\n\n            \n                \n                    Returns an Observable value of an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getReady(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:185\n                \n            \n\n\n            \n                \n                    Returns an Observable value of an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onChange(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onReady(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:144\n                \n            \n\n\n            \n                \n                    Calls the save method on an editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(holder: string, blocks: Block[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:163\n                \n            \n\n\n            \n                \n                    Updates the editor with new blocks\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The holder ID of the EditorJS instance\n\n                                    \n                                \n                                \n                                    blocks\n                                    \n                                                Block[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The blocks to update the editor with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            nextIdValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:48\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        idValue\n                    \n                \n\n                \n                    \n                        getidValue()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs-injector.ts:50\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApplicationRef, Inject, Injectable, InjectionToken, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Block } from '../types/blocks';\nimport { BlocksMap, ChangeMap, EditorMap, EventMap, EventType, ReadyMap } from '../types/maps';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nconst MAP_DEFAULTS = [['blocksMap', []], ['changeMap', 0], ['readyMap', false]];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * EditorJS factory service, call `createInstance` with an `EditorConfig` to\n * return an instance after the DOM element is ready, this is stored in a subject to\n * be retrieved when ready.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSInstanceService {\n  static nextIdValue = 0;\n\n  get idValue() {\n    NgxEditorJSInstanceService.nextIdValue++;\n    return NgxEditorJSInstanceService.nextIdValue;\n  }\n  /**\n   * Internal destroy method for the service\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * Internal map of all EditorJS instances\n   */\n  private editorMap: EditorMap = {};\n\n  /**\n   * Internal map of all Block `BehaviorSubject` instances\n   */\n  private blocksMap: BlocksMap = {};\n\n  /**\n   * Internal map of all EditorJS ready states\n   */\n  private readyMap: ReadyMap = {};\n\n  /**\n   * Internal map of all EditorJS change states\n   */\n  private changeMap: ChangeMap = {};\n\n  /**\n   * The Event map is used to trigger events\n   */\n  private eventMap: EventMap = {};\n\n  /**\n   * Import the `EditorJS` class\n   * @param editorJs The `EditorJS` class\n   * @param zone Angular zone to run\n   * @param ref The application reference to trigger a tick\n   */\n  constructor(\n    @Inject(EditorJSInstance) private editorJs: any,\n    private readonly zone: NgZone,\n    private readonly ref: ApplicationRef\n  ) {}\n\n  /**\n   * Creates a new `EditorJS` instance outside of the Angular zone and\n   * then adds it to the editor instances\n   * @param config The {EditorConfig} configuration to create\n   */\n  public createInstance(config: EditorJSInstanceConfig): Promise {\n    const editorConfig = {\n      ...config.editorConfig\n    };\n    editorConfig.onChange = (config.onChange && typeof config.onChange === 'function'\n      ? config.onChange\n      : this.onChange.bind(this, editorConfig.holder as string)) as any;\n    editorConfig.onReady = (config.onReady && typeof config.onReady === 'function'\n      ? config.onReady\n      : this.onReady.bind(this, editorConfig.holder as string)) as any;\n    return this.zone.runOutsideAngular(() => {\n      const editor = new (this.editorJs as any)(editorConfig);\n      const holder = editorConfig.holder as string;\n      return editor.isReady.then(() => {\n        return this.zone.run(() => {\n          this.setupSubjects(holder, editor);\n          this.setupEvents(holder);\n          this.readyMap[holder].next(true);\n          this.ref.tick();\n        });\n      });\n    });\n  }\n\n  public onChange(holder: string): void {\n    const d = Date.now();\n    if (!this.changeMap[holder]) {\n      this.changeMap[holder] = new BehaviorSubject(d);\n    }\n    this.changeMap[holder].next(d);\n  }\n\n  public onReady(holder: string) {\n    if (!this.readyMap[holder]) {\n      this.readyMap[holder] = new BehaviorSubject(false);\n    }\n    this.readyMap[holder].next(true);\n  }\n\n  /**\n   * Calls the save method on an editor\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public save(holder: string) {\n    if (!this.eventMap[holder]) {\n      this.eventMap[holder].next({ type: 'save' });\n    }\n  }\n\n  /**\n   * Calls a clear method on an editor\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public clear(holder: string) {\n    this.eventMap[holder].next({ type: 'clear' });\n  }\n\n  /**\n   * Updates the editor with new blocks\n   * @param holder The holder ID of the `EditorJS` instance\n   * @param blocks The blocks to update the editor with\n   */\n  public update(holder: string, blocks: Block[]) {\n    if (!this.eventMap[holder]) {\n      this.eventMap[holder] = new BehaviorSubject({ type: '' });\n    }\n    this.eventMap[holder].next({ type: 'update', payload: { blocks } });\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getInstance(holder: string): Observable {\n    if (!this.editorMap[holder]) {\n      this.editorMap[holder] = new BehaviorSubject(undefined);\n    }\n    return this.editorMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getReady(holder: string): Observable {\n    if (!this.readyMap[holder]) {\n      this.readyMap[holder] = new BehaviorSubject(false);\n    }\n    return this.readyMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getChanged(holder: string): Observable {\n    if (!this.changeMap[holder]) {\n      this.changeMap[holder] = new BehaviorSubject(0);\n    }\n    return this.changeMap[holder].asObservable();\n  }\n\n  /**\n   * Returns an Observable value of an `EditorJS` instance\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public getBlocks(holder: string): Observable {\n    if (!this.blocksMap[holder]) {\n      this.blocksMap[holder] = new BehaviorSubject([]);\n    }\n    return this.blocksMap[holder].asObservable();\n  }\n\n  /**\n   * Destroys an instance of an editor and cleans up all Observable values\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  public destroyInstance(holder: string): void {\n    const instanceDestroyed = new Subject();\n    this.editorMap[holder]\n      .pipe(\n        filter(editor => typeof editor !== 'undefined'),\n        takeUntil(instanceDestroyed)\n      )\n      .subscribe(editor => {\n        this.zone.runOutsideAngular(() => {\n          editor.destroy();\n          this.zone.run(() => {\n            this.cleanupSubjects(holder);\n            instanceDestroyed.next(true);\n            instanceDestroyed.complete();\n            this.ref.tick();\n          });\n        });\n      });\n  }\n\n  /**\n   * Sets up the Subjects provided by this service\n   * @param holder The holder to set up the subjects for\n   * @param editor The Editor instance created outside of Angular\n   */\n  private setupSubjects(holder: string, editor: EditorJS): void {\n    if (this.editorMap[holder]) {\n      this.editorMap[holder].next(editor);\n    } else {\n      this.editorMap[holder] = new BehaviorSubject(editor);\n    }\n    MAP_DEFAULTS.forEach(([mapKay, value]: [string, typeof value]) => {\n      if (!this[mapKay][holder]) {\n        this[mapKay][holder] = new BehaviorSubject(value);\n      }\n      this[mapKay][holder].next(value);\n    });\n    if (!this.eventMap[holder]) {\n      this.eventMap[holder] = new BehaviorSubject({ type: '' });\n    }\n  }\n\n  /**\n   * Sets up a listener for the event map and provides the editor and blocks to handle\n   * updates\n   * @param holder The holder ID of the `EditorJS` instance\n   */\n  private setupEvents(holder: string) {\n    combineLatest([this.eventMap[holder], this.editorMap[holder]])\n      .pipe(\n        filter(([event, editor]) => event.type && typeof editor !== 'undefined'),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(([event, editor]) => {\n        if (event.type === 'save') {\n          this.saveHandler(holder, editor);\n        }\n        if (event.type === 'clear') {\n          this.clearHandler(holder, editor);\n        }\n        if (event.type === 'update') {\n          this.updateHandler(holder, editor, event.payload.blocks);\n        }\n        this.eventMap[holder].next({ type: '' });\n      });\n    this.ref.tick();\n  }\n\n  /**\n   * Handles cleaning up all the subjects once an `EditorJS` instance has been\n   * destroyed\n   * @param holder The holder ID for the `EditorJS` instance\n   */\n  private cleanupSubjects(holder: string) {\n    MAP_DEFAULTS.forEach(([mapKay, value]: [string, any]) => {\n      if (this[mapKay][holder]) {\n        this[mapKay][holder].next(value);\n        this[mapKay][holder].complete();\n        this[mapKay][holder] = null;\n        delete this[mapKay][holder];\n      }\n    });\n    this.eventMap[holder].next({ type: '' });\n    this.eventMap[holder].complete();\n    this.eventMap[holder] = null;\n    delete this.eventMap[holder];\n    this.editorMap[holder] = null;\n    delete this.editorMap[holder];\n  }\n\n  /**\n   * Call this to destroy all subscriptions within the service\n   */\n  public destroy() {\n    Object.keys(this.editorMap).forEach(key => {\n      this.destroyInstance(key);\n    });\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * This internal handler calls the `EditorJS` instance save outside of the\n   * Angular zone, this means it will not trigger change detection\n   * @param holder The holder ID for the `EditorJS` instance\n   * @param editor The `EditorJS` instance\n   * @param blocks The {Block} items to render\n   */\n  private saveHandler(holder: string, editor: EditorJS) {\n    this.zone.runOutsideAngular(() => {\n      editor.saver.save().then(data => {\n        this.zone.run(() => {\n          this.blocksMap[holder].next(data.blocks);\n        });\n      });\n    });\n  }\n\n  /**\n   * This internal handler calls the `EditorJS` instance clear outside of the\n   * Angular zone, this means it will not trigger change detection\n   * @param holder The holder ID for the `EditorJS` instance\n   * @param editor The `EditorJS` instance\n   * @param blocks The {Block} items to render\n   */\n  private clearHandler(holder: string, editor: EditorJS) {\n    this.zone.runOutsideAngular(() => {\n      editor.blocks.clear();\n      this.zone.run(() => {\n        this.blocksMap[holder].next([]);\n        this.changeMap[holder].next(Date.now());\n      });\n    });\n  }\n\n  /**\n   * This internal handler calls the `EditorJS` instance render outside of the\n   * Angular zone, this means it will not trigger change detection\n   * @param holder The holder ID for the `EditorJS` instance\n   * @param editor The `EditorJS` instance\n   * @param blocks The {Block} items to render\n   */\n  private updateHandler(holder: string, editor: EditorJS, blocks: Block[]) {\n    if (!blocks) {\n      return;\n    }\n    this.zone.runOutsideAngular(() => {\n      editor.blocks.render({\n        time: Date.now(),\n        version: this.editorJs.version,\n        blocks\n      });\n      this.zone.run(() => {\n        this.blocksMap[holder].next(blocks);\n        this.changeMap[holder].next(Date.now());\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSModule.html":{"url":"modules/NgxEditorJSModule.html","title":"module - NgxEditorJSModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\n\nEditorJSBaseComponent\n\nEditorJSBaseComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nEditorJSBaseComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nEditorJSBaseComponent \n\nEditorJSBaseComponent \n\nEditorJSBaseComponent  -->\n\nNgxEditorJSModule->EditorJSBaseComponent \n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorJSInstanceService\n\nNgxEditorJSInstanceService\n\nNgxEditorJSModule -->\n\nNgxEditorJSInstanceService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\nNgxEditorJSModule -->\n\nNgxEditorJSPluginService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The @tinynodes/ngx-editorjs module provides a collection of features to allow\nany Angular app to use and control an EditorJS instance\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application.\nThe forRoot method takes an optional NgxEditorJSConfig config, this will provide a\ndefault instance.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EditorJSBaseComponent\n                        \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSInstanceService\n                        \n                        \n                            NgxEditorJSPluginService\n                        \n                        \n                            NgxEditorJSService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EditorJSBaseComponent\n                        \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:62\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule, MatInputModule } from '@angular/material';\nimport EditorJS from '@editorjs/editorjs';\nimport { createModuleConfig } from './config/module-config';\nimport { EditorJSBaseComponent } from './containers/base/container.class';\nimport { NgxEditorJSMatFieldComponent } from './containers/editorjs-mat-field/editorjs-mat-field.component';\nimport { NgxEditorJSComponent } from './containers/editorjs/editorjs.component';\nimport { NgxEditorJSDirective } from './directives/ngx-editorjs.directive';\nimport { EditorJSInstance, EDITORJS_MODULE_IMPORT, NgxEditorJSInstanceService } from './services/editorjs-injector';\nimport { NgxEditorJSService } from './services/editorjs.service';\nimport { NgxEditorJSPluginService } from './services/plugins.service';\nimport { FOR_ROOT_OPTIONS_TOKEN, NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from './types/config';\n\n/**\n * Factory function to return the EditorJS base class\n */\nexport function createEditorJSInstance(editorjs: any) {\n  return editorjs;\n}\n\n/**\n * The `@tinynodes/ngx-editorjs` module provides a collection of features to allow\n * any Angular app to use and control an [EditorJS](http://editorjs.io) instance\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application.\n * The `forRoot` method takes an optional `NgxEditorJSConfig` config, this will provide a\n * default instance.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, MatInputModule, MatFormFieldModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective, EditorJSBaseComponent],\n  exports: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective, EditorJSBaseComponent],\n  providers: [\n    NgxEditorJSService,\n    NgxEditorJSPluginService,\n    NgxEditorJSInstanceService,\n    {\n      provide: EDITORJS_MODULE_IMPORT,\n      useValue: EditorJS\n    },\n    {\n      provide: EditorJSInstance,\n      useFactory: createEditorJSInstance,\n      deps: [EDITORJS_MODULE_IMPORT]\n    }\n  ]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NGX_EDITORJS_CONFIG,\n          useFactory: createModuleConfig,\n          deps: [FOR_ROOT_OPTIONS_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSPluginService.html":{"url":"injectables/NgxEditorJSPluginService.html","title":"injectable - NgxEditorJSPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/plugins.service.ts\n        \n\n            \n                Description\n            \n            \n                The plugin service provides a singleton to store all plugins injected into the application\nand makes them available for all instances of EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getTools\n                            \n                            \n                                    Public\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    plugins\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userPlugins: PluginConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:15\n                            \n                        \n\n                \n                    \n                            When the class is initialized the initial plugins and any user plugins\nwill be passed in and merged and stored in the config map\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userPlugins\n                                                  \n                                                        \n                                                                        PluginConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                User plugins injected into the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(key: string, plugin: BasePlugin)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a plugin to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the map to store the plugin\n\n                                    \n                                \n                                \n                                    plugin\n                                    \n                                                BasePlugin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The plugin instance to add to the service\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:49\n                \n            \n\n\n            \n                \n                    Get a single plugin from the map\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BasePlugin\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTools(exclude: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:64\n                \n            \n\n\n            \n                \n                    Returns a map of tools to be initialized by the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    exclude\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        Optional array of keys to exclude from the map\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ToolSettingsMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:40\n                \n            \n\n\n            \n                \n                    Remove a plugin from the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        plugins\n                    \n                \n\n                \n                    \n                        getplugins()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/services/plugins.service.ts:56\n                                \n                            \n                    \n                        \n                                Returns a map of all the plugins registered with this service\n\n\n                                \n                                    Returns :         PluginConfig\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BasePlugin, PluginConfig, ToolSettingsMap, UserPlugins } from '../types/plugins';\n\n/**\n * The plugin service provides a singleton to store all plugins injected into the application\n * and makes them available for all instances of `EditorJS`\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSPluginService {\n  /**\n   * Object map of the plugin configurations\n   */\n  private pluginsMap: PluginConfig = {};\n\n  /**\n   * When the class is initialized the initial plugins and any user plugins\n   * will be passed in and merged and stored in the config map\n   * @param initialPlugins Default plugins produced by the module\n   * @param userPlugins User plugins injected into the application\n   */\n  constructor(@Inject(UserPlugins) userPlugins: PluginConfig) {\n    Object.entries({ ...userPlugins }).forEach(([key, tool]) => this.add(key, tool));\n  }\n\n  /**\n   * Add a plugin to the store\n   * @param key The key for the map to store the plugin\n   * @param plugin The plugin instance to add to the service\n   */\n  public add(key: string, plugin: BasePlugin) {\n    this.pluginsMap[key] = plugin;\n  }\n\n  /**\n   * Remove a plugin from the store\n   * @param key\n   */\n  public remove(key: string) {\n    this.pluginsMap[key] = null;\n    delete this.pluginsMap[key];\n  }\n\n  /**\n   * Get a single plugin from the map\n   * @param name\n   */\n  public get(key: string): BasePlugin {\n    return this.pluginsMap[key];\n  }\n\n  /**\n   * Returns a map of all the plugins registered with this service\n   */\n  public get plugins(): PluginConfig {\n    return this.pluginsMap;\n  }\n\n  /**\n   * Returns a map of tools to be initialized by the editor\n   * @param exclude Optional array of keys to exclude from the map\n   */\n  public getTools(exclude: string[] = []): ToolSettingsMap {\n    return Object.entries(this.pluginsMap)\n      .filter(([key]) => {\n        return !exclude.includes(key);\n      })\n      .reduce((finalTools, [key, plugin]) => {\n        if (plugin.shortcut) {\n          return {\n            [key]: {\n              class: plugin.plugin(),\n              shortcut: plugin.shortcut()\n            },\n            ...finalTools\n          };\n        } else {\n          return { [key]: plugin.plugin(), ...finalTools };\n        }\n      }, {});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSService.html":{"url":"injectables/NgxEditorJSService.html","title":"injectable - NgxEditorJSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSService provides control EditorJS instances via Angular.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                    Async\n                                createEditor\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                getBlocks\n                            \n                            \n                                    Public\n                                getChanged\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                hasChanged\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editorActions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgxEditorJSConfig, editorService: NgxEditorJSInstanceService, plugins: NgxEditorJSPluginService)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:90\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSInstanceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        NgxEditorJSPluginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:205\n                \n            \n\n\n            \n                \n                    Clears all blocks from an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(options: CreateEditorJSOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:128\n                \n            \n\n\n            \n                \n                    This method creates a new EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CreateEditorJSOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:215\n                \n            \n\n\n            \n                \n                    Destroy the EditorJS instance\nIt also calls the maps and sets their values back to their defaults and then\ncompletes and destroys them\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBlocks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBlocks(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:151\n                \n            \n\n\n            \n                \n                    Get an observable of the blocks for an EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getChanged(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:169\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current timestamp of the last change\nthis can be subscribed to before calling the createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:143\n                \n            \n\n\n            \n                \n                    Get an EditorJS instance\nSee the EditorJS API docs for more details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasChanged(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:177\n                \n            \n\n\n            \n                \n                    Check to see if the EditorJS instance has changed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the holder of the instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(holder: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:160\n                \n            \n\n\n            \n                \n                    Returns an Observable of the current ready state, this can be subscribed to before calling\nthe createEditor method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    holder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:197\n                \n            \n\n\n            \n                \n                    Calls the EditorJS save method which returns an OutputData object.\nFrom this the service updates the blocks map and change map values\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:187\n                \n            \n\n\n            \n                \n                    This method updates the blocks within the EditorJS instance.\nIf there is no instance of that name it will throw an error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editorActions\n                    \n                \n\n                \n                    \n                        geteditorActions()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:88\n                                \n                            \n                    \n                        \n                                Editor action stream\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport EditorJS, { EditorConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Block } from '../types/blocks';\nimport { EditorJSConfig, NgxEditorJSConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { NgxEditorJSInstanceService } from './editorjs-injector';\nimport { NgxEditorJSPluginService } from './plugins.service';\n\n/**\n * Interface describing an action to trigger EditorJS\n */\nexport interface EditorJSAction {\n  /**\n   * The name of the action to trigger\n   */\n  action: string;\n\n  /**\n   * The payload for the action \n   */\n  payload?: T;\n}\n\n/**\n * Supported actions by the API\n */\nexport enum EditorJSActionTypes {\n  /**\n   * Create a new editor\n   */\n  CreateEditor = 'createEditor',\n\n  /**\n   * Update an editor instance\n   */\n  UpdateEditor = 'updateEditor',\n  /**\n   * Clear a editor instance\n   */\n  ClearEditor = 'clearEditor',\n  /**\n   * Destroy an Editor instance\n   */\n  DestroyEditor = 'destroyEditor',\n  /**\n   * Save the blocks in an editor instance\n   */\n  SaveEditor = 'saveEditor'\n}\n\n/**\n * EditorJS options\n */\nexport interface CreateEditorJSOptions {\n  /**\n   * Configuration\n   */\n  config: EditorConfig;\n  /**\n   * Tools to include, Optional - if not set all tools will be used\n   */\n  includeTools?: string[];\n  /**\n   * Autosave on change, is set to false\n   */\n  autoSave?: boolean;\n}\n\n/**\n * The NgxEditorJSService provides control EditorJS instances via Angular.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  private onDestroy$ = new Subject();\n  /**\n   * Internal editor action state\n   */\n  private readonly editorActions$ = new BehaviorSubject({\n    action: ''\n  });\n\n  /**\n   * Editor action stream\n   */\n  public get editorActions() {\n    return this.editorActions$.pipe(filter(action => action.action !== ''));\n  }\n\n  constructor(\n    @Inject(NGX_EDITORJS_CONFIG) private config: NgxEditorJSConfig,\n    private readonly editorService: NgxEditorJSInstanceService,\n    private readonly plugins: NgxEditorJSPluginService\n  ) {\n    this.editorActions.pipe(takeUntil(this.onDestroy$)).subscribe(editorAction => {\n      switch (editorAction.action) {\n        case EditorJSActionTypes.CreateEditor: {\n          return this.createEditor(editorAction.payload);\n        }\n        case EditorJSActionTypes.ClearEditor: {\n          return this.clear(editorAction.payload);\n        }\n        case EditorJSActionTypes.DestroyEditor: {\n          return this.destroy(editorAction.payload);\n        }\n        case EditorJSActionTypes.SaveEditor: {\n          return this.save(editorAction.payload);\n        }\n        case EditorJSActionTypes.UpdateEditor: {\n          return this.update(editorAction.payload);\n        }\n        default: {\n          return;\n        }\n      }\n    });\n  }\n\n  /**\n   * This method creates a new EditorJS instance\n   * @param holder The ID of the holder of the instance\n   * @param blocks Optional initial set of blocks to render in the editor\n   * @param excludeTools String array of keys to not include with this editor\n   * @param autoSave When an instance changes we update the block map, set to false if you want to disable\n   */\n  public async createEditor(options: CreateEditorJSOptions): Promise {\n    const editorConfig: EditorConfig = {\n      ...this.config.editorjs,\n      ...options.config,\n      tools: this.plugins.getTools(options.includeTools)\n    };\n\n    await this.editorService.createInstance({ editorConfig });\n  }\n\n  /**\n   * Get an `EditorJS` instance\n   * See the [EditorJS API](https://editorjs.io/api) docs for more details\n   * @param holder The ID of the holder of the instance\n   */\n  public getEditor(holder: string): Observable {\n    return this.editorService.getInstance(holder).pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Get an observable of the blocks for an `EditorJS` instance\n   * @param holder The ID of the holder of the instance\n   */\n  public getBlocks(holder: string): Observable {\n    return this.editorService.getBlocks(holder);\n  }\n\n  /**\n   * Returns an `Observable` of the current ready state, this can be subscribed to before calling\n   * the `createEditor` method\n   * @param holder\n   */\n  public isReady(holder: string): Observable {\n    return this.editorService.getReady(holder);\n  }\n\n  /**\n   * Returns an `Observable` of the current timestamp of the last change\n   * this can be subscribed to before calling the `createEditor` method\n   * @param holder\n   */\n  public getChanged(holder: string): Observable {\n    return this.editorService.getChanged(holder);\n  }\n\n  /**\n   * Check to see if the `EditorJS` instance has changed\n   * @param holder The ID of the holder of the instance\n   */\n  public hasChanged(holder: string) {\n    this.editorService.onChange(holder);\n  }\n\n  /**\n   * This method updates the blocks within the `EditorJS` instance.\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   * @param blocks The array of `Block` elements to render\n   */\n  public update({ holder, blocks }: { holder: string; blocks: Block[] }) {\n    this.editorService.update(holder, blocks);\n  }\n\n  /**\n   * Calls the `EditorJS` save method which returns an `OutputData` object.\n   * From this the service updates the blocks map and change map values\n   * If there is no instance of that name it will throw an error.\n   * @param holder The ID of the holder of the instance\n   */\n  public save({ holder }: { holder: string }): void {\n    this.editorService.save(holder);\n  }\n\n  /**\n   * Clears all blocks from an `EditorJS instance`\n   * @param holder The ID of the holder of the instance\n   */\n  public clear({ holder }: { holder: string }): void {\n    this.editorService.clear(holder);\n  }\n\n  /**\n   * Destroy the `EditorJS` instance\n   * It also calls the maps and sets their values back to their defaults and then\n   * completes and destroys them\n   * @param holder The ID of the holder of the instance\n   */\n  public destroy({ holder }: { holder: string }): void {\n    this.editorService.destroyInstance(holder);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsDemoModule.html":{"url":"modules/NgxEditorjsDemoModule.html","title":"module - NgxEditorjsDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsDemoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\n\nFormContainerComponent\n\nFormContainerComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nFormContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoHomeComponent->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSDemoTagComponent\n\nNgxEditorJSDemoTagComponent\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoTagComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nFormContainerComponent \n\nFormContainerComponent \n\nFormContainerComponent  -->\n\nNgxEditorjsDemoModule->FormContainerComponent \n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nNgxEditorjsDemoModule -->\n\nMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxEditorjsDemoModule -->\n\nNgxTinynodesCoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsDemoModule -->\n\nPluginCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsDemoModule -->\n\nPluginHeaderModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsDemoModule -->\n\nPluginLinkModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsDemoModule -->\n\nPluginListModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsDemoModule -->\n\nPluginMarkerModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsDemoModule -->\n\nPluginParagraphModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nPluginSimpleImageModule->NgxEditorjsDemoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FormContainerComponent\n                        \n                        \n                            NgxEditorJSDemoHomeComponent\n                        \n                        \n                            NgxEditorJSDemoTagComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            FormContainerComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                        \n                            NgxEditorJSModule\n                        \n                        \n                            NgxTinynodesCoreModule\n                        \n                        \n                            PageStoreModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormContainerComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatGridListModule,\n  MatExpansionModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatChipsModule,\n  MatBadgeModule,\n  MatIconModule\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { NgxEditorJSModule, UserPlugins } from '@tinynodes/ngx-editorjs';\nimport {\n  PluginCodeModule,\n  PluginHeaderModule,\n  PluginLinkModule,\n  PluginListModule,\n  PluginMarkerModule,\n  PluginParagraphModule,\n  PluginSimpleImageModule\n} from '@tinynodes/ngx-editorjs-plugins';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { createNgxEditorJSDemoTools } from './config';\nimport { PageContainerComponent } from './containers/page-container/page-container.component';\nimport { ngxEditorjsDemoRoutes } from './ngx-editorjs-demo.routes';\nimport { PageStoreModule } from './store/pages/pages.module';\nimport { MaterialModule } from 'apps/ngx-tinynodes/src/app/material.module';\nimport { NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core/src';\nimport { FormContainerComponent } from './containers/form-container/form-container.component';\nimport { NgxEditorJSDemoHomeComponent } from './containers/home-container/home-container.component';\nimport { NgxEditorJSDemoTagComponent } from './components/tag-component/tag.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ngxEditorjsDemoRoutes),\n    MarkdownModule.forChild(),\n    ReactiveFormsModule,\n    PageStoreModule,\n    NgxEditorJSModule,\n    PluginHeaderModule,\n    PluginParagraphModule,\n    PluginListModule,\n    PluginCodeModule,\n    PluginSimpleImageModule,\n    PluginLinkModule,\n    PluginMarkerModule,\n    MaterialModule,\n    MatCardModule,\n    MatButtonModule,\n    NgxTinynodesCoreModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatIconModule\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createNgxEditorJSDemoTools\n    }\n  ],\n  declarations: [\n    PageContainerComponent,\n    FormContainerComponent,\n    NgxEditorJSDemoHomeComponent,\n    NgxEditorJSDemoTagComponent\n  ],\n  exports: [PageStoreModule, PageContainerComponent, FormContainerComponent],\n  entryComponents: [PageContainerComponent, FormContainerComponent]\n})\nexport class NgxEditorjsDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsNgrxModule.html":{"url":"modules/NgxEditorjsNgrxModule.html","title":"module - NgxEditorjsNgrxModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsNgrxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsNgrxModule\n\n\n\ncluster_NgxEditorjsNgrxModule_imports\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\n\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule -->\n\nNgxEditorJSModule->NgxEditorjsNgrxModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/ngx-editorjs-ngrx.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Warning: This module is current in development and not yet published\nThis module provides a set of NGRX Effects that allow you to control\nan EditorJS instance via store actions.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\n\n/**\n * **Warning**: This module is current in development and not yet published\n *\n * This module provides a set of [NGRX Effects](https://ngrx.io/guide/effects) that allow you to control\n * an `EditorJS` instance via store actions.\n */\n@NgModule({\n  imports: [CommonModule, NgxEditorJSModule, EffectsModule.forFeature([])]\n})\nexport class NgxEditorjsNgrxModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsPluginsModule.html":{"url":"modules/NgxEditorjsPluginsModule.html","title":"module - NgxEditorjsPluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsPluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/ngx-editorjs-plugins.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The NgxEditorjsPluginsModule provides several additional modules\nthat provide a way to easily plug in block and inline tools for EditorJS.\nImporting NgxEditorjsPluginsModule will include all modules, while it\nis also possible to import each individual module as required.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PluginCodeModule } from './plugins/code/code.module';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginImageModule } from './plugins/image/image.module';\nimport { PluginLinkModule } from './plugins/link/link.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginSimpleImageModule } from './plugins/simple-image/simple-image.module';\n\n/**\n * The `NgxEditorjsPluginsModule` provides several additional modules\n * that provide a way to easily plug in block and inline tools for `EditorJS`.\n *\n * Importing `NgxEditorjsPluginsModule` will include all modules, while it\n * is also possible to import each individual module as required.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule\n  ],\n  exports: [\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule\n  ]\n})\nexport class NgxEditorjsPluginsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxHideableHeaderDemoModule.html":{"url":"modules/NgxHideableHeaderDemoModule.html","title":"module - NgxHideableHeaderDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxHideableHeaderDemoModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-hideable-header-demo/src/lib/ngx-hideable-header-demo.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nexport const ngxHideableHeaderDemoRoutes: Route[] = [];\n\n@NgModule({\n  imports: [CommonModule, RouterModule]\n})\nexport class NgxHideableHeaderDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesCoreMaterialModule.html":{"url":"modules/NgxTinynodesCoreMaterialModule.html","title":"module - NgxTinynodesCoreMaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesCoreMaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/ngx-tinynodes-core-material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n  MatGridListModule,\n  MatCardModule,\n  MatExpansionModule,\n  MatListModule,\n  MatButtonModule\n} from '@angular/material';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule, MatGridListModule, MatCardModule, MatExpansionModule, MatListModule, MatButtonModule],\n  exports: [CommonModule, MatGridListModule, MatCardModule, MatExpansionModule, MatListModule, MatButtonModule]\n})\nexport class NgxTinynodesCoreMaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesCoreModule.html":{"url":"modules/NgxTinynodesCoreModule.html","title":"module - NgxTinynodesCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesCoreModule\n\n\n\ncluster_NgxTinynodesCoreModule_declarations\n\n\n\ncluster_NgxTinynodesCoreModule_imports\n\n\n\ncluster_NgxTinynodesCoreModule_exports\n\n\n\n\nNgxEditorJSDemoInfoComponent\n\nNgxEditorJSDemoInfoComponent\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule -->\n\nNgxEditorJSDemoInfoComponent->NgxTinynodesCoreModule\n\n\n\n\n\nApplicationDataModule \n\nApplicationDataModule \n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\n\n\nNgxEditorJSDemoInfoComponent \n\nNgxEditorJSDemoInfoComponent \n\nNgxEditorJSDemoInfoComponent  -->\n\nNgxTinynodesCoreModule->NgxEditorJSDemoInfoComponent \n\n\n\n\n\nNgxTinynodesCoreMaterialModule \n\nNgxTinynodesCoreMaterialModule \n\nNgxTinynodesCoreMaterialModule  -->\n\nNgxTinynodesCoreModule->NgxTinynodesCoreMaterialModule \n\n\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\n\n\nNgxTinynodesCoreMaterialModule\n\nNgxTinynodesCoreMaterialModule\n\nNgxTinynodesCoreModule -->\n\nNgxTinynodesCoreMaterialModule->NgxTinynodesCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/ngx-tinynodes-core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module provides all the core features across the Tinynodes site\nthat need shared.\nThis includes the ApplicationDataModule which provides state and data loading via\nthe AppService\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSDemoInfoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApplicationDataModule\n                        \n                        \n                            NgxTinynodesCoreMaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationDataModule\n                        \n                        \n                            NgxEditorJSDemoInfoComponent\n                        \n                        \n                            NgxTinynodesCoreMaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApplicationDataModule } from './stores/app/application.module';\nimport { NgxEditorJSDemoInfoComponent } from './components/demo-info/demo-info.component';\nimport { NgxTinynodesCoreMaterialModule } from './ngx-tinynodes-core-material.module';\n/**\n * This module provides all the core features across the Tinynodes site\n * that need shared.\n *\n * This includes the `ApplicationDataModule` which provides state and data loading via\n * the `AppService`\n */\n@NgModule({\n  imports: [ApplicationDataModule, NgxTinynodesCoreMaterialModule],\n  declarations: [NgxEditorJSDemoInfoComponent],\n  exports: [ApplicationDataModule, NgxEditorJSDemoInfoComponent, NgxTinynodesCoreMaterialModule]\n})\nexport class NgxTinynodesCoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotReady.html":{"url":"classes/NotReady.html","title":"class - NotReady","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotReady\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.NotReady\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        id\n                                \n                                \n                                        pageTags\n                                \n                                \n                                        pageTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:     PageBlock[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PageBlock[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTags\n                                    \n                                \n                                \n                                    \n                                        pageTags:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTitle\n                                    \n                                \n                                \n                                    \n                                        pageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageBlock.html":{"url":"interfaces/PageBlock.html","title":"interface - PageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageContainerComponent.html":{"url":"components/PageContainerComponent.html","title":"component - PageContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container component provides the main routable page for loading\nthe ngx-editorjs-demo\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-page-container\n            \n\n            \n                styleUrls\n                page-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                page-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                holder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    blocks\n                                \n                                \n                                    menu\n                                \n                                \n                                    pages\n                                \n                                \n                                    asJSON\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editor: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:35\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editor\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:82\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:114\n                \n            \n\n\n            \n                \n                    After the content has init overide the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:89\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:75\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            holder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs-demo'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:30\n                            \n                        \n\n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n\n                \n                    \n                        getblocks()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:54\n                                \n                            \n                    \n                        \n                                Get the blocks for the page\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:61\n                                \n                            \n                    \n                        \n                                Get the page links\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:68\n                                \n                            \n                    \n                        \n                                Get a list of pages\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        asJSON\n                    \n                \n\n                \n                    \n                        getasJSON()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:102\n                                \n                            \n                    \n                        \n                                Get the blocks data as formatted JSON\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { Block, NgxEditorJSService } from '@tinynodes/ngx-editorjs/src';\nimport { AppService } from '@tinynodes/ngx-tinynodes-core/src';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, takeUntil, tap, pluck, filter, take } from 'rxjs/operators';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\nimport { MenuGroup } from 'apps/ngx-tinynodes/src/app/core/types/app';\nimport { NgxEditorJSDemo } from '@tinynodes/ngx-tinynodes-core/src/lib/stores/app/application.model';\n\n/**\n * The Page Container component provides the main routable page for loading\n * the `ngx-editorjs-demo`\n */\n@Component({\n  selector: 'ngx-page-container',\n  templateUrl: 'page-container.component.html',\n  styleUrls: ['page-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PageContainerComponent implements AfterContentInit {\n  /**\n   * Internal onDestroy$ subject\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * The holder ID for this demo\n   */\n  public holder = 'ngx-editorjs-demo';\n\n  /**\n   * Links for the page\n   */\n  private menu$ = new BehaviorSubject(undefined);\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editor The Editor service\n   * @param cd The change detection ref\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private app: AppService,\n    private readonly editor: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Get the blocks for the page\n   */\n  public get blocks() {\n    return this.editor.getBlocks(this.holder);\n  }\n\n  /**\n   * Get the page links\n   */\n  public get menu() {\n    return this.menu$;\n  }\n\n  /**\n   * Get a list of pages\n   */\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editor.save({ holder: this.holder });\n  }\n\n  /**\n   * Clear the editor\n   */\n  public clear() {\n    this.editor.clear({ holder: this.holder });\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app\n      .getDemoData('ngx-editorjs-demo')\n      .pipe(take(1))\n      .subscribe((data: NgxEditorJSDemo) => {\n        this.menu$.next(data.links);\n        this.editor.update({ holder: this.holder, blocks: data.blocks });\n      });\n  }\n\n  /**\n   * Get the blocks data as formatted JSON\n   */\n  public get asJSON() {\n    return this.blocks.pipe(\n      map(blocks => {\n        return JSON.stringify(blocks, null, 4);\n      }),\n      tap(() => this.cd.markForCheck())\n    );\n  }\n\n  /**\n   * After the content has init overide the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A single page demo of the EditorJS component\n    \n    \n      \n    \n\n    \n      \n        Demo\n        Save\n        Clear\n        Reset\n      \n      \n    \n    \n      \n        \n          Output\n          Data from the EditorJS instance\n        \n        \n          {{ asJSON | async }}\n        \n      \n    \n     \n  \n\n\n\n  \n    Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can just start\n    typing.\n  \n  \n    The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks, list with\n    &lt;ol> / &lt;li> and &lt;code> blocks.\n  \n\n  \n    You can also paste in an &lt;img> url into the editor and it will start the SimpleImage plugin which provides\n    an &lt;img> tag pointing to the image, and with some additional controls.\n  \n  \n    When saving check the output panel below to see the data results.\n  \n\n\n    \n\n    \n                \n                    page-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A single page demo of the EditorJS component                                    Demo        Save        Clear        Reset                                            Output          Data from the EditorJS instance                          {{ asJSON | async }}                               Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can just start    typing.        The default block is a  paragraph, you can also add header  -  blocks, list with     /  and  blocks.        You can also paste in an  url into the editor and it will start the SimpleImage plugin which provides    an  tag pointing to the image, and with some additional controls.        When saving check the output panel below to see the data results.  '\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PageStoreModule.html":{"url":"modules/PageStoreModule.html","title":"module - PageStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    PageStoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nPagesQuery\n\nPagesQuery\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.module.ts\n        \n\n\n        \n            Description\n        \n        \n            WARNING: This module is currently in development\nInternal page store module, this will allow the ngx-editorjs-demo to support the creation of multiple pages\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PagesQuery\n                        \n                        \n                            PagesService\n                        \n                        \n                            PagesStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PagesQuery } from './pages.query';\nimport { PagesService } from './pages.service';\nimport { PagesStore } from './pages.store';\n\n/**\n *\n * **WARNING**: This module is currently in development\n *\n * Internal page store module, this will allow the `ngx-editorjs-demo` to support the creation of multiple pages\n */\n@NgModule({\n  providers: [PagesStore, PagesQuery, PagesService]\n})\nexport class PageStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesQuery.html":{"url":"injectables/PagesQuery.html","title":"injectable - PagesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n        \n\n\n            \n                Extends\n            \n            \n                    QueryEntity\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { Page } from './pages.models';\nimport { PagesState, PagesStore } from './pages.store';\n\n@Injectable()\nexport class PagesQuery extends QueryEntity {\n  constructor(protected store: PagesStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesService.html":{"url":"injectables/PagesService.html","title":"injectable - PagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n        \n\n            \n                Description\n            \n            \n                This page service provides a way to save and render pages\nvia the store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                query\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addBlock\n                            \n                            \n                                delete\n                            \n                            \n                                removeBlock\n                            \n                            \n                                setBlocks\n                            \n                            \n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: PagesQuery, store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        PagesQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(page?: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a page to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional page to be added\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addBlock\n                        \n                        \n                    \n                \n            \n            \n                \naddBlock(pageId: ID, block: Block)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                Block\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(pageId: ID)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:56\n                \n            \n\n\n            \n                \n                    Removes a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the page to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBlock\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBlock(pageId: ID, block: PageBlock)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                PageBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBlocks\n                        \n                        \n                    \n                \n            \n            \n                \nsetBlocks(pageId: ID | any, blocks: PageBlock[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    blocks\n                                    \n                                            PageBlock[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upsert\n                        \n                        \n                    \n                \n            \n            \n                \nupsert(page: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:47\n                \n            \n\n\n            \n                \n                    Updates or creates a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The page to be updated, if not available it will be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesQuery\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesStore\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:24\n                                \n                            \n                    \n                        \n                                Get an observable of all the pages in the store\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { arrayAdd, arrayRemove, guid, ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\nimport { Observable } from 'rxjs';\nimport { Page, PageBlock } from './pages.models';\nimport { PagesQuery } from './pages.query';\nimport { PagesStore } from './pages.store';\n\n/**\n * This page service provides a way to save and render pages\n * via the store\n */\n@Injectable()\nexport class PagesService {\n  private pages$: Observable;\n\n  constructor(public readonly query: PagesQuery, public readonly store: PagesStore) {\n    this.pages$ = this.query.selectAll();\n  }\n\n  /**\n   * Get an observable of all the pages in the store\n   */\n  get pages(): Observable {\n    return this.pages$;\n  }\n\n  /**\n   * Add a page to the store\n   * @param page An optional page to be added\n   */\n  add(page?: Page) {\n    const newPage: Page = {\n      id: guid(),\n      pageTitle: 'New Page',\n      pageTags: [],\n      blocks: [],\n      ...page\n    };\n    this.store.add(newPage);\n  }\n\n  /**\n   * Updates or creates a page\n   * @param page The page to be updated, if not available it will be created\n   */\n  upsert(page: Page) {\n    if (!page.id) page.id = guid();\n    this.store.upsert(page.id, page);\n  }\n\n  /**\n   * Removes a page\n   * @param pageId The ID of the page to be removed\n   */\n  delete(pageId: ID) {\n    this.store.remove(pageId);\n  }\n\n  setBlocks(pageId: ID | any, blocks: PageBlock[]) {\n    this.store.update(pageId, { blocks });\n  }\n\n  addBlock(pageId: ID, block: Block) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayAdd(entity.blocks, { id: guid(), ...block })\n    }));\n  }\n\n  removeBlock(pageId: ID, block: PageBlock) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayRemove(entity.blocks, block.id)\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagesState.html":{"url":"interfaces/PagesState.html","title":"interface - PagesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesStore.html":{"url":"injectables/PagesStore.html","title":"injectable - PagesStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityStore\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paragraph.html":{"url":"interfaces/Paragraph.html","title":"interface - Paragraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a paragraph block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The paragraph text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParagraphBlock.html":{"url":"interfaces/ParagraphBlock.html","title":"interface - ParagraphBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginCode.html":{"url":"injectables/PluginCode.html","title":"injectable - PluginCode","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginCode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the ToolSettings for this plugin\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Code from '@editorjs/code';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginCode implements BasePlugin {\n  /**\n   * Returns the `ToolSettings` for this plugin\n   */\n  public plugin(): ToolSettings {\n    return Code;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginCodeModule.html":{"url":"modules/PluginCodeModule.html","title":"module - PluginCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginCodeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\n\nPluginCode\n\nPluginCode\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginCode\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginCode } from './code.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/code) for API details\n */\n@NgModule({\n  providers: [PluginCode]\n})\nexport class PluginCodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig.html":{"url":"interfaces/PluginConfig.html","title":"interface - PluginConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig-1.html":{"url":"interfaces/PluginConfig-1.html","title":"interface - PluginConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginHeader.html":{"url":"injectables/PluginHeader.html","title":"injectable - PluginHeader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Header from '@editorjs/header';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginHeader implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Header;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginHeaderModule.html":{"url":"modules/PluginHeaderModule.html","title":"module - PluginHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\n\nPluginHeader\n\nPluginHeader\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS header block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginHeader\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginHeader } from './header.plugin';\n\n/**\n * A module that provides the default `EditorJS` header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [PluginHeader]\n})\nexport class PluginHeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginImage.html":{"url":"injectables/PluginImage.html","title":"injectable - PluginImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Image from '@editorjs/image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Image;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginImageModule.html":{"url":"modules/PluginImageModule.html","title":"module - PluginImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\n\nPluginImage\n\nPluginImage\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginImage } from './image.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginImage]\n})\nexport class PluginImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginLink.html":{"url":"injectables/PluginLink.html","title":"injectable - PluginLink","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Link from '@editorjs/link';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginLink implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Link;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginLinkModule.html":{"url":"modules/PluginLinkModule.html","title":"module - PluginLinkModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginLinkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\n\nPluginLink\n\nPluginLink\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginLink\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginLink } from './link.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/link) for API details\n */\n@NgModule({\n  providers: [PluginLink]\n})\nexport class PluginLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginList.html":{"url":"injectables/PluginList.html","title":"injectable - PluginList","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  and  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport List from '@editorjs/list';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` and `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginList implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return List;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginListModule.html":{"url":"modules/PluginListModule.html","title":"module - PluginListModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\n\nPluginList\n\nPluginList\n\n\n\nPluginListModule\n\nPluginListModule\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  and  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginList\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginList } from './list.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` and `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/list) for API details\n */\n@NgModule({\n  providers: [PluginList]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginMarker.html":{"url":"injectables/PluginMarker.html","title":"injectable - PluginMarker","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginMarker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a inline marker tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                            \n                                    Public\n                                shortcut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shortcut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shortcut()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:20\n                \n            \n\n\n            \n                \n                    Returns the plugin shortcut\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Marker from '@editorjs/marker';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a inline marker tool for `EditorJS`\n */\n@Injectable()\nexport class PluginMarker implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Marker;\n  }\n  /**\n   * Returns the plugin shortcut\n   */\n  public shortcut() {\n    return 'CMD+SHIFT+M';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginMarkerModule.html":{"url":"modules/PluginMarkerModule.html","title":"module - PluginMarkerModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginMarkerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\n\nPluginMarker\n\nPluginMarker\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS inline marker tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginMarker\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginMarker } from './marker.plugin';\n\n/**\n * A module that provides the default `EditorJS` inline marker tool.\n * See [the GitHub repo](https://github.com/editor-js/marker) for API details\n */\n@NgModule({\n  providers: [PluginMarker]\n})\nexport class PluginMarkerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginParagraph.html":{"url":"injectables/PluginParagraph.html","title":"injectable - PluginParagraph","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginParagraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Paragraph from '@editorjs/paragraph';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for `EditorJS`\n */\n@Injectable()\nexport class PluginParagraph implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Paragraph;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginParagraphModule.html":{"url":"modules/PluginParagraphModule.html","title":"module - PluginParagraphModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginParagraph\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginParagraph } from './paragraph.plugin';\n\n/**\n * A module that provides the default `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [PluginParagraph]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginSimpleImage.html":{"url":"injectables/PluginSimpleImage.html","title":"injectable - PluginSimpleImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginSimpleImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the simple image tool for  block editor EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport SimpleImage from '@editorjs/simple-image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the simple image tool for `` block editor `EditorJS`\n */\n@Injectable()\nexport class PluginSimpleImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return SimpleImage;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginSimpleImageModule.html":{"url":"modules/PluginSimpleImageModule.html","title":"module - PluginSimpleImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginSimpleImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the simple image tools for EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginSimpleImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginSimpleImage } from './simple-image.plugin';\n\n/**\n * A module that provides the simple image tools for `EditorJS` `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginSimpleImage]\n})\nexport class PluginSimpleImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ready.html":{"url":"classes/Ready.html","title":"class - Ready","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ready\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.Ready\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadyMap.html":{"url":"interfaces/ReadyMap.html","title":"interface - ReadyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject of boolean values of the ready state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:46\n                            \n                        \n                \n                    \n                        A map key containing a {BehaviorSubject} of {boolean}\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * An event type for calling `EditorJS`\n */\nexport interface EventType {\n  type: string;\n  payload?: T;\n}\n\n/**\n * A map containing an event subject for an `EditorJS` instance\n */\nexport interface EventMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EventType}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing instances of `EditorJS`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {EditorJS}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `Block` elements from `EditorJS`\n */\nexport interface BlocksMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {Block[]}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `boolean` values of the ready state of `EditorJS`\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {boolean}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` of `number` which is the timestamp of the last `EditorJS` change\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a {BehaviorSubject} of {number}\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveEnd.html":{"url":"classes/SaveEnd.html","title":"class - SaveEnd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveEnd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.SaveEnd\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveStart.html":{"url":"classes/SaveStart.html","title":"class - SaveStart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveStart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : EditorJSActionTypes.SaveStart\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { OutputData } from '@editorjs/editorjs';\n\nexport enum EditorJSActionTypes {\n  SaveStart = '[ngx-editorjs] Start Save',\n  SaveEnd = '[ngx-editorjs] Start End',\n  NotReady = '[ngx-editorjs] Not Ready',\n  Ready = '[ngx-editorjs] Ready',\n  Changed = '[ngx-editorjs] Changed'\n}\n\nexport class SaveStart implements Action {\n  readonly type = EditorJSActionTypes.SaveStart;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class SaveEnd implements Action {\n  readonly type = EditorJSActionTypes.SaveEnd;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport class NotReady implements Action {\n  readonly type = EditorJSActionTypes.NotReady;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Ready implements Action {\n  readonly type = EditorJSActionTypes.Ready;\n  constructor(public payload: { holder: string }) {}\n}\n\nexport class Changed implements Action {\n  readonly type = EditorJSActionTypes.Changed;\n  constructor(public payload: { holder: string; data: OutputData }) {}\n}\n\nexport type NgxEditorJSActions = SaveStart | SaveEnd | NotReady | Ready | Changed;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tinynodes-sidebar\n            \n\n            \n                styleUrls\n                sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                openSourceMenu\n                            \n                            \n                                projectsMenu\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        openSourceMenu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectsMenu\n                    \n                \n                \n                    \n                        Type :         MenuGroup\n\n                    \n                \n                        \n                            \n                                    Defined in apps/ngx-tinynodes/src/app/components/sidebar-component/sidebar.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { MenuGroup } from '@tinynodes/ngx-tinynodes-core';\n\n@Component({\n  selector: 'tinynodes-sidebar',\n  templateUrl: 'sidebar.component.html',\n  styleUrls: ['sidebar.component.scss']\n})\nexport class SidebarComponent {\n  @Input()\n  projectsMenu: MenuGroup;\n\n  @Input()\n  openSourceMenu: MenuGroup;\n}\n\n    \n\n    \n        \n  {{ projectsMenu.title }}\n\n  {{ child.label }}\n\n\n\n  {{ openSourceMenu.title }}\n\n  {{ child.label }}\n -->\n\n    \n\n    \n                \n                    sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ projectsMenu.title }}  {{ child.label }}  {{ openSourceMenu.title }}  {{ child.label }} -->'\n    var COMPONENTS = [{'name': 'AppContainerComponent', 'selector': 'tinynodes-root'},{'name': 'EditorJSBaseComponent', 'selector': ''},{'name': 'FormContainerComponent', 'selector': 'ngx-form-container'},{'name': 'HomePageComponent', 'selector': 'tinynodes-home-page'},{'name': 'NavBarComponent', 'selector': 'tinynodes-nav-bar'},{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSDemoInfoComponent', 'selector': 'ngx-editorjs-demo-info'},{'name': 'NgxEditorJSDemoTagComponent', 'selector': 'ngx-editorjs-tag-component'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'},{'name': 'SidebarComponent', 'selector': 'tinynodes-sidebar'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestClass.html":{"url":"classes/TestClass.html","title":"class - TestClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/testing/shared.ts:5\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/testing/shared.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../lib/types/plugins';\nimport { EditorJSConfig } from '../lib/types/config';\n\nexport class TestClass {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockPlugin implements BasePlugin {\n  public plugin(): ToolSettings {\n    return { class: TestClass };\n  }\n  shortcut() {\n    return 'test-shortcut';\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  isReady: Promise;\n\n  constructor(private config: EditorJSConfig) {\n    this.version = 'test';\n\n    this.isReady = Promise.resolve();\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TinynodeDemos.html":{"url":"interfaces/TinynodeDemos.html","title":"interface - TinynodeDemos","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TinynodeDemos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demos on tinynodes\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ngx-editorjs-demo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ngx-editorjs-demo\n                                    \n                                \n                                \n                                    \n                                        ngx-editorjs-demo:         NgxEditorJSDemoData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NgxEditorJSDemoData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ngx-editorjs-demo data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup, MenuItem } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n\n  /**\n   * Links for this demo\n   */\n  links: MenuGroup;\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TinynodeDemos-1.html":{"url":"interfaces/TinynodeDemos-1.html","title":"interface - TinynodeDemos-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TinynodeDemos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n        \n\n            \n                Description\n            \n            \n                The demos on tinynodes\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ngx-editorjs-demo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ngx-editorjs-demo\n                                    \n                                \n                                \n                                    \n                                        ngx-editorjs-demo:         NgxEditorJSDemoData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NgxEditorJSDemoData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ngx-editorjs-demo data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Block } from '@tinynodes/ngx-editorjs';\nimport { MenuGroup } from '../../types/app';\n\n/**\n * An Enum of the keys in the application state\n */\nexport enum ApplicationStateKeys {\n  /**\n   * The hidden state key\n   */\n  Hidden = 'hidden',\n\n  /**\n   * The menus key\n   */\n  Menus = 'menus',\n\n  /**\n   * The demo data key\n   */\n  DemoData = 'demoData'\n}\n\n/**\n * Interface for a demo data object\n */\nexport interface DemoData {\n  /**\n   * The name of the demo (e.g. `ngx-editorjs-demo`)\n   */\n  name: string;\n  /**\n   * The data for the demo as ``\n   */\n  data: T;\n}\n\n/**\n * Interface for `ngx-editorjs-demo` data\n * TODO: This should be moved\n */\nexport interface NgxEditorJSDemo {\n  /**\n   * The initial blocks for the demo\n   */\n  blocks: Block[];\n}\n\n/**\n * The demo data for `ngx-editorjs-demo`\n */\nexport interface NgxEditorJSDemoData extends DemoData {}\n\n/**\n * The demos on tinynodes\n */\nexport interface TinynodeDemos {\n  /**\n   * The `ngx-editorjs-demo` data\n   */\n  'ngx-editorjs-demo': NgxEditorJSDemoData;\n}\n\n/**\n * A representation of the application state\n */\nexport interface ApplicationState {\n  /**\n   * If the side menu is hidden\n   */\n  hidden: boolean;\n\n  /**\n   * A set of menus loaded from application data\n   */\n  menus: MenuGroup[];\n\n  /**\n   * Data for demos\n   */\n  demoData: DemoData[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap.html":{"url":"interfaces/ToolSettingsMap.html","title":"interface - ToolSettingsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap-1.html":{"url":"interfaces/ToolSettingsMap-1.html","title":"interface - ToolSettingsMap-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nTinynodes Changelog\n\nThis changelog is related to the overall site. You can also find changelogs for libraries under the library docs\n\n\nWednesday, 15th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.3.2. This will be without a Forms component. In this release the main change is internally I'm using a new EditorJS Injector module I've created to handle managing the underlying instance. There are also a lot of documentation improvements and a completly new updated demo site.\nMonday, 13th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.2.0. For now I've removed any default plugins from core package, now all plugins must be added at the application level - this can be see in the demo app.\nSunday, 12th May 2019\nThe first devlog is to report that currently version 1.2 has been delayed due to current build issues.\nA bug report has been filed on @nrwl/nx project.\nIn 1.2 there is a new @tinynodes/ngx-editorjs-plugins module that provides exports for several common EditorJS plugins and will be expanded to cover all the officially released plugins.\nWith this change the current build scripts break, and until it is resolved this will block the release.\nIn the meantime I'll continue to work on this small demo site, making it more useful as a good example of an Angular app.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a\nbuild.\nUpdate the README.md with details of changes to the interface, this includes new environment\nvariables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this\nPull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you\ndo not have permission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or\nadvances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic\naddress, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at me@tane.dev. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.15\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ~7.2.15\n        \n            @angular/compiler : ~7.2.15\n        \n            @angular/core : ~7.2.15\n        \n            @angular/flex-layout : ^7.0.0-beta.24\n        \n            @angular/forms : ~7.2.15\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ~7.2.15\n        \n            @angular/platform-browser-dynamic : ~7.2.15\n        \n            @angular/router : ~7.2.15\n        \n            @datorama/akita-ng-router-store : ^3.0.2\n        \n            @datorama/akita-ngdevtools : ^1.0.4\n        \n            @editorjs/editorjs : ^2.13.0\n        \n            @editorjs/header : ^2.2.3\n        \n            @editorjs/list : ^1.3.4\n        \n            @editorjs/paragraph : ^2.5.0\n        \n            @ngrx/effects : ^7.4.0\n        \n            @ngrx/store : ^7.4.0\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            install : ^0.12.2\n        \n            ngx-hideable-header : 0.0.5\n        \n            ngx-markdown : ^7.1.5\n        \n            npm : ^6.9.0\n        \n            rxjs : 6.3.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApplicationStateKeys   (libs/.../application.model.ts)\n                        \n                        \n                            ApplicationStateKeys   (apps/.../application.model.ts)\n                        \n                        \n                            EditorJSActionTypes   (libs/.../editorjs.service.ts)\n                        \n                        \n                            EditorJSActionTypes   (libs/.../ngx-editorjs.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-tinynodes-core/src/lib/stores/app/application.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApplicationStateKeys\n                    \n                \n                    \n                        \n                            An Enum of the keys in the application state\n\n                        \n                    \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n                        \n                            \n                                 Menus\n                            \n                        \n                        \n                            \n                                Value : menus\n                            \n                        \n                        \n                            \n                                 DemoData\n                            \n                        \n                        \n                            \n                                Value : demoData\n                            \n                        \n            \n        \n\n    apps/ngx-tinynodes/src/app/core/stores/app/application.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApplicationStateKeys\n                    \n                \n                    \n                        \n                            An Enum of the keys in the application state\n\n                        \n                    \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n                        \n                            \n                                 Menus\n                            \n                        \n                        \n                            \n                                Value : menus\n                            \n                        \n                        \n                            \n                                 DemoData\n                            \n                        \n                        \n                            \n                                Value : demoData\n                            \n                        \n            \n        \n\n    libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n    \n        \n            \n                \n                    \n                        \n                        EditorJSActionTypes\n                    \n                \n                    \n                        \n                            Supported actions by the API\n\n                        \n                    \n                        \n                            \n                                 CreateEditor\n                            \n                        \n                        \n                            \n                                Value : createEditor\n                            \n                        \n                        \n                            \n                                 UpdateEditor\n                            \n                        \n                        \n                            \n                                Value : updateEditor\n                            \n                        \n                        \n                            \n                                 ClearEditor\n                            \n                        \n                        \n                            \n                                Value : clearEditor\n                            \n                        \n                        \n                            \n                                 DestroyEditor\n                            \n                        \n                        \n                            \n                                Value : destroyEditor\n                            \n                        \n                        \n                            \n                                 SaveEditor\n                            \n                        \n                        \n                            \n                                Value : saveEditor\n                            \n                        \n            \n        \n\n    libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        EditorJSActionTypes\n                    \n                \n                        \n                            \n                                 SaveStart\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Start Save\n                            \n                        \n                        \n                            \n                                 SaveEnd\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Start End\n                            \n                        \n                        \n                            \n                                 NotReady\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Not Ready\n                            \n                        \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Ready\n                            \n                        \n                        \n                            \n                                 Changed\n                            \n                        \n                        \n                            \n                                Value : [ngx-editorjs] Changed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createEditorJSConfig   (libs/.../editor-config.ts)\n                        \n                        \n                            createEditorJSInstance   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            createModuleConfig   (libs/.../module-config.ts)\n                        \n                        \n                            createNgxEditorJSDemoTools   (libs/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSConfig(inputConfig?)\n                \n            \n\n\n\n\n            \n                \n                    Creates an EditorJS config\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputConfig\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The config to merge\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EditorConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSInstance\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSInstance(editorjs: any)\n                \n            \n\n\n\n\n            \n                \n                    Factory function to return the EditorJS base class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editorjs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/src/lib/config/module-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createModuleConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateModuleConfig(config?)\n                \n            \n\n\n\n\n            \n                \n                    Creates the configuration from the module config\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional module configurations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorJSConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs-demo/src/lib/config/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createNgxEditorJSDemoTools\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNgxEditorJSDemoTools()\n                \n            \n\n\n\n\n            \n                \n                    Creates the tools for the ngx-tinynodes demo application\n\n\n                    \n                        Returns :         PluginConfig\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-Tinynodes\nThis repository is a collection of Angular components and demos with full documentation.\nSee the Changelog for the development diary of this site, or visit the documentation of libraries.\nYou can also find a fully searchable API documentation for all @tinynode components.\nLinks\n\nRepository\nDocumentation\nDemo Application Site\nNPM Collection\n\nLibraries\nngx-editorjs\nThe ngx-editorjs module provides an EditorJS instance within an Angular application and provides several features to use it:\n\nA Directive to attach to and block element\nAn out-of-the-box component to use within any Angular application or Angular form\nA Material Form Field component\nA Service to interact with EditorJS instances.\n\nBelow are the dependencies to use the features.\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+\n\nReadme\nChangelog\nDemo\nProject Folder\n\n@tinynodes/ngx-editorjs-plugins\nThis project provides a module that exports a set of default plugins for @tinynodes/ngx-editorjs.\n\nReadme\nChangelog\nProject Folder\n\nDevelopment Information\nThis repository is run by Tane Piper and was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nTinynodes General MIT Licence\nCopyright 2019 Tane Piper me@tane.dev\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApplicationDataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApplicationDataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsDemoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsNgrxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsPluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxHideableHeaderDemoModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesCoreMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PageStoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginCodeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginLinkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginMarkerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginSimpleImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApplicationDataModule\n\n\n\ncluster_ApplicationDataModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\ncluster_NgxEditorjsNgrxModule\n\n\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\ncluster_NgxTinynodesCoreModule\n\n\n\ncluster_NgxTinynodesCoreModule_declarations\n\n\n\ncluster_NgxTinynodesCoreModule_imports\n\n\n\ncluster_NgxTinynodesCoreModule_exports\n\n\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nApplicationDataModule\n\nApplicationDataModule\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nAppService->ApplicationDataModule\n\n\n\n\n\nApplicationQuery\n\nApplicationQuery\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nApplicationQuery->ApplicationDataModule\n\n\n\n\n\nApplicationStore\n\nApplicationStore\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\nApplicationDataModule -->\n\nApplicationStore->ApplicationDataModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApplicationDataModule->AppModule\n\n\n\n\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\nNgxTinynodesCoreModule -->\n\nApplicationDataModule->NgxTinynodesCoreModule\n\n\n\n\n\nAppContainerComponent\n\nAppContainerComponent\n\nAppModule -->\n\nAppContainerComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nAppContainerComponent \n\nAppContainerComponent \n\nAppContainerComponent  -->\n\nAppModule->AppContainerComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nAppModule -->\n\nNgxEditorJSModule->AppModule\n\n\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSModule->NgxEditorjsDemoModule\n\n\n\n\n\nEditorJSBaseComponent \n\nEditorJSBaseComponent \n\nEditorJSBaseComponent  -->\n\nNgxEditorJSModule->EditorJSBaseComponent \n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule\n\nNgxEditorjsNgrxModule -->\n\nNgxEditorJSModule->NgxEditorjsNgrxModule\n\n\n\nAppModule -->\n\nNgxEditorjsDemoModule->AppModule\n\n\n\n\n\nFormContainerComponent \n\nFormContainerComponent \n\nFormContainerComponent  -->\n\nNgxEditorjsDemoModule->FormContainerComponent \n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\nAppModule -->\n\nNgxTinynodesCoreModule->AppModule\n\n\n\nNgxEditorjsDemoModule -->\n\nNgxTinynodesCoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nApplicationDataModule \n\nApplicationDataModule \n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\nApplicationDataModule  -->\n\nNgxTinynodesCoreModule->ApplicationDataModule \n\n\n\n\n\nNgxEditorJSDemoInfoComponent \n\nNgxEditorJSDemoInfoComponent \n\nNgxEditorJSDemoInfoComponent  -->\n\nNgxTinynodesCoreModule->NgxEditorJSDemoInfoComponent \n\n\n\n\n\nNgxTinynodesCoreMaterialModule \n\nNgxTinynodesCoreMaterialModule \n\nNgxTinynodesCoreMaterialModule  -->\n\nNgxTinynodesCoreModule->NgxTinynodesCoreMaterialModule \n\n\n\n\n\nFormContainerComponent\n\nFormContainerComponent\n\nNgxEditorjsDemoModule -->\n\nFormContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoHomeComponent->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSDemoTagComponent\n\nNgxEditorJSDemoTagComponent\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoTagComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsDemoModule -->\n\nPluginCodeModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsDemoModule -->\n\nPluginHeaderModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsDemoModule -->\n\nPluginLinkModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsDemoModule -->\n\nPluginListModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsDemoModule -->\n\nPluginMarkerModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsDemoModule -->\n\nPluginParagraphModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsDemoModule -->\n\nPluginSimpleImageModule->NgxEditorjsDemoModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nEditorJSBaseComponent\n\nEditorJSBaseComponent\n\nNgxEditorJSModule -->\n\nEditorJSBaseComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSInstanceService\n\nNgxEditorJSInstanceService\n\nNgxEditorJSModule -->\n\nNgxEditorJSInstanceService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\nNgxEditorJSModule -->\n\nNgxEditorJSPluginService->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nNgxEditorJSDemoInfoComponent\n\nNgxEditorJSDemoInfoComponent\n\nNgxTinynodesCoreModule -->\n\nNgxEditorJSDemoInfoComponent->NgxTinynodesCoreModule\n\n\n\n\n\nNgxTinynodesCoreMaterialModule\n\nNgxTinynodesCoreMaterialModule\n\nNgxTinynodesCoreModule -->\n\nNgxTinynodesCoreMaterialModule->NgxTinynodesCoreModule\n\n\n\n\n\nPagesQuery\n\nPagesQuery\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\nPluginCode\n\nPluginCode\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\nPluginHeader\n\nPluginHeader\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\nPluginImage\n\nPluginImage\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\nPluginLink\n\nPluginLink\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\nPluginList\n\nPluginList\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\nPluginMarker\n\nPluginMarker\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        22 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    47 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nngx-tinynodes Todo\nGeneral Todos\n\n Add CI pipeline for publishing modules\n Publish doc changes and tags back to repo\n\nngx-editorjs\n\n Add full EditorJS config support\n Add config options as @Input on component and directive\n Add autosave option support to module config\n Expose EditorJS CoreAPI via service helpers (e.g. blocks, selection, etc)\n Provide peer-dependency ngrx/effects via library to control service\n\nngx-editorjs-demo\n\n Add store for page\n Add controls for setting editor\n Add Save feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                        \n                            NgxEditorJSActions   (libs/.../ngx-editorjs.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                    Type of all the basic block type\n\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles, supports ordered and unordered.\nA custom string can also be added\n\n                \n            \n            \n                \n                        \"ordered\" | \"unordered\" | string\n\n                \n            \n        \n    \n    libs/ngx-editorjs-ngrx/src/lib/actions/ngx-editorjs.actions.ts\n    \n    \n        \n            \n                \n                    \n                    NgxEditorJSActions\n                \n            \n            \n                \n                        SaveStart | SaveEnd | NotReady | Ready | Changed\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appRoutes   (apps/.../app-routing.module.ts)\n                        \n                        \n                            DEFAULT_HOLDER_ID   (libs/.../editor-config.ts)\n                        \n                        \n                            EDITIOR_JS_INSTANCE   (libs/.../config.ts)\n                        \n                        \n                            EDITORJS_FORM_VALUE_ACCESSOR   (libs/.../container.class.ts)\n                        \n                        \n                            EDITORJS_MATERIAL_FIELD_CONTROL   (libs/.../editorjs-mat-field.component.ts)\n                        \n                        \n                            EDITORJS_MODULE_IMPORT   (libs/.../editorjs-injector.ts)\n                        \n                        \n                            EditorJSInstance   (libs/.../editorjs-injector.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            FOR_ROOT_OPTIONS_TOKEN   (libs/.../config.ts)\n                        \n                        \n                            getGreeting   (apps/.../app.po.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            MAP_DEFAULTS   (libs/.../editorjs-injector.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            ngxEditorjsDemoRoutes   (libs/.../ngx-editorjs-demo.routes.ts)\n                        \n                        \n                            ngxHideableHeaderDemoRoutes   (libs/.../ngx-hideable-header-demo.module.ts)\n                        \n                        \n                            TAG_COMPONENT_FIELD_CONTROL   (libs/.../tag.component.ts)\n                        \n                        \n                            TAG_COMPONENT_VALUE_ACCESSOR   (libs/.../tag.component.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/ngx-tinynodes/src/app/app-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomePageComponent\n  }\n]\n                        \n                    \n\n                \n                    \n                        The main application routes\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HOLDER_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'editor-js'\n                        \n                    \n\n                \n                    \n                        The default holder ID to attach EditorJS to\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITIOR_JS_INSTANCE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITIOR_JS_INSTANCE')\n                        \n                    \n\n                \n                    \n                        Get the EditorJS instance injected into the app\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOR_ROOT_OPTIONS_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('FOR_ROOT_OPTIONS_TOKEN')\n                        \n                    \n\n                \n                    \n                        Internal token for injecting the NgxEditorJSConfig into the config factory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token provied for NgxEditorJSConfig\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/containers/base/container.class.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_FORM_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => EditorJSBaseComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        This provides the Control Value Accessor for the form component\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MATERIAL_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for the EditorJS Material Field Component\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/services/editorjs-injector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MODULE_IMPORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITORJS_MODULE_IMPORT')\n                        \n                    \n\n                \n                    \n                        Injection token for the EditorJS class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EditorJSInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EditorJSInstance')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAP_DEFAULTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [['blocksMap', []], ['changeMap', 0], ['readyMap', false]]\n                        \n                    \n\n                \n                    \n                        Default values for each internal map\n\n                    \n                \n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes/src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    apps/ngx-tinynodes-e2e/src/support/app.po.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getGreeting\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => cy.get('h1')\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorjsDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: 'ngx-editorjs-demo',\n    component: NgxEditorJSDemoHomeComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/angular-component',\n    component: PageContainerComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/angular-form',\n    component: FormContainerComponent\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-hideable-header-demo/src/lib/ngx-hideable-header-demo.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxHideableHeaderDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs-demo/src/lib/components/tag-component/tag.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSDemoTagComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for Material field support\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxEditorJSDemoTagComponent),\n  multi: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs.html":{"url":"additional-documentation/tinynodes-library-docs.html","title":"additional-page - Tinynodes Library Docs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-Tinynodes Libraries\nHere you can find all the README and CHANGELOG details of all projects released to NPM\n\nPlease note due to a bug in CompoDoc the `README.md` files are currently not generated correctly - these are rendered correctly on GitHub and NPM.\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html","title":"additional-page - ngx-editorjs Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS\nThis library provides Angular support for EditorJS via a directive, components and service.\nYou can see a demo in action or download it\non GitHub to see how it was implemented.\nFor changes see the CHANGELOG\nInstalling and usage\nInstall the library via npm along with the plugins module and EditorJS module. For each plugin you want to use you also need to install it's dependency - see the Plugin Docs for more information.\n```bash\n\nnpm install @tinynodes/ngx-editorjs @tinynodes/ngx-editorjs-plugins @editorjs/editorjs @editorjs/paragraph....\n```\n\nOnce installed, include the NgxEditorJSModule module in your project with the forRoot method. The forRoot takes an optional configuration.\nYou also need to pass a provider for UserPlugins with a factory function that returns an options map tools to provide to the EditorJS instance. An example of this is shows in the demo application\n```typescript\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { AppComponent } from './app.component';\nimport EditorJS from '@editorjs/editorjs';\nimport {\n  PluginParagraphModule,\n  PluginParagraph,\n  PluginHeaderModule,\n  PluginHeader,\n  PluginListModule,\n  PluginList\n} from '@tinynodes/ngx-editorjs-plugins';\nexport function createTools() {\n  return {\n    paragraph: new PluginParagraph(),\n    header: new PluginHeader(),\n    list: new PluginList()\n  };\n}\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    NgxEditorJSModule.forRoot({\n      editorjs: {\n        autofocus: false,\n        holder: 'editor',\n        initialBlock: 'paragraph',\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: []\n        }\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createTools\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n```\nConfiguration\nEditorJS Config\nThe configuration is deigned to be extendable in the future, so each potential feature has a key. For configuring EditorJS pass the options below into a editorjs key in the config.\nThe module configuration allows EditorJS to be provided with a set of options for use. See the EditorJS docs for more details.\n| Configuration Key  | Description                                                                                       |\n| ------------------ | ------------------------------------------------------------------------------------------------- |\n| autofocus        | Sets the EditorJS instance to autofocus on load                                                   |\n| data             | Initial data to load into the editor, this is an OutputData object from EditorJS                |\n| hideToolbar      | Hides the toolbar by default                                                                      |\n| holder           | The element ID of the holder, this will set all instances in this module to use this as a default |\n| initialBlock     | The default block type to use in the editor                                                       |\n| minHeight        | Height of Editor's bottom area that allows to set focus on the last Block                         |\n| blockPlaceholder | Placeholder of the first block                                                                    |\n| sanitizer        | Content sanitizer configurations                                                                  |\nAdding custom tools\nSee Adding Custom Tools\nWhat's in the library\nNgxEditorJSDirective\nThis is the main directive which can be used on any element with the [ngxEditorJS]. It has one input which is blocks and this takes an array of EditorJS blocks.\nNgxEditorJSComponent\nThis component can be used in any Angular component using the  tag. Again this component can take a set of blocks, it also provides a holder input for overriding the ID.\nNgxEditorJSService\nThis service provides handling the life-cycle of the EditorJS instance, and exposes the underlying EditorJS instance.API - in future releases more of the API will be exposed via service methods to make controlling the container easier.\nLinks\n\nDocumentation\nGitHub\nNPM\nAngular Demo\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html","title":"additional-page - ngx-editorjs Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.4.0] - 2019-05-21\nAdded\n\nNgxEditorJSComponent can be used in Angular Forms via it's ControlValueAccessor\nEditorJSBaseComponent exported and can be used to create custom components\nNgxEditorJSMatFieldComponent provided as a Material field component.\n\nChanged\n\nEditorJS instance service refactored\n\n[1.3.2] - 2019-05-15\nChanged\n\nFixed bug with passing data to EditorJS instance service.\nRemoved rogue console.log\n\n[1.3.0] - 2019-05-15\nAdded\n\n@Input properties on the component and directive for providing EditorJS instance configuration\ncreateEditorJSConfig function available to generate EditorJS configurations\nLots more doc improvements and updated demo\n\nChanged\n\nInternal service now uses an EditorJS injector module and service, provides more robust control and creation of EditorJS instances and controlling them.\n\n[1.2.0] - 2019-05-13\nAdded\n\nAdded all configuration options for EditorJS to the module configuration\n\nChanged\n\nRemoved all plugins from the ngx-editorjs project. All plugins are now provided by the @tinynodes/ngx-editorjs-plugins module and a default set of tools must be provided in an application.\nAdded NgxEditorJSPluginService back to core, all plugins must now be provided with a UserPlugin provider.\n\n[1.1.2] - 2019-05-11\nAdded\n\nImproved internal documentation for generated docs.\n\nRemoved\n\nGenerated docs no longer included in this module - all docs are now available via the generated docs site\n\n[1.1.1] - 2019-05-10\nAdded\n\nGenerated docs via CompoDoc in npm package\nInclude CHANGELOG.md in npm package\n\n[1.1.0] - 2019-05-10\nAdded\n\nEditorJS default paragraph plugin is now included in the default tools, fixes issue where the regenerated component failed to use the default plugin.\n\nChanged\n\nNgxEditorJSService is now provided in the root and now stores multiple editor instances. Getters removed and replaced with methods that take the holder parameter which is the ID of the DOM element the editor should be attached to.\nPlugins are now instances of an Injectable class for AOT and have an instance method of plugin. Also supports shortcut as an optional method that returns the string to set up as the shortcut.\nEditorJSPlugin now renamed BasePlugin and changed from class to interface.\nImproved documentation\n\n[1.0.0] - 2019-05-10\nAdded\n\nInitial release\nReadme, Changelog\nNgxEditorJSModule: That can be imported into the root of a project\nNgxEditorJSDirective: A directive that can attach an EditorJS instance to an element\nNgxEditorJSComponent: A component that is pre-configured to use the directive in any Angular project\nNgxEditorJSService: An Angular service for controlling an EditorJS instance\nDefault plugins for Header and List plugins, documentation on how to add plugins with AOT support\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html","title":"additional-page - ngx-editorjs-plugins Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS Plugins\nThis module provides a default set of EditorJS plugins for @tinynodes/ngx-editorjs via Angular modules.\nPeer Dependencies\nAll EditorJS plugins are listed as peerDependencies of the project - this is because Angular requires these modules to be in the root. You must manually install these are the root of your Angular application.\n```bash\n\nnpm install @editorjs/paragraph @editorjs/header ....\n```\n\nPlugin List\n| Plugin Name             | Description                                            | Links                                                                                               |\n| ----------------------- | ------------------------------------------------------ | --------------------------------------------------------------------------------------------------- |\n| PluginCodeModule        | Provides a  block editor                       | README GitHub              |\n| PluginHeaderModule      | Provides a  -  block editor                  | README GitHub          |\n| PluginImageModule       | Provides an  block editor + file upload support | README GitHub            |\n| PluginLinkModule        | Provides an  block editor                         | README GitHub              |\n| PluginIListModule       | Provides an / block editor                   | README GitHub              |\n| PluginMarkerModule      | Provides inline text marking                           | README GitHub          |\n| PluginParagraphModule   | Provides an  block editor                         | README GitHub    |\n| PluginSimpleImageModule | Provides an  block editor with paste support    | README GitHub |\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html","title":"additional-page - ngx-editorjs-plugins Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.1.1] - 2019-05-15\nChanged\n\nDocumentation updates\n\n[1.1.0] - 2019-05-13\nRemoved\n\nRemoved the NgxEditorJSPluginService from this module back to core\n\n[1.0.0] - 2019-05-11\nAdded\n\nInitial release of module with default plugins - see README.md for details.\nMoved the internal PluginService to public NgxEditorJSPluginService provided by this module\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
