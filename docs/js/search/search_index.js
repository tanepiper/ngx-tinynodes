var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/BasePlugin.html",[0,0.042,1,1.431]],["body/interfaces/BasePlugin.html",[0,0.071,1,2.328,2,0.841,3,0.314,4,0.314,5,0.229,6,0.249,7,0.124,8,2.927,9,0.249,10,3.379,11,2.021,12,1.506,13,1.753,14,2.23,15,3.17,16,1.704,17,3.783,18,0.707,19,1.445,20,2.918,21,1.224,22,0.016,23,2.658,24,3.379,25,0.642,26,1.73,27,0.646,28,2.489,29,3.807,30,0.772,31,0.824,32,1.274,33,0.489,34,2.927,35,1.887,36,0.646,37,2.527,38,1.019,39,1.329,40,1.73,41,2.113,42,2.371,43,1.126,44,2.209,45,2.209,46,2.004,47,2.021,48,1.126,49,1.447,50,2.021,51,2.927,52,1.635,53,2.927,54,2.234,55,1.579,56,1.652,57,2.004,58,2.371,59,0.008,60,0.011,61,0.008]],["title/interfaces/BasePlugin-1.html",[0,0.035,1,1.211,62,1.518]],["body/interfaces/BasePlugin-1.html",[0,0.071,1,2.36,2,0.871,3,0.325,4,0.325,5,0.237,6,0.258,7,0.105,9,0.258,10,3.457,11,2.068,12,1.518,13,1.759,14,2.261,15,3.243,16,1.744,17,3.812,18,0.732,19,1.478,20,2.958,21,1.252,22,0.016,23,2.694,24,3.457,25,0.656,26,1.79,27,0.668,28,2.532,29,3.873,30,0.799,31,0.638,32,1.319,33,0.476,35,1.913,36,0.668,37,2.615,38,1.036,39,1.375,40,1.79,41,2.187,42,2.453,43,1.165,44,1.71,45,1.71,47,1.564,50,1.564,52,1.265,54,2.312,55,1.634,56,1.71,57,2.074,58,2.453,59,0.009,60,0.011,61,0.009,63,3.029,64,2.803]],["title/interfaces/Block.html",[0,0.042,65,0.449]],["body/interfaces/Block.html",[0,0.076,2,0.658,3,0.245,4,0.245,5,0.179,6,0.281,7,0.13,9,0.195,12,1.217,13,0.716,18,0.553,19,1.562,21,1.755,22,0.016,33,0.501,35,1.322,38,1.193,48,0.88,59,0.006,60,0.009,61,0.006,62,1.418,65,0.863,66,1.567,67,1.853,68,2.221,69,1.652,70,3.225,71,1.703,72,2.421,73,1.291,74,2.661,75,1.567,76,1.489,77,2.258,78,2.258,79,1.352,80,1.235,81,2.258,82,1.133,83,2.381,84,2.381,85,1.131,86,2.147,87,2.284,88,2.317,89,2.755,90,2.147,91,2.6,92,2.147,93,1.652,94,1.084,95,2.147,96,2.652,97,2.381,98,2.381,99,1.652,100,1.997,101,1.652,102,2.286,103,1.652,104,1.652,105,1.652,106,1.652,107,2.147,108,1.567,109,1.567]],["title/interfaces/ChangeMap.html",[0,0.042,110,2.345]],["body/interfaces/ChangeMap.html",[0,0.071,2,0.874,3,0.326,4,0.326,5,0.238,6,0.342,7,0.134,9,0.259,22,0.016,25,0.737,30,0.802,33,0.495,35,2.164,38,1.148,39,2.451,48,1.169,59,0.009,60,0.011,61,0.009,65,0.623,69,2.195,94,1.44,110,3.252,111,2.814,112,4.996,113,4.518,114,2.898,115,3.431,116,1.677,117,4.285,118,1.641,119,2.195,120,2.425,121,2.082,122,2.463,123,2.266,124,1.884,125,2.898,126,2.463,127,2.463,128,2.321,129,2.321,130,2.625,131,2.266]],["title/interfaces/CreateEditorJSOptions.html",[0,0.042,132,3.166]],["body/interfaces/CreateEditorJSOptions.html",[0,0.051,2,1.019,3,0.38,4,0.38,5,0.277,6,0.302,7,0.117,9,0.302,12,1.528,18,0.856,19,1.635,21,1.512,22,0.016,25,0.581,30,0.935,32,1.929,33,0.353,38,1.116,40,2.993,59,0.01,60,0.013,61,0.01,94,2.289,128,2.287,132,4.846,133,4.995,134,4.995,135,2.745,136,4.589,137,3.295,138,6.173,139,3.295,140,2.745,141,3.295,142,4.1,143,3.824]],["title/interfaces/EditorJSChange.html",[0,0.042,130,2.499]],["body/interfaces/EditorJSChange.html",[0,0.071,2,0.864,3,0.322,4,0.322,5,0.235,6,0.256,7,0.134,9,0.256,18,0.726,19,1.47,21,1.246,22,0.016,25,0.733,30,0.793,33,0.494,35,2.113,38,1.099,39,2.394,59,0.009,60,0.011,61,0.009,65,0.739,94,2.117,110,2.434,111,2.782,112,4.878,113,4.454,114,2.17,115,3.041,116,1.255,118,1.622,119,2.17,120,2.801,121,2.058,122,2.434,123,2.249,124,1.863,125,2.876,126,2.434,127,2.434,128,2.627,129,3.041,130,3.439,131,2.872]],["title/interfaces/EditorJSClass.html",[0,0.042,144,2.345]],["body/interfaces/EditorJSClass.html",[0,0.071,2,0.721,3,0.269,4,0.269,5,0.196,6,0.214,7,0.142,9,0.214,11,1.295,12,1.17,18,0.606,19,1.3,20,2.182,21,1.273,22,0.016,25,0.667,26,1.483,27,0.553,30,0.662,32,1.534,33,0.504,36,1.063,38,1.186,39,1.139,44,1.416,45,1.416,50,2.101,52,1.7,59,0.01,60,0.01,61,0.007,65,0.389,68,1.092,72,1.9,82,0.634,87,2.196,100,1.295,116,1.941,118,1.9,120,2.196,123,1.416,124,1.555,128,1.295,131,1.416,135,2.182,140,2.182,141,2.648,144,2.852,145,2.166,146,2.292,147,1.599,148,2.852,149,3.459,150,2.688,151,1.411,152,3.04,153,3.259,154,2.542,155,2.032,156,2.166,157,2.623,158,3.067,159,2.623,160,3.368,161,2.322,162,2.166,163,2.688,164,2.166,165,1.811,166,1.555,167,2.032,168,2.032,169,1.717,170,2.032,171,2.032,172,2.032,173,2.166,174,2.688,175,1.915,176,2.166,177,1.915,178,1.915,179,1.811,180,2.166,181,2.012,182,2.852,183,3.04,184,2.032,185,2.032,186,2.166]],["title/interfaces/EditorJSInstanceConfig.html",[0,0.042,156,2.499]],["body/interfaces/EditorJSInstanceConfig.html",[0,0.069,2,0.703,3,0.262,4,0.262,5,0.191,6,0.208,7,0.139,9,0.208,11,1.786,12,1.413,18,0.591,19,1.277,20,2.853,21,1.365,22,0.016,25,0.658,26,1.446,27,0.54,30,0.645,32,1.9,33,0.5,36,0.963,38,1.135,39,1.111,44,1.38,45,1.38,50,2.072,52,1.677,59,0.01,60,0.01,61,0.007,65,0.38,68,1.065,72,1.867,82,0.618,87,1.867,100,1.786,116,1.923,118,1.867,120,2.166,123,1.38,124,2.144,128,1.786,131,1.38,135,2.144,140,2.144,141,3.266,144,1.981,145,2.111,146,1.592,147,1.111,148,1.981,149,2.748,150,1.867,151,0.98,152,2.111,153,2.263,154,1.766,155,2.802,156,2.986,157,2.833,158,3.11,159,2.773,160,3.649,161,3.201,162,3.767,163,2.641,164,3.767,165,1.766,166,1.516,167,1.981,168,1.981,169,1.674,170,1.981,171,1.981,172,1.981,173,2.111,174,2.641,175,1.867,176,2.111,177,1.867,178,1.867,179,1.766,180,2.111,181,1.984,182,2.802,183,2.986,184,1.981,185,1.981,186,2.111]],["title/interfaces/EditorJSMaterialForm.html",[0,0.042,187,3.529]],["body/interfaces/EditorJSMaterialForm.html",[0,0.042,2,0.424,3,0.158,4,0.158,5,0.115,6,0.126,7,0.103,9,0.126,11,2.032,12,0.678,16,1.799,19,0.871,21,0.461,22,0.017,25,0.744,27,0.325,33,0.294,36,0.521,38,0.681,49,1.459,50,0.761,52,0.616,59,0.004,60,0.007,61,0.004,67,1.194,87,1.82,102,2.326,116,0.986,119,1.064,125,3.682,128,1.218,129,1.125,136,1.273,139,3.319,140,1.828,148,1.911,151,0.946,157,1.332,160,1.125,163,2.252,165,1.064,166,0.914,169,1.009,187,4.497,188,1.797,189,4.52,190,1.613,191,1.797,192,2.581,193,4.111,194,5.199,195,2.078,196,2.078,197,2.078,198,3.597,199,2.078,200,2.877,201,3.467,202,3.326,203,2.877,204,3.326,205,2.36,206,2.581,207,4.158,208,2.951,209,3.326,210,2.078,211,4.753,212,1.613,213,1.613,214,2.951,215,1.613,216,1.613,217,2.574,218,1.797,219,1.797,220,2.13,221,1.613,222,2.389,223,2.078,224,4.588,225,3.184,226,2.877,227,1.064,228,1.797,229,2.184,230,1.797,231,1.273,232,2.078,233,1.613,234,1.613,235,2.078,236,1.364,237,1.797,238,2.078,239,2.078,240,2.078,241,2.078,242,3.597,243,2.816,244,2.078,245,4.753,246,0.871,247,4.158,248,2.078,249,1.009,250,2.078,251,2.618,252,2.078,253,2.547,254,2.078,255,3.326,256,2.078,257,4.293,258,3.326,259,4.542,260,2.078,261,2.078,262,6.051,263,3.567,264,3.184,265,2.078,266,3.326,267,2.078,268,2.078,269,4.52,270,2.078,271,4.158,272,2.078,273,2.078,274,2.078,275,3.326,276,2.078,277,3.326,278,2.078,279,2.078,280,2.078,281,2.078,282,5.546,283,2.078,284,3.326,285,2.078,286,2.078,287,2.078,288,5.038,289,2.078,290,3.326,291,2.078,292,1.613,293,2.184,294,2.078,295,2.078,296,3.227,297,2.078,298,3.326,299,2.078,300,2.078,301,1.613,302,3.326,303,2.078,304,2.078,305,2.078,306,3.326,307,2.078,308,2.078,309,2.078,310,3.326,311,1.273,312,2.078,313,2.078,314,2.078,315,2.581,316,2.877,317,3.326,318,2.078,319,2.078,320,2.36,321,2.078,322,2.877,323,2.73,324,2.078,325,1.194,326,2.078,327,1.797,328,1.797,329,1.797,330,1.064,331,3.597,332,2.078,333,1.613,334,2.078,335,3.326,336,1.797,337,2.078,338,1.475,339,1.475,340,1.613,341,1.475,342,1.797,343,1.797,344,1.797,345,2.078,346,1.797,347,2.078,348,2.078,349,1.797,350,2.078,351,1.613,352,2.078,353,2.078,354,2.078,355,2.078]],["title/interfaces/EditorMap.html",[0,0.042,122,2.345]],["body/interfaces/EditorMap.html",[0,0.072,2,0.879,3,0.328,4,0.328,5,0.239,6,0.343,7,0.131,9,0.261,22,0.016,25,0.739,30,0.807,33,0.496,35,2.166,38,1.15,39,2.454,48,1.176,59,0.009,60,0.011,61,0.009,65,0.626,69,2.208,94,1.449,110,2.477,111,2.831,112,5.001,113,4.521,114,2.208,115,3.076,116,1.278,118,1.65,119,2.208,120,2.432,121,2.759,122,3.264,123,2.275,124,1.895,125,2.91,126,2.477,127,2.477,128,2.327,129,2.335,130,2.64,131,2.275,356,4.311]],["title/interfaces/Header.html",[0,0.042,91,1.562]],["body/interfaces/Header.html",[0,0.076,2,0.667,3,0.248,4,0.248,5,0.181,6,0.198,7,0.124,9,0.198,12,1.224,13,0.725,18,0.56,19,1.438,21,1.736,22,0.017,33,0.502,35,0.929,38,1.181,59,0.007,60,0.009,61,0.007,62,2.064,65,0.857,66,1.587,68,2.107,71,1.197,72,2.103,73,1.309,74,2.671,75,1.587,76,1.509,77,2.28,78,2.28,79,1.37,80,1.251,81,2.28,82,1.186,83,2.404,84,2.404,85,1.146,86,2.167,87,2.298,88,2.329,89,3.221,90,2.167,91,2.794,92,3.056,93,2.404,94,1.846,95,2.167,96,2.666,97,2.404,98,2.404,99,1.674,100,2.012,101,1.674,102,2.303,103,1.674,104,1.674,105,1.674,106,1.674,107,2.167,108,1.587,109,1.587]],["title/interfaces/HeaderBlock.html",[0,0.042,95,1.884]],["body/interfaces/HeaderBlock.html",[0,0.077,2,0.681,3,0.254,4,0.254,5,0.185,6,0.202,7,0.128,9,0.202,12,1.236,13,0.741,18,0.572,19,1.455,21,1.743,22,0.017,33,0.505,35,0.949,38,1.15,59,0.007,60,0.01,61,0.007,62,1.467,65,0.863,66,1.621,68,2.059,71,1.223,72,2.127,73,1.337,74,2.686,75,1.621,76,1.541,77,2.315,78,2.315,79,1.4,80,1.278,81,2.315,82,1.149,83,2.441,84,2.441,85,1.171,86,2.2,87,2.454,88,2.348,89,2.798,90,2.2,91,2.686,92,2.2,93,1.709,94,1.122,95,2.566,96,2.688,97,2.441,98,2.441,99,1.709,100,2.036,101,1.709,102,2.33,103,1.709,104,1.709,105,1.709,106,1.709,107,2.2,108,1.621,109,1.621]],["title/interfaces/Image.html",[0,0.042,96,1.711]],["body/interfaces/Image.html",[0,0.075,2,0.632,3,0.236,4,0.236,5,0.172,6,0.187,7,0.121,9,0.187,12,1.536,13,0.687,18,0.531,19,1.395,21,1.739,22,0.016,33,0.496,35,0.881,38,1.196,59,0.006,60,0.009,61,0.006,62,1.362,65,0.852,66,1.505,68,2.073,71,1.135,72,2.04,73,1.241,74,2.632,75,1.505,76,1.43,77,2.193,78,2.193,79,1.299,80,1.186,81,2.193,82,1.164,83,2.313,84,2.313,85,1.087,86,2.085,87,2.242,88,2.28,89,2.704,90,2.085,91,2.632,92,2.085,93,1.587,94,1.041,95,2.085,96,2.883,97,3.328,98,3.328,99,2.313,100,2.38,101,2.999,102,2.94,103,2.313,104,2.999,105,2.313,106,2.999,107,2.085,108,1.505,109,1.505]],["title/interfaces/ImageBlock.html",[0,0.042,107,1.884]],["body/interfaces/ImageBlock.html",[0,0.077,2,0.681,3,0.254,4,0.254,5,0.185,6,0.202,7,0.128,9,0.202,12,1.236,13,0.741,18,0.572,19,1.455,21,1.743,22,0.017,33,0.505,35,0.949,38,1.15,59,0.007,60,0.01,61,0.007,62,1.467,65,0.863,66,1.621,68,2.059,71,1.223,72,2.127,73,1.337,74,2.686,75,1.621,76,1.541,77,2.315,78,2.315,79,1.4,80,1.278,81,2.315,82,1.149,83,2.441,84,2.441,85,1.171,86,2.2,87,2.454,88,2.348,89,2.798,90,2.2,91,2.627,92,2.2,93,1.709,94,1.122,95,2.2,96,2.795,97,2.441,98,2.441,99,1.709,100,2.036,101,1.709,102,2.33,103,1.709,104,1.709,105,1.709,106,1.709,107,2.566,108,1.621,109,1.621]],["title/interfaces/InjectorApiCallOptions.html",[0,0.042,182,2.345]],["body/interfaces/InjectorApiCallOptions.html",[0,0.069,2,0.709,3,0.264,4,0.264,5,0.193,6,0.21,7,0.14,9,0.21,11,1.273,12,1.378,18,0.596,19,1.284,20,1.528,21,1.369,22,0.016,25,0.661,26,1.457,27,0.544,30,0.65,32,1.515,33,0.501,36,0.966,38,1.232,39,1.119,44,1.391,45,1.391,50,2.081,52,1.684,59,0.01,60,0.01,61,0.007,65,0.383,68,1.073,72,1.877,82,0.623,87,1.877,100,1.273,116,2.002,118,1.877,120,2.175,123,1.391,124,1.528,128,1.273,131,1.391,135,2.498,140,2.156,141,2.623,144,1.997,145,2.128,146,1.604,147,1.119,148,1.997,149,2.76,150,1.882,151,0.988,152,2.128,153,2.281,154,1.78,155,1.997,156,2.128,157,2.606,158,3.248,159,2.886,160,3.658,161,2.281,162,2.128,163,2.655,164,2.128,165,1.78,166,1.528,167,1.997,168,1.997,169,1.688,170,1.997,171,1.997,172,1.997,173,2.128,174,2.655,175,1.882,176,2.128,177,1.882,178,1.882,179,2.511,180,3.003,181,2.283,182,3.265,183,4.137,184,1.997,185,1.997,186,2.128]],["title/interfaces/InjectorApiCallResponse.html",[0,0.042,185,2.345]],["body/interfaces/InjectorApiCallResponse.html",[0,0.07,2,0.739,3,0.275,4,0.275,5,0.201,6,0.219,7,0.14,9,0.219,11,1.327,12,1.185,18,0.621,19,1.322,20,1.593,21,1.12,22,0.016,25,0.676,26,1.519,27,0.567,30,0.678,32,1.56,33,0.507,36,0.984,38,1.151,39,1.167,44,1.451,45,1.451,50,2.129,52,1.722,59,0.013,60,0.01,61,0.007,65,0.399,68,1.119,72,2.406,82,0.649,87,2.225,100,1.327,116,1.863,118,1.933,120,2.225,123,1.451,124,1.593,128,1.327,131,1.451,135,2.22,140,2.22,141,2.683,144,2.082,145,2.219,146,1.673,147,1.167,148,2.082,149,2.823,150,1.962,151,1.03,152,2.219,153,2.379,154,1.856,155,2.082,156,2.219,157,2.647,158,3.088,159,2.647,160,3.404,161,2.379,162,2.219,163,2.734,164,2.219,165,1.856,166,1.593,167,2.082,168,2.082,169,1.76,170,2.082,171,2.082,172,2.082,173,2.219,174,2.734,175,1.962,176,2.219,177,1.962,178,1.962,179,1.856,180,2.219,181,2.205,182,3.339,183,3.092,184,2.901,185,2.901,186,2.219]],["title/interfaces/InjectorMethodOption.html",[0,0.042,177,2.21]],["body/interfaces/InjectorMethodOption.html",[0,0.069,2,0.713,3,0.266,4,0.266,5,0.194,6,0.211,7,0.14,9,0.211,11,1.281,12,1.472,18,0.599,19,1.29,20,1.537,21,1.373,22,0.016,25,0.663,26,1.466,27,0.547,30,0.654,32,1.522,33,0.502,36,0.969,38,1.183,39,1.126,44,1.4,45,1.4,50,2.088,52,1.69,59,0.01,60,0.01,61,0.007,65,0.385,68,1.912,72,1.885,82,0.626,87,1.885,100,1.281,116,1.834,118,2.369,120,2.369,123,1.4,124,1.537,128,1.281,131,1.4,135,2.507,140,2.165,141,2.632,144,2.009,145,2.141,146,1.614,147,1.126,148,2.009,149,2.769,150,1.894,151,0.994,152,2.141,153,2.296,154,1.791,155,2.009,156,2.141,157,2.891,158,3.252,159,2.71,160,3.352,161,2.296,162,2.141,163,2.667,164,2.141,165,1.791,166,1.537,167,2.009,168,2.009,169,1.698,170,2.009,171,2.009,172,2.009,173,2.141,174,3.088,175,1.894,176,2.141,177,2.667,178,2.667,179,1.791,180,2.141,181,2,182,2.83,183,3.016,184,2.009,185,2.009,186,2.141]],["title/interfaces/List.html",[0,0.042,74,1.562]],["body/interfaces/List.html",[0,0.076,2,0.667,3,0.248,4,0.248,5,0.181,6,0.198,7,0.124,9,0.198,12,1.224,13,0.725,18,0.56,19,1.438,21,1.74,22,0.017,33,0.502,35,0.929,38,1.143,59,0.007,60,0.009,61,0.007,62,1.437,65,0.857,66,1.587,68,2.107,71,1.197,72,2.534,73,1.309,74,2.823,75,1.587,76,1.509,77,2.28,78,2.28,79,1.37,80,1.251,81,2.916,82,1.186,83,3.39,84,3.39,85,1.146,86,2.167,87,2.298,88,2.329,89,2.772,90,2.167,91,2.61,92,2.167,93,1.674,94,1.098,95,2.167,96,2.666,97,2.404,98,2.404,99,1.674,100,2.012,101,1.674,102,2.303,103,1.674,104,1.674,105,1.674,106,1.674,107,2.167,108,1.587,109,1.587]],["title/interfaces/ListBlock.html",[0,0.042,86,1.884]],["body/interfaces/ListBlock.html",[0,0.076,2,0.677,3,0.252,4,0.252,5,0.184,6,0.201,7,0.131,9,0.201,12,1.233,13,1.053,18,0.569,19,1.45,21,1.742,22,0.017,33,0.504,35,0.943,38,1.148,59,0.007,60,0.01,61,0.007,62,1.459,65,0.863,66,1.611,68,2.055,71,1.215,72,2.12,73,1.328,74,2.769,75,1.611,76,1.532,77,2.305,78,2.305,79,1.391,80,1.27,81,2.305,82,1.192,83,2.43,84,2.43,85,1.664,86,2.557,87,2.448,88,2.343,89,2.791,90,2.191,91,2.622,92,2.191,93,1.699,94,1.115,95,2.191,96,2.682,97,2.43,98,2.43,99,1.699,100,2.029,101,1.699,102,2.323,103,1.699,104,1.699,105,1.699,106,1.699,107,2.191,108,1.611,109,1.611]],["title/interfaces/NgxEditorJSConfig.html",[0,0.042,357,2.895]],["body/interfaces/NgxEditorJSConfig.html",[0,0.05,2,0.704,3,0.262,4,0.262,5,0.192,6,0.209,7,0.132,9,0.209,12,1.561,18,0.592,19,1.278,21,1.57,22,0.016,25,0.568,26,1.448,27,0.54,30,0.646,32,2.082,33,0.459,38,1.179,44,1.383,45,1.955,46,2.989,50,2.074,52,1.678,59,0.007,60,0.01,61,0.007,65,0.742,68,2.082,82,1.208,88,1.788,94,1.903,102,2.826,114,2.5,116,1.678,118,2.356,135,1.518,137,2.614,139,2.254,140,2.146,141,2.254,146,1.594,158,2.706,159,1.383,166,1.518,178,1.87,231,2.989,243,2.643,263,2.989,323,3.205,325,2.805,357,4.367,358,2.679,359,4.367,360,4.041,361,4.367,362,4.367,363,4.367,364,4.783,365,4.222,366,3.788,367,2.643,368,3.788,369,3.464,370,3.464,371,3.788,372,4.222,373,4.222,374,2.805,375,3.464,376,3.788,377,3.464,378,3.788,379,3.464,380,4.776,381,4.222,382,2.679,383,2.45,384,2.115,385,2.679,386,2.267,387,2.679,388,2.679,389,2.115,390,2.45,391,2.679,392,2.267,393,2.679,394,2.679]],["title/directives/NgxEditorJSDirective.html",[217,2.21,395,2.345]],["body/directives/NgxEditorJSDirective.html",[3,0.105,4,0.105,5,0.077,6,0.422,7,0.131,9,0.223,12,0.634,13,0.525,14,0.796,16,1.399,18,0.237,21,1.503,22,0.016,25,0.563,27,0.216,30,0.258,32,1.282,33,0.098,36,0.216,38,1.079,40,1.546,46,1.791,48,1.891,49,0.83,50,0.867,52,1.641,55,1.411,57,1.15,59,0.003,60,0.005,61,0.003,65,0.687,68,0.731,73,0.948,80,1.733,82,0.557,85,1.091,88,0.867,89,1.702,94,1.718,100,1.774,102,2.143,113,0.793,114,1.213,115,1.997,116,2.008,118,0.528,119,0.707,120,2.12,123,0.553,124,1.621,125,1.593,128,0.867,131,1.662,136,3.13,137,2.09,138,3.589,139,2.924,141,2.09,143,1.45,147,1.459,149,0.67,150,1.997,151,0.673,157,2.404,158,2.579,159,0.948,163,1.997,169,1.791,179,1.213,198,2.689,200,3.189,201,3.177,205,4.054,206,2.861,214,2.206,215,1.071,216,1.071,217,1.282,220,2.618,221,1.071,231,2.258,236,1.555,237,2.048,242,2.048,243,2.768,249,1.15,251,2.713,253,1.45,257,3.506,259,2.616,263,1.904,264,2.258,269,1.837,288,2.048,296,2.861,301,1.837,311,1.45,316,3.589,320,1.68,322,3.189,323,1.555,325,3.64,327,2.689,330,1.888,331,2.689,333,2.861,338,1.68,341,1.68,342,2.048,346,3.189,349,2.689,359,3.437,360,2.421,361,2.944,362,2.944,363,2.944,364,3.437,367,1.282,368,3.514,369,1.68,370,1.68,374,2.384,375,1.68,377,1.68,380,3.22,395,3.739,396,1.38,397,6.975,398,1.38,399,2.048,400,1.837,401,2.421,402,1.837,403,1.684,404,3.109,405,1.38,406,2.367,407,2.689,408,2.367,409,3.686,410,3.686,411,2.367,412,2.367,413,3.189,414,3.189,415,3.109,416,3.189,417,3.109,418,2.367,419,2.367,420,3.282,421,5.339,422,1.38,423,3.686,424,1.38,425,2.042,426,3.109,427,3.189,428,1.38,429,2.048,430,1.38,431,1.555,432,1.68,433,2.367,434,2.367,435,2.048,436,2.367,437,2.367,438,2.367,439,2.367,440,1.837,441,2.367,442,1.38,443,2.367,444,2.048,445,4.42,446,1.38,447,1.38,448,2.367,449,1.38,450,1.38,451,3.189,452,1.837,453,1.38,454,2.367,455,2.367,456,1.68,457,1.38,458,2.367,459,1.38,460,2.367,461,5.712,462,1.38,463,5.538,464,1.837,465,1.38,466,2.367,467,1.38,468,1.38,469,1.38,470,1.38,471,2.367,472,1.38,473,1.071,474,2.048,475,1.38,476,1.837,477,2.724,478,2.367,479,2.367,480,3.686,481,1.38,482,2.048,483,2.367,484,2.616,485,1.68,486,2.367,487,2.367,488,2.048,489,2.048,490,2.367,491,2.367,492,2.384,493,1.38,494,2.048,495,2.048,496,1.194,497,1.38,498,2.689,499,1.38,500,1.38,501,1.38,502,1.38,503,1.38,504,1.38,505,1.38,506,1.837,507,1.38,508,1.38,509,1.194,510,0.979,511,1.194,512,1.555,513,1.38,514,0.979,515,1.38,516,1.38,517,1.38,518,1.38,519,3.686,520,1.38,521,4.527,522,1.38,523,1.38,524,1.38,525,1.194,526,1.38,527,1.38,528,1.38,529,1.38,530,1.38,531,1.38,532,1.38,533,1.38,534,4.149,535,1.38,536,1.38,537,1.38,538,1.194,539,1.38,540,1.38,541,2.367,542,1.38,543,1.194,544,1.38,545,1.38,546,3.109,547,1.38,548,1.38,549,1.38,550,1.38,551,1.38,552,1.38,553,1.38,554,1.38,555,1.38,556,1.38,557,1.38,558,1.38,559,1.38,560,1.38,561,2.367,562,1.38,563,1.38,564,1.071,565,1.194]],["title/modules/NgxEditorJSModule.html",[31,0.61,566,2.499]],["body/modules/NgxEditorJSModule.html",[3,0.236,4,0.236,5,0.172,6,0.273,7,0.125,9,0.273,12,1.43,14,1.041,15,2.595,16,1.646,20,1.985,21,0.687,22,0.016,25,0.864,27,0.485,30,0.58,31,0.93,32,1.809,33,0.319,36,0.707,48,0.845,56,2.345,59,0.006,60,0.009,61,0.006,67,1.78,82,0.809,85,1.584,116,1.735,137,3.097,147,0.998,148,2.595,151,1.284,159,2.345,172,3.062,175,2.446,179,2.999,189,3.504,190,2.404,212,2.404,213,2.404,217,3.953,218,2.68,219,2.68,220,3.328,221,2.404,222,4.195,227,3.328,229,4.793,246,2.455,253,2.766,259,2.198,320,2.198,330,2.313,374,1.78,383,3.205,384,3.98,386,2.965,389,1.897,390,3.781,392,2.965,403,3.724,425,2.034,432,3.205,473,2.404,566,4.639,567,1.186,568,1.135,569,1.43,570,2.343,571,1.362,572,2.234,573,2.68,574,2.68,575,2.68,576,2.68,577,2.085,578,1.43,579,1.241,580,3.906,581,2.68,582,2.766,583,3.906,584,3.504,585,4.155,586,4.609,587,3.906,588,3.098,589,3.098,590,5.855,591,5.328,592,3.906,593,2.404,594,2.46,595,4.515,596,4.515,597,4.515,598,4.515,599,3.906,600,3.098,601,3.098,602,3.098,603,3.098,604,2.68,605,2.68,606,2.68,607,3.098,608,2.404,609,4.515,610,3.906,611,2.68,612,4.515,613,3.098,614,3.098]],["title/interfaces/NgxEditorJSModuleConfig.html",[0,0.042,384,2.499]],["body/interfaces/NgxEditorJSModuleConfig.html",[0,0.056,2,0.829,3,0.309,4,0.309,5,0.225,6,0.246,7,0.141,9,0.246,12,1.114,18,0.697,19,1.43,21,0.902,22,0.016,25,0.635,26,1.704,27,0.636,30,0.761,32,2.19,33,0.487,38,1.011,44,1.628,45,2.187,46,2.653,50,2.26,52,1.828,59,0.008,60,0.011,61,0.008,65,0.68,68,1.688,82,1.105,88,1.489,94,1.366,102,2.29,114,2.082,116,1.619,118,2.091,135,2.402,137,2.522,139,1.876,140,1.787,141,3.046,146,1.876,158,1.787,159,2.187,166,1.787,178,2.958,231,2.489,243,2.201,263,2.489,323,2.669,325,2.336,357,4.378,358,3.154,359,2.884,360,2.669,361,2.884,362,2.884,363,2.884,364,3.876,365,3.515,366,3.154,367,2.201,368,3.154,369,2.884,370,2.884,371,3.154,372,3.515,373,3.515,374,2.336,375,2.884,376,3.154,377,2.884,378,3.154,379,2.884,380,4.239,381,3.515,382,4.239,383,3.876,384,3.345,385,3.154,386,2.669,387,3.154,388,3.154,389,2.489,390,2.884,391,3.154,392,2.669,393,3.154,394,3.154]],["title/injectables/NgxEditorJSService.html",[220,2.09,615,1.315]],["body/injectables/NgxEditorJSService.html",[3,0.072,4,0.072,5,0.053,6,0.316,7,0.137,9,0.306,11,0.627,12,1.094,13,0.725,14,1.423,16,1.451,17,0.488,18,0.163,20,0.752,21,1.123,22,0.016,25,0.521,27,0.149,30,0.178,31,0.424,32,0.529,33,0.067,35,0.662,36,0.444,38,0.596,39,1.575,40,0.717,41,0.876,43,0.467,47,1.198,48,1.382,50,1.64,52,1.696,55,0.655,56,1.137,57,1.588,59,0.01,60,0.003,61,0.002,64,2.389,68,1.01,71,1.04,72,0.891,73,0.382,80,0.655,82,0.652,85,0.996,110,0.983,113,1.879,115,2.648,116,1.866,118,1.514,119,0.488,120,1.714,121,2.175,122,1.337,123,1.695,124,1.248,125,2.674,126,0.983,127,0.983,128,2.096,131,0.932,132,2.203,135,3.195,137,1.68,139,2.642,140,1.599,141,1.075,143,2.228,144,1.631,146,0.79,147,1.728,149,0.831,150,0.927,154,0.488,155,0.983,157,2.668,158,2.602,159,2.872,160,3.444,162,1.425,163,2.648,164,1.425,166,1.969,167,0.548,168,0.548,169,0.463,170,0.548,171,0.548,175,0.516,177,3.609,179,1.863,181,2.366,182,1.631,183,2.002,184,0.548,185,1.337,186,2.002,192,1.328,206,0.74,214,2.807,215,0.74,216,0.74,220,1.863,227,0.488,231,2.593,243,1.26,251,2.701,257,3.325,259,4.469,264,3.438,293,1.123,296,3.644,301,2.823,315,1.328,320,1.214,328,1.48,329,2.455,330,2.593,333,2.537,336,1.48,341,2.014,343,1.48,344,3.662,367,1.771,369,1.652,371,2.823,374,3,379,2.014,382,4.52,384,1.739,386,0.626,407,2.455,413,4.639,414,3.662,416,3.662,420,2.433,425,3.325,429,2.828,432,0.677,435,4.061,440,1.328,451,0.825,452,0.74,456,1.214,474,2.828,476,3.286,477,1.864,484,1.214,485,3.004,494,3.422,495,0.825,496,1.48,498,5.263,509,0.825,511,2.013,512,1.123,525,3.146,543,0.825,564,1.328,585,0.677,604,0.825,605,0.825,615,0.551,616,0.463,617,0.953,618,2.013,619,1.48,620,1.711,621,1.711,622,3.637,623,1.123,624,3.637,625,2.455,626,1.711,627,2.203,628,1.328,629,1.711,630,1.711,631,1.711,632,2.014,633,3.146,634,3.956,635,2.455,636,2.838,637,1.711,638,1.711,639,1.711,640,0.953,641,4.233,642,3.637,643,0.953,644,1.48,645,1.48,646,1.711,647,1.711,648,0.953,649,1.711,650,1.48,651,0.717,652,0.584,653,2.838,654,2.455,655,1.711,656,1.48,657,1.48,658,2.838,659,1.711,660,1.48,661,2.455,662,1.711,663,5.493,664,0.953,665,5.722,666,5.722,667,3.758,668,1.711,669,0.953,670,1.711,671,1.48,672,0.953,673,1.711,674,1.711,675,0.953,676,1.711,677,1.711,678,0.953,679,1.711,680,0.953,681,1.711,682,0.953,683,1.711,684,0.953,685,1.711,686,0.953,687,1.711,688,1.711,689,0.953,690,1.711,691,1.328,692,1.48,693,1.711,694,1.711,695,0.953,696,0.953,697,0.953,698,0.74,699,0.953,700,0.953,701,0.488,702,0.953,703,1.711,704,0.953,705,0.953,706,0.953,707,0.953,708,0.953,709,0.953,710,0.953,711,0.953,712,0.953,713,0.953,714,2.838,715,3.269,716,0.953,717,2.327,718,2.838,719,0.953,720,0.953,721,0.953,722,0.953,723,0.953,724,0.953,725,1.711,726,0.953,727,0.953,728,0.953,729,1.711,730,0.953,731,2.838,732,0.953,733,0.953,734,0.953,735,2.838,736,0.953,737,0.953,738,0.953,739,0.953,740,0.953,741,0.953,742,0.953,743,1.711,744,2.327,745,0.953,746,0.953,747,0.953,748,0.953,749,0.953,750,1.711,751,0.953,752,1.711,753,1.711,754,0.953,755,0.953,756,0.953,757,2.327,758,2.838,759,0.953,760,0.953,761,0.953,762,0.953,763,0.953,764,0.953,765,0.953,766,0.953,767,1.711,768,1.711,769,0.953,770,0.953,771,2.838,772,0.953,773,0.953,774,0.953,775,0.953,776,1.711,777,0.953,778,0.953,779,0.953,780,0.953,781,0.953,782,0.953,783,0.953,784,0.953,785,0.953,786,0.953,787,1.711,788,3.269,789,0.953,790,1.711,791,0.953,792,0.953,793,0.953,794,1.711,795,0.953,796,0.953,797,0.953,798,0.953,799,1.711,800,0.953,801,0.953,802,0.953,803,0.953,804,0.953,805,2.327,806,1.711,807,1.711]],["title/modules/NgxEditorjsPluginsModule.html",[31,0.61,808,2.895]],["body/modules/NgxEditorjsPluginsModule.html",[3,0.268,4,0.268,5,0.196,6,0.213,7,0.116,9,0.213,11,1.814,22,0.016,25,0.87,27,0.552,31,0.855,33,0.249,36,0.552,40,2.077,59,0.007,60,0.01,61,0.007,65,0.546,71,1.814,142,3.252,151,1.408,165,2.537,227,2.537,246,1.478,400,3.843,567,2.505,568,1.291,569,1.627,570,1.55,571,1.55,572,2.401,577,2.287,578,1.627,579,1.411,592,4.284,593,2.735,594,2.287,608,3.843,628,3.843,808,5.667,809,3.048,810,3.048,811,3.048,812,4.579,813,4.297,814,4.579,815,4.579,816,4.579,817,4.579,818,4.297,819,4.579,820,3.524,821,3.524,822,4.952,823,4.952,824,3.514,825,4.952,826,4.952,827,4.284,828,3.524,829,3.524,830,3.524,831,3.524,832,3.524,833,3.524,834,3.524,835,3.524,836,2.735,837,3.524]],["title/interfaces/Paragraph.html",[0,0.042,88,1.495]],["body/interfaces/Paragraph.html",[0,0.076,2,0.678,3,0.253,4,0.253,5,0.184,6,0.201,7,0.124,9,0.201,12,1.234,13,0.737,18,0.569,19,1.452,21,1.734,22,0.017,33,0.504,35,0.945,38,1.186,59,0.007,60,0.01,61,0.007,62,1.461,65,0.858,66,1.614,68,2.117,71,1.217,72,2.122,73,1.33,74,2.682,75,1.614,76,1.534,77,2.307,78,2.307,79,1.393,80,1.272,81,2.307,82,1.193,83,2.433,84,2.433,85,1.165,86,2.193,87,2.316,88,2.567,89,3.235,90,2.193,91,2.623,92,2.193,93,1.702,94,1.117,95,2.193,96,2.683,97,2.433,98,2.433,99,1.702,100,2.031,101,1.702,102,2.324,103,1.702,104,1.702,105,1.702,106,1.702,107,2.193,108,1.614,109,1.614]],["title/interfaces/ParagraphBlock.html",[0,0.042,90,1.884]],["body/interfaces/ParagraphBlock.html",[0,0.077,2,0.681,3,0.254,4,0.254,5,0.185,6,0.202,7,0.128,9,0.202,12,1.236,13,0.741,18,0.572,19,1.455,21,1.743,22,0.017,33,0.505,35,0.949,38,1.15,59,0.007,60,0.01,61,0.007,62,1.467,65,0.863,66,1.621,68,2.059,71,1.223,72,2.127,73,1.337,74,2.686,75,1.621,76,1.541,77,2.315,78,2.315,79,1.4,80,1.278,81,2.315,82,1.149,83,2.441,84,2.441,85,1.171,86,2.2,87,2.454,88,2.442,89,2.798,90,2.566,91,2.627,92,2.2,93,1.709,94,1.122,95,2.2,96,2.688,97,2.441,98,2.441,99,1.709,100,2.036,101,1.709,102,2.33,103,1.709,104,1.709,105,1.709,106,1.709,107,2.2,108,1.621,109,1.621]],["title/injectables/PluginCode.html",[615,1.315,838,2.895]],["body/injectables/PluginCode.html",[1,2.212,3,0.386,4,0.386,5,0.282,6,0.381,7,0.134,9,0.307,13,1.711,14,2.12,16,1.568,18,0.87,22,0.016,23,2.526,25,0.835,27,0.794,28,2.956,30,0.95,33,0.359,36,0.794,43,1.958,48,1.385,59,0.01,60,0.013,61,0.01,65,0.695,147,2.378,249,2.466,251,2.748,615,2.032,616,2.466,701,2.6,838,4.476,839,5.076,840,5.076,841,5.455,842,5.076]],["title/modules/PluginCodeModule.html",[31,0.61,812,2.499]],["body/modules/PluginCodeModule.html",[3,0.391,4,0.391,5,0.286,6,0.311,7,0.129,9,0.311,22,0.016,25,0.74,27,0.806,31,1.031,33,0.364,36,0.806,43,1.736,59,0.01,60,0.013,61,0.01,65,0.701,82,1.14,151,1.809,181,2.231,246,2.895,567,1.97,568,1.885,569,2.376,570,2.263,571,2.263,572,2.158,577,2.937,578,2.376,579,2.061,594,2.937,651,2.668,812,4.623,838,5.357,843,4.452,844,4.452,845,5.147,846,2.937,847,2.636,848,2.797,849,5.147,850,2.788,851,5.147]],["title/interfaces/PluginConfig.html",[0,0.042,34,2.895]],["body/interfaces/PluginConfig.html",[0,0.069,1,2.46,2,0.878,3,0.327,4,0.327,5,0.239,6,0.343,7,0.126,8,3.053,9,0.26,10,2.635,11,1.576,12,1.295,13,1.732,14,1.907,15,2.472,16,1.329,17,3.251,22,0.016,23,2.542,24,2.635,25,0.66,26,1.804,27,0.673,28,2.542,29,3.888,30,0.805,31,0.948,32,1.753,33,0.496,34,4.026,35,2.048,36,0.888,37,3.475,38,1.106,39,1.386,40,1.804,41,2.204,42,2.472,43,1.174,44,2.272,45,2.272,46,2.09,47,2.078,48,1.548,49,1.509,50,2.078,51,3.053,52,1.681,53,3.053,54,2.33,55,1.647,56,1.723,57,2.09,58,2.472,59,0.009,60,0.011,61,0.009,69,2.204,852,4.302]],["title/injectables/PluginHeader.html",[615,1.315,853,2.679]],["body/injectables/PluginHeader.html",[1,2.209,3,0.385,4,0.385,5,0.281,6,0.381,7,0.134,9,0.306,13,1.71,14,2.117,16,1.565,18,0.868,22,0.016,23,2.872,25,0.834,27,0.793,28,2.745,30,0.948,33,0.358,36,0.793,43,1.957,48,1.382,59,0.01,60,0.013,61,0.01,65,0.694,91,2.411,147,2.376,249,2.46,251,2.745,615,2.029,616,2.46,701,2.594,853,4.135,854,5.064,855,5.064,856,3.93]],["title/modules/PluginHeaderModule.html",[31,0.61,813,2.345]],["body/modules/PluginHeaderModule.html",[3,0.39,4,0.39,5,0.285,6,0.311,7,0.129,9,0.311,22,0.016,25,0.739,27,0.804,31,1.03,33,0.363,36,0.804,43,1.733,59,0.01,60,0.013,61,0.01,65,0.7,82,1.138,91,2.432,151,1.806,181,2.228,246,2.892,567,1.966,568,1.881,569,2.371,570,2.258,571,2.258,572,2.153,577,2.933,578,2.371,579,2.056,594,2.933,651,2.664,813,4.335,846,2.933,847,2.63,848,2.793,850,2.781,853,4.954,857,4.442,858,4.442,859,5.135,860,5.135,861,5.135]],["title/injectables/PluginImage.html",[615,1.315,862,2.895]],["body/injectables/PluginImage.html",[1,2.209,3,0.385,4,0.385,5,0.281,6,0.381,7,0.134,9,0.306,13,1.71,14,2.117,16,1.565,18,0.868,22,0.016,23,2.872,25,0.834,27,0.793,28,2.745,30,0.948,33,0.358,36,0.793,43,1.957,48,1.382,59,0.01,60,0.013,61,0.01,65,0.694,96,2.641,147,2.376,249,2.46,251,2.745,615,2.029,616,2.46,701,2.594,862,4.469,863,5.064,864,5.064,865,5.064]],["title/modules/PluginImageModule.html",[31,0.61,814,2.499]],["body/modules/PluginImageModule.html",[3,0.391,4,0.391,5,0.286,6,0.311,7,0.129,9,0.311,22,0.016,25,0.74,27,0.806,31,1.031,33,0.364,36,0.806,43,1.736,59,0.01,60,0.013,61,0.01,65,0.701,82,1.14,151,1.809,181,2.231,246,2.895,567,1.97,568,1.885,569,2.376,570,2.263,571,2.263,572,2.158,577,2.937,578,2.376,579,2.061,594,2.937,651,2.668,814,4.623,846,2.937,847,2.636,848,2.797,850,2.788,862,5.357,866,4.452,867,4.452,868,5.147,869,4.452,870,4.452]],["title/injectables/PluginLink.html",[615,1.315,871,2.895]],["body/injectables/PluginLink.html",[1,2.212,3,0.386,4,0.386,5,0.282,6,0.381,7,0.134,9,0.307,13,1.711,14,2.12,16,1.568,18,0.87,22,0.016,23,2.874,25,0.835,27,0.794,28,2.748,30,0.95,33,0.359,36,0.794,43,1.958,48,1.385,59,0.01,60,0.013,61,0.01,65,0.695,147,2.378,249,2.466,251,2.748,615,2.032,616,2.466,701,2.6,871,4.476,872,5.076,873,5.076,874,6.306,875,5.076]],["title/modules/PluginLinkModule.html",[31,0.61,815,2.499]],["body/modules/PluginLinkModule.html",[3,0.391,4,0.391,5,0.286,6,0.311,7,0.129,9,0.311,22,0.016,25,0.74,27,0.806,31,1.031,33,0.364,36,0.806,43,1.736,59,0.01,60,0.013,61,0.01,65,0.701,82,1.14,151,1.809,181,2.231,246,2.895,567,1.97,568,1.885,569,2.376,570,2.263,571,2.263,572,2.158,577,2.937,578,2.376,579,2.061,594,2.937,651,2.668,815,4.623,846,2.937,847,2.636,848,2.797,850,2.788,871,5.357,876,4.452,877,4.452,878,5.147,879,5.147,880,5.147]],["title/injectables/PluginList.html",[615,1.315,881,2.679]],["body/injectables/PluginList.html",[1,2.209,3,0.385,4,0.385,5,0.281,6,0.381,7,0.134,9,0.306,13,1.71,14,2.117,16,1.565,18,0.868,22,0.016,23,2.872,25,0.834,27,0.793,28,2.745,30,0.948,33,0.358,36,0.793,43,1.957,48,1.382,59,0.01,60,0.013,61,0.01,65,0.694,74,2.411,147,2.376,249,2.46,251,2.745,615,2.029,616,2.46,701,2.594,881,4.135,882,5.064,883,5.064,884,4.38]],["title/modules/PluginListModule.html",[31,0.61,816,2.499]],["body/modules/PluginListModule.html",[3,0.39,4,0.39,5,0.285,6,0.311,7,0.129,9,0.311,22,0.016,25,0.739,27,0.804,31,1.03,33,0.363,36,0.804,43,1.733,59,0.01,60,0.013,61,0.01,65,0.7,82,1.138,151,1.806,181,2.228,246,2.892,567,1.966,568,1.881,569,2.371,570,2.258,571,2.258,572,2.153,577,2.933,578,2.371,579,2.056,594,2.933,651,2.664,816,4.621,846,2.933,847,2.63,848,2.793,850,2.781,881,4.954,885,4.442,886,4.442,887,5.135,888,5.135,889,5.135]],["title/injectables/PluginMarker.html",[615,1.315,890,2.895]],["body/injectables/PluginMarker.html",[1,2.127,3,0.362,4,0.362,5,0.265,6,0.403,7,0.135,9,0.288,13,1.719,14,2.038,16,1.873,17,3.793,18,0.817,22,0.016,23,2.81,25,0.816,27,0.746,28,2.67,30,0.893,33,0.337,36,0.746,38,0.781,43,1.915,48,1.655,59,0.01,60,0.012,61,0.01,147,2.454,249,2.316,251,2.965,615,1.954,616,2.316,701,2.442,824,4.303,890,4.303,891,4.768,892,6.069,893,4.768,894,4.768,895,4.768,896,4.768]],["title/modules/PluginMarkerModule.html",[31,0.61,817,2.499]],["body/modules/PluginMarkerModule.html",[3,0.39,4,0.39,5,0.285,6,0.311,7,0.129,9,0.311,22,0.016,25,0.739,27,0.804,31,1.03,33,0.363,36,0.804,43,1.733,59,0.01,60,0.013,61,0.01,82,1.138,151,1.806,181,2.228,246,2.892,567,1.966,568,1.881,569,2.371,570,2.258,571,2.258,572,2.153,577,2.933,578,2.371,579,2.056,594,2.933,651,2.664,817,4.621,824,4.508,846,2.933,847,2.63,848,2.793,850,2.781,890,5.354,892,5.494,897,4.442,898,4.442,899,5.135,900,5.135,901,5.135]],["title/injectables/PluginParagraph.html",[615,1.315,902,2.679]],["body/injectables/PluginParagraph.html",[1,2.212,3,0.386,4,0.386,5,0.282,6,0.381,7,0.134,9,0.307,13,1.711,14,2.12,16,1.568,18,0.87,22,0.016,23,2.874,25,0.835,27,0.794,28,2.748,30,0.95,33,0.359,36,0.794,43,1.958,48,1.385,59,0.01,60,0.013,61,0.01,65,0.695,88,2.31,147,2.378,249,2.466,251,2.748,615,2.032,616,2.466,701,2.6,902,4.141,903,5.076,904,5.076,905,3.602]],["title/modules/PluginParagraphModule.html",[31,0.61,818,2.345]],["body/modules/PluginParagraphModule.html",[3,0.391,4,0.391,5,0.286,6,0.311,7,0.129,9,0.311,22,0.016,25,0.74,27,0.806,31,1.031,33,0.364,36,0.806,43,1.736,59,0.01,60,0.013,61,0.01,65,0.701,82,1.14,151,1.809,181,2.231,246,2.895,567,1.97,568,1.885,569,2.376,570,2.263,571,2.263,572,2.158,577,2.937,578,2.376,579,2.061,594,2.937,651,2.668,818,4.338,846,2.937,847,2.636,848,2.797,850,2.788,902,4.957,906,4.452,907,4.452,908,5.147,909,5.147,910,5.147]],["title/injectables/PluginSimpleImage.html",[615,1.315,911,2.895]],["body/injectables/PluginSimpleImage.html",[1,2.19,3,0.38,4,0.38,5,0.277,6,0.378,7,0.133,9,0.302,13,1.705,14,2.099,16,1.543,18,0.856,22,0.016,23,2.501,25,0.83,27,0.782,28,2.728,30,0.935,33,0.353,36,0.782,43,1.704,48,1.363,59,0.01,60,0.013,61,0.01,65,0.688,96,2.857,147,2.367,157,2.501,249,2.426,251,2.728,615,2.012,616,2.426,701,2.559,836,4.846,911,4.431,912,5.401,913,4.995,914,5.401,915,4.995,916,6.244,917,4.995]],["title/modules/PluginSimpleImageModule.html",[31,0.61,819,2.499]],["body/modules/PluginSimpleImageModule.html",[3,0.385,4,0.385,5,0.281,6,0.306,7,0.128,9,0.306,22,0.016,25,0.732,27,0.793,31,1.024,33,0.358,36,0.793,40,2.641,43,1.718,59,0.01,60,0.013,61,0.01,65,0.694,96,2.641,151,1.791,181,2.209,246,2.874,567,1.939,568,1.855,569,2.338,570,2.227,571,2.227,572,2.124,577,2.908,578,2.338,579,2.028,594,2.908,651,2.641,819,4.605,836,3.93,846,2.908,847,2.594,848,2.769,850,2.743,869,4.38,870,4.38,911,5.336,912,4.38,914,5.929,918,4.38,919,4.38,920,5.064]],["title/interfaces/PluginsMap.html",[0,0.042,64,2.679]],["body/interfaces/PluginsMap.html",[0,0.07,1,2.49,2,0.911,3,0.34,4,0.34,5,0.248,6,0.352,7,0.083,9,0.27,10,2.737,11,1.637,12,1.319,13,1.74,14,1.954,15,2.568,16,1.381,17,3.311,22,0.016,23,2.589,24,2.737,25,0.676,26,1.874,27,0.699,28,2.589,29,3.96,30,0.836,31,0.869,32,1.797,33,0.484,35,2.07,36,0.91,37,3.562,38,1.122,39,1.44,40,1.874,41,2.289,42,2.568,43,1.219,44,1.789,45,1.789,47,1.637,48,1.219,50,1.637,52,1.324,54,2.42,55,1.711,56,1.789,57,2.17,58,2.568,59,0.009,60,0.012,61,0.009,63,3.171,64,3.819,69,2.289,921,4.468]],["title/interfaces/ReadyMap.html",[0,0.042,126,2.345]],["body/interfaces/ReadyMap.html",[0,0.071,2,0.874,3,0.326,4,0.326,5,0.238,6,0.342,7,0.134,9,0.259,22,0.016,25,0.737,30,0.802,33,0.495,35,2.164,38,1.148,39,2.451,48,1.169,59,0.009,60,0.011,61,0.009,65,0.623,69,2.195,94,1.44,110,2.463,111,2.814,112,4.996,113,4.518,114,2.195,115,3.065,116,1.27,118,1.641,119,2.195,120,2.425,121,2.082,122,2.463,123,2.537,124,2.488,125,3.245,126,3.252,127,2.463,128,2.321,129,2.321,130,2.625,131,2.266,922,4.285]],["title/interfaces/SavedMap.html",[0,0.042,127,2.345]],["body/interfaces/SavedMap.html",[0,0.071,2,0.874,3,0.326,4,0.326,5,0.238,6,0.342,7,0.134,9,0.259,22,0.016,25,0.737,30,0.802,33,0.495,35,2.164,38,1.148,39,2.451,48,1.169,59,0.009,60,0.011,61,0.009,65,0.623,69,2.195,94,1.44,110,2.463,111,2.814,112,4.996,113,4.518,114,2.195,115,3.431,116,1.27,118,1.641,119,2.195,120,2.425,121,2.082,122,2.463,123,2.537,124,1.884,125,3.245,126,2.463,127,3.252,128,2.321,129,2.321,130,2.625,131,2.266,923,4.285]],["title/interfaces/ToolSettingsMap.html",[0,0.042,41,2.09]],["body/interfaces/ToolSettingsMap.html",[0,0.069,1,2.222,2,0.874,3,0.326,4,0.326,5,0.238,6,0.342,7,0.126,8,3.041,9,0.259,10,2.625,11,1.57,12,1.292,13,1.723,14,1.902,15,2.463,16,1.324,17,3.245,22,0.016,23,2.805,24,2.625,25,0.658,26,1.797,27,0.671,28,2.698,29,4.127,30,0.802,31,0.845,32,1.324,33,0.495,34,3.041,35,2.046,36,0.671,37,2.625,38,1.104,39,1.823,40,2.373,41,2.898,42,3.252,43,1.544,44,2.266,45,2.266,46,2.082,47,2.073,48,1.544,49,1.503,50,2.073,51,3.041,52,1.677,53,3.041,54,2.321,55,1.641,56,1.716,57,2.082,58,2.463,59,0.009,60,0.011,61,0.009,69,2.195,924,4.285]],["title/interfaces/ToolSettingsMap-1.html",[0,0.035,41,1.769,62,1.518]],["body/interfaces/ToolSettingsMap-1.html",[0,0.07,1,2.263,2,0.908,3,0.338,4,0.338,5,0.247,6,0.351,7,0.083,9,0.269,10,2.726,11,1.63,12,1.316,13,1.731,14,1.949,15,2.557,16,1.375,17,3.305,22,0.016,23,2.84,24,2.726,25,0.675,26,1.866,27,0.697,28,2.738,29,4.188,30,0.833,31,0.665,32,1.375,33,0.484,35,2.067,36,0.697,37,2.726,38,1.12,39,1.869,40,2.432,41,2.971,42,3.333,43,1.583,44,1.782,45,1.782,47,1.63,48,1.214,50,1.63,52,1.319,54,2.41,55,1.704,56,1.782,57,2.162,58,2.557,59,0.009,60,0.012,61,0.009,63,3.158,64,2.922,69,2.279,925,4.45]],["title/changelog.html",[926,2.268,927,2.268,928,1.769]],["body/changelog.html",[0,0.043,7,0.125,22,0.011,31,0.838,47,2.555,52,2.124,56,1.693,59,0.008,60,0.011,61,0.008,65,0.466,80,2.147,82,0.758,85,1.483,92,1.952,116,1.253,128,2.054,149,2.054,151,1.202,174,2.29,201,3.63,224,3.435,225,2.59,236,2.776,253,2.59,293,3.682,330,2.872,367,2.29,392,3.682,399,3.657,420,2.43,431,3.682,476,3.281,485,3.98,492,2.43,510,3,538,3.657,572,1.773,582,4.105,584,3.281,623,2.776,628,3.281,651,1.773,652,2.59,660,3.657,667,2.776,691,3.281,928,2.872,929,2.59,930,4.228,931,4.884,932,3,933,4.228,934,3.281,935,4.228,936,2.776,937,5.608,938,4.228,939,4.756,940,6.292,941,4.228,942,5.797,943,4.228,944,4.228,945,4.851,946,4.228,947,4.228,948,3.657,949,4.228,950,4.228,951,4.884,952,4.228,953,4.228,954,5.608,955,4.579,956,4.228,957,4.228,958,4.228,959,3.281,960,4.228,961,4.228,962,5.608,963,4.228,964,4.228,965,4.228,966,2.59,967,3.657,968,4.228,969,4.228,970,4.228,971,4.228,972,4.851,973,3,974,3.281,975,4.228,976,4.228,977,4.228,978,5.608,979,3.657,980,5.608,981,4.228,982,5.608,983,4.851,984,3.657,985,3.281,986,4.228,987,4.228,988,2.43,989,4.228,990,4.228,991,4.228,992,4.228,993,4.228,994,4.228,995,4.228,996,4.228,997,4.228,998,4.228,999,4.228,1000,3.657,1001,3.281,1002,3.657]],["title/contributing.html",[926,2.268,927,2.268,1003,2.987]],["body/contributing.html",[0,0.033,5,0.177,22,0.009,48,0.871,52,1.368,55,1.767,59,0.009,60,0.009,61,0.006,73,1.278,92,1.474,121,2.242,128,1.691,129,1.729,142,3.559,149,2.633,154,1.635,155,1.834,159,1.278,184,2.652,251,1.848,264,2.827,315,2.477,367,1.729,403,2.499,425,2.096,444,3.992,482,2.761,488,2.761,492,1.834,568,1.169,623,3.03,625,2.761,627,2.477,632,2.265,633,2.761,650,2.761,654,2.761,657,2.761,661,5.136,691,2.477,692,2.761,698,2.477,827,2.761,841,5.856,848,2.029,959,2.477,973,2.265,983,3.992,984,2.761,988,4.258,1000,3.992,1002,2.761,1003,3.992,1004,3.992,1005,4.688,1006,3.192,1007,3.192,1008,2.761,1009,3.192,1010,3.192,1011,2.761,1012,6.77,1013,4.615,1014,3.192,1015,5.42,1016,2.265,1017,3.192,1018,3.192,1019,3.582,1020,2.761,1021,5.42,1022,2.477,1023,3.192,1024,3.192,1025,3.192,1026,3.192,1027,3.192,1028,5.938,1029,2.477,1030,3.192,1031,2.477,1032,3.192,1033,3.192,1034,3.992,1035,3.192,1036,3.192,1037,3.992,1038,3.192,1039,4.615,1040,3.192,1041,3.192,1042,3.192,1043,4.615,1044,3.192,1045,6.299,1046,3.192,1047,6.299,1048,4.615,1049,2.761,1050,4.615,1051,3.192,1052,3.192,1053,3.192,1054,3.192,1055,3.192,1056,3.192,1057,3.192,1058,3.192,1059,4.615,1060,3.192,1061,3.192,1062,4.615,1063,3.192,1064,3.192,1065,3.192,1066,4.615,1067,3.192,1068,4.615,1069,6.299,1070,3.192,1071,3.192,1072,3.192,1073,4.615,1074,3.192,1075,3.192,1076,3.192,1077,3.192,1078,3.192,1079,3.192,1080,3.192,1081,3.192,1082,3.192,1083,3.192,1084,3.192,1085,3.192,1086,3.192,1087,3.192,1088,4.615,1089,5.42,1090,3.192,1091,3.192,1092,3.192,1093,3.192,1094,3.192,1095,3.192,1096,3.192,1097,3.192,1098,4.615,1099,3.192,1100,3.192,1101,2.761,1102,3.192,1103,3.192,1104,3.192,1105,4.615,1106,3.192,1107,3.192,1108,3.192,1109,4.615,1110,3.192,1111,2.761,1112,3.192,1113,3.192,1114,3.192,1115,3.192,1116,3.192,1117,4.615,1118,3.192,1119,3.192,1120,2.477,1121,3.192,1122,3.192,1123,3.192,1124,3.192,1125,3.192,1126,3.192,1127,3.192,1128,3.192,1129,3.192,1130,3.192,1131,3.192,1132,3.192,1133,3.192,1134,4.615,1135,3.192,1136,3.192,1137,3.192,1138,3.192,1139,3.192,1140,3.192,1141,3.192,1142,2.761,1143,4.615,1144,4.615,1145,4.615,1146,3.192,1147,3.192,1148,3.192,1149,3.192,1150,3.192,1151,3.192,1152,3.192,1153,3.192,1154,3.192,1155,3.192,1156,3.192,1157,3.192,1158,4.615,1159,3.192,1160,4.615,1161,3.192,1162,3.192,1163,2.761,1164,3.192,1165,3.192,1166,4.615,1167,2.761,1168,3.192,1169,3.192,1170,3.192,1171,3.192,1172,3.192,1173,3.192,1174,3.192,1175,3.192,1176,3.192,1177,3.192,1178,3.192,1179,3.192,1180,3.192,1181,3.192,1182,3.192,1183,3.192,1184,3.192,1185,3.192,1186,3.192,1187,3.192,1188,3.192,1189,3.192,1190,3.192,1191,3.192,1192,3.192,1193,3.192,1194,3.192,1195,3.192,1196,3.192,1197,3.192,1198,3.192]],["title/dependencies.html",[568,1.788,974,2.68]],["body/dependencies.html",[22,0.016,27,0.775,30,0.927,49,2.178,59,0.01,60,0.012,61,0.01,91,1.895,119,2.536,212,3.842,213,3.842,568,1.813,593,3.842,667,3.25,856,3.842,884,4.282,905,3.513,1016,3.513,1199,4.95,1200,7.671,1201,4.95,1202,6.209,1203,4.95,1204,4.95,1205,4.95,1206,4.95,1207,4.95,1208,5.371,1209,4.818,1210,4.95,1211,4.95,1212,6.209,1213,4.95,1214,4.95,1215,4.282,1216,4.95,1217,4.95,1218,4.95,1219,4.95,1220,4.95,1221,4.95,1222,4.95,1223,4.282,1224,6.209,1225,4.95,1226,4.282,1227,4.95,1228,4.95,1229,4.95,1230,4.95,1231,4.95,1232,4.95,1233,4.95,1234,4.95,1235,3.032,1236,4.95,1237,4.95,1238,4.95,1239,4.95]],["title/miscellaneous/functions.html",[1240,2.115,1241,4.223]],["body/miscellaneous/functions.html",[6,0.418,7,0.129,9,0.385,12,1.513,16,1.968,18,0.884,20,2.268,21,1.145,22,0.015,31,0.952,32,1.968,36,0.808,59,0.01,60,0.013,61,0.01,67,2.965,123,2.066,137,2.941,139,2.941,141,2.382,147,2.052,150,2.794,159,2.066,374,3.972,384,3.16,389,3.16,403,2.794,425,4.538,452,4.004,473,4.944,506,4.944,580,4.462,581,5.51,599,5.51,606,4.462,611,5.51,1240,3.16,1241,4.462,1242,4.462,1243,6.243,1244,5.159,1245,5.159,1246,4.462,1247,5.159,1248,5.159,1249,5.159,1250,5.159,1251,5.159,1252,4.004]],["title/index.html",[18,0.592,926,2.268,927,2.268]],["body/index.html",[0,0.043,7,0.142,11,2.054,19,1.107,22,0.011,31,0.838,47,2.054,49,1.967,55,1.619,56,2.246,59,0.008,60,0.011,61,0.008,65,0.466,67,2.43,79,1.773,82,0.758,116,1.662,121,2.054,139,2.589,143,3.435,146,1.952,151,1.906,154,2.166,181,1.967,201,3.408,217,2.29,220,2.166,222,2.43,224,2.59,225,2.59,227,2.166,233,4.352,234,3.281,236,2.776,264,3.435,292,3.281,293,2.776,311,3.854,325,2.43,330,3.746,338,3,339,3,340,3.281,395,2.43,401,2.776,402,3.281,403,3.408,420,2.43,431,2.776,477,2.776,510,4.466,512,2.776,568,1.549,572,1.773,579,1.693,582,3.854,583,4.851,584,4.352,623,3.682,632,3.98,645,3.657,651,2.639,652,2.59,671,3.657,928,3.223,929,2.59,931,4.352,932,3.98,934,4.352,936,3.682,955,4.132,966,4.105,988,3.851,1004,5.443,1235,2.59,1253,4.228,1254,5.608,1255,4.228,1256,4.228,1257,4.228,1258,4.228,1259,3.281,1260,2.59,1261,3.657,1262,4.851,1263,3.657,1264,3.657,1265,3.657,1266,3.281,1267,3.657,1268,3.657,1269,3.657,1270,3.657,1271,3.657,1272,4.228,1273,4.352,1274,5.608,1275,3.657,1276,3.657,1277,3.657,1278,4.228,1279,3.435,1280,5.608,1281,3.657,1282,3.657,1283,3.281,1284,4.228]],["title/license.html",[926,2.268,927,2.268,1285,3.453]],["body/license.html",[22,0.012,59,0.01,60,0.012,61,0.01,85,1.736,129,2.681,214,3.513,403,3.363,579,1.982,929,3.032,939,3.513,959,5.265,966,3.032,1029,3.842,1034,4.282,1037,5.371,1049,4.282,1120,3.842,1163,4.282,1167,4.282,1281,4.282,1282,4.282,1286,4.282,1287,4.95,1288,4.95,1289,6.783,1290,4.95,1291,4.95,1292,4.95,1293,4.95,1294,4.95,1295,6.209,1296,7.739,1297,4.95,1298,4.95,1299,4.95,1300,6.209,1301,4.95,1302,4.95,1303,4.95,1304,4.282,1305,4.95,1306,4.95,1307,4.95,1308,4.95,1309,6.209,1310,4.95,1311,4.95,1312,4.95,1313,4.95,1314,4.95,1315,4.95,1316,6.209,1317,6.209,1318,4.282,1319,4.95,1320,4.95,1321,4.95,1322,4.95,1323,4.95,1324,4.95,1325,4.95,1326,4.95,1327,4.95,1328,4.95,1329,4.95,1330,4.95,1331,4.95,1332,4.95,1333,4.95,1334,4.95,1335,4.95,1336,4.95,1337,4.95,1338,4.95,1339,4.95,1340,4.95,1341,4.95,1342,4.95,1343,4.95]],["title/modules.html",[567,2.097]],["body/modules.html",[22,0.013,59,0.011,60,0.013,61,0.011,566,3.365,567,2.103,808,3.899,812,3.365,813,3.157,814,3.365,815,3.365,816,3.365,817,3.365,818,3.157,819,3.365,1209,6.144,1260,4.849,1344,7.917,1345,7.917]],["title/overview.html",[1346,4.737]],["body/overview.html",[2,0.768,22,0.016,31,0.562,59,0.008,60,0.01,61,0.008,62,1.656,217,3.844,220,3.038,222,4.079,229,4.66,246,1.579,311,2.306,395,2.164,566,4.665,567,1.442,568,1.379,569,1.739,570,1.656,571,1.656,572,1.579,573,3.257,574,3.257,575,3.257,576,3.257,577,2.394,578,1.739,579,1.508,616,1.829,808,5.645,809,3.257,810,3.257,811,3.257,812,4.494,813,4.217,814,4.494,815,4.494,816,4.494,817,4.494,818,4.217,819,4.494,838,4.209,843,3.257,844,3.257,853,3.895,857,3.257,858,3.257,862,4.209,866,3.257,867,3.257,871,4.209,876,3.257,877,3.257,881,3.895,885,3.257,886,3.257,890,4.209,897,3.257,898,3.257,902,3.895,906,3.257,907,3.257,911,4.209,918,3.257,919,3.257,1346,3.257,1347,3.257,1348,3.765,1349,3.765,1350,3.765]],["title/todo.html",[926,2.268,927,2.268,1351,2.987]],["body/todo.html",[7,0.136,22,0.013,31,0.791,49,2.453,55,2.478,59,0.011,60,0.013,61,0.011,115,2.868,120,2.027,135,2.328,136,3.243,137,3.228,157,2.121,178,2.868,201,2.868,205,3.758,227,2.712,234,4.11,253,3.243,395,3.043,420,3.72,492,3.043,514,3.758,567,2.027,656,4.58,847,2.712,929,3.243,936,3.477,955,3.477,1101,4.58,1111,4.58,1215,4.58,1223,4.58,1260,3.965,1286,4.58,1304,4.58,1351,4.58,1352,5.295,1353,6.657,1354,5.295,1355,5.295,1356,4.58,1357,5.295,1358,5.295,1359,5.295,1360,5.295,1361,5.295,1362,5.295,1363,4.58,1364,4.58,1365,3.243,1366,5.295,1367,4.58]],["title/miscellaneous/typealiases.html",[1240,2.115,1368,4.882]],["body/miscellaneous/typealiases.html",[6,0.342,18,0.971,21,1.597,22,0.016,38,1.105,59,0.011,60,0.014,61,0.011,65,0.743,66,2.751,73,2.268,74,2.168,75,2.751,76,2.615,77,3.275,78,3.275,79,2.375,80,2.168,81,3.275,86,2.615,90,2.615,95,2.615,107,2.615,108,2.751,109,3.275,1240,3.469,1369,5.663,1370,6.741]],["title/miscellaneous/variables.html",[1022,3.789,1240,2.115]],["body/miscellaneous/variables.html",[6,0.433,7,0.133,8,2.752,18,0.665,21,1.436,22,0.016,31,0.579,36,0.828,38,0.635,39,1.249,44,2.712,45,2.799,46,1.884,47,2.206,48,1.058,49,1.36,51,3.755,52,2.158,53,2.752,54,2.866,55,2.026,56,2.119,57,3.143,58,3.041,59,0.008,60,0.011,61,0.008,63,2.752,82,1.379,116,1.149,120,1.485,123,1.553,131,1.553,137,1.791,140,2.327,145,2.375,146,1.791,157,1.553,158,1.705,165,1.986,166,2.327,167,3.041,168,2.229,169,1.884,170,2.229,171,2.229,172,3.041,173,2.375,174,2.1,175,2.866,176,2.375,188,3.354,189,4.674,190,3.01,191,4.577,193,3.354,201,2.1,203,4.577,208,4.592,222,2.229,224,2.375,225,2.375,226,4.577,227,2.71,228,4.577,229,2.546,230,4.577,231,3.241,243,2.1,257,4.99,357,3.755,358,3.01,385,3.01,386,3.474,387,3.01,388,3.01,389,2.375,390,3.755,391,3.01,392,2.546,393,4.106,394,3.01,401,2.546,1022,3.01,1226,3.354,1240,2.375,1242,3.354,1243,4.577,1246,3.354,1266,3.01,1371,5.291,1372,6.023,1373,5.291,1374,3.878,1375,3.878,1376,6.023,1377,6.023,1378,3.878,1379,5.291]],["title/additional-documentation/tinynodes-library-docs.html",[71,0.968,652,1.618,929,1.618,936,1.735,1365,1.618]],["body/additional-documentation/tinynodes-library-docs.html",[22,0.014,49,2.061,59,0.012,60,0.014,61,0.012,846,2.712,848,2.583,928,3.009,929,3.598,932,4.169,934,4.559,942,5.081,945,5.081,979,5.081,985,4.559,1005,5.081,1011,5.081,1019,4.559,1029,4.559,1235,4.219,1279,3.598,1283,4.559,1380,5.874,1381,5.874,1382,5.081,1383,6.888,1384,5.874]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[7,0.049,49,0.927,71,0.968,1279,1.618,1365,1.618]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html",[0,0.03,7,0.143,9,0.177,11,1.587,12,0.597,13,0.962,16,0.905,19,0.767,20,1.905,21,0.65,22,0.016,25,0.741,27,0.458,30,0.811,31,0.952,32,1.88,33,0.307,35,1.467,36,0.458,39,0.944,40,2.163,46,1.423,47,2.088,49,1.027,52,1.529,54,2.347,55,1.121,56,1.735,57,2.105,59,0.006,60,0.009,61,0.006,65,0.628,67,1.683,68,1.594,74,1.121,79,2.163,82,1.021,85,1.027,88,1.587,91,1.121,114,1.5,116,1.689,118,1.121,120,1.121,121,2.105,131,1.735,135,2.268,136,2.654,137,2.001,139,2.381,140,1.288,142,1.923,143,3.159,146,1.352,147,0.944,149,1.423,151,1.232,152,1.794,154,1.5,157,2.066,158,2.268,159,1.173,165,2.22,169,1.423,179,2.22,181,1.027,201,3.087,208,2.079,217,1.586,220,1.5,222,1.683,224,1.794,225,1.794,227,2.642,233,3.363,236,2.845,243,1.586,246,1.228,257,1.923,263,1.794,269,2.273,292,2.273,293,1.923,311,1.794,323,1.923,325,2.49,330,3.263,338,2.079,339,2.079,340,2.273,359,3.66,360,1.923,361,2.079,362,3.075,363,2.079,364,3.075,367,1.586,370,2.079,375,2.079,376,2.273,377,2.079,378,2.273,379,3.075,383,2.079,389,1.794,395,1.683,401,1.923,403,3.295,420,2.49,431,2.845,432,2.079,440,2.273,445,3.748,456,2.079,477,1.923,484,2.079,489,3.748,492,1.683,510,3.66,512,1.923,564,2.273,565,2.534,566,2.654,570,1.288,571,1.288,579,1.173,582,3.491,586,3.748,587,2.534,594,2.001,608,2.273,610,2.534,627,2.273,632,2.079,651,2.838,652,3.159,813,1.683,816,1.794,818,1.683,846,2.001,848,1.288,853,2.845,881,2.845,902,2.845,905,2.079,928,1.5,932,2.079,936,2.845,955,3.743,966,1.794,988,1.683,1001,3.363,1016,3.66,1120,2.273,1208,2.534,1209,2.273,1235,3.159,1252,2.273,1259,2.273,1260,1.794,1261,2.534,1262,4.461,1263,2.534,1264,2.534,1265,3.748,1266,2.273,1267,2.534,1268,2.534,1269,2.534,1270,2.534,1271,2.534,1276,2.534,1277,2.534,1364,2.534,1367,2.534,1385,2.929,1386,2.929,1387,2.929,1388,2.929,1389,2.929,1390,2.534,1391,2.929,1392,2.929,1393,4.333,1394,5.158,1395,2.929,1396,4.333,1397,2.929,1398,2.929,1399,2.929,1400,2.929,1401,2.929,1402,2.929,1403,4.333,1404,2.929]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[7,0.049,49,0.927,71,0.968,928,1.353,1365,1.618]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html",[0,0.031,1,1.07,5,0.169,7,0.14,12,0.622,13,1.29,14,1.501,17,2.287,19,0.799,20,1.341,22,0.009,25,0.355,31,0.924,32,1.632,36,0.699,38,0.5,40,1.873,42,1.753,46,1.482,47,2.558,49,1.07,52,0.904,55,2.022,56,1.222,59,0.006,60,0.009,61,0.006,67,1.753,68,0.943,73,2.115,74,1.168,76,1.409,79,1.279,80,2.786,82,1.109,85,2.17,88,1.118,91,1.168,100,1.636,116,1.979,121,2.566,125,1.563,135,1.341,136,1.869,137,1.409,139,2.062,142,2.003,143,2.735,147,0.983,151,0.868,157,2.115,158,1.341,159,2.588,160,1.652,166,2.322,174,1.652,177,1.652,180,1.869,181,1.07,192,2.368,201,3.5,205,2.165,208,2.165,217,1.652,220,2.705,222,3.035,224,3.235,225,1.869,227,1.563,229,2.003,243,1.652,251,1.222,253,1.869,263,1.869,264,2.735,311,2.735,325,2.566,330,2.705,339,2.165,341,2.165,351,2.368,360,2.003,366,2.368,367,1.652,395,3.035,400,2.368,401,2.003,402,2.368,403,2.418,420,3.837,427,2.639,431,2.003,456,2.165,464,5.181,477,2.003,484,3.169,485,2.165,492,2.566,506,2.368,512,2.003,514,2.165,566,1.869,582,1.869,585,3.169,615,0.983,618,2.639,619,2.639,623,2.003,635,2.639,644,2.639,652,3.789,667,2.003,698,3.465,928,2.705,931,2.368,939,4.956,948,3.862,951,3.465,955,2.003,966,3.235,967,3.862,972,6.356,973,4.738,974,3.465,985,2.368,988,3.555,1001,3.465,1008,2.639,1020,2.639,1031,2.368,1142,2.639,1235,2.735,1252,2.368,1260,2.735,1273,2.368,1275,2.639,1279,1.869,1283,4.511,1318,3.862,1347,4.568,1353,2.639,1356,2.639,1382,2.639,1405,2.639,1406,2.639,1407,2.639,1408,2.639,1409,2.639,1410,2.639,1411,3.051,1412,6.041,1413,3.051,1414,3.051,1415,3.051,1416,4.465,1417,3.051,1418,3.051,1419,3.051,1420,3.051,1421,3.051,1422,3.051,1423,3.051,1424,3.051,1425,4.465,1426,3.051,1427,3.862,1428,3.051,1429,3.051,1430,3.051,1431,3.051,1432,3.051,1433,3.051,1434,3.051,1435,3.051,1436,3.051,1437,3.051,1438,4.465,1439,3.051,1440,2.639,1441,3.051,1442,2.639,1443,3.051,1444,2.639,1445,3.051,1446,2.639,1447,3.051,1448,3.051,1449,3.051,1450,3.051,1451,3.051,1452,3.051,1453,3.051,1454,4.465,1455,3.051,1456,3.051,1457,2.639,1458,3.051,1459,3.051]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[7,0.044,47,0.866,49,0.829,71,0.866,1279,1.448,1365,1.448]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html",[5,0.25,7,0.128,9,0.272,13,1.297,22,0.016,31,0.673,47,2.378,49,1.58,55,1.725,56,1.804,59,0.009,60,0.012,61,0.009,65,0.818,74,1.725,82,0.807,89,2.08,139,2.08,151,2.164,157,2.974,330,3.324,374,2.589,567,2.238,568,1.65,582,2.759,585,4.149,812,2.759,813,2.589,814,2.759,815,2.759,817,2.759,818,2.589,819,2.759,824,3.197,846,3.476,856,3.496,905,3.197,988,2.589,1016,4.149,1235,2.759,1259,3.496,1260,3.581,1279,4.61,1363,3.896,1390,3.896,1460,4.505,1461,4.505,1462,4.505,1463,4.505,1464,4.505,1465,4.505,1466,4.505,1467,4.505]],["title/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[7,0.044,47,0.866,49,0.829,71,0.866,928,1.211,1365,1.448]],["body/additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html",[5,0.305,22,0.013,31,1.061,46,2.669,47,2.012,59,0.011,60,0.013,61,0.011,80,2.103,82,0.984,85,1.927,166,2.415,251,2.2,351,4.263,464,4.263,492,3.157,514,3.899,651,2.304,667,3.607,848,2.415,928,3.391,939,5.042,951,4.263,966,3.365,973,4.698,988,3.804,1019,4.263,1031,4.263,1273,5.137,1405,4.752,1406,4.752,1407,4.752,1408,4.752,1409,4.752,1410,4.752,1412,6.145,1427,4.752,1440,4.752,1442,4.752,1444,4.752,1446,4.752,1457,4.752,1468,5.493,1469,5.493,1470,5.493]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["0",{"_index":169,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["0.0.5",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["05",{"_index":1412,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1",{"_index":62,"title":{"interfaces/BasePlugin-1.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["1.0.0",{"_index":1457,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.0.4",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1446,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.1.1",{"_index":1444,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["1.1.2",{"_index":1441,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.2",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":1439,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.0",{"_index":1432,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.2",{"_index":1426,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["1.3.4",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":1196,"title":{},"body":{"contributing.html":{}}}],["10",{"_index":1347,"title":{},"body":{"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["11",{"_index":1442,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["12th",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":1440,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["13th",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1427,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["15th",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":1348,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":1419,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["2.0.8",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1411,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["2.13.0",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":939,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["22",{"_index":1420,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["22nd",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":1413,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["29",{"_index":1350,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":93,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["6.3.3",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["6.9.0",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1278,"title":{},"body":{"index.html":{}}}],["7.0.0",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["7.2.15",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1349,"title":{},"body":{"overview.html":{}}}],["_disabled",{"_index":283,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_empty",{"_index":289,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_focused",{"_index":270,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_placeholder",{"_index":265,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_required",{"_index":276,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["above",{"_index":1315,"title":{},"body":{"license.html":{}}}],["abusive",{"_index":1161,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":1115,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":1080,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":292,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["accessors",{"_index":419,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["account",{"_index":1151,"title":{},"body":{"contributing.html":{}}}],["acting",{"_index":1152,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":1120,"title":{},"body":{"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["actions",{"_index":693,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["active",{"_index":434,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["adapted",{"_index":1194,"title":{},"body":{"contributing.html":{}}}],["add",{"_index":1353,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["added",{"_index":80,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["adding",{"_index":54,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["additional",{"_index":71,"title":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["address",{"_index":1105,"title":{},"body":{"contributing.html":{}}}],["adds",{"_index":670,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["adheres",{"_index":1409,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["advances",{"_index":1095,"title":{},"body":{"contributing.html":{}}}],["aftercontentinit",{"_index":198,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["against",{"_index":666,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["age",{"_index":1053,"title":{},"body":{"contributing.html":{}}}],["aliases",{"_index":1369,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":1130,"title":{},"body":{"contributing.html":{}}}],["allow",{"_index":15,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["allows",{"_index":379,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["along",{"_index":1389,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["and/or",{"_index":1307,"title":{},"body":{"license.html":{}}}],["angular",{"_index":330,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["angular/animations",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":195,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/cdk/coercion",{"_index":197,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/common",{"_index":593,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":27,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/flex",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":212,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":213,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1208,"title":{},"body":{"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["angular/router",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["aot",{"_index":1454,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["api",{"_index":181,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["apicall",{"_index":635,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["apicall(options",{"_index":647,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["apiresult",{"_index":742,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["apiresult.asobservable",{"_index":756,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["apiresult.next",{"_index":752,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["app",{"_index":392,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":1395,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appcomponent",{"_index":1394,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appearance",{"_index":1063,"title":{},"body":{"contributing.html":{}}}],["application",{"_index":56,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["applicationref",{"_index":642,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["applies",{"_index":1141,"title":{},"body":{"contributing.html":{}}}],["appmodule",{"_index":1397,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["appointed",{"_index":1153,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1117,"title":{},"body":{"contributing.html":{}}}],["area",{"_index":378,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["args",{"_index":186,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["argument",{"_index":653,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["arguments",{"_index":658,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["aria",{"_index":308,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["arising",{"_index":1341,"title":{},"body":{"license.html":{}}}],["array",{"_index":451,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["associated",{"_index":1297,"title":{},"body":{"license.html":{}}}],["async",{"_index":407,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["attach",{"_index":401,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attached",{"_index":427,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["attacks",{"_index":1100,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1094,"title":{},"body":{"contributing.html":{}}}],["attr.aria",{"_index":244,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["attribution",{"_index":1193,"title":{},"body":{"contributing.html":{}}}],["authors",{"_index":1332,"title":{},"body":{"license.html":{}}}],["autofocus",{"_index":359,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["autofocused",{"_index":365,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["autosave",{"_index":136,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["autosaves",{"_index":439,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["available",{"_index":73,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["await",{"_index":525,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["back",{"_index":514,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["background",{"_index":103,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["ban",{"_index":1131,"title":{},"body":{"contributing.html":{}}}],["base",{"_index":67,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["based",{"_index":351,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["baseplugin",{"_index":1,"title":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["bash",{"_index":1390,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["basic",{"_index":108,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["before",{"_index":444,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["behavior",{"_index":1069,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":1135,"title":{},"body":{"contributing.html":{}}}],["behaviorsubject",{"_index":113,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["behaviorsubject(change",{"_index":732,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(editor",{"_index":727,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(false",{"_index":511,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(undefined",{"_index":772,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(value",{"_index":789,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["being",{"_index":1074,"title":{},"body":{"contributing.html":{}}}],["below",{"_index":1277,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["best",{"_index":1084,"title":{},"body":{"contributing.html":{}}}],["beta.24",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["big",{"_index":1421,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["binding",{"_index":298,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["block",{"_index":65,"title":{"interfaces/Block.html":{}},"body":{"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["blockplaceholder",{"_index":360,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["blocks",{"_index":120,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["blocktypes",{"_index":109,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["blur",{"_index":438,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["body",{"_index":1054,"title":{},"body":{"contributing.html":{}}}],["boolean",{"_index":102,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["bootstrap",{"_index":571,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["border",{"_index":99,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["both",{"_index":1142,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["bottom",{"_index":377,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["box",{"_index":1261,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["break",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1345,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1209,"title":{},"body":{"dependencies.html":{},"modules.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["browsermodule",{"_index":1393,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["bug",{"_index":985,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["build",{"_index":983,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["bump",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":160,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["called",{"_index":333,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["calling",{"_index":180,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["calls",{"_index":435,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["caption",{"_index":98,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["caret",{"_index":655,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cd",{"_index":327,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["change",{"_index":128,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"contributing.html":{}}}],["changed",{"_index":464,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changedetection",{"_index":247,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["changedetectionstrategy",{"_index":199,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["changedetectionstrategy.onpush",{"_index":248,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["changedetectorref",{"_index":200,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["changelog",{"_index":928,"title":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changelog.md",{"_index":1445,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["changelogs",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["changemap",{"_index":110,"title":{"interfaces/ChangeMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["changes",{"_index":492,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"contributing.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["changes.blocks",{"_index":529,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.firstchange",{"_index":530,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys",{"_index":535,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys.includes(key",{"_index":540,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["charge",{"_index":1292,"title":{},"body":{"license.html":{}}}],["ci",{"_index":1354,"title":{},"body":{"todo.html":{}}}],["circumstances",{"_index":1173,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":1335,"title":{},"body":{"license.html":{}}}],["clarified",{"_index":1159,"title":{},"body":{"contributing.html":{}}}],["clarifying",{"_index":1114,"title":{},"body":{"contributing.html":{}}}],["clash",{"_index":1423,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["class",{"_index":36,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["cleaning",{"_index":791,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cleanupsubjects(options",{"_index":792,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["clear",{"_index":634,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["clear(options",{"_index":662,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["click",{"_index":316,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["cluster_ngxeditorjsmodule",{"_index":573,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_declarations",{"_index":574,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_exports",{"_index":575,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_providers",{"_index":576,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule",{"_index":809,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_exports",{"_index":811,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_imports",{"_index":810,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule",{"_index":843,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_plugincodemodule_providers",{"_index":844,"title":{},"body":{"modules/PluginCodeModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule",{"_index":857,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginheadermodule_providers",{"_index":858,"title":{},"body":{"modules/PluginHeaderModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule",{"_index":866,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginimagemodule_providers",{"_index":867,"title":{},"body":{"modules/PluginImageModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule",{"_index":876,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlinkmodule_providers",{"_index":877,"title":{},"body":{"modules/PluginLinkModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule",{"_index":885,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginlistmodule_providers",{"_index":886,"title":{},"body":{"modules/PluginListModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule",{"_index":897,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginmarkermodule_providers",{"_index":898,"title":{},"body":{"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule",{"_index":906,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginparagraphmodule_providers",{"_index":907,"title":{},"body":{"modules/PluginParagraphModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule",{"_index":918,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cluster_pluginsimpleimagemodule_providers",{"_index":919,"title":{},"body":{"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["cmd+shift+m",{"_index":896,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["code",{"_index":841,"title":{},"body":{"injectables/PluginCode.html":{},"contributing.html":{}}}],["code.plugin",{"_index":849,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["coercebooleanproperty",{"_index":196,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(disabled",{"_index":287,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(focused",{"_index":274,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(required",{"_index":281,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["collection",{"_index":583,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"index.html":{}}}],["comments",{"_index":1098,"title":{},"body":{"contributing.html":{}}}],["commits",{"_index":1126,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":592,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{}}}],["community",{"_index":1047,"title":{},"body":{"contributing.html":{}}}],["compatible",{"_index":233,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["complaints",{"_index":1168,"title":{},"body":{"contributing.html":{}}}],["completly",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":1382,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["component",{"_index":201,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["components",{"_index":311,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["conditions",{"_index":1314,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1012,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":1176,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":137,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["config.data",{"_index":563,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config.ts",{"_index":1243,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["config/editor",{"_index":507,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config/module",{"_index":600,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["configuration",{"_index":32,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configurations",{"_index":1252,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configure",{"_index":665,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["configured",{"_index":1459,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["configuring",{"_index":1402,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["connection",{"_index":1342,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1108,"title":{},"body":{"contributing.html":{}}}],["console.log",{"_index":1431,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["const",{"_index":50,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["constructive",{"_index":1081,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":320,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["constructor(editorjs",{"_index":640,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["constructor(el",{"_index":422,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["contacting",{"_index":1165,"title":{},"body":{"contributing.html":{}}}],["container",{"_index":315,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["containers",{"_index":1270,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["containers/editorjs",{"_index":601,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/editorjs/editorjs.component",{"_index":603,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containing",{"_index":112,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["contains",{"_index":630,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["content",{"_index":445,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["continue",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1339,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1070,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":1003,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1129,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1134,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":1044,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":253,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controlling",{"_index":1438,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["controls",{"_index":1366,"title":{},"body":{"todo.html":{}}}],["controltype",{"_index":254,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["controlvalueaccessor",{"_index":1422,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["copies",{"_index":1309,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1295,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1289,"title":{},"body":{"license.html":{}}}],["core",{"_index":667,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["coreapi",{"_index":1359,"title":{},"body":{"todo.html":{}}}],["corrective",{"_index":1119,"title":{},"body":{"contributing.html":{}}}],["correctly",{"_index":1383,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["covenant",{"_index":1195,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":1198,"title":{},"body":{"contributing.html":{}}}],["cover",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":477,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["createconfig",{"_index":554,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["created",{"_index":476,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["createeditor",{"_index":408,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["createeditor(config",{"_index":471,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["createeditorjsconfig",{"_index":506,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["createeditorjsconfig(inputconfig",{"_index":1247,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createeditorjsinstance",{"_index":611,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsinstance(editorjs",{"_index":606,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsoptions",{"_index":132,"title":{"interfaces/CreateEditorJSOptions.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"injectables/NgxEditorJSService.html":{}}}],["createinstance",{"_index":638,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createinstance(options",{"_index":668,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createmoduleconfig",{"_index":599,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["createmoduleconfig(config",{"_index":1251,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createonchange(options",{"_index":730,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createonready(options",{"_index":734,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["creates",{"_index":150,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["createtools",{"_index":1396,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["creating",{"_index":155,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["creation",{"_index":366,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["criticism",{"_index":1082,"title":{},"body":{"contributing.html":{}}}],["current",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["currently",{"_index":979,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["custom",{"_index":79,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["cycle",{"_index":340,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["cycles",{"_index":1415,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["damages",{"_index":1336,"title":{},"body":{"license.html":{}}}],["data",{"_index":68,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["data).subscribe",{"_index":769,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["date.now",{"_index":564,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["datorama/akita",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["deal",{"_index":1298,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1343,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":570,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["deem",{"_index":1136,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":1171,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":82,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["default_holder_id",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":590,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["define",{"_index":381,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["defined",{"_index":48,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":10,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["deigned",{"_index":1398,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["delayed",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":794,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["demo",{"_index":955,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["demos",{"_index":1253,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":568,"title":{"dependencies.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["dependency",{"_index":1364,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["deps",{"_index":612,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["describedby",{"_index":245,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["destroy",{"_index":494,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["destroyed",{"_index":509,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["destroyinstance",{"_index":639,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroyinstance(options",{"_index":674,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroys",{"_index":676,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destructive",{"_index":487,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["details",{"_index":848,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["detection",{"_index":328,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["determined",{"_index":1190,"title":{},"body":{"contributing.html":{}}}],["developers",{"_index":1036,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":1254,"title":{},"body":{"index.html":{}}}],["devlog",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["diary",{"_index":1255,"title":{},"body":{"index.html":{}}}],["differing",{"_index":1076,"title":{},"body":{"contributing.html":{}}}],["directive",{"_index":395,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["directives",{"_index":396,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["directives/ngx",{"_index":218,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{}}}],["disability",{"_index":1056,"title":{},"body":{"contributing.html":{}}}],["disable",{"_index":440,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["disabled",{"_index":282,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["disabled(disabled",{"_index":286,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["discuss",{"_index":1006,"title":{},"body":{"contributing.html":{}}}],["display",{"_index":443,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["distribute",{"_index":1305,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1356,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["docheck",{"_index":202,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["docs",{"_index":652,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["docs](https://editorjs.io/api",{"_index":738,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["documentation",{"_index":966,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["documented",{"_index":1406,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["doing",{"_index":692,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["dom",{"_index":512,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["download",{"_index":1386,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["due",{"_index":945,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["dynamic",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1146,"title":{},"body":{"contributing.html":{}}}],["e.g",{"_index":1361,"title":{},"body":{"todo.html":{}}}],["each",{"_index":165,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorjsPluginsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["easily",{"_index":822,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["edit",{"_index":1124,"title":{},"body":{"contributing.html":{}}}],["editior_js_instance",{"_index":393,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["editor",{"_index":157,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginSimpleImage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editor's",{"_index":376,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editor.destroy",{"_index":782,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor.isready",{"_index":722,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor[options.method",{"_index":745,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor[options.namespace][options.method",{"_index":746,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorconfig",{"_index":141,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["editorconfig.holder",{"_index":717,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorconfig.onchange",{"_index":714,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorconfig.onready",{"_index":718,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorinstance",{"_index":297,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjs",{"_index":7,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs.directive",{"_index":219,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{}}}],["editorjs.directive.ts",{"_index":398,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:106",{"_index":430,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:112",{"_index":446,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:118",{"_index":465,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:124",{"_index":469,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:130",{"_index":467,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:136",{"_index":462,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:142",{"_index":468,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:148",{"_index":470,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:152",{"_index":424,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:168",{"_index":497,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:175",{"_index":500,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:182",{"_index":502,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:189",{"_index":504,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:197",{"_index":472,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:214",{"_index":481,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:248",{"_index":475,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:281",{"_index":493,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:53",{"_index":428,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:59",{"_index":447,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:65",{"_index":449,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:72",{"_index":453,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:78",{"_index":457,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:84",{"_index":442,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:90",{"_index":459,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:97",{"_index":450,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.module.ts",{"_index":581,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["editorjs.module.ts:58",{"_index":589,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.version",{"_index":565,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/code",{"_index":842,"title":{},"body":{"injectables/PluginCode.html":{}}}],["editorjs/editorjs",{"_index":30,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["editorjs/editorjs.component",{"_index":223,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjs/header",{"_index":856,"title":{},"body":{"injectables/PluginHeader.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs/image",{"_index":865,"title":{},"body":{"injectables/PluginImage.html":{}}}],["editorjs/link",{"_index":875,"title":{},"body":{"injectables/PluginLink.html":{}}}],["editorjs/list",{"_index":884,"title":{},"body":{"injectables/PluginList.html":{},"dependencies.html":{}}}],["editorjs/marker",{"_index":895,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["editorjs/paragraph",{"_index":905,"title":{},"body":{"injectables/PluginParagraph.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["editorjs/simple",{"_index":917,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["editorjs/src/lib/config/editor",{"_index":1246,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/config/module",{"_index":1250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["editorjs/src/lib/containers/editorjs",{"_index":188,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editorjs/src/lib/directives/ngx",{"_index":397,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs/src/lib/ngx",{"_index":580,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts",{"_index":617,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:165",{"_index":648,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:207",{"_index":686,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:223",{"_index":664,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:245",{"_index":689,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:266",{"_index":678,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:277",{"_index":684,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:288",{"_index":680,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:299",{"_index":682,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:310",{"_index":675,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:362",{"_index":672,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:64",{"_index":643,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:90",{"_index":669,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/types/blocks.ts",{"_index":66,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs/src/lib/types/blocks.ts:13",{"_index":70,"title":{},"body":{"interfaces/Block.html":{}}}],["editorjs/src/lib/types/config.ts",{"_index":358,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/editorjs",{"_index":133,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{}}}],["editorjs/src/lib/types/injector.ts",{"_index":145,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/maps.ts",{"_index":111,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorjs/src/lib/types/maps.ts:18",{"_index":922,"title":{},"body":{"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:28",{"_index":923,"title":{},"body":{"interfaces/SavedMap.html":{}}}],["editorjs/src/lib/types/maps.ts:52",{"_index":117,"title":{},"body":{"interfaces/ChangeMap.html":{}}}],["editorjs/src/lib/types/maps.ts:8",{"_index":356,"title":{},"body":{"interfaces/EditorMap.html":{}}}],["editorjs/src/lib/types/plugins.ts",{"_index":63,"title":{},"body":{"interfaces/BasePlugin-1.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/plugins.ts:17",{"_index":925,"title":{},"body":{"interfaces/ToolSettingsMap-1.html":{}}}],["editorjs/src/lib/types/plugins.ts:7",{"_index":921,"title":{},"body":{"interfaces/PluginsMap.html":{}}}],["editorjs@1.2.0",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["editorjs@1.3.2",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["editorjs@2.0.0",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["editorjs](http://editorjs.io",{"_index":607,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs_form_value_accessor",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editorjs_material_field_control",{"_index":226,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["editorjs_module_import",{"_index":172,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["editorjsbasecomponent",{"_index":1416,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["editorjschange",{"_index":130,"title":{"interfaces/EditorJSChange.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorjsclass",{"_index":144,"title":{"interfaces/EditorJSClass.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjsinstance",{"_index":175,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["editorjsinstanceconfig",{"_index":156,"title":{"interfaces/EditorJSInstanceConfig.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["editorjsmaterialform",{"_index":187,"title":{"interfaces/EditorJSMaterialForm.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjsplugin",{"_index":1455,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["editormap",{"_index":122,"title":{"interfaces/EditorMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorservice",{"_index":322,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["edits",{"_index":1128,"title":{},"body":{"contributing.html":{}}}],["el",{"_index":426,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["electronic",{"_index":1104,"title":{},"body":{"contributing.html":{}}}],["element",{"_index":325,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["elementref",{"_index":423,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["email",{"_index":1009,"title":{},"body":{"contributing.html":{}}}],["emits",{"_index":463,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["empathy",{"_index":1086,"title":{},"body":{"contributing.html":{}}}],["empty",{"_index":288,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["empty(empty",{"_index":291,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["end",{"_index":1017,"title":{},"body":{"contributing.html":{}}}],["enforce",{"_index":1184,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":1160,"title":{},"body":{"contributing.html":{}}}],["ensure",{"_index":625,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["entire",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":1021,"title":{},"body":{"contributing.html":{}}}],["error",{"_index":255,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["error('error",{"_index":544,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["error(`no",{"_index":747,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["errorstate",{"_index":256,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["etc",{"_index":656,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"todo.html":{}}}],["ethnicity",{"_index":1057,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":129,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"contributing.html":{},"license.html":{}}}],["eventemitter",{"_index":461,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["events",{"_index":1264,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["everyone",{"_index":1051,"title":{},"body":{"contributing.html":{}}}],["example",{"_index":236,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["examples",{"_index":1028,"title":{},"body":{"contributing.html":{}}}],["exclude",{"_index":799,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["exclude.includes(key",{"_index":803,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["existing",{"_index":491,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["exiting",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["expanded",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["expected",{"_index":1116,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":1050,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":1078,"title":{},"body":{"contributing.html":{}}}],["explicit",{"_index":1106,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":33,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["exported",{"_index":42,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["exports",{"_index":572,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["expose",{"_index":1358,"title":{},"body":{"todo.html":{}}}],["exposed",{"_index":1023,"title":{},"body":{"contributing.html":{}}}],["express",{"_index":1323,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1060,"title":{},"body":{"contributing.html":{}}}],["extendable",{"_index":1399,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["extending",{"_index":37,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["extends",{"_index":87,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["face",{"_index":1186,"title":{},"body":{"contributing.html":{}}}],["factory",{"_index":389,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["failed",{"_index":1449,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fair",{"_index":1118,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":1185,"title":{},"body":{"contributing.html":{}}}],["falls",{"_index":513,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["false",{"_index":140,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["feature",{"_index":1367,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["features",{"_index":584,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"changelog.html":{},"index.html":{}}}],["field",{"_index":225,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["field.component",{"_index":602,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["field.component.html",{"_index":239,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["field.component.scss",{"_index":241,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["field.component.ts",{"_index":191,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["field/editorjs",{"_index":190,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["filed",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1029,"title":{},"body":{"contributing.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["filter",{"_index":696,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["filter(([key",{"_index":802,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["finaltools",{"_index":805,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["find",{"_index":932,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["find(key",{"_index":539,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["first",{"_index":367,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fitness",{"_index":1328,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1428,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["fixes",{"_index":1447,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["float",{"_index":303,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["focus",{"_index":323,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["focused",{"_index":269,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["focused(focused",{"_index":273,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["focusing",{"_index":1083,"title":{},"body":{"contributing.html":{}}}],["focusmonitor",{"_index":194,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["folder",{"_index":1280,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1013,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":1313,"title":{},"body":{"license.html":{}}}],["for_root_options_token",{"_index":390,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["foreach(([key",{"_index":709,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["form",{"_index":510,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["format",{"_index":1407,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["formcontrol",{"_index":437,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["forms",{"_index":431,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["formsmodule",{"_index":596,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot",{"_index":586,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["forroot(@optional",{"_index":614,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forroot(config",{"_index":588,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["forwardref",{"_index":203,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["fostering",{"_index":1041,"title":{},"body":{"contributing.html":{}}}],["framework",{"_index":1269,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["free",{"_index":1049,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["full",{"_index":234,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{},"todo.html":{}}}],["fully",{"_index":671,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"index.html":{}}}],["function",{"_index":20,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["functions",{"_index":1241,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1312,"title":{},"body":{"license.html":{}}}],["further",{"_index":1158,"title":{},"body":{"contributing.html":{}}}],["future",{"_index":1400,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["gender",{"_index":1058,"title":{},"body":{"contributing.html":{}}}],["general",{"_index":1286,"title":{},"body":{"license.html":{},"todo.html":{}}}],["generate",{"_index":1434,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["generated",{"_index":1283,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["geteditor",{"_index":496,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditor(options",{"_index":677,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getelement",{"_index":499,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["gets",{"_index":301,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["getservice",{"_index":501,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getters",{"_index":1452,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["getting",{"_index":926,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["gettools(exclude",{"_index":800,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["gettouched",{"_index":503,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["github",{"_index":846,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["good",{"_index":1002,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":1079,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":1291,"title":{},"body":{"license.html":{}}}],["hammerjs",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":618,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["happens",{"_index":629,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["harassing",{"_index":1162,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":1048,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":1139,"title":{},"body":{"contributing.html":{}}}],["haschanged",{"_index":413,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["haschanged(options",{"_index":679,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["haschangedmap",{"_index":168,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["hassaved",{"_index":414,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["hassaved(options",{"_index":681,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["hassavedmap",{"_index":171,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":91,"title":{"interfaces/Header.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["header.plugin",{"_index":860,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["headerblock",{"_index":95,"title":{"interfaces/HeaderBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["height",{"_index":375,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["helper",{"_index":649,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["helpers",{"_index":1360,"title":{},"body":{"todo.html":{}}}],["here",{"_index":1380,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["hereby",{"_index":1290,"title":{},"body":{"license.html":{}}}],["hideable",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["hides",{"_index":1404,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hidetoolbar",{"_index":361,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["hold",{"_index":373,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["holder",{"_index":158,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["holders",{"_index":1333,"title":{},"body":{"license.html":{}}}],["host",{"_index":242,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["hostbinding",{"_index":204,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('attr.aria",{"_index":309,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('class.floating",{"_index":304,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostlistener",{"_index":505,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlistener('click",{"_index":515,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlisteners",{"_index":418,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["html",{"_index":460,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["http://contributor",{"_index":1197,"title":{},"body":{"contributing.html":{}}}],["i'll",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["i'm",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["i've",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":243,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["identity",{"_index":1059,"title":{},"body":{"contributing.html":{}}}],["ids",{"_index":310,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ids.join",{"_index":314,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ignore",{"_index":537,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["image",{"_index":96,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginImage.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.module",{"_index":837,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["image.module.ts",{"_index":920,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["image.plugin",{"_index":869,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.plugin.ts",{"_index":913,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["image.plugin.ts:14",{"_index":915,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["image/simple",{"_index":836,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["imageblock",{"_index":107,"title":{"interfaces/ImageBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["imagery",{"_index":1092,"title":{},"body":{"contributing.html":{}}}],["implementation",{"_index":235,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["implemented",{"_index":1387,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["implements",{"_index":249,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}}}],["implied",{"_index":1324,"title":{},"body":{"license.html":{}}}],["import",{"_index":25,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["imported",{"_index":1275,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["importing",{"_index":825,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["imports",{"_index":608,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["improved",{"_index":948,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["improvements",{"_index":967,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["inappropriate",{"_index":1109,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":1179,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":142,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["included",{"_index":1318,"title":{},"body":{"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["includes",{"_index":1020,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["includetools",{"_index":138,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"directives/NgxEditorJSDirective.html":{}}}],["including",{"_index":1300,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":1072,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1026,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":69,"title":{},"body":{"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["individual",{"_index":827,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["information",{"_index":154,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["initial",{"_index":46,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["initialblock",{"_index":362,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["initialized",{"_index":429,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["initialplugins",{"_index":51,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":695,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["inject(editorjsinstance",{"_index":704,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["inject(ngx_editorjs_config",{"_index":705,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["inject(userplugins",{"_index":706,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["injectable",{"_index":615,"title":{"injectables/NgxEditorJSService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["injectables",{"_index":616,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"overview.html":{}}}],["injected",{"_index":146,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["injecting",{"_index":388,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injection",{"_index":44,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":26,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["injectiontoken('editior_js_instance",{"_index":394,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjs_module_import",{"_index":173,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjsinstance",{"_index":176,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('for_root_options_token",{"_index":391,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('initialplugins",{"_index":53,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx_editorjs_config",{"_index":387,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('userplugins",{"_index":58,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":174,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["injectorapicalloptions",{"_index":182,"title":{"interfaces/InjectorApiCallOptions.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["injectorapicallresponse",{"_index":185,"title":{"interfaces/InjectorApiCallResponse.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["injectormethodoption",{"_index":177,"title":{"interfaces/InjectorMethodOption.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["inline",{"_index":824,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["input",{"_index":205,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["input('disabled",{"_index":285,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('focused",{"_index":272,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('placeholder",{"_index":267,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('required",{"_index":279,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('value",{"_index":260,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["inputconfig",{"_index":1249,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inputs",{"_index":411,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["inside",{"_index":338,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["install",{"_index":1016,"title":{},"body":{"contributing.html":{},"dependencies.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["installed",{"_index":1391,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["installing",{"_index":1388,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["instance",{"_index":116,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["instancedestroyed",{"_index":778,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["instancedestroyed.complete",{"_index":785,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["instancedestroyed.next(true",{"_index":784,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["instances",{"_index":121,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["insulting/derogatory",{"_index":1097,"title":{},"body":{"contributing.html":{}}}],["interact",{"_index":1271,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["interactions",{"_index":1014,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":1040,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":0,"title":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"overview.html":{}}}],["internal",{"_index":166,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["internally",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["investigated",{"_index":1170,"title":{},"body":{"contributing.html":{}}}],["isfocused",{"_index":415,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["isready",{"_index":416,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["isready(options",{"_index":683,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["isreadymap",{"_index":170,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":1008,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["issues",{"_index":984,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["istouched",{"_index":417,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["it's",{"_index":484,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["items",{"_index":84,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["js",{"_index":1226,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["js/code",{"_index":851,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["js/header",{"_index":861,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["js/image",{"_index":870,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["js/link",{"_index":880,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["js/list",{"_index":889,"title":{},"body":{"modules/PluginListModule.html":{}}}],["js/marker",{"_index":901,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["js/paragraph",{"_index":910,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["json.stringify(changes.blocks.currentvalue",{"_index":532,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["json.stringify(changes.blocks.previousvalue",{"_index":531,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["keep",{"_index":1408,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["key",{"_index":35,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["keys",{"_index":452,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["kind",{"_index":1322,"title":{},"body":{"license.html":{}}}],["label",{"_index":302,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["language",{"_index":1073,"title":{},"body":{"contributing.html":{}}}],["last",{"_index":114,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["layer",{"_index":1018,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["leadership",{"_index":1192,"title":{},"body":{"contributing.html":{}}}],["legend",{"_index":569,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["level",{"_index":92,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"contributing.html":{}}}],["liability",{"_index":1337,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1334,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":934,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["library",{"_index":936,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["libs/.../blocks.ts",{"_index":1370,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../config.ts",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editor",{"_index":1242,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../editorjs",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editorjs.component.ts",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../injector.ts",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../module",{"_index":1245,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ngx",{"_index":1244,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../plugins.ts",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":6,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["licence",{"_index":1288,"title":{},"body":{"license.html":{}}}],["license",{"_index":1285,"title":{"license.html":{}},"body":{}}],["life",{"_index":339,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["lifecycle",{"_index":620,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["limitation",{"_index":1301,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1325,"title":{},"body":{"license.html":{}}}],["link",{"_index":874,"title":{},"body":{"injectables/PluginLink.html":{}}}],["link.plugin",{"_index":879,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["links",{"_index":1259,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["list",{"_index":74,"title":{"interfaces/List.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginList.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["list.plugin",{"_index":888,"title":{},"body":{"modules/PluginListModule.html":{}}}],["listblock",{"_index":86,"title":{"interfaces/ListBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["listed",{"_index":1460,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["listener",{"_index":342,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["listners",{"_index":478,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["liststyle",{"_index":81,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":1403,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["locations",{"_index":1025,"title":{},"body":{"contributing.html":{}}}],["longer",{"_index":1443,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["lot",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["lots",{"_index":1435,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["made",{"_index":636,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["mail",{"_index":1147,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":399,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{}}}],["maintain",{"_index":1175,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":1045,"title":{},"body":{"contributing.html":{}}}],["major",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":650,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["makes",{"_index":161,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["making",{"_index":1000,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["manage",{"_index":1385,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["management",{"_index":619,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["managing",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":1463,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["map",{"_index":39,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["map_defaults",{"_index":167,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["map_defaults.foreach(([mapkey",{"_index":787,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["markdown",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["marker",{"_index":892,"title":{},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{}}}],["marker.plugin",{"_index":900,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["marking",{"_index":1466,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["mat",{"_index":189,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":455,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["matches",{"_index":637,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["matching",{"_index":60,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["material",{"_index":224,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["material](https://material.angular.io",{"_index":232,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["matformfieldcontrol",{"_index":193,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":597,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["matinputmodule",{"_index":598,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["me@tane.dev",{"_index":1167,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["means",{"_index":486,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["meantime",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1150,"title":{},"body":{"contributing.html":{}}}],["members",{"_index":1088,"title":{},"body":{"contributing.html":{}}}],["merchantability",{"_index":1327,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1034,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["metadata",{"_index":405,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["method",{"_index":159,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["method.call(editor",{"_index":749,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methods",{"_index":14,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["minheight",{"_index":363,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["minimum",{"_index":458,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["miscellaneous",{"_index":1240,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1287,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1303,"title":{},"body":{"license.html":{}}}],["module",{"_index":31,"title":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["modules",{"_index":567,"title":{"modules.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["modulewithproviders",{"_index":591,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["monday",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["monitor",{"_index":324,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["more",{"_index":1001,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["mouseevent",{"_index":317,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["moved",{"_index":1469,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["ms",{"_index":441,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["multi",{"_index":230,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":1451,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["name",{"_index":374,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["namespace",{"_index":183,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["nationality",{"_index":1061,"title":{},"body":{"contributing.html":{}}}],["necessary",{"_index":1172,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":489,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["needs",{"_index":454,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["new",{"_index":52,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["nextid",{"_index":250,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ng",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["ng_value_accessor",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":346,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["ngcontrol",{"_index":211,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngdevtools",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["ngdocheck",{"_index":352,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngmodule",{"_index":594,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngonchanges",{"_index":409,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngonchanges(changes",{"_index":479,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngondestroy",{"_index":410,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngoninit",{"_index":334,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngrx/effects",{"_index":1223,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["ngrx/store",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":49,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["ngx_editorjs_config",{"_index":386,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjs",{"_index":406,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngxeditorjsbasecomponent",{"_index":1266,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjscomponent",{"_index":222,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsconfig",{"_index":357,"title":{"interfaces/NgxEditorJSConfig.html":{}},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdirective",{"_index":217,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsdirective::ngaftercontentinit",{"_index":545,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngxeditorjsinstanceservice",{"_index":1274,"title":{},"body":{"index.html":{}}}],["ngxeditorjsmaterialfieldcomponent",{"_index":1263,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsmatfieldcomponent",{"_index":229,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmatfieldcomponent.nextid",{"_index":300,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngxeditorjsmodule",{"_index":566,"title":{"modules/NgxEditorJSModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsmodule.forroot",{"_index":383,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ngxeditorjsmoduleconfig",{"_index":384,"title":{"interfaces/NgxEditorJSModuleConfig.html":{}},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["ngxeditorjspluginservice",{"_index":1273,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["ngxeditorjspluginsmodule",{"_index":808,"title":{"modules/NgxEditorjsPluginsModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsservice",{"_index":220,"title":{"injectables/NgxEditorJSService.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngxeditorjsservice.apicall",{"_index":1414,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["ngzone",{"_index":624,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["noninfringement",{"_index":1331,"title":{},"body":{"license.html":{}}}],["notable",{"_index":1405,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["note",{"_index":1011,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["notice",{"_index":1316,"title":{},"body":{"license.html":{}}}],["now",{"_index":972,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["npm",{"_index":1235,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["nrwl/nx",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":336,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["number",{"_index":94,"title":{},"body":{"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["numbers",{"_index":1027,"title":{},"body":{"contributing.html":{}}}],["nx",{"_index":1284,"title":{},"body":{"index.html":{}}}],["object",{"_index":456,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["object.entries",{"_index":707,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["object.entries(this.pluginsmap",{"_index":801,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["object.keys(changes",{"_index":536,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["object.keys(this.editormap).foreach(holder",{"_index":795,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["obligated",{"_index":1174,"title":{},"body":{"contributing.html":{}}}],["observable",{"_index":498,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["observables",{"_index":621,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["obtaining",{"_index":1294,"title":{},"body":{"license.html":{}}}],["offensive",{"_index":1138,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":1145,"title":{},"body":{"contributing.html":{}}}],["officially",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1156,"title":{},"body":{"contributing.html":{}}}],["once",{"_index":627,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["onchange",{"_index":162,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["onchanges",{"_index":404,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["onclick",{"_index":516,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["oncontainerclick(event",{"_index":318,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ondestroy",{"_index":206,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["oninit",{"_index":207,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["online",{"_index":1155,"title":{},"body":{"contributing.html":{}}}],["onready",{"_index":164,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["open",{"_index":1042,"title":{},"body":{"contributing.html":{}}}],["option",{"_index":178,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"todo.html":{}}}],["optional",{"_index":12,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["optionally",{"_index":690,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options",{"_index":135,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["options.config",{"_index":712,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data",{"_index":768,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data).subscribe",{"_index":760,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.holder",{"_index":758,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.method",{"_index":748,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.namespace",{"_index":744,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["ordered",{"_index":77,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["orientation",{"_index":1067,"title":{},"body":{"contributing.html":{}}}],["others",{"_index":1102,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":1163,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["out",{"_index":579,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["output",{"_index":368,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["outputdata",{"_index":118,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["outputs",{"_index":412,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["outside",{"_index":622,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["over",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["overall",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1346,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":1010,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":974,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["page",{"_index":1365,"title":{"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"todo.html":{}}}],["paragraph",{"_index":88,"title":{"interfaces/Paragraph.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginParagraph.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["paragraph.plugin",{"_index":909,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["paragraphblock",{"_index":90,"title":{"interfaces/ParagraphBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":259,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["parameter",{"_index":1425,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["parameters",{"_index":425,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["parentmodule",{"_index":613,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["parma",{"_index":326,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["parse",{"_index":153,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["participants",{"_index":1090,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":1046,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":1329,"title":{},"body":{"license.html":{}}}],["pass",{"_index":179,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["passed",{"_index":382,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["passing",{"_index":1429,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["paste",{"_index":1467,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["patches",{"_index":436,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["paths",{"_index":483,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["peer",{"_index":1363,"title":{},"body":{"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["peerdependencies",{"_index":1461,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["permanent",{"_index":1188,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":1133,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":1037,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["permit",{"_index":1310,"title":{},"body":{"license.html":{}}}],["person",{"_index":1293,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1062,"title":{},"body":{"contributing.html":{}}}],["persons",{"_index":1311,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1103,"title":{},"body":{"contributing.html":{}}}],["pipe(take(1",{"_index":763,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["pipe(takeuntil(instancedestroyed",{"_index":780,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["pipe(takeuntil(this.ondestroy",{"_index":349,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["pipeline",{"_index":1355,"title":{},"body":{"todo.html":{}}}],["piper",{"_index":1282,"title":{},"body":{"index.html":{},"license.html":{}}}],["placeholder",{"_index":263,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["placeholder(placeholder",{"_index":268,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["please",{"_index":1005,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["pledge",{"_index":1039,"title":{},"body":{"contributing.html":{}}}],["plug",{"_index":823,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugin",{"_index":13,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugin.plugin",{"_index":807,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["plugin.shortcut",{"_index":806,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["plugincode",{"_index":838,"title":{"injectables/PluginCode.html":{}},"body":{"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"overview.html":{}}}],["plugincodemodule",{"_index":812,"title":{"modules/PluginCodeModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginconfig",{"_index":34,"title":{"interfaces/PluginConfig.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{}}}],["pluginheader",{"_index":853,"title":{"injectables/PluginHeader.html":{}},"body":{"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginheadermodule",{"_index":813,"title":{"modules/PluginHeaderModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginHeaderModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginilistmodule",{"_index":1465,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginimage",{"_index":862,"title":{"injectables/PluginImage.html":{}},"body":{"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"overview.html":{}}}],["pluginimagemodule",{"_index":814,"title":{"modules/PluginImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlink",{"_index":871,"title":{"injectables/PluginLink.html":{}},"body":{"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"overview.html":{}}}],["pluginlinkmodule",{"_index":815,"title":{"modules/PluginLinkModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginLinkModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginlist",{"_index":881,"title":{"injectables/PluginList.html":{}},"body":{"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginlistmodule",{"_index":816,"title":{"modules/PluginListModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginListModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginmarker",{"_index":890,"title":{"injectables/PluginMarker.html":{}},"body":{"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"overview.html":{}}}],["pluginmarkermodule",{"_index":817,"title":{"modules/PluginMarkerModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginMarkerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginparagraph",{"_index":902,"title":{"injectables/PluginParagraph.html":{}},"body":{"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pluginparagraphmodule",{"_index":818,"title":{"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["plugins",{"_index":47,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["plugins.module.ts",{"_index":821,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/code/code.module",{"_index":828,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/header/header.module",{"_index":829,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/image/image.module",{"_index":830,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/link/link.module",{"_index":831,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/list/list.module",{"_index":832,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/marker/marker.module",{"_index":833,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/paragraph/paragraph.module",{"_index":834,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/simple",{"_index":835,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/ngx",{"_index":820,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/plugins/code/code.module.ts",{"_index":845,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts",{"_index":839,"title":{},"body":{"injectables/PluginCode.html":{}}}],["plugins/src/lib/plugins/code/code.plugin.ts:14",{"_index":840,"title":{},"body":{"injectables/PluginCode.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts",{"_index":859,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts",{"_index":854,"title":{},"body":{"injectables/PluginHeader.html":{}}}],["plugins/src/lib/plugins/header/header.plugin.ts:14",{"_index":855,"title":{},"body":{"injectables/PluginHeader.html":{}}}],["plugins/src/lib/plugins/image/image.module.ts",{"_index":868,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts",{"_index":863,"title":{},"body":{"injectables/PluginImage.html":{}}}],["plugins/src/lib/plugins/image/image.plugin.ts:14",{"_index":864,"title":{},"body":{"injectables/PluginImage.html":{}}}],["plugins/src/lib/plugins/link/link.module.ts",{"_index":878,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts",{"_index":872,"title":{},"body":{"injectables/PluginLink.html":{}}}],["plugins/src/lib/plugins/link/link.plugin.ts:14",{"_index":873,"title":{},"body":{"injectables/PluginLink.html":{}}}],["plugins/src/lib/plugins/list/list.module.ts",{"_index":887,"title":{},"body":{"modules/PluginListModule.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts",{"_index":882,"title":{},"body":{"injectables/PluginList.html":{}}}],["plugins/src/lib/plugins/list/list.plugin.ts:14",{"_index":883,"title":{},"body":{"injectables/PluginList.html":{}}}],["plugins/src/lib/plugins/marker/marker.module.ts",{"_index":899,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts",{"_index":891,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:14",{"_index":893,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/marker/marker.plugin.ts:20",{"_index":894,"title":{},"body":{"injectables/PluginMarker.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.module.ts",{"_index":908,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts",{"_index":903,"title":{},"body":{"injectables/PluginParagraph.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14",{"_index":904,"title":{},"body":{"injectables/PluginParagraph.html":{}}}],["plugins/src/lib/plugins/simple",{"_index":912,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["plugins/src/lib/types/plugins.ts",{"_index":8,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/PluginConfig.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["plugins/src/lib/types/plugins.ts:17",{"_index":924,"title":{},"body":{"interfaces/ToolSettingsMap.html":{}}}],["plugins/src/lib/types/plugins.ts:7",{"_index":852,"title":{},"body":{"interfaces/PluginConfig.html":{}}}],["pluginservice",{"_index":1470,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["pluginsimpleimage",{"_index":911,"title":{"injectables/PluginSimpleImage.html":{}},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["pluginsimpleimagemodule",{"_index":819,"title":{"modules/PluginSimpleImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["pluginsmap",{"_index":64,"title":{"interfaces/PluginsMap.html":{}},"body":{"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["policies",{"_index":1181,"title":{},"body":{"contributing.html":{}}}],["political",{"_index":1099,"title":{},"body":{"contributing.html":{}}}],["portions",{"_index":1320,"title":{},"body":{"license.html":{}}}],["ports",{"_index":1024,"title":{},"body":{"contributing.html":{}}}],["positive",{"_index":1071,"title":{},"body":{"contributing.html":{}}}],["possible",{"_index":826,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["posted",{"_index":1182,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":1148,"title":{},"body":{"contributing.html":{}}}],["potential",{"_index":1401,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["pre",{"_index":1458,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["private",{"_index":264,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["process",{"_index":488,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["professional",{"_index":1110,"title":{},"body":{"contributing.html":{}}}],["project",{"_index":988,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["project's",{"_index":1191,"title":{},"body":{"contributing.html":{}}}],["projects",{"_index":1381,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["promise",{"_index":474,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["properties",{"_index":19,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["property",{"_index":100,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["protected",{"_index":331,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["provide",{"_index":227,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["provided",{"_index":85,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["providedin",{"_index":702,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["provider",{"_index":208,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["providers",{"_index":246,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["provides",{"_index":151,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["providing",{"_index":1433,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["provied",{"_index":385,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":251,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["publish",{"_index":1304,"title":{},"body":{"license.html":{},"todo.html":{}}}],["publishing",{"_index":1101,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["pull",{"_index":1015,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":1330,"title":{},"body":{"license.html":{}}}],["r",{"_index":755,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["race",{"_index":1064,"title":{},"body":{"contributing.html":{}}}],["reactive",{"_index":1262,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["read",{"_index":295,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["readme",{"_index":1279,"title":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["readme.md",{"_index":1019,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["readonly",{"_index":296,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["ready",{"_index":124,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["readymap",{"_index":126,"title":{"interfaces/ReadyMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["reasonably",{"_index":1107,"title":{},"body":{"contributing.html":{}}}],["reduce",{"_index":804,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["ref",{"_index":329,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["refactored",{"_index":1424,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["reflect",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["regard",{"_index":1177,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":1052,"title":{},"body":{"contributing.html":{}}}],["regenerated",{"_index":1448,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["reject",{"_index":1125,"title":{},"body":{"contributing.html":{}}}],["related",{"_index":538,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{}}}],["release",{"_index":951,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["released",{"_index":942,"title":{},"body":{"changelog.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["religion",{"_index":1065,"title":{},"body":{"contributing.html":{}}}],["remove",{"_index":1123,"title":{},"body":{"contributing.html":{}}}],["removed",{"_index":973,"title":{},"body":{"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["renamed",{"_index":1456,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["render",{"_index":369,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["rendered",{"_index":1384,"title":{},"body":{"additional-documentation/tinynodes-library-docs.html":{}}}],["repercussions",{"_index":1189,"title":{},"body":{"contributing.html":{}}}],["replaced",{"_index":1453,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["repo",{"_index":847,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"todo.html":{}}}],["repo](https://github.com/editor",{"_index":850,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["report",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["reported",{"_index":1164,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":1178,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":1004,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":1030,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":1157,"title":{},"body":{"contributing.html":{}}}],["representative",{"_index":1154,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":1144,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":661,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["requied",{"_index":278,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["required",{"_index":11,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["required(required",{"_index":280,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["requires",{"_index":1462,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["reset",{"_index":578,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}],["resetting",{"_index":694,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["resolved",{"_index":660,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["respectful",{"_index":1075,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":184,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["responsibilities",{"_index":1112,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":1122,"title":{},"body":{"contributing.html":{}}}],["responsible",{"_index":1113,"title":{},"body":{"contributing.html":{}}}],["restriction",{"_index":1299,"title":{},"body":{"license.html":{}}}],["result",{"_index":59,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["result.then",{"_index":751,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["result.then((r",{"_index":754,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["results",{"_index":61,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["return",{"_index":16,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["returned",{"_index":24,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["returning",{"_index":1248,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":147,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"miscellaneous/functions.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["reviewed",{"_index":1169,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":1038,"title":{},"body":{"contributing.html":{}}}],["right",{"_index":1121,"title":{},"body":{"contributing.html":{}}}],["rights",{"_index":1302,"title":{},"body":{"license.html":{}}}],["robust",{"_index":1437,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["rogue",{"_index":1430,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["root",{"_index":585,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["router",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":645,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"index.html":{}}}],["rxjs",{"_index":119,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":216,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["sanitizer",{"_index":364,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["sanitizerconfig",{"_index":380,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["save",{"_index":115,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"todo.html":{}}}],["save(options",{"_index":685,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["saved",{"_index":466,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["savedmap",{"_index":127,"title":{"interfaces/SavedMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["saver",{"_index":759,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["saving",{"_index":1418,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["scheme",{"_index":1032,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1140,"title":{},"body":{"contributing.html":{}}}],["scripts",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["searchable",{"_index":1257,"title":{},"body":{"index.html":{}}}],["second",{"_index":657,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["see",{"_index":651,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["selection",{"_index":1362,"title":{},"body":{"todo.html":{}}}],["selector",{"_index":237,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["self",{"_index":209,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["sell",{"_index":1308,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1410,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["semver",{"_index":1033,"title":{},"body":{"contributing.html":{}}}],["separately",{"_index":1183,"title":{},"body":{"contributing.html":{}}}],["service",{"_index":420,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["service.ts",{"_index":134,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{}}}],["services",{"_index":402,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["services/editorjs.service",{"_index":221,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{}}}],["set",{"_index":139,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["setdescribedbyids(ids",{"_index":312,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["sets",{"_index":432,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["setting",{"_index":1111,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["settings",{"_index":23,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["setup",{"_index":631,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["setupsubjects(options",{"_index":786,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["several",{"_index":628,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"changelog.html":{}}}],["sexual",{"_index":1066,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1091,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":1317,"title":{},"body":{"license.html":{}}}],["shortcut",{"_index":17,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginMarker.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["shouldlabelfloat",{"_index":305,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["show",{"_index":448,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["showing",{"_index":1085,"title":{},"body":{"contributing.html":{}}}],["shown",{"_index":372,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["shows",{"_index":1392,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["sign",{"_index":1035,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":914,"title":{},"body":{"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{}}}],["simplechanges",{"_index":480,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["simpleimage",{"_index":916,"title":{},"body":{"injectables/PluginSimpleImage.html":{}}}],["single",{"_index":192,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["site",{"_index":931,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["size",{"_index":1055,"title":{},"body":{"contributing.html":{}}}],["skipself",{"_index":595,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["small",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":1149,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":1296,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["spaces",{"_index":1143,"title":{},"body":{"contributing.html":{}}}],["specific",{"_index":1180,"title":{},"body":{"contributing.html":{}}}],["standards",{"_index":1068,"title":{},"body":{"contributing.html":{}}}],["started",{"_index":927,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["state",{"_index":125,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["statechanges",{"_index":252,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["states",{"_index":703,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["static",{"_index":148,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSModule.html":{}}}],["store",{"_index":1215,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["stored",{"_index":687,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["stores",{"_index":1450,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["stretch",{"_index":105,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["stretched",{"_index":106,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["string",{"_index":38,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginMarker.html":{},"interfaces/PluginsMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["style",{"_index":83,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["styles",{"_index":75,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":240,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["subject",{"_index":214,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"license.html":{}}}],["subjects",{"_index":495,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["sublicense",{"_index":1306,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":344,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["subscribe((response",{"_index":764,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["subscribe(change",{"_index":549,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscribe(editor",{"_index":781,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["subscribe(focused",{"_index":350,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["subscribe(isready",{"_index":547,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscribe(saved",{"_index":551,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscriptions",{"_index":673,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["substantial",{"_index":1319,"title":{},"body":{"license.html":{}}}],["such",{"_index":654,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["sunday",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":321,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["super(editorservice",{"_index":332,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["support",{"_index":1260,"title":{},"body":{"index.html":{},"modules.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["supports",{"_index":76,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["svg",{"_index":1344,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":697,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["switchmap(editor",{"_index":741,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["t",{"_index":72,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["tags",{"_index":1357,"title":{},"body":{"todo.html":{}}}],["take",{"_index":698,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["take(1",{"_index":740,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["takes",{"_index":587,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["takeuntil",{"_index":215,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["tane",{"_index":1281,"title":{},"body":{"index.html":{},"license.html":{}}}],["team",{"_index":1166,"title":{},"body":{"contributing.html":{}}}],["template",{"_index":1267,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["templateurl",{"_index":238,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["temporarily",{"_index":1132,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":1187,"title":{},"body":{"contributing.html":{}}}],["text",{"_index":89,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["this._disabled",{"_index":284,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._empty",{"_index":290,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._focused",{"_index":271,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._placeholder",{"_index":266,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._required",{"_index":277,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._value",{"_index":258,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.apicall",{"_index":757,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.autofocus",{"_index":555,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.autosave",{"_index":528,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blockplaceholder",{"_index":558,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks",{"_index":561,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks.length",{"_index":562,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.cd.markforcheck",{"_index":519,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.cleanupsubjects",{"_index":783,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.config.editorjs",{"_index":711,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(this.createconfig",{"_index":541,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.createonchange.call(this",{"_index":716,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createonready.call(this",{"_index":719,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.describedby",{"_index":313,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.destroyinstance",{"_index":796,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorjs(editorconfig",{"_index":721,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorjs.version",{"_index":767,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder",{"_index":725,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].next(editor",{"_index":726,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[options.holder",{"_index":771,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[options.holder].pipe(filter(editor",{"_index":773,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice",{"_index":523,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.el.nativeelement",{"_index":522,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.el.nativeelement.id",{"_index":542,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.empty",{"_index":307,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.errorstate",{"_index":353,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.focused",{"_index":306,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.geteditor(options",{"_index":779,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.geteditor(options).pipe",{"_index":739,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.getfocusmonitor(this.editorinstance.element",{"_index":348,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.gettools(options.includetools",{"_index":713,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.haschanged.emit(change",{"_index":550,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.haschangedmap[options.holder",{"_index":731,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.haschangedmap[options.holder].asobservable",{"_index":775,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.haschangedmap[options.holder].next",{"_index":766,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.haschangedmap[options.holder].next(change",{"_index":733,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.haschangedmap[options.holder].next(data",{"_index":770,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.haschangedmap[options.holder].next(response.result",{"_index":762,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hassaved.next(saved",{"_index":552,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.hassavedmap[options.holder",{"_index":776,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hassavedmap[options.holder].asobservable",{"_index":777,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hassavedmap[options.holder].next(false",{"_index":765,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hassavedmap[options.holder].next(true",{"_index":761,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hidetoolbar",{"_index":556,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.holder",{"_index":534,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.id",{"_index":521,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.includetools",{"_index":527,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.initialblock",{"_index":557,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.isready.emit(isready",{"_index":548,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.isreadymap[holder].next(true",{"_index":728,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder",{"_index":735,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].asobservable",{"_index":774,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].next(true",{"_index":737,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].value",{"_index":736,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.istouched.emit(true",{"_index":518,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.minheight",{"_index":559,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.ngcontrol",{"_index":335,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.invalid",{"_index":354,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.touched",{"_index":355,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.valueaccessor",{"_index":337,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ondestroy$.complete",{"_index":798,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.ondestroy$.next(true",{"_index":797,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.ontouch",{"_index":275,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ontouch(event",{"_index":319,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.pluginsmap[key",{"_index":710,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.ref.tick",{"_index":729,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.sanitizer",{"_index":560,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service",{"_index":546,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.createinstance",{"_index":526,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.destroyinstance",{"_index":553,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.geteditor",{"_index":520,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.update",{"_index":533,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.setupservicesubscriptions",{"_index":347,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.setupsubjects",{"_index":724,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.statechanges.next",{"_index":262,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.touched$.asobservable",{"_index":524,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.touched$.next(true",{"_index":517,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.userplugins",{"_index":708,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.run",{"_index":750,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.run(async",{"_index":723,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.runoutsideangular",{"_index":743,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.runoutsideangular(async",{"_index":720,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder",{"_index":788,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder].complete",{"_index":793,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder].next(value",{"_index":790,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["threatening",{"_index":1137,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":543,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["tick",{"_index":646,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["time",{"_index":131,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["timer",{"_index":433,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["tinynode",{"_index":1258,"title":{},"body":{"index.html":{}}}],["tinynodes",{"_index":929,"title":{"additional-documentation/tinynodes-library-docs.html":{}},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/tinynodes-library-docs.html":{}}}],["tinynodes/ngx",{"_index":582,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["today",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":1351,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["todos",{"_index":1352,"title":{},"body":{"todo.html":{}}}],["token",{"_index":45,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":43,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PluginCode.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"modules/PluginHeaderModule.html":{},"injectables/PluginImage.html":{},"modules/PluginImageModule.html":{},"injectables/PluginLink.html":{},"modules/PluginLinkModule.html":{},"injectables/PluginList.html":{},"modules/PluginListModule.html":{},"injectables/PluginMarker.html":{},"modules/PluginMarkerModule.html":{},"injectables/PluginParagraph.html":{},"modules/PluginParagraphModule.html":{},"injectables/PluginSimpleImage.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["toolbar",{"_index":370,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["toolconstructable",{"_index":29,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["tools",{"_index":40,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/CreateEditorJSOptions.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["toolsettings",{"_index":28,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/PluginCode.html":{},"interfaces/PluginConfig.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["toolsettingsmap",{"_index":41,"title":{"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{}}}],["tort",{"_index":1340,"title":{},"body":{"license.html":{}}}],["touched",{"_index":421,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["towards",{"_index":1087,"title":{},"body":{"contributing.html":{}}}],["trigger",{"_index":343,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["triggered",{"_index":626,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["triggerupdate",{"_index":663,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["trolling",{"_index":1096,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":231,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":482,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["type",{"_index":21,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"interfaces/Block.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["typealiases",{"_index":1368,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":715,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/blocks",{"_index":508,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["types/config",{"_index":604,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/editorjs",{"_index":699,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/injector",{"_index":605,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/maps",{"_index":700,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/plugins",{"_index":701,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PluginCode.html":{},"injectables/PluginHeader.html":{},"injectables/PluginImage.html":{},"injectables/PluginLink.html":{},"injectables/PluginList.html":{},"injectables/PluginMarker.html":{},"injectables/PluginParagraph.html":{},"injectables/PluginSimpleImage.html":{}}}],["typescript",{"_index":152,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["ui",{"_index":1268,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["unacceptable",{"_index":1089,"title":{},"body":{"contributing.html":{}}}],["undefined",{"_index":753,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["under",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["underlying",{"_index":293,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["underneath",{"_index":1272,"title":{},"body":{"index.html":{}}}],["unique",{"_index":299,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["unlike",{"_index":659,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["unordered",{"_index":78,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["unsubscribe",{"_index":345,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["until",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1093,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":341,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["update",{"_index":633,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["update(options",{"_index":688,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["updated",{"_index":485,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["updates",{"_index":1468,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["upgraded",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":1464,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["url",{"_index":97,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["usage",{"_index":1265,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["use",{"_index":403,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["used",{"_index":143,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["useexisting",{"_index":228,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":610,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["useful",{"_index":691,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{}}}],["userplugin",{"_index":644,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["userplugins",{"_index":57,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["uses",{"_index":1436,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["usevalue",{"_index":609,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["using",{"_index":623,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["value",{"_index":257,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["value(value",{"_index":261,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["values",{"_index":123,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":1022,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":1417,"title":{},"body":{"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["version",{"_index":149,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["versioning",{"_index":1031,"title":{},"body":{"contributing.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{}}}],["via",{"_index":55,"title":{},"body":{"interfaces/BasePlugin.html":{},"interfaces/BasePlugin-1.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginsMap.html":{},"interfaces/ToolSettingsMap.html":{},"interfaces/ToolSettingsMap-1.html":{},"contributing.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{}}}],["viewchild",{"_index":210,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["viewchild('editorinstance",{"_index":294,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["viewpoints",{"_index":1077,"title":{},"body":{"contributing.html":{}}}],["visit",{"_index":1256,"title":{},"body":{"index.html":{}}}],["void",{"_index":163,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["wait",{"_index":490,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["want",{"_index":1276,"title":{},"body":{"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["warranties",{"_index":1326,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1321,"title":{},"body":{"license.html":{}}}],["way",{"_index":400,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsPluginsModule.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{}}}],["wednesday",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["welcoming",{"_index":1043,"title":{},"body":{"contributing.html":{}}}],["whether",{"_index":1338,"title":{},"body":{"license.html":{}}}],["wiki",{"_index":1127,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":1007,"title":{},"body":{"contributing.html":{}}}],["withbackground",{"_index":104,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["withborder",{"_index":101,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["within",{"_index":632,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{}}}],["without",{"_index":959,"title":{},"body":{"changelog.html":{},"contributing.html":{},"license.html":{}}}],["won't",{"_index":371,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["work",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":473,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/functions.html":{}}}],["zone",{"_index":641,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["zone.js",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":577,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginSimpleImageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/BasePlugin.html":{"url":"interfaces/BasePlugin.html","title":"interface - BasePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasePlugin-1.html":{"url":"interfaces/BasePlugin-1.html","title":"interface - BasePlugin-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for required and optional plugin methods.\nThese methods allow a plugin to return a EditorJS plugin and an optional shortcut\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        plugin\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin settings to be returned\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolConstructable, ToolSettings } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginsMap {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/blocks.ts:13\n                            \n                        \n                \n                    \n                        Additional properties on the type\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data interface for the block type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChangeMap.html":{"url":"interfaces/ChangeMap.html","title":"interface - ChangeMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChangeMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject which is the last save from the EditorJS instance\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:52\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateEditorJSOptions.html":{"url":"interfaces/CreateEditorJSOptions.html","title":"interface - CreateEditorJSOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateEditorJSOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/editorjs-service.ts\n        \n\n            \n                Description\n            \n            \n                EditorJS options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoSave\n                                \n                                \n                                        config\n                                \n                                \n                                            Optional\n                                        includeTools\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoSave\n                                    \n                                \n                                \n                                    \n                                        autoSave:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Autosave on change, is set to false\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includeTools\n                                    \n                                \n                                \n                                    \n                                        includeTools:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tools to include, Optional - if not set all tools will be used\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EditorConfig } from '@editorjs/editorjs';\n\n/**\n * EditorJS options\n */\nexport interface CreateEditorJSOptions {\n  /**\n   * Configuration\n   */\n  config: EditorConfig;\n  /**\n   * Tools to include, Optional - if not set all tools will be used\n   */\n  includeTools?: string[];\n  /**\n   * Autosave on change, is set to false\n   */\n  autoSave?: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSChange.html":{"url":"interfaces/EditorJSChange.html","title":"interface - EditorJSChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                An EditorJS change event\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Blocks in the change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time of the change\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSClass.html":{"url":"interfaces/EditorJSClass.html","title":"interface - EditorJSClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the injected EditorJS class, returns the static\nclass of EditorJS with the version and that creates the instance and provides\nthe Typescript parse with type information\n\n            \n\n            \n                Extends\n            \n            \n                        Function\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    EditorJS version\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [['hasChangedMap', { time: 0, blocks: [] }], ['isReadyMap', false], ['hasSavedMap', false]];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSInstanceConfig.html":{"url":"interfaces/EditorJSInstanceConfig.html","title":"interface - EditorJSInstanceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSInstanceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for creating an EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        editorConfig\n                                \n                                \n                                            Optional\n                                        onChange\n                                \n                                \n                                            Optional\n                                        onReady\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorConfig\n                                    \n                                \n                                \n                                    \n                                        editorConfig:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The editor configuration, this is required with at least the holder property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call when the editor makes a change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onReady\n                                    \n                                \n                                \n                                    \n                                        onReady:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call with an editor is ready\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [['hasChangedMap', { time: 0, blocks: [] }], ['isReadyMap', false], ['hasSavedMap', false]];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSMaterialForm.html":{"url":"interfaces/EditorJSMaterialForm.html","title":"interface - EditorJSMaterialForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSMaterialForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n        \n\n            \n                Description\n            \n            \n                Single interface for EditorJSMaterialForm\n\n            \n\n            \n                Extends\n            \n            \n                    MatFormFieldControl\n            \n\n\n\n\n    \n\n\n    \n        import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Provider,\n  Self,\n  ViewChild\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { NgxEditorJSComponent } from '../editorjs/editorjs.component';\n\n/**\n * Provider for the EditorJS Material Field Component\n */\nexport const EDITORJS_MATERIAL_FIELD_CONTROL: Provider = {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n};\n\n/**\n * Single interface for EditorJSMaterialForm\n */\nexport interface EditorJSMaterialForm\n  extends MatFormFieldControl,\n    OnInit,\n    AfterContentInit,\n    OnDestroy,\n    DoCheck {}\n\n/**\n * This component provides a [Material](https://material.angular.io) compatible `` component.\n * It provides a full implementation of all the required properties of a Material component\n *\n * @example\n * \n *  \n * \n */\n@Component({\n  selector: 'ngx-editorjs-mat-field',\n  templateUrl: 'editorjs-mat-field.component.html',\n  styleUrls: ['editorjs-mat-field.component.scss'],\n  host: {\n    '[id]': 'id',\n    '[attr.aria-describedby]': 'describedBy'\n  },\n  providers: [EDITORJS_MATERIAL_FIELD_CONTROL],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxEditorJSMatFieldComponent extends NgxEditorJSComponent implements EditorJSMaterialForm {\n  /**\n   * Internal Static ID for Material for each editor instance\n   */\n  static nextId = 0;\n  /**\n   * Material state change subject\n   */\n  public stateChanges = new Subject();\n\n  /**\n   * Material control type\n   */\n  public controlType = 'ngx-editorjs-mat-field';\n\n  /**\n   * Material error state\n   */\n  public errorState = false;\n\n  /**\n   * Get the component value\n   */\n  get value(): any {\n    return this._value;\n  }\n\n  /**\n   * Set the component value\n   * @param value The value to set\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material placeholder value\n   */\n  private _placeholder: string;\n\n  /**\n   * Get the Material placeholder value\n   */\n  get placeholder() {\n    return this._placeholder;\n  }\n  /**\n   * Set the material Placeholder value\n   * @input placeholder The placeholder state to set\n   */\n  @Input('placeholder')\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material focused state\n   */\n  private _focused: boolean;\n  /**\n   * Get the Material focused state\n   */\n  get focused() {\n    return this._focused;\n  }\n  /**\n   * Set the Material focused state\n   * @param focused The focused state to set\n   */\n  @Input('focused')\n  set focused(focused: boolean) {\n    this._focused = coerceBooleanProperty(focused);\n    if (this._focused) {\n      this.onTouch();\n    }\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material Required Value\n   */\n  private _required = false;\n\n  /**\n   * Get the Material required state\n   */\n  get required() {\n    return this._required;\n  }\n  /**\n   * Set the Material requied state\n   * @param required The required state to set\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material disabled state\n   */\n  private _disabled = false;\n\n  /**\n   * Get the Material disabled state\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  /**\n   * Set the Material disabled state\n   * @param disabled The disabled state to set\n   */\n  @Input('disabled')\n  set disabled(disabled: boolean) {\n    this._disabled = coerceBooleanProperty(disabled);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material empty state\n   */\n  private _empty: boolean;\n  /**\n   * Get the Material empty state\n   */\n  public get empty() {\n    return this._empty;\n  }\n  /**\n   * Set the Material empty state\n   * @param empty The empty value\n   */\n  public set empty(empty: boolean) {\n    this._empty = empty;\n  }\n\n  /**\n   * Access to the underlying {NgxEditorJSDirective}\n   */\n  @ViewChild('editorInstance', { read: NgxEditorJSDirective }) public readonly editorInstance: NgxEditorJSDirective;\n\n  /**\n   * Host binding to the unique ID for this editor for material\n   */\n  @HostBinding()\n  id = `ngx-editorjs-mat-field-${NgxEditorJSMatFieldComponent.nextId++}`;\n\n  /**\n   * Gets if the Material label should float\n   */\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  /**\n   * Host binding for ARIA label\n   */\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  /**\n   *\n   * @param ids The IDs of the Material components\n   */\n  public setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  /**\n   * Material on container click\n   * @param event The {MouseEvent} for the container click\n   */\n  public onContainerClick(event: MouseEvent) {\n    this.onTouch(event);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Constructor for the Material field, as this extends the `NgxEditorJSComponent` component\n   * we call `super()` to get all the properties of that component\n   * @param editorService The NgxEditorJSService instance\n   * @param focusMonitor Focus monitor for the Material element\n   * @parma cd The Change detection ref\n   * @param ngControl The Angular control base class\n   */\n  constructor(\n    protected readonly editorService: NgxEditorJSService,\n    protected focusMonitor: FocusMonitor,\n    protected readonly changeDetection: ChangeDetectorRef,\n    @Optional() @Self() public ngControl: NgControl\n  ) {\n    super(editorService, focusMonitor, changeDetection);\n  }\n\n  /**\n   * Called on OnInit\n   */\n  public ngOnInit(): void {\n    if (this.ngControl !== null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  /**\n   * Inside the AfterContentInit life-cycle we set up a listener for focus\n   * and trigger focus autosave subscribe and unsubscribe\n   */\n  public ngAfterContentInit(): void {\n    this.setupServiceSubscriptions();\n    this.getFocusMonitor(this.editorInstance.element)\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(focused => {\n        this.onTouch();\n        this.focused = focused;\n        this.stateChanges.next();\n      });\n  }\n\n  /**\n   * Set the error state based on the underlying control state\n   */\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      this.errorState = this.ngControl.invalid && this.ngControl.touched;\n      this.stateChanges.next();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorMap.html":{"url":"interfaces/EditorMap.html","title":"interface - EditorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing instances of BehaviorSubject\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:8\n                            \n                        \n                \n                    \n                        A map key containing BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Header.html":{"url":"interfaces/Header.html","title":"interface - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header level from 1-6\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderBlock.html":{"url":"interfaces/HeaderBlock.html","title":"interface - HeaderBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a header block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        caption\n                                \n                                \n                                            Optional\n                                        stretched\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        withBackground\n                                \n                                \n                                            Optional\n                                        withBorder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional image caption\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stretched\n                                    \n                                \n                                \n                                    \n                                        stretched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional stretch property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBackground\n                                    \n                                \n                                \n                                    \n                                        withBackground:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional background property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBorder\n                                    \n                                \n                                \n                                    \n                                        withBorder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional border property\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageBlock.html":{"url":"interfaces/ImageBlock.html","title":"interface - ImageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a image block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorApiCallOptions.html":{"url":"interfaces/InjectorApiCallOptions.html","title":"interface - InjectorApiCallOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorApiCallOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Options to pass when calling the EditorJS instance API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        holder\n                                \n                                \n                                        method\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Holder for the EditorJS instance\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The method to call\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The optional namespace for the API call\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [['hasChangedMap', { time: 0, blocks: [] }], ['isReadyMap', false], ['hasSavedMap', false]];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorApiCallResponse.html":{"url":"interfaces/InjectorApiCallResponse.html","title":"interface - InjectorApiCallResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorApiCallResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                A response from the EditorJS api\n\n            \n\n            \n                Extends\n            \n            \n                        InjectorApiCallOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        result\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                    \n                                \n                                \n                                    \n                                        result:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [['hasChangedMap', { time: 0, blocks: [] }], ['isReadyMap', false], ['hasSavedMap', false]];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorMethodOption.html":{"url":"interfaces/InjectorMethodOption.html","title":"interface - InjectorMethodOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorMethodOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Options for a Injector method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        editor\n                                \n                                \n                                        holder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional blocks\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editor\n                                    \n                                \n                                \n                                    \n                                        editor:     EditorJS\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorJS\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional editor\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The holder for the option\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [['hasChangedMap', { time: 0, blocks: [] }], ['isReadyMap', false], ['hasSavedMap', false]];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/List.html":{"url":"interfaces/List.html","title":"interface - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a list block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List items of type T\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list style\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListBlock.html":{"url":"interfaces/ListBlock.html","title":"interface - ListBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                The default list block is provided by the EditorJS list plugin\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSConfig.html":{"url":"interfaces/NgxEditorJSConfig.html","title":"interface - NgxEditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        blockPlaceholder\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hideToolbar\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                                \n                                            Optional\n                                        minHeight\n                                \n                                \n                                            Optional\n                                        sanitizer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockPlaceholder\n                                    \n                                \n                                \n                                    \n                                        blockPlaceholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    First Block placeholder\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideToolbar\n                                    \n                                \n                                \n                                    \n                                        hideToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, toolbar won't be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minHeight\n                                    \n                                \n                                \n                                    \n                                        minHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Height of Editor's bottom area that allows to set focus on the last Block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sanitizer\n                                    \n                                \n                                \n                                    \n                                        sanitizer:     SanitizerConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SanitizerConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define default sanitizer configuration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSModuleConfig {\n  /**\n   * Configuration options for EditorJS\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxEditorJSDirective.html":{"url":"directives/NgxEditorJSDirective.html","title":"directive - NgxEditorJSDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createEditor\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                includeTools\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasChanged\n                            \n                            \n                                hasSaved\n                            \n                            \n                                isFocused\n                            \n                            \n                                isReady\n                            \n                            \n                                isTouched\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    element\n                                \n                                \n                                    service\n                                \n                                \n                                    touched\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:152\n                            \n                        \n\n                \n                    \n                            Creates the directive instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The element the directive is attached to\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:53\n                            \n                        \n                \n                    \n                        Boolean, If set to true the EditorJS instance gets autofocus when initialized\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:106\n                            \n                        \n                \n                    \n                        Number, Used with Angular Forms this sets an autosave timer active that calls the EditorJS save\nmethod. This patches the FormControl value with every block change and focus and blur, it also autosaves after\na set time\nSet to 0 to disable or pass a value in ms of the autosave time\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:84\n                            \n                        \n                \n                    \n                        String, The text to display as the placeholder text in the first block before content is added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:112\n                            \n                        \n                \n                    \n                        Blocks, An initial set of block data to render inside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:59\n                            \n                        \n                \n                    \n                        Boolean, If set to true the toolbar will not show in the EditorJS instance\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:65\n                            \n                        \n                \n                    \n                        String, the ID property of the element that the EditorJS instance will be attached to\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        includeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:97\n                            \n                        \n                \n                    \n                        String Array, If empty all tools available via the plugin service will be added.  If a string\narray is set only the tools with the provided keys will be added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:72\n                            \n                        \n                \n                    \n                        String, The type of block to set as the initial block type. This needs to match a name in the UserPlugins object.\nThe default value is \"paragraph\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:78\n                            \n                        \n                \n                    \n                        Number, The minimum height of the EditorJS instance bottom after the last block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:90\n                            \n                        \n                \n                    \n                        SanitizerConfig, The configuration for the HTML sanitizer\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        hasChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:136\n                            \n                        \n                \n                    \n                        Emits if the EditorJS content has changed when save is called\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hasSaved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:118\n                            \n                        \n                \n                    \n                        Emits if the content from the EditorJS instance has been saved to the component value\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isFocused\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:130\n                            \n                        \n                \n                    \n                        Emits if the component is focused\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReady\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:142\n                            \n                        \n                \n                    \n                        Emits if the EditorJS component is ready\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isTouched\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:124\n                            \n                        \n                \n                    \n                        Emits if the component has been touched\n\n                    \n                \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:148\n                \n            \n\n\n            \n                \n                    Host click listener\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(config?: EditorConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:197\n                \n            \n\n\n            \n                \n                    Creates an EditorJS instance for this directive\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            EditorConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Configuration for this instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:248\n                \n            \n\n\n            \n                \n                    After content is created, we create the editor instance and set up listners\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:214\n                \n            \n\n\n            \n                \n                    When ngOnChanges are called, there are two paths\nIf it's just blocks, then the service is updated with the blocks\nIf it's any other property it means we create a new editor, as this\nis a destructive process we also need to wait for an existing editor\nto be ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes on the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:281\n                \n            \n\n\n            \n                \n                    Destroy the editor and subjects for this service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:168\n                                \n                            \n                    \n                        \n                                Get the EditorJS instance for this directive\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:175\n                                \n                            \n                    \n                        \n                                Get the element for the directive\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:182\n                                \n                            \n                    \n                        \n                                Get the NgxEditorJSService for this directive\n\n\n                                \n                                    Returns :         NgxEditorJSService\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n\n                \n                    \n                        gettouched()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:189\n                                \n                            \n                    \n                        \n                                Get the touched state\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  AfterContentInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData, SanitizerConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { createEditorJSConfig } from '../config/editor-config';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * \n */\n@Directive({\n  selector: '[ngxEditorJS]'\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterContentInit {\n  /**\n   * On Destroyed subject\n   */\n  private readonly onDestroy$ = new Subject();\n  /**\n   * Form touched state\n   */\n  private touched$ = new BehaviorSubject(false);\n\n  /**\n   * The DOM element ID, it will use the Directive DOM element ID or falls back to the provided `holder` property\n   */\n  private id: string;\n\n  /**\n   * Boolean, If set to true the EditorJS instance gets autofocus when initialized\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Boolean, If set to true the toolbar will not show in the EditorJS instance\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * String, the ID property of the element that the EditorJS instance will be attached to\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * String, The type of block to set as the initial block type. This needs to match a name in the `UserPlugins` object.\n   * The default value is \"paragraph\"\n   */\n  @Input()\n  public initialBlock?: string;\n\n  /**\n   * Number, The minimum height of the EditorJS instance bottom after the last block\n   */\n  @Input()\n  public minHeight: number;\n\n  /**\n   * String, The text to display as the placeholder text in the first block before content is added\n   */\n  @Input()\n  public blockPlaceholder: string;\n\n  /**\n   * SanitizerConfig, The configuration for the HTML sanitizer\n   */\n  @Input()\n  public sanitizer: SanitizerConfig;\n\n  /**\n   * String Array, If empty all tools available via the plugin service will be added.  If a string\n   * array is set only the tools with the provided keys will be added\n   */\n  @Input()\n  public includeTools: string[] = [];\n\n  /**\n   * Number, Used with Angular Forms this sets an autosave timer active that calls the EditorJS save\n   * method. This patches the `FormControl` value with every block change and focus and blur, it also autosaves after\n   * a set time\n   * Set to 0 to disable or pass a value in `ms` of the autosave time\n   */\n  @Input()\n  public autosave: number;\n\n  /**\n   * Blocks, An initial set of block data to render inside the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * Emits if the content from the EditorJS instance has been saved to the component value\n   */\n  @Output()\n  public hasSaved = new EventEmitter();\n\n  /**\n   * Emits if the component has been touched\n   */\n  @Output()\n  public isTouched = new EventEmitter();\n\n  /**\n   * Emits if the component is focused\n   */\n  @Output()\n  public isFocused = new EventEmitter();\n\n  /**\n   * Emits if the EditorJS content has changed when `save` is called\n   */\n  @Output()\n  public hasChanged = new EventEmitter();\n\n  /**\n   * Emits if the EditorJS component is ready\n   */\n  @Output()\n  public isReady = new EventEmitter();\n\n  /**\n   * Host click listener\n   */\n  @HostListener('click')\n  onclick() {\n    this.touched$.next(true);\n    this.isTouched.emit(true);\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Creates the directive instance\n   * @param el The element the directive is attached to\n   * @param editorService The editor service\n   */\n  constructor(\n    protected readonly el: ElementRef,\n    protected readonly editorService: NgxEditorJSService,\n    protected readonly cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Get the EditorJS instance for this directive\n   */\n  public get editor(): Observable {\n    return this.service.getEditor({ holder: this.id });\n  }\n\n  /**\n   * Get the element for the directive\n   */\n  public get element() {\n    return this.el.nativeElement;\n  }\n\n  /**\n   * Get the `NgxEditorJSService` for this directive\n   */\n  public get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  /**\n   * Get the touched state\n   */\n  public get touched() {\n    return this.touched$.asObservable();\n  }\n\n  /**\n   * Creates an EditorJS instance for this directive\n   * @param config Configuration for this instance\n   */\n  public async createEditor(config?: EditorConfig): Promise {\n    await this.service.createInstance({\n      config,\n      includeTools: this.includeTools,\n      autoSave: this.autosave || 0\n    });\n    this.cd.markForCheck();\n  }\n\n  /**\n   * When ngOnChanges are called, there are two paths\n   * If it's just blocks, then the service is updated with the blocks\n   * If it's any other property it means we create a new editor, as this\n   * is a destructive process we also need to wait for an existing editor\n   * to be ready\n   * @param changes Changes on the component\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes.blocks &&\n      !changes.blocks.firstChange &&\n      JSON.stringify(changes.blocks.previousValue) !== JSON.stringify(changes.blocks.currentValue)\n    ) {\n      this.service.update({ holder: this.holder });\n      this.cd.markForCheck();\n    }\n    const changesKeys = Object.keys(changes);\n    if (\n      this.id &&\n      // Ignore changes for values not related to EditorJS\n      [\n        'autofocus',\n        'holder',\n        'hideToolbar',\n        'initialBlock',\n        'minHeight',\n        'blockPlaceholder',\n        'sanitizer',\n        'includeTools'\n      ].find(key => {\n        return changesKeys.includes(key);\n      })\n    ) {\n      this.createEditor(this.createConfig());\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * After content is created, we create the editor instance and set up listners\n   */\n  ngAfterContentInit() {\n    this.id = this.el.nativeElement.id || this.holder;\n\n    if (!this.id) {\n      throw new Error('Error in NgxEditorJSDirective::ngAfterContentInit - Directive element has no ID');\n    }\n    this.createEditor(this.createConfig());\n\n    this.service\n      .isReady({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(isReady => {\n        this.isReady.emit(isReady);\n      });\n\n    this.service\n      .hasChanged({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(change => {\n        this.hasChanged.emit(change);\n      });\n\n    this.service\n      .hasSaved({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(saved => {\n        this.hasSaved.next(saved);\n      });\n  }\n\n  /**\n   * Destroy the editor and subjects for this service\n   */\n  ngOnDestroy() {\n    this.service.destroyInstance({ holder: this.id });\n  }\n\n  /**\n   * Create a configuration for EditorJS\n   */\n  private createConfig(): EditorConfig {\n    const config: EditorConfig = createEditorJSConfig({\n      holder: this.id,\n      autofocus: this.autofocus,\n      hideToolbar: this.hideToolbar,\n      initialBlock: this.initialBlock,\n      placeholder: this.blockPlaceholder,\n      minHeight: this.minHeight,\n      sanitizer: this.sanitizer\n    });\n    if (this.blocks && this.blocks.length > 0) {\n      config.data = {\n        time: Date.now(),\n        version: EditorJS.version,\n        blocks: this.blocks\n      };\n    }\n    return config;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSModule.html":{"url":"modules/NgxEditorJSModule.html","title":"module - NgxEditorJSModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The @tinynodes/ngx-editorjs module provides a collection of features to allow\nany Angular app to use and control an EditorJS instance\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application.\nThe forRoot method takes an optional NgxEditorJSModuleConfig config, this will provide a\ndefault instance.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSModuleConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:58\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSModuleConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule, MatInputModule } from '@angular/material';\nimport EditorJS from '@editorjs/editorjs';\nimport { createModuleConfig } from './config/module-config';\nimport { NgxEditorJSMatFieldComponent } from './containers/editorjs-mat-field/editorjs-mat-field.component';\nimport { NgxEditorJSComponent } from './containers/editorjs/editorjs.component';\nimport { NgxEditorJSDirective } from './directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from './services/editorjs.service';\nimport { FOR_ROOT_OPTIONS_TOKEN, NgxEditorJSModuleConfig, NGX_EDITORJS_CONFIG } from './types/config';\nimport { EditorJSInstance, EDITORJS_MODULE_IMPORT } from './types/injector';\n\n/**\n * Factory function to return the EditorJS base class\n */\nexport function createEditorJSInstance(editorjs: any) {\n  return editorjs;\n}\n\n/**\n * The `@tinynodes/ngx-editorjs` module provides a collection of features to allow\n * any Angular app to use and control an [EditorJS](http://editorjs.io) instance\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application.\n * The `forRoot` method takes an optional `NgxEditorJSModuleConfig` config, this will provide a\n * default instance.\n */\n@NgModule({\n  imports: [CommonModule, FormsModule, MatInputModule, MatFormFieldModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective],\n  exports: [NgxEditorJSComponent, NgxEditorJSMatFieldComponent, NgxEditorJSDirective],\n  providers: [\n    NgxEditorJSService,\n    {\n      provide: EDITORJS_MODULE_IMPORT,\n      useValue: EditorJS\n    },\n    {\n      provide: EditorJSInstance,\n      useFactory: createEditorJSInstance,\n      deps: [EDITORJS_MODULE_IMPORT]\n    }\n  ]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NGX_EDITORJS_CONFIG,\n          useFactory: createModuleConfig,\n          deps: [FOR_ROOT_OPTIONS_TOKEN]\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSModuleConfig.html":{"url":"interfaces/NgxEditorJSModuleConfig.html","title":"interface - NgxEditorJSModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                The configuration option that can be passed to the NgxEditorJSModule.forRoot method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration options for EditorJS\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSModuleConfig {\n  /**\n   * Configuration options for EditorJS\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSService.html":{"url":"injectables/NgxEditorJSService.html","title":"injectable - NgxEditorJSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSService handles the management of EditorJS instances, plugins and lifecycle observables\nAll EditorJS instances are created outside of Angular using NgZone to ensure change detection is not triggered.\nOnce an instance is created, several Observable values are also set up:\n\nEditor isReady state - Set when the editor instance is ready in the DOM\nEditor hasSaved state - Set when the editor .save() method has been called.\nEditor hasChanged state - Set when a change happens, contains the OutputData from the Editor.\n\nAfter setup when isReady is true the editor can be used within Angular.  There are some methods provided\nfor save, update and clear - and an apiCall method which allows for any call to be made to EditorJS that matches\nit's API.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiCall\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                    Async\n                                createInstance\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                destroyInstance\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                hasChanged\n                            \n                            \n                                    Public\n                                hasSaved\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorJs: EditorJSClass, config: NgxEditorJSModuleConfig, userPlugins: PluginsMap, zone: NgZone, ref: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:64\n                            \n                        \n\n                \n                    \n                            When the NgxEditorJSService is initialized any plugins passed in via the UserPlugin are set on the service plugin map\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        editorJs\n                                                  \n                                                        \n                                                                        EditorJSClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The EditorJS class injected into the application and used to create new editor instances\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the Module config\n\n                                                        \n                                                \n                                                \n                                                        userPlugins\n                                                  \n                                                        \n                                                                        PluginsMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Plugin map passed from the module configuration\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Angular Zone service that allows the EditorJS methods to be run outside of Angular\n\n                                                        \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The ApplicationRef provided by Angular, used to trigger an application tick\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            apiCall\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apiCall(options: InjectorApiCallOptions, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:165\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    A helper method to make calls to any EditorJS API (see API Docs)\nThe first argument is an object that you must pass the method name, and the holder ID of the container.\nAn optional namespace can be added for API calls such as blocks, caret, etc.\nThe second argument is any additional arguments as required by the API.\nUnlike other methods an API call be made with a .subscribe, the result will be an observable value.\nIf the value is a Promise it will be resolved first\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorApiCallOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        EditorJS API call options\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Additional arguments to pass to the API request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(options: InjectorMethodOption, triggerUpdate)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:223\n                \n            \n\n\n            \n                \n                    Gets the EditorJS instance for the passed holder and calls the clear method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                                \n                                    triggerUpdate\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                    \n                                        If set to false the hasChanged Observable won't be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(options: CreateEditorJSOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:90\n                \n            \n\n\n            \n                \n                    Creates a new EditorJS instance outside of the Angular zone and then adds it to the editor instances\nThis method should be called with await to ensure the editor is fully initialized\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CreateEditorJSOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The options to pass to the method for creating an EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:362\n                \n            \n\n\n            \n                \n                    Call this to destroy all subscriptions within the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroyInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyInstance(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:310\n                \n            \n\n\n            \n                \n                    Destroys a single instance of EditorJS and all the subject values created for it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:266\n                \n            \n\n\n            \n                \n                    Returns the underlying EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasChanged(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:288\n                \n            \n\n\n            \n                \n                    Subscribe to the hasChanged state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasSaved\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasSaved(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:299\n                \n            \n\n\n            \n                \n                    Subscribe to the hasSaved state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:277\n                \n            \n\n\n            \n                \n                    Subscribe to the isReady state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(options: InjectorMethodOption, triggerUpdate)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:207\n                \n            \n\n\n            \n                \n                    Gets the EditorJS instance for the passed holder and calls the save method\nto get the OutputData of the editor. This data is stored in the change subject\nfor that instance and the hasSaved value updated\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                                \n                                    triggerUpdate\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                    \n                                        If set to false the hasChanged Observable won't be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(options: InjectorMethodOption, triggerUpdate)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/src/lib/services/editorjs.service.ts:245\n                \n            \n\n\n            \n                \n                    Gets the EditorJS instance for the passed holder and calls the render method if blocks\nare passed. Optionally can disable the hasChanged update - useful if doing actions\nsuch as resetting data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                                \n                                    triggerUpdate\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                    \n                                        If set to false the hasChanged Observable won't be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApplicationRef, Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { filter, switchMap, take, takeUntil } from 'rxjs/operators';\nimport { NgxEditorJSModuleConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { CreateEditorJSOptions } from '../types/editorjs-service';\nimport {\n  EditorJSClass,\n  EditorJSInstance,\n  InjectorApiCallOptions,\n  InjectorApiCallResponse,\n  InjectorMethodOption,\n  MAP_DEFAULTS\n} from '../types/injector';\nimport { ChangeMap, EditorMap, ReadyMap, SavedMap } from '../types/maps';\nimport { PluginsMap, ToolSettingsMap, UserPlugins } from '../types/plugins';\n\n/**\n * The NgxEditorJSService handles the management of EditorJS instances, plugins and lifecycle observables\n * All EditorJS instances are created outside of Angular using `NgZone` to ensure change detection is not triggered.\n * Once an instance is created, several `Observable` values are also set up:\n *\n *  - Editor `isReady` state - Set when the editor instance is ready in the DOM\n *  - Editor `hasSaved` state - Set when the editor `.save()` method has been called.\n *  - Editor `hasChanged` state - Set when a change happens, contains the `OutputData` from the Editor.\n *\n * After setup when `isReady` is true the editor can be used within Angular.  There are some methods provided\n * for save, update and clear - and an `apiCall` method which allows for any call to be made to EditorJS that matches\n * it's API.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  /**\n   * Internal destroy method for the service\n   * @internal\n   */\n  private readonly onDestroy$ = new Subject();\n\n  /**\n   * Internal map of all EditorJS instances\n   */\n  private readonly editorMap: EditorMap = {};\n\n  /**\n   * Internal map of all EditorJS ready states\n   */\n  private readonly isReadyMap: ReadyMap = {};\n\n  /**\n   * Internal map of when EditorJS save is called\n   */\n  private readonly hasSavedMap: SavedMap = {};\n\n  /**\n   * Internal map of all EditorJS change states\n   */\n  private readonly hasChangedMap: ChangeMap = {};\n\n  /**\n   * Internal map of plugins available\n   */\n  private pluginsMap: PluginsMap = {};\n\n  /**\n   * When the `NgxEditorJSService` is initialized any plugins passed in via the `UserPlugin` are set on the service plugin map\n   *\n   * @param editorJs The EditorJS class injected into the application and used to create new editor instances\n   * @param config the Module config\n   * @param userPlugins The Plugin map passed from the module configuration\n   * @param zone The Angular Zone service that allows the EditorJS methods to be run outside of Angular\n   * @param ref The ApplicationRef provided by Angular, used to trigger an application tick\n   */\n  constructor(\n    @Inject(EditorJSInstance) private readonly editorJs: EditorJSClass,\n    @Inject(NGX_EDITORJS_CONFIG) private readonly config: NgxEditorJSModuleConfig,\n    @Inject(UserPlugins) private readonly userPlugins: PluginsMap,\n    private readonly zone: NgZone,\n    private readonly ref: ApplicationRef\n  ) {\n    Object.entries({ ...this.userPlugins }).forEach(([key, tool]) => (this.pluginsMap[key] = tool));\n  }\n\n  /**\n   * Creates a new EditorJS instance outside of the Angular zone and then adds it to the editor instances\n   * This method should be called with `await` to ensure the editor is fully initialized\n   * @param options The options to pass to the method for creating an EditorJS instance\n   */\n  public async createInstance(options: CreateEditorJSOptions): Promise {\n    const editorConfig: EditorConfig = {\n      ...this.config.editorjs,\n      ...options.config,\n      tools: this.getTools(options.includeTools)\n    };\n    editorConfig.onChange = (editorConfig.onChange && typeof editorConfig.onChange === 'function'\n      ? editorConfig.onChange\n      : this.createOnChange.call(this, { holder: editorConfig.holder as string })) as any;\n    editorConfig.onReady =\n      editorConfig.onReady && typeof editorConfig.onReady === 'function'\n        ? editorConfig.onReady\n        : this.createOnReady.call(this, { holder: editorConfig.holder as string });\n\n    await this.zone.runOutsideAngular(async () => {\n      const editor = new this.editorJs(editorConfig);\n      const holder = editorConfig.holder as string;\n      await editor.isReady;\n      await this.zone.run(async () => {\n        await this.setupSubjects({ holder });\n        if (this.editorMap[holder]) {\n          this.editorMap[holder].next(editor);\n        } else {\n          this.editorMap[holder] = new BehaviorSubject(editor);\n        }\n        this.isReadyMap[holder].next(true);\n        this.ref.tick();\n      });\n    });\n  }\n\n  /**\n   * Internal method to create an default onChange method for `EditorJS`\n   * @param options The InjectorMethodOption for this request\n   */\n  private createOnChange(options: InjectorMethodOption): (change: OutputData) => void {\n    const onChange = (change: OutputData) => {\n      if (!this.hasChangedMap[options.holder]) {\n        this.hasChangedMap[options.holder] = new BehaviorSubject(change);\n      }\n      if (change) {\n        this.hasChangedMap[options.holder].next(change);\n      }\n    };\n    return onChange;\n  }\n\n  /**\n   * Internal method to create an default onReady method for `EditorJS`\n   * @param options The InjectorMethodOption for this request\n   */\n  private createOnReady(options: InjectorMethodOption): () => void {\n    const onReady = () => {\n      if (!this.isReadyMap[options.holder]) {\n        this.isReadyMap[options.holder] = new BehaviorSubject(false);\n      }\n      if (!this.isReadyMap[options.holder].value) {\n        this.isReadyMap[options.holder].next(true);\n      }\n    };\n    return onReady;\n  }\n\n  /**\n   * A helper method to make calls to any EditorJS API (see [API Docs](https://editorjs.io/api))\n   * The first argument is an object that you must pass the `method` name, and the `holder` ID of the container.\n   * An optional `namespace` can be added for API calls such as `blocks`, `caret`, etc.\n   * The second argument is any additional arguments as required by the API.\n   *\n   * Unlike other methods an API call be made with a `.subscribe`, the result will be an observable value.\n   * If the value is a Promise it will be resolved first\n   *\n   * @param options EditorJS API call options\n   * @param args Additional arguments to pass to the API request\n   */\n  public apiCall(options: InjectorApiCallOptions, ...args: any[]): Observable> {\n    return this.getEditor(options).pipe(\n      take(1),\n      switchMap(editor => {\n        const apiResult = new BehaviorSubject>({ ...options, result: {} as T });\n\n        this.zone.runOutsideAngular(() => {\n          let method: any;\n          if (!options.namespace) {\n            method = editor[options.method];\n          } else {\n            method = editor[options.namespace][options.method];\n          }\n          if (!method) {\n            throw new Error(`No method ${options.method} ${options.namespace ? 'in ' + options.namespace : ''}`);\n          }\n          const result = method.call(editor, ...args);\n          this.zone.run(() => {\n            if (!result || (result && !result.then)) {\n              apiResult.next({\n                ...options,\n                result: typeof result === 'undefined' ? {} : result\n              });\n            } else {\n              result.then((r: T) => {\n                apiResult.next({ ...options, result: r });\n              });\n            }\n          });\n        });\n        return apiResult.asObservable();\n      })\n    );\n  }\n\n  /**\n   * Gets the EditorJS instance for the passed holder and calls the `save` method\n   * to get the `OutputData` of the editor. This data is stored in the change subject\n   * for that instance and the `hasSaved` value updated\n   * @param options Options to configure a method call against the EditorJS core API\n   * @param triggerUpdate If set to false the `hasChanged` Observable won't be updated\n   */\n  public save(options: InjectorMethodOption, triggerUpdate = true): void {\n    this.apiCall({ holder: options.holder, namespace: 'saver', method: 'save' }, options.data).subscribe(\n      (response: InjectorApiCallResponse) => {\n        this.hasSavedMap[options.holder].next(true);\n        if (triggerUpdate) {\n          this.hasChangedMap[options.holder].next(response.result);\n        }\n      }\n    );\n  }\n\n  /**\n   * Gets the EditorJS instance for the passed holder and calls the `clear` method.\n   * @param options Options to configure a method call against the EditorJS core API\n   * @param triggerUpdate If set to false the `hasChanged` Observable won't be updated\n   */\n  public clear(options: InjectorMethodOption, triggerUpdate = true): void {\n    this.apiCall({ holder: options.holder, namespace: 'blocks', method: 'clear' })\n      .pipe(take(1))\n      .subscribe((response: InjectorApiCallResponse) => {\n        this.hasSavedMap[options.holder].next(false);\n        if (triggerUpdate) {\n          this.hasChangedMap[options.holder].next({\n            time: Date.now(),\n            blocks: [],\n            version: this.editorJs.version\n          });\n        }\n      });\n  }\n\n  /**\n   * Gets the EditorJS instance for the passed holder and calls the render method if blocks\n   * are passed. Optionally can disable the `hasChanged` update - useful if doing actions\n   * such as resetting data.\n   * @param options Options to configure a method call against the EditorJS core API\n   * @param triggerUpdate If set to false the `hasChanged` Observable won't be updated\n   */\n  public update(options: InjectorMethodOption, triggerUpdate = true): void {\n    if (!options.data) {\n      return;\n    }\n    const data = {\n      time: Date.now(),\n      version: this.editorJs.version,\n      blocks: [],\n      ...options.data\n    };\n    this.apiCall({ holder: options.holder, namespace: 'blocks', method: 'render' }, data).subscribe(() => {\n      if (triggerUpdate) {\n        this.hasChangedMap[options.holder].next(data);\n      }\n    });\n  }\n\n  /**\n   * Returns the underlying EditorJS instance\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public getEditor(options: InjectorMethodOption): Observable {\n    if (!this.editorMap[options.holder]) {\n      this.editorMap[options.holder] = new BehaviorSubject(undefined);\n    }\n    return this.editorMap[options.holder].pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Subscribe to the `isReady` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public isReady(options: InjectorMethodOption): Observable {\n    if (!this.isReadyMap[options.holder]) {\n      this.isReadyMap[options.holder] = new BehaviorSubject(false);\n    }\n    return this.isReadyMap[options.holder].asObservable();\n  }\n\n  /**\n   * Subscribe to the `hasChanged` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public hasChanged(options: InjectorMethodOption): Observable {\n    if (!this.hasChangedMap[options.holder]) {\n      this.hasChangedMap[options.holder] = new BehaviorSubject({ time: 0, blocks: [] });\n    }\n    return this.hasChangedMap[options.holder].asObservable();\n  }\n\n  /**\n   * Subscribe to the `hasSaved` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public hasSaved(options: InjectorMethodOption): Observable {\n    if (!this.hasSavedMap[options.holder]) {\n      this.hasSavedMap[options.holder] = new BehaviorSubject(false);\n    }\n    return this.hasSavedMap[options.holder].asObservable();\n  }\n\n  /**\n   * Destroys a single instance of EditorJS and all the subject values created for it\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public destroyInstance(options: InjectorMethodOption): void {\n    const instanceDestroyed = new Subject();\n    this.getEditor(options)\n      .pipe(takeUntil(instanceDestroyed))\n      .subscribe(editor => {\n        this.zone.runOutsideAngular(() => {\n          editor.destroy();\n          this.zone.run(() => {\n            this.cleanupSubjects({ holder: options.holder });\n            instanceDestroyed.next(true);\n            instanceDestroyed.complete();\n            this.ref.tick();\n          });\n        });\n      });\n  }\n\n  /**\n   * Sets up the `BehaviorSubject` values when an EditorJS instance is created.  All the subjects are first created and set\n   * to default values.\n   * Once an EditorJS instance is ready these values can provide change and save state information\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  private async setupSubjects(options: InjectorMethodOption): Promise {\n    MAP_DEFAULTS.forEach(([mapKey, value]: [string, typeof value]) => {\n      if (!this[mapKey][options.holder]) {\n        this[mapKey][options.holder] = new BehaviorSubject(value);\n      }\n      this[mapKey][options.holder].next(value);\n    });\n  }\n\n  /**\n   * Handles cleaning up all the `BehaviorSubject` values once an EditorJS instance has been destroyed\n   * @param holder The holder ID for the EditorJS instance\n   */\n  private cleanupSubjects(options: InjectorMethodOption) {\n    MAP_DEFAULTS.forEach(([mapKey, value]: [string, any]) => {\n      if (this[mapKey][options.holder]) {\n        this[mapKey][options.holder].next(value);\n        this[mapKey][options.holder].complete();\n        this[mapKey][options.holder] = null;\n        delete this[mapKey][options.holder];\n      }\n    });\n    this.editorMap[options.holder] = null;\n    delete this.editorMap[options.holder];\n  }\n\n  /**\n   * Call this to destroy all subscriptions within the service\n   */\n  public destroy() {\n    Object.keys(this.editorMap).forEach(holder => this.destroyInstance({ holder }));\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * Returns a map of tools to be initialized by the editor\n   * @param exclude Optional array of keys to exclude from the map\n   */\n  private getTools(exclude: string[] = []): ToolSettingsMap {\n    return Object.entries(this.pluginsMap)\n      .filter(([key]) => !exclude.includes(key))\n      .reduce(\n        (finalTools, [key, plugin]) =>\n          plugin.shortcut\n            ? {\n                [key]: {\n                  class: plugin.plugin(),\n                  shortcut: plugin.shortcut()\n                },\n                ...finalTools\n              }\n            : { [key]: plugin.plugin(), ...finalTools },\n        {}\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsPluginsModule.html":{"url":"modules/NgxEditorjsPluginsModule.html","title":"module - NgxEditorjsPluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsPluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/ngx-editorjs-plugins.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The NgxEditorjsPluginsModule provides several additional modules\nthat provide a way to easily plug in block and inline tools for EditorJS.\nImporting NgxEditorjsPluginsModule will include all modules, while it\nis also possible to import each individual module as required.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PluginCodeModule } from './plugins/code/code.module';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginImageModule } from './plugins/image/image.module';\nimport { PluginLinkModule } from './plugins/link/link.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginSimpleImageModule } from './plugins/simple-image/simple-image.module';\n\n/**\n * The `NgxEditorjsPluginsModule` provides several additional modules\n * that provide a way to easily plug in block and inline tools for EditorJS.\n *\n * Importing `NgxEditorjsPluginsModule` will include all modules, while it\n * is also possible to import each individual module as required.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule\n  ],\n  exports: [\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule\n  ]\n})\nexport class NgxEditorjsPluginsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paragraph.html":{"url":"interfaces/Paragraph.html","title":"interface - Paragraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a paragraph block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The paragraph text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParagraphBlock.html":{"url":"interfaces/ParagraphBlock.html","title":"interface - ParagraphBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginCode.html":{"url":"injectables/PluginCode.html","title":"injectable - PluginCode","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginCode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/code/code.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the ToolSettings for this plugin\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Code from '@editorjs/code';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for EditorJS\n */\n@Injectable()\nexport class PluginCode implements BasePlugin {\n  /**\n   * Returns the `ToolSettings` for this plugin\n   */\n  public plugin(): ToolSettings {\n    return Code;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginCodeModule.html":{"url":"modules/PluginCodeModule.html","title":"module - PluginCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginCodeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\n\nPluginCode\n\nPluginCode\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/code/code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginCode\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginCode } from './code.plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/code) for API details\n */\n@NgModule({\n  providers: [PluginCode]\n})\nexport class PluginCodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig.html":{"url":"interfaces/PluginConfig.html","title":"interface - PluginConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginHeader.html":{"url":"injectables/PluginHeader.html","title":"injectable - PluginHeader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/header/header.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Header from '@editorjs/header';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for EditorJS\n */\n@Injectable()\nexport class PluginHeader implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Header;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginHeaderModule.html":{"url":"modules/PluginHeaderModule.html","title":"module - PluginHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\n\nPluginHeader\n\nPluginHeader\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS header block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginHeader\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginHeader } from './header.plugin';\n\n/**\n * A module that provides the default EditorJS header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [PluginHeader]\n})\nexport class PluginHeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginImage.html":{"url":"injectables/PluginImage.html","title":"injectable - PluginImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  -  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/image/image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Image from '@editorjs/image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a ` - ` block tool for EditorJS\n */\n@Injectable()\nexport class PluginImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Image;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginImageModule.html":{"url":"modules/PluginImageModule.html","title":"module - PluginImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\n\nPluginImage\n\nPluginImage\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/image/image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginImage } from './image.plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginImage]\n})\nexport class PluginImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginLink.html":{"url":"injectables/PluginLink.html","title":"injectable - PluginLink","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/link/link.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Link from '@editorjs/link';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for EditorJS\n */\n@Injectable()\nexport class PluginLink implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Link;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginLinkModule.html":{"url":"modules/PluginLinkModule.html","title":"module - PluginLinkModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginLinkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\n\nPluginLink\n\nPluginLink\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/link/link.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginLink\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginLink } from './link.plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/link) for API details\n */\n@NgModule({\n  providers: [PluginLink]\n})\nexport class PluginLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginList.html":{"url":"injectables/PluginList.html","title":"injectable - PluginList","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  and  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/list/list.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport List from '@editorjs/list';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` and `` block tool for EditorJS\n */\n@Injectable()\nexport class PluginList implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return List;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginListModule.html":{"url":"modules/PluginListModule.html","title":"module - PluginListModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\n\nPluginList\n\nPluginList\n\n\n\nPluginListModule\n\nPluginListModule\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  and  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginList\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginList } from './list.plugin';\n\n/**\n * A module that provides the default EditorJS `` and `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/list) for API details\n */\n@NgModule({\n  providers: [PluginList]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginMarker.html":{"url":"injectables/PluginMarker.html","title":"injectable - PluginMarker","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginMarker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a inline marker tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                            \n                                    Public\n                                shortcut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            shortcut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shortcut()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.plugin.ts:20\n                \n            \n\n\n            \n                \n                    Returns the plugin shortcut\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport Marker from '@editorjs/marker';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a inline marker tool for EditorJS\n */\n@Injectable()\nexport class PluginMarker implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Marker;\n  }\n  /**\n   * Returns the plugin shortcut\n   */\n  public shortcut() {\n    return 'CMD+SHIFT+M';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginMarkerModule.html":{"url":"modules/PluginMarkerModule.html","title":"module - PluginMarkerModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginMarkerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\n\nPluginMarker\n\nPluginMarker\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS inline marker tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginMarker\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginMarker } from './marker.plugin';\n\n/**\n * A module that provides the default EditorJS inline marker tool.\n * See [the GitHub repo](https://github.com/editor-js/marker) for API details\n */\n@NgModule({\n  providers: [PluginMarker]\n})\nexport class PluginMarkerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginParagraph.html":{"url":"injectables/PluginParagraph.html","title":"injectable - PluginParagraph","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginParagraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the tool settings for a  block tool for EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Paragraph from '@editorjs/paragraph';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the tool settings for a `` block tool for EditorJS\n */\n@Injectable()\nexport class PluginParagraph implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return Paragraph;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginParagraphModule.html":{"url":"modules/PluginParagraphModule.html","title":"module - PluginParagraphModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginParagraph\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginParagraph } from './paragraph.plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [PluginParagraph]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PluginSimpleImage.html":{"url":"injectables/PluginSimpleImage.html","title":"injectable - PluginSimpleImage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PluginSimpleImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts\n        \n\n            \n                Description\n            \n            \n                This plugin returns the simple image tool for  block editor EditorJS\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                plugin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            plugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    plugin()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.plugin.ts:14\n                \n            \n\n\n            \n                \n                    Returns the plugin settings\n\n\n                    \n                        Returns :     ToolSettings\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToolSettings } from '@editorjs/editorjs';\nimport SimpleImage from '@editorjs/simple-image';\nimport { BasePlugin } from '../../types/plugins';\n\n/**\n * This plugin returns the simple image tool for `` block editor EditorJS\n */\n@Injectable()\nexport class PluginSimpleImage implements BasePlugin {\n  /**\n   * Returns the plugin settings\n   */\n  public plugin(): ToolSettings {\n    return SimpleImage;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginSimpleImageModule.html":{"url":"modules/PluginSimpleImageModule.html","title":"module - PluginSimpleImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginSimpleImageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the simple image tools for EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PluginSimpleImage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PluginSimpleImage } from './simple-image.plugin';\n\n/**\n * A module that provides the simple image tools for EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [PluginSimpleImage]\n})\nexport class PluginSimpleImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginsMap.html":{"url":"interfaces/PluginsMap.html","title":"interface - PluginsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A Module plugin configuration\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        BasePlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:7\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin class extending BasePlugin\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolConstructable, ToolSettings } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginsMap {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadyMap.html":{"url":"interfaces/ReadyMap.html","title":"interface - ReadyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject values of the ready state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:18\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SavedMap.html":{"url":"interfaces/SavedMap.html","title":"interface - SavedMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SavedMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject values of the save state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/maps.ts:28\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap.html":{"url":"interfaces/ToolSettingsMap.html","title":"interface - ToolSettingsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs-plugins/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginConfig {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const InitialPlugins = new InjectionToken('InitialPlugins');\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap-1.html":{"url":"interfaces/ToolSettingsMap-1.html","title":"interface - ToolSettingsMap-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    ToolConstructable | ToolSettings\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/src/lib/types/plugins.ts:17\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolConstructable, ToolSettings } from '@editorjs/editorjs';\n\n/**\n * A Module plugin configuration\n */\nexport interface PluginsMap {\n  /**\n   * The key of the plugin and the plugin class extending `BasePlugin`\n   */\n  [key: string]: BasePlugin;\n}\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: ToolConstructable | ToolSettings;\n}\n\n/**\n * Defines the interface for required and optional plugin methods.\n * These methods allow a plugin to return a EditorJS plugin and an optional shortcut\n */\nexport interface BasePlugin {\n  /**\n   * The plugin settings to be returned\n   */\n  plugin: () => ToolConstructable | ToolSettings;\n\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: () => string;\n}\n\n/**\n * The injection token for adding plugins via your own application\n */\nexport const UserPlugins = new InjectionToken('UserPlugins');\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nTinynodes Changelog\n\nThis changelog is related to the overall site. You can also find changelogs for libraries under the library docs\n\n\nWednesday, 22nd May 2019\nToday @tinynodes/ngx-editorjs@2.0.0 has been released. The major bump is due to underlying changes that may be breaking - the entire service has been improved with better control over the EditorJS interface. Also in this release the exiting component has been upgraded to work with Angular Forms, and there is a new Material Form Field component provided too.\nThe demo has also been updated to reflect the new features of this, and a new demo added for the Material component.\nWednesday, 15th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.3.2. This will be without a Forms component. In this release the main change is internally I'm using a new EditorJS Injector module I've created to handle managing the underlying instance. There are also a lot of documentation improvements and a completly new updated demo site.\nMonday, 13th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.2.0. For now I've removed any default plugins from core package, now all plugins must be added at the application level - this can be see in the demo app.\nSunday, 12th May 2019\nThe first devlog is to report that currently version 1.2 has been delayed due to current build issues.\nA bug report has been filed on @nrwl/nx project.\nIn 1.2 there is a new @tinynodes/ngx-editorjs-plugins module that provides exports for several common EditorJS plugins and will be expanded to cover all the officially released plugins.\nWith this change the current build scripts break, and until it is resolved this will block the release.\nIn the meantime I'll continue to work on this small demo site, making it more useful as a good example of an Angular app.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a\nbuild.\nUpdate the README.md with details of changes to the interface, this includes new environment\nvariables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this\nPull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you\ndo not have permission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or\nadvances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic\naddress, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at me@tane.dev. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.15\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ~7.2.15\n        \n            @angular/compiler : ~7.2.15\n        \n            @angular/core : ~7.2.15\n        \n            @angular/flex-layout : ^7.0.0-beta.24\n        \n            @angular/forms : ~7.2.15\n        \n            @angular/material : ^7.3.7\n        \n            @angular/platform-browser : ~7.2.15\n        \n            @angular/platform-browser-dynamic : ~7.2.15\n        \n            @angular/router : ~7.2.15\n        \n            @datorama/akita-ng-router-store : ^3.0.2\n        \n            @datorama/akita-ngdevtools : ^1.0.4\n        \n            @editorjs/editorjs : ^2.13.0\n        \n            @editorjs/header : ^2.2.3\n        \n            @editorjs/list : ^1.3.4\n        \n            @editorjs/paragraph : ^2.5.0\n        \n            @ngrx/effects : ^7.4.0\n        \n            @ngrx/store : ^7.4.0\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            install : ^0.12.2\n        \n            ngx-hideable-header : 0.0.5\n        \n            ngx-markdown : ^7.1.5\n        \n            npm : ^6.9.0\n        \n            rxjs : 6.3.3\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createEditorJSConfig   (libs/.../editor-config.ts)\n                        \n                        \n                            createEditorJSInstance   (libs/.../ngx-editorjs.module.ts)\n                        \n                        \n                            createModuleConfig   (libs/.../module-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSConfig(inputConfig?)\n                \n            \n\n\n\n\n            \n                \n                    Creates an EditorJS configuration, only returning keys that are set\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputConfig\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional config to use to set values\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EditorConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSInstance\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSInstance(editorjs: any)\n                \n            \n\n\n\n\n            \n                \n                    Factory function to return the EditorJS base class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editorjs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/src/lib/config/module-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createModuleConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateModuleConfig(config?)\n                \n            \n\n\n\n\n            \n                \n                    Method to return an module configuration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional module configurations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorJSModuleConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-Tinynodes\nThis repository is a collection of Angular components and demos with full documentation.\nSee the Changelog for the development diary of this site, or visit the documentation of libraries.\nYou can also find a fully searchable API documentation for all @tinynode components.\nLinks\n\nRepository\nDocumentation\nDemo Application Site\nNPM Collection\n\nLibraries\nngx-editorjs\nThis library provides Angular support for EditorJS. Inside the module you will find:\n\nNgxEditorJSDirective - An Angular Directive used to attach an EditorJS instance to any block DOM element\nNgxEditorJSComponent - An out-of-the-box Angular component that is Reactive Forms compatible\nNgxEditorJSMaterialFieldComponent An Angular Material Form Field component that provides all the required properties and life-cycle events required. See the Form Demo on an example usage\nNgxEditorJSBaseComponent - A base Angular component that is Reactive form compatible but with no template, can be used to create custom UI framework containers\nNgxEditorJSService - A Service that can be injected into an application to provide a interface to interact with EditorJS instances. Underneath are the private NgxEditorJSPluginService and NgxEditorJSInstanceService services. These are private but can be imported via ɵNgxEditorJSPluginService and ɵNgxEditorJSInstanceService from the library if you want to use them.\n\nWithin these components you will be able to access the underlying EditorJS instance, for use see the EditorJS API Docs\nBelow are the dependencies to use the features.\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+\n\nReadme\nChangelog\nDemo\nProject Folder\n\n@tinynodes/ngx-editorjs-plugins\nThis project provides a module that exports a set of default plugins for @tinynodes/ngx-editorjs.\n\nReadme\nChangelog\nProject Folder\n\nDevelopment Information\nThis repository is run by Tane Piper and was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nTinynodes General MIT Licence\nCopyright 2019 Tane Piper me@tane.dev\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsPluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginCodeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginLinkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginMarkerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginSimpleImageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_declarations\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSModule_providers\n\n\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\ncluster_PluginCodeModule\n\n\n\ncluster_PluginCodeModule_providers\n\n\n\ncluster_PluginHeaderModule\n\n\n\ncluster_PluginHeaderModule_providers\n\n\n\ncluster_PluginImageModule\n\n\n\ncluster_PluginImageModule_providers\n\n\n\ncluster_PluginLinkModule\n\n\n\ncluster_PluginLinkModule_providers\n\n\n\ncluster_PluginListModule\n\n\n\ncluster_PluginListModule_providers\n\n\n\ncluster_PluginMarkerModule\n\n\n\ncluster_PluginMarkerModule_providers\n\n\n\ncluster_PluginParagraphModule\n\n\n\ncluster_PluginParagraphModule_providers\n\n\n\ncluster_PluginSimpleImageModule\n\n\n\ncluster_PluginSimpleImageModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSModule -->\n\nNgxEditorJSDirective->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSModule->NgxEditorJSDirective \n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSModule -->\n\nNgxEditorJSService->NgxEditorJSModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nPluginCode\n\nPluginCode\n\nPluginCodeModule -->\n\nPluginCode->PluginCodeModule\n\n\n\n\n\nPluginHeader\n\nPluginHeader\n\nPluginHeaderModule -->\n\nPluginHeader->PluginHeaderModule\n\n\n\n\n\nPluginImage\n\nPluginImage\n\nPluginImageModule -->\n\nPluginImage->PluginImageModule\n\n\n\n\n\nPluginLink\n\nPluginLink\n\nPluginLinkModule -->\n\nPluginLink->PluginLinkModule\n\n\n\n\n\nPluginList\n\nPluginList\n\nPluginListModule -->\n\nPluginList->PluginListModule\n\n\n\n\n\nPluginMarker\n\nPluginMarker\n\nPluginMarkerModule -->\n\nPluginMarker->PluginMarkerModule\n\n\n\n\n\nPluginParagraph\n\nPluginParagraph\n\nPluginParagraphModule -->\n\nPluginParagraph->PluginParagraphModule\n\n\n\n\n\nPluginSimpleImage\n\nPluginSimpleImage\n\nPluginSimpleImageModule -->\n\nPluginSimpleImage->PluginSimpleImageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    29 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nngx-tinynodes Todo\nGeneral Todos\n\n Add CI pipeline for publishing modules\n Publish doc changes and tags back to repo\n\nngx-editorjs\n\n Add full EditorJS config support\n Add config options as @Input on component and directive\n Add autosave option support to module config\n Expose EditorJS CoreAPI via service helpers (e.g. blocks, selection, etc)\n Provide peer-dependency ngrx/effects via library to control service\n\nngx-editorjs-demo\n\n Add store for page\n Add controls for setting editor\n Add Save feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                    Type of all the basic block type\n\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles, supports ordered and unordered.\nA custom string can also be added\n\n                \n            \n            \n                \n                        \"ordered\" | \"unordered\" | string\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_HOLDER_ID   (libs/.../editor-config.ts)\n                        \n                        \n                            EDITIOR_JS_INSTANCE   (libs/.../config.ts)\n                        \n                        \n                            EDITORJS_FORM_VALUE_ACCESSOR   (libs/.../editorjs.component.ts)\n                        \n                        \n                            EDITORJS_MATERIAL_FIELD_CONTROL   (libs/.../editorjs-mat-field.component.ts)\n                        \n                        \n                            EDITORJS_MODULE_IMPORT   (libs/.../injector.ts)\n                        \n                        \n                            EditorJSInstance   (libs/.../injector.ts)\n                        \n                        \n                            FOR_ROOT_OPTIONS_TOKEN   (libs/.../config.ts)\n                        \n                        \n                            InitialPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            MAP_DEFAULTS   (libs/.../injector.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                        \n                            UserPlugins   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HOLDER_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'editor-js'\n                        \n                    \n\n                \n                    \n                        The default holder ID to attach EditorJS to\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITIOR_JS_INSTANCE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITIOR_JS_INSTANCE')\n                        \n                    \n\n                \n                    \n                        Get the EditorJS instance injected into the app\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOR_ROOT_OPTIONS_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('FOR_ROOT_OPTIONS_TOKEN')\n                        \n                    \n\n                \n                    \n                        Internal token for injecting the NgxEditorJSConfig into the config factory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token provied for NgxEditorJSConfig\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_FORM_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxEditorJSComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        The NgxEditorJSBaseComponent Provider for NG_VALUE_ACCESSOR\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MATERIAL_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for the EditorJS Material Field Component\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/injector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MODULE_IMPORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITORJS_MODULE_IMPORT')\n                        \n                    \n\n                \n                    \n                        Injection token for the EditorJS class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EditorJSInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EditorJSInstance')\n                        \n                    \n\n                \n                    \n                        The EditorJS class injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAP_DEFAULTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [['hasChangedMap', { time: 0, blocks: [] }], ['isReadyMap', false], ['hasSavedMap', false]]\n                        \n                    \n\n                \n                    \n                        Default values for each internal map\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InitialPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('InitialPlugins')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserPlugins')\n                        \n                    \n\n                \n                    \n                        The injection token for adding plugins via your own application\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs.html":{"url":"additional-documentation/tinynodes-library-docs.html","title":"additional-page - Tinynodes Library Docs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-Tinynodes Libraries\nHere you can find all the README and CHANGELOG details of all projects released to NPM\n\nPlease note due to a bug in CompoDoc the `README.md` files are currently not generated correctly - these are rendered correctly on GitHub and NPM.\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme.html","title":"additional-page - ngx-editorjs Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS\nThis library provides Angular support for EditorJS.\n\nInside the module you will find:\n\nNgxEditorJSDirective - An Angular Directive used to attach an EditorJS instance to any block DOM element\nNgxEditorJSComponent - An out-of-the-box Angular component that is Reactive Forms compatible\nNgxEditorJSMaterialFieldComponent An Angular Material Form Field component that provides all the required properties and life-cycle events required. See the Form Demo on an example usage\nNgxEditorJSBaseComponent - A base Angular component that is Reactive form compatible but with no template, can be used to create custom UI framework containers\nNgxEditorJSService - A Service that can be injected into an application to provide a interface to interact with EditorJS instances and manage plugins.\n\nWithin these components you will be able to access the underlying EditorJS instance, for use see the EditorJS API Docs\nYou can see a demo in action or download it\non GitHub to see how it was implemented.\nFor changes see the CHANGELOG\nInstalling and usage\nInstall the library via npm along with the plugins module and EditorJS module. For each plugin you want to use you also need to install it's dependency - see the Plugin Docs for more information.\n```bash\n\nnpm install @tinynodes/ngx-editorjs @tinynodes/ngx-editorjs-plugins @editorjs/editorjs @editorjs/paragraph....\n```\n\nOnce installed, include the NgxEditorJSModule module in your project with the forRoot method. The forRoot takes an optional configuration.\nYou also need to pass a provider for UserPlugins with a factory function that returns an options map tools to provide to the EditorJS instance. An example of this is shows in the demo application\n```typescript\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { AppComponent } from './app.component';\nimport EditorJS from '@editorjs/editorjs';\nimport {\n  PluginParagraphModule,\n  PluginParagraph,\n  PluginHeaderModule,\n  PluginHeader,\n  PluginListModule,\n  PluginList\n} from '@tinynodes/ngx-editorjs-plugins';\nexport function createTools() {\n  return {\n    paragraph: new PluginParagraph(),\n    header: new PluginHeader(),\n    list: new PluginList()\n  };\n}\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    NgxEditorJSModule.forRoot({\n      editorjs: {\n        autofocus: false,\n        holder: 'editor',\n        initialBlock: 'paragraph',\n        data: {\n          time: Date.now(),\n          version: EditorJS.version,\n          blocks: []\n        }\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: UserPlugins,\n      useFactory: createTools\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n```\nConfiguration\nEditorJS Config\nThe configuration is deigned to be extendable in the future, so each potential feature has a key. For configuring EditorJS pass the options below into a editorjs key in the config.\nThe module configuration allows EditorJS to be provided with a set of options for use. See the EditorJS docs for more details.\n| Configuration Key  | Description                                                                                                                                                     |\n| ------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| autofocus        | Sets the EditorJS instance to autofocus on load                                                                                                                 |\n| autosave         | Value of time for the the autosave of EditorJS content to the service when the component when focused, this is used for Reactive forms. Default is 0 to disable |\n| data             | Initial data to load into the editor, this is an OutputData object from EditorJS                                                                              |\n| hideToolbar      | Hides the toolbar by default                                                                                                                                    |\n| holder           | The element ID of the holder, this will set all instances in this module to use this as a default                                                               |\n| initialBlock     | The default block type to use in the editor                                                                                                                     |\n| minHeight        | Height of Editor's bottom area that allows to set focus on the last Block                                                                                       |\n| blockPlaceholder | Placeholder of the first block                                                                                                                                  |\n| sanitizer        | Content sanitizer configurations                                                                                                                                |\nAdding custom tools\nSee Adding Custom Tools\nLinks\n\nDocumentation\nGitHub\nNPM\nAngular Demo\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-readme/ngx-editorjs-changelog.html","title":"additional-page - ngx-editorjs Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[2.1.0] - 2019-05-23\nAdded\n\nNgxEditorJSService.apiCall method added to service to provide a way to call any method in EditorJS\n\nRemoved\n\nPrivate services for EditorJS instance and plugins removed, NgxEditorJSService is now a single service that handles all the Editor and plugin life-cycles\nEditorJSBaseComponent removed and using NgxEditorJSComponent as base component\n\nChanged\n\nVarious internal improvements to state management and saving\n\n[2.0.0] - 2019-05-22\nThis release is the first big changes to the module and also includes new Material component.\nAdded\n\nNgxEditorJSComponent can be used in Angular Forms via it's ControlValueAccessor\nEditorJSBaseComponent exported and can be used to create custom components\nNgxEditorJSMatFieldComponent provided as a Material field component.\nautosave support now added to both components\napiCall method for calling any EditorJS API method\n\nChanged\n\nplaceholder property of EditorJS config is now blockPlaceholder so it does not clash with the Material property\nEditorJS instance service refactored, available as a private import\nAll public methods now take a InjectorMethodOption object as it's parameter\n\n[1.3.2] - 2019-05-15\nChanged\n\nFixed bug with passing data to EditorJS instance service.\nRemoved rogue console.log\n\n[1.3.0] - 2019-05-15\nAdded\n\n@Input properties on the component and directive for providing EditorJS instance configuration\ncreateEditorJSConfig function available to generate EditorJS configurations\nLots more doc improvements and updated demo\n\nChanged\n\nInternal service now uses an EditorJS injector module and service, provides more robust control and creation of EditorJS instances and controlling them.\n\n[1.2.0] - 2019-05-13\nAdded\n\nAdded all configuration options for EditorJS to the module configuration\n\nChanged\n\nRemoved all plugins from the ngx-editorjs project. All plugins are now provided by the @tinynodes/ngx-editorjs-plugins module and a default set of tools must be provided in an application.\nAdded NgxEditorJSPluginService back to core, all plugins must now be provided with a UserPlugin provider.\n\n[1.1.2] - 2019-05-11\nAdded\n\nImproved internal documentation for generated docs.\n\nRemoved\n\nGenerated docs no longer included in this module - all docs are now available via the generated docs site\n\n[1.1.1] - 2019-05-10\nAdded\n\nGenerated docs via CompoDoc in npm package\nInclude CHANGELOG.md in npm package\n\n[1.1.0] - 2019-05-10\nAdded\n\nEditorJS default paragraph plugin is now included in the default tools, fixes issue where the regenerated component failed to use the default plugin.\n\nChanged\n\nNgxEditorJSService is now provided in the root and now stores multiple editor instances. Getters removed and replaced with methods that take the holder parameter which is the ID of the DOM element the editor should be attached to.\nPlugins are now instances of an Injectable class for AOT and have an instance method of plugin. Also supports shortcut as an optional method that returns the string to set up as the shortcut.\nEditorJSPlugin now renamed BasePlugin and changed from class to interface.\nImproved documentation\n\n[1.0.0] - 2019-05-10\nAdded\n\nInitial release\nReadme, Changelog\nNgxEditorJSModule: That can be imported into the root of a project\nNgxEditorJSDirective: A directive that can attach an EditorJS instance to an element\nNgxEditorJSComponent: A component that is pre-configured to use the directive in any Angular project\nNgxEditorJSService: An Angular service for controlling an EditorJS instance\nDefault plugins for Header and List plugins, documentation on how to add plugins with AOT support\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme.html","title":"additional-page - ngx-editorjs-plugins Readme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNgx-EditorJS Plugins\nThis module provides a default set of EditorJS plugins for @tinynodes/ngx-editorjs via Angular modules.\nPeer Dependencies\nAll EditorJS plugins are listed as peerDependencies of the project - this is because Angular requires these modules to be in the root. You must manually install these are the root of your Angular application.\n```bash\n\nnpm install @editorjs/paragraph @editorjs/header ....\n```\n\nPlugin List\n| Plugin Name             | Description                                            | Links                                                                                               |\n| ----------------------- | ------------------------------------------------------ | --------------------------------------------------------------------------------------------------- |\n| PluginCodeModule        | Provides a  block editor                       | README GitHub              |\n| PluginHeaderModule      | Provides a  -  block editor                  | README GitHub          |\n| PluginImageModule       | Provides an  block editor + file upload support | README GitHub            |\n| PluginLinkModule        | Provides an  block editor                         | README GitHub              |\n| PluginIListModule       | Provides an / block editor                   | README GitHub              |\n| PluginMarkerModule      | Provides inline text marking                           | README GitHub          |\n| PluginParagraphModule   | Provides an  block editor                         | README GitHub    |\n| PluginSimpleImageModule | Provides an  block editor with paste support    | README GitHub |\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html":{"url":"additional-documentation/tinynodes-library-docs/ngx-editorjs-plugins-readme/ngx-editorjs-plugins-changelog.html","title":"additional-page - ngx-editorjs-plugins Changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.1.1] - 2019-05-15\nChanged\n\nDocumentation updates\n\n[1.1.0] - 2019-05-13\nRemoved\n\nRemoved the NgxEditorJSPluginService from this module back to core\n\n[1.0.0] - 2019-05-11\nAdded\n\nInitial release of module with default plugins - see README.md for details.\nMoved the internal NgxEditorJSPluginService to public NgxEditorJSPluginService provided by this module\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
