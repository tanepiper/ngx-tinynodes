var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/Block.html",[0,0.184,1,0.497]],["body/interfaces/Block.html",[0,0.358,1,1.007,2,0.798,3,0.148,4,0.148,5,0.135,6,0.139,7,0.228,8,1.833,9,0.398,10,2.589,11,0.857,12,0.307,13,0.698,14,1.646,15,2.241,16,2.022,17,1.099,18,1.468,19,1.008,20,3.569,21,2.29,22,2.834,23,0.013,24,0.313,25,1.545,26,2.981,27,1.609,28,1.833,29,2.609,30,2.609,31,1.545,32,1.545,33,2.609,34,1.078,35,2.736,36,2.736,37,1.328,38,1.078,39,2.493,40,2.012,41,2.627,42,3.309,43,2.493,44,3.151,45,2.493,46,1.678,47,1.833,48,1.281,49,2.493,50,2.947,51,2.493,52,1.303,53,2.736,54,1.923,55,2.049,56,1.923,57,1.911,58,1.923,59,1.923,60,1.923,61,1.923,62,2.493,63,1.678,64,1.833,65,0.005,66,0.008,67,0.005]],["title/interfaces/BlockData.html",[0,0.184,68,2.768]],["body/interfaces/BlockData.html",[0,0.321,1,0.923,2,0.822,3,0.152,4,0.152,5,0.139,6,0.142,7,0.233,9,0.67,11,0.749,12,0.303,15,1.905,16,2.083,17,1.622,18,1.35,19,1.464,23,0.013,24,0.323,31,2.246,34,0.582,38,2.484,52,1.32,55,1.797,57,1.188,65,0.006,66,0.008,67,0.006,68,4.408,69,2.197,70,3.676,71,0.394,72,1.805,73,0.445,74,3.502,75,3.502,76,1.188,77,3.286,78,2.602,79,3.286,80,2.197,81,3.899,82,2.667,83,1.419,84,1.805,85,2.482,86,1.531,87,2.197,88,4.823,89,2.184,90,4.058,91,4.058,92,2.082,93,1.98,94,2.197,95,2.667,96,2.082,97,2.329,98,3.286,99,2.667,100,2.329,101,1.592,102,2.482,103,2.667,104,1.148,105,1.473,106,3.286,107,2.083,108,2.667,109,1.592,110,2.52,111,1.592,112,1.004,113,2.482,114,1.98,115,2.197,116,2.794,117,2.329,118,1.368,119,1.657,120,2.825,121,2.825,122,1.888,123,1.368,124,0.31,125,2.32,126,1.368,127,1.942,128,2.482,129,1.368,130,2.482,131,2.667,132,2.329,133,2.667,134,1.657,135,2.482]],["title/interfaces/ChangeMap.html",[0,0.184,136,2.45]],["body/interfaces/ChangeMap.html",[0,0.336,1,0.738,2,1.043,3,0.193,4,0.193,5,0.176,6,0.167,7,0.274,9,0.52,12,0.317,16,2.641,17,1.749,18,1.412,19,1.316,23,0.013,24,0.309,48,1.673,65,0.007,66,0.009,67,0.007,71,0.516,76,1.507,92,2.801,136,3.644,137,3.148,138,5.459,139,4.493,140,3.284,141,2.527,142,1.904,143,4.662,144,1.868,145,2.191,146,2.195,147,2.511,148,2.787,149,2.639,150,2.102,151,3.284,152,2.787,153,2.787,154,2.527,155,2.641,156,2.953,157,2.443]],["title/interfaces/CreateEditorJSOptions.html",[0,0.184,158,3.231]],["body/interfaces/CreateEditorJSOptions.html",[0,0.242,2,1.204,3,0.223,4,0.223,5,0.203,6,0.147,7,0.242,9,0.6,11,0.742,12,0.276,13,1.053,14,1.707,18,1.373,23,0.013,24,0.223,48,2.608,52,1.61,65,0.008,66,0.01,67,0.008,71,0.409,76,1.74,93,4.092,96,2.315,110,2.932,111,3.289,116,3.599,154,2.486,158,5.266,159,5.383,160,5.383,161,3.28,162,5.375,163,5.511,164,3.012,165,3.729,166,4.847]],["title/interfaces/EditorJSChange.html",[0,0.184,156,2.597]],["body/interfaces/EditorJSChange.html",[0,0.335,1,0.87,2,1.034,3,0.191,4,0.191,5,0.174,6,0.126,7,0.208,9,0.515,11,0.619,12,0.316,13,0.903,14,1.548,17,1.711,18,1.356,23,0.013,24,0.308,48,2.427,65,0.007,66,0.009,67,0.007,71,0.514,76,1.493,92,2.74,136,2.762,137,3.12,138,5.34,139,4.433,140,2.489,141,2.255,142,1.443,144,1.851,145,2.172,146,2.519,147,2.489,148,2.762,149,2.624,150,2.083,151,3.264,152,2.762,153,2.762,154,2.846,155,3.433,156,3.839,157,3.065]],["title/interfaces/EditorJSClass.html",[0,0.184,167,2.45]],["body/interfaces/EditorJSClass.html",[0,0.333,1,0.46,2,0.849,3,0.157,4,0.157,5,0.143,6,0.104,7,0.171,9,0.423,11,0.624,12,0.334,13,0.742,14,1.355,15,1.108,18,1.451,22,2.208,23,0.013,24,0.312,34,0.601,40,1.91,52,1.237,55,1.315,57,1.227,65,0.008,66,0.008,67,0.006,71,0.465,72,1.863,73,0.46,76,1.227,92,1.315,96,1.838,109,1.643,118,2.592,119,1.711,120,1.784,121,1.784,125,2.36,127,1.976,141,1.412,142,2.175,144,2.125,146,1.976,149,1.643,150,1.711,154,1.412,157,1.521,161,2.604,164,2.391,165,3.002,167,3.171,168,2.405,169,2.604,170,0.947,171,1.974,172,2.725,173,3.609,174,2.857,175,1.355,176,3.36,177,3.582,178,3.005,179,2.725,180,2.405,181,2.405,182,1.95,183,3.482,184,2.791,185,3.752,186,2.563,187,2.405,188,2.208,189,2.405,190,2.045,191,1.711,192,2.269,193,2.269,194,1.863,195,2.15,196,2.269,197,2.269,198,2.269,199,2.269,200,2.405,201,3.171,202,2.15,203,2.405,204,2.269,205,2.15,206,2.563,207,2.405,208,2.563,209,2.046,210,3.171,211,3.36,212,2.269,213,2.269,214,2.405]],["title/interfaces/EditorJSInstanceConfig.html",[0,0.184,181,2.597]],["body/interfaces/EditorJSInstanceConfig.html",[0,0.322,1,0.449,2,0.83,3,0.153,4,0.153,5,0.14,6,0.101,7,0.167,9,0.413,11,0.669,12,0.329,13,0.725,14,1.333,15,1.082,18,1.39,22,2.172,23,0.013,24,0.311,34,0.587,40,1.63,52,1.489,55,1.808,57,1.198,65,0.008,66,0.008,67,0.006,71,0.459,72,1.82,73,0.449,76,1.198,92,1.285,96,2.27,109,1.606,118,2.796,119,1.672,120,1.743,121,1.743,125,2.331,127,1.951,141,1.38,142,2.157,144,2.091,146,1.951,149,1.606,150,2.353,154,1.942,157,1.486,161,2.562,164,2.353,165,3.688,167,2.216,168,2.349,169,1.82,170,0.86,171,1.38,172,1.905,173,3.08,174,1.997,175,0.947,176,2.349,177,2.504,178,2.101,179,3.547,180,3.306,181,3.306,182,2.68,183,3.532,184,2.949,185,3.964,186,3.524,187,4.151,188,2.172,189,4.151,190,1.997,191,1.672,192,2.216,193,2.216,194,1.82,195,2.101,196,2.216,197,2.216,198,2.216,199,2.216,200,2.349,201,3.119,202,2.101,203,2.349,204,2.216,205,2.101,206,2.504,207,2.349,208,2.504,209,2.02,210,3.119,211,3.306,212,2.216,213,2.216,214,2.349]],["title/interfaces/EditorJSMaterialForm.html",[0,0.184,215,3.575]],["body/interfaces/EditorJSMaterialForm.html",[0,0.27,2,0.519,3,0.096,4,0.096,5,0.088,6,0.063,7,0.104,9,0.258,10,1.682,11,0.237,12,0.248,14,0.938,18,0.861,23,0.013,24,0.188,40,1.618,52,0.742,57,1.94,65,0.004,66,0.006,67,0.004,71,0.523,73,0.281,100,2.886,102,2.478,111,3.323,112,1.002,118,1.366,123,1.695,125,0.895,127,0.749,142,1.146,145,1.09,151,4.133,154,1.366,155,1.313,162,1.566,164,2.054,170,0.482,172,2.34,175,0.938,182,3.084,185,1.249,188,1.897,190,1.249,191,1.045,194,1.138,215,4.924,216,1.827,217,3.231,218,1.682,219,1.827,220,2.662,221,4.083,222,5.645,223,2.318,224,2.318,225,2.318,226,3.076,227,1.682,228,2.478,229,2.864,230,3.202,231,3.202,232,3.67,233,2.478,234,2.325,235,3.974,236,3.67,237,2.022,238,5.18,239,1.313,240,1.827,241,3.084,242,2.886,243,1.682,244,1.566,245,2.661,246,2.022,247,2.022,248,2.454,249,1.827,250,2.454,251,2.318,252,4.519,253,2.662,254,0.724,255,2.022,256,2.079,257,0.929,258,2.318,259,2.022,260,1.827,261,2.022,262,1.566,263,1.469,264,1.566,265,2.022,266,1.682,267,2.022,268,0.633,269,3.758,270,1.682,271,1.566,272,2.142,273,2.318,274,3.781,275,2.318,276,3.305,277,2.318,278,3.67,279,2.318,280,3.605,281,2.723,282,3.67,283,3.605,284,2.318,285,2.318,286,6.522,287,4.563,288,3.041,289,2.318,290,3.67,291,2.318,292,2.318,293,4.958,294,2.318,295,4.556,296,2.318,297,2.318,298,2.318,299,3.67,300,2.318,301,3.67,302,2.318,303,2.318,304,2.318,305,2.318,306,6.004,307,2.318,308,3.67,309,2.318,310,2.318,311,2.318,312,5.487,313,2.318,314,3.67,315,2.318,316,2.022,317,2.662,318,2.318,319,2.022,320,2.581,321,2.318,322,2.662,323,3.67,324,2.318,325,2.318,326,1.827,327,2.318,328,2.318,329,2.318,330,3.67,331,2.318,332,2.318,333,2.318,334,3.67,335,3.67,336,1.138,337,2.318,338,2.318,339,2.318,340,2.194,341,2.662,342,3.67,343,2.318,344,2.318,345,1.417,346,1.682,347,2.662,348,3.076,349,2.318,350,1.249,351,1.682,352,1.682,353,1.249,354,3.974,355,2.318,356,1.682,357,4.556,358,4.556,359,4.556,360,3.974,361,2.318,362,3.67,363,1.682,364,2.318,365,1.827,366,2.022,367,2.022,368,1.469,369,2.022,370,2.022,371,1.566,372,2.318,373,1.682,374,2.318,375,2.318,376,2.022,377,2.318,378,2.318,379,2.318,380,2.318,381,2.318,382,2.318]],["title/interfaces/EditorMap.html",[0,0.184,148,2.45]],["body/interfaces/EditorMap.html",[0,0.337,1,0.741,2,1.049,3,0.194,4,0.194,5,0.177,6,0.167,7,0.275,9,0.522,12,0.31,16,2.655,17,1.751,18,1.415,19,1.323,23,0.013,24,0.31,48,1.683,65,0.007,66,0.009,67,0.007,71,0.518,76,1.515,92,2.804,136,2.802,137,3.165,138,5.465,139,4.495,140,2.525,141,2.276,142,1.464,144,1.878,145,2.203,146,2.201,147,3.295,148,3.657,149,2.649,150,2.113,151,3.295,152,2.802,153,2.802,154,2.534,155,2.655,156,2.969,157,2.451,383,4.687]],["title/interfaces/Header.html",[0,0.184,44,1.775]],["body/interfaces/Header.html",[0,0.356,1,1.001,2,0.81,3,0.15,4,0.15,5,0.137,6,0.099,7,0.163,8,1.859,9,0.403,11,0.848,12,0.294,13,0.708,14,1.522,15,2.133,17,0.783,18,1.455,21,1.632,22,2.481,23,0.013,24,0.314,25,1.567,26,2.992,27,1.632,28,1.859,29,2.635,30,2.635,31,1.567,32,1.567,33,2.635,34,1.126,35,2.763,36,2.763,37,1.347,38,1.093,39,2.518,40,2.025,41,2.641,42,3.835,43,2.518,44,3.373,45,3.489,46,2.411,47,2.635,48,2.139,49,2.518,50,2.963,51,2.518,52,1.311,53,2.763,54,1.95,55,2.064,56,1.95,57,1.926,58,1.95,59,1.95,60,1.95,61,1.95,62,2.518,63,1.701,64,1.859,65,0.006,66,0.008,67,0.006]],["title/interfaces/HeaderBlock.html",[0,0.184,49,2.012]],["body/interfaces/HeaderBlock.html",[0,0.36,1,1.008,2,0.826,3,0.153,4,0.153,5,0.139,6,0.101,7,0.166,8,1.896,9,0.411,11,0.852,12,0.304,13,0.722,14,1.539,15,2.088,17,0.799,18,1.418,21,1.665,22,2.508,23,0.013,24,0.315,25,1.599,26,3.007,27,1.665,28,1.896,29,2.672,30,2.672,31,1.599,32,1.599,33,2.672,34,1.092,35,2.802,36,2.802,37,1.374,38,1.115,39,2.554,40,2.153,41,2.661,42,3.359,43,2.554,44,3.249,45,2.554,46,1.736,47,1.896,48,1.325,49,2.957,50,2.985,51,2.554,52,1.323,53,2.802,54,1.989,55,2.087,56,1.989,57,1.947,58,1.989,59,1.989,60,1.989,61,1.989,62,2.554,63,1.736,64,1.896,65,0.006,66,0.008,67,0.006]],["title/interfaces/Image.html",[0,0.184,50,1.775]],["body/interfaces/Image.html",[0,0.353,1,0.996,2,0.77,3,0.142,4,0.142,5,0.13,6,0.094,7,0.155,8,1.767,9,0.383,11,0.85,12,0.289,13,0.673,14,1.48,15,2.102,17,0.744,18,1.472,21,1.551,22,2.412,23,0.013,24,0.31,25,1.49,26,2.952,27,1.551,28,1.767,29,2.541,30,2.541,31,1.49,32,1.49,33,2.541,34,1.107,35,2.665,36,2.665,37,1.28,38,1.039,39,2.429,40,1.978,41,2.59,42,3.254,43,2.429,44,3.19,45,2.429,46,1.617,47,1.767,48,1.235,49,2.429,50,3.19,51,3.43,52,1.623,53,3.764,54,2.665,55,2.421,56,3.412,57,2.425,58,2.665,59,3.412,60,2.665,61,3.412,62,2.429,63,1.617,64,1.767,65,0.005,66,0.008,67,0.005]],["title/interfaces/ImageBlock.html",[0,0.184,62,2.012]],["body/interfaces/ImageBlock.html",[0,0.36,1,1.008,2,0.826,3,0.153,4,0.153,5,0.139,6,0.101,7,0.166,8,1.896,9,0.411,11,0.852,12,0.304,13,0.722,14,1.539,15,2.088,17,0.799,18,1.418,21,1.665,22,2.508,23,0.013,24,0.315,25,1.599,26,3.007,27,1.665,28,1.896,29,2.672,30,2.672,31,1.599,32,1.599,33,2.672,34,1.092,35,2.802,36,2.802,37,1.374,38,1.115,39,2.554,40,2.153,41,2.661,42,3.359,43,2.554,44,3.182,45,2.554,46,1.736,47,1.896,48,1.325,49,2.554,50,3.097,51,2.554,52,1.323,53,2.802,54,1.989,55,2.087,56,1.989,57,1.947,58,1.989,59,1.989,60,1.989,61,1.989,62,2.957,63,1.736,64,1.896,65,0.006,66,0.008,67,0.006]],["title/interfaces/InjectorApiCallOptions.html",[0,0.184,210,2.45]],["body/interfaces/InjectorApiCallOptions.html",[0,0.323,1,0.452,2,0.836,3,0.154,4,0.154,5,0.141,6,0.102,7,0.168,9,0.416,11,0.671,12,0.332,13,0.73,14,1.34,15,1.09,18,1.506,22,2.184,23,0.013,24,0.311,34,0.592,40,1.638,52,1.452,55,1.294,57,1.207,65,0.008,66,0.008,67,0.006,71,0.461,72,1.834,73,0.452,76,1.207,92,1.294,96,1.817,109,2.271,118,2.576,119,1.684,120,1.756,121,1.756,125,2.34,127,1.959,141,1.39,142,2.242,144,2.102,146,1.959,149,1.617,150,1.684,154,1.39,157,1.497,161,2.976,164,2.365,165,2.976,167,2.233,168,2.366,169,1.834,170,0.863,171,1.39,172,1.919,173,3.09,174,2.012,175,0.954,176,2.366,177,2.522,178,2.116,179,1.919,180,2.366,181,2.366,182,1.919,183,3.684,184,3.065,185,3.972,186,2.522,187,2.366,188,2.184,189,2.366,190,2.012,191,1.684,192,2.233,193,2.233,194,1.834,195,2.116,196,2.233,197,2.233,198,2.233,199,2.233,200,2.366,201,3.135,202,2.116,203,2.366,204,2.233,205,2.116,206,2.522,207,2.366,208,3.542,209,2.316,210,3.623,211,4.548,212,2.233,213,2.233,214,2.366]],["title/interfaces/InjectorApiCallResponse.html",[0,0.184,213,2.45]],["body/interfaces/InjectorApiCallResponse.html",[0,0.327,1,0.47,2,0.868,3,0.16,4,0.16,5,0.147,6,0.106,7,0.174,9,0.433,11,0.55,12,0.332,13,0.759,14,1.376,15,1.133,18,1.408,22,2.783,23,0.013,24,0.314,34,0.615,40,1.933,52,1.252,55,1.345,57,1.254,65,0.011,66,0.008,67,0.006,71,0.47,72,1.905,73,0.47,76,1.254,92,1.345,96,1.866,109,1.681,118,2.613,119,1.75,120,1.825,121,1.825,125,2.388,127,2,141,1.444,142,2.088,144,2.159,146,2,149,1.681,150,1.75,154,1.444,157,1.555,161,2.645,164,2.429,165,3.038,167,2.32,168,2.459,169,1.905,170,0.877,171,1.444,172,1.994,173,3.142,174,2.091,175,0.992,176,2.459,177,2.621,178,2.199,179,1.994,180,2.459,181,2.459,182,1.994,183,3.504,184,2.814,185,3.783,186,2.621,187,2.459,188,2.243,189,2.459,190,2.091,191,1.75,192,2.32,193,2.32,194,1.905,195,2.199,196,2.32,197,2.32,198,2.32,199,2.32,200,2.459,201,3.22,202,2.199,203,2.459,204,2.32,205,2.199,206,2.621,207,2.459,208,2.621,209,2.236,210,3.699,211,3.413,212,3.22,213,3.22,214,2.459]],["title/interfaces/InjectorMethodOption.html",[0,0.184,204,2.45]],["body/interfaces/InjectorMethodOption.html",[0,0.322,1,0.447,2,0.826,3,0.153,4,0.153,5,0.139,6,0.101,7,0.166,9,0.411,11,0.704,12,0.331,13,0.722,14,1.329,15,1.909,18,1.442,22,2.166,23,0.013,24,0.31,34,0.585,40,1.625,52,1.582,55,1.279,57,1.947,65,0.008,66,0.008,67,0.006,71,0.458,72,1.813,73,0.447,76,1.193,92,1.279,96,1.802,109,1.599,118,2.839,119,1.665,120,1.736,121,1.736,125,2.325,127,1.947,141,1.936,142,2.043,144,2.621,146,2.114,149,1.599,150,1.665,154,1.374,157,1.479,161,2.957,164,2.345,165,2.957,167,2.207,168,2.339,169,1.813,170,0.858,171,1.374,172,1.896,173,3.074,174,1.989,175,0.943,176,2.339,177,2.493,178,2.091,179,1.896,180,2.339,181,2.339,182,1.896,183,3.676,184,2.866,185,3.853,186,2.493,187,2.339,188,2.166,189,2.339,190,1.989,191,1.665,192,2.207,193,2.207,194,1.813,195,2.091,196,2.207,197,2.207,198,2.207,199,2.207,200,2.339,201,3.601,202,2.091,203,2.339,204,3.11,205,2.947,206,3.513,207,4.143,208,2.493,209,2.015,210,3.11,211,3.296,212,2.207,213,2.207,214,2.339]],["title/interfaces/List.html",[0,0.184,26,1.642]],["body/interfaces/List.html",[0,0.356,1,1.001,2,0.81,3,0.15,4,0.15,5,0.137,6,0.099,7,0.163,8,1.859,9,0.403,11,0.85,12,0.294,13,0.708,14,1.522,15,2.133,17,0.783,18,1.411,21,1.632,22,2.959,23,0.013,24,0.314,25,1.567,26,3.151,27,1.632,28,1.859,29,2.635,30,2.635,31,1.567,32,1.567,33,3.33,34,1.126,35,3.828,36,3.828,37,1.347,38,1.093,39,2.518,40,2.025,41,2.641,42,3.33,43,2.518,44,3.164,45,2.518,46,1.701,47,1.859,48,1.299,49,2.518,50,2.963,51,2.518,52,1.311,53,2.763,54,1.95,55,2.064,56,1.95,57,1.926,58,1.95,59,1.95,60,1.95,61,1.95,62,2.518,63,1.701,64,1.859,65,0.006,66,0.008,67,0.006]],["title/interfaces/ListBlock.html",[0,0.184,39,2.012]],["body/interfaces/ListBlock.html",[0,0.357,1,1.008,2,0.821,3,0.152,4,0.152,5,0.139,6,0.1,7,0.165,8,1.886,9,0.409,11,0.851,12,0.31,13,0.718,14,1.534,15,2.084,17,0.794,18,1.416,21,1.655,22,2.5,23,0.013,24,0.315,25,1.59,26,3.095,27,1.655,28,1.886,29,2.661,30,2.661,31,1.59,32,1.59,33,2.661,34,1.131,35,2.791,36,2.791,37,1.928,38,1.564,39,2.948,40,2.149,41,2.655,42,3.351,43,2.544,44,3.177,45,2.544,46,1.726,47,1.886,48,1.318,49,2.544,50,2.979,51,2.544,52,1.32,53,2.791,54,1.977,55,2.08,56,1.977,57,1.941,58,1.977,59,1.977,60,1.977,61,1.977,62,2.544,63,1.726,64,1.886,65,0.006,66,0.008,67,0.006]],["title/classes/MockEditorJS.html",[170,0.538,384,3.231]],["body/classes/MockEditorJS.html",[3,0.199,4,0.199,5,0.182,6,0.215,7,0.354,11,0.79,13,0.94,14,1.589,18,1.175,19,2.183,23,0.013,24,0.257,52,0.973,65,0.007,66,0.01,67,0.007,71,0.366,104,1.502,110,2.661,141,1.79,146,2.356,157,1.927,170,0.816,173,3.427,179,2.471,188,2.003,281,2.694,345,2.401,384,4.903,385,3.489,386,4.196,387,5.002,388,5.002,389,5.435,390,4.81,391,3.745,392,6.221,393,2.003,394,4.81,395,4.81,396,5.002,397,4.81,398,4.81,399,4.196,400,3.791,401,3.524,402,4.196,403,3.791,404,4.196,405,4.903,406,4.196,407,5.426,408,4.196,409,3.791,410,3.248,411,4.196,412,3.248,413,4.196]],["title/injectables/MockNgZone.html",[414,1.848,415,3.575]],["body/injectables/MockNgZone.html",[3,0.2,4,0.2,5,0.183,6,0.212,7,0.348,9,0.539,11,0.706,13,0.946,14,1.595,19,2.135,23,0.013,24,0.2,34,0.766,40,1.95,52,1.263,65,0.007,66,0.01,67,0.007,71,0.368,73,0.586,104,1.95,107,2.74,127,2.018,164,2.181,170,0.635,171,2.573,179,3.978,188,2.599,261,5.446,280,2.485,281,2.703,345,2.669,346,3.509,393,2.599,414,2.815,415,5.446,416,2.891,417,7.744,418,6.756,419,4.837,420,6.243,421,6.597,422,6.913,423,2.815,424,4.921,425,6.243,426,7.305,427,6.243,428,6.243,429,4.837,430,7.305,431,6.243,432,4.837,433,4.837,434,6.031,435,6.243,436,4.837,437,4.837]],["title/classes/MockPlugin.html",[170,0.538,400,3.231]],["body/classes/MockPlugin.html",[3,0.216,4,0.216,5,0.197,6,0.196,7,0.322,13,1.021,18,0.986,19,1.85,23,0.013,24,0.271,65,0.008,66,0.01,67,0.008,71,0.397,110,2.53,141,1.942,146,2.118,157,2.092,170,0.86,171,1.942,173,3.081,188,2.173,281,2.838,345,2.765,384,4.114,385,3.786,386,4.553,387,3.786,388,3.786,389,4.114,391,3.366,396,4.754,399,4.553,400,5.166,401,4.385,402,4.553,403,4.114,404,4.553,405,5.166,406,4.553,407,5.717,408,4.553,409,4.114,410,3.525,411,4.553,412,3.525,413,4.553,423,2.955,438,5.22,439,5.22]],["title/modules/NgxEditorJSComponentModule.html",[124,0.346,440,2.45]],["body/modules/NgxEditorJSComponentModule.html",[3,0.153,4,0.153,5,0.14,6,0.142,7,0.234,9,0.58,10,4.373,11,0.377,12,0.27,19,1.044,23,0.013,24,0.215,37,1.938,52,1.487,65,0.006,66,0.008,67,0.006,71,0.594,73,0.448,76,1.195,96,2.267,101,2.833,104,1.155,109,2.833,110,2.663,111,2.833,124,0.509,170,0.683,171,1.376,172,2.675,179,2.675,184,2.087,199,3.603,202,2.95,239,2.094,245,4.116,246,3.225,247,3.225,248,4.044,249,2.914,250,4.365,254,2.154,268,1.954,281,2.61,283,1.899,345,1.427,391,3.361,393,1.539,423,1.667,440,4.79,441,0.977,442,1.482,443,1.482,444,2.834,445,1.738,446,2.51,447,3.225,448,3.225,449,3.225,450,3.225,451,3.225,452,4.752,453,2.448,454,1.601,455,1.601,456,3.225,457,3.113,458,5.207,459,4.533,460,4.752,461,2.914,462,3.697,463,3.516,464,2.675,465,3.113,466,5.158,467,2.342,468,4.752,469,1.702,470,4.105,471,3.113,472,2.094,473,4.543,474,3.697,475,3.516,476,3.778,477,3.225,478,4.543,479,3.697,480,2.497,481,3.225,482,1.899,483,2.416,484,4.543,485,4.543,486,3.225,487,2.914,488,2.914]],["title/interfaces/NgxEditorJSConfig.html",[0,0.184,489,2.973]],["body/interfaces/NgxEditorJSConfig.html",[0,0.239,1,0.875,2,0.853,3,0.158,4,0.158,5,0.144,6,0.104,7,0.171,9,0.425,11,0.772,12,0.313,13,0.745,14,1.359,15,2.109,18,1.452,23,0.013,24,0.288,34,1.145,41,2.054,48,2.2,52,1.646,57,2.336,65,0.006,66,0.008,67,0.006,71,0.404,72,1.872,73,0.462,76,1.232,96,2.504,104,1.662,110,2.366,111,2.304,112,1.453,117,3.371,120,1.792,121,2.501,122,3.407,125,2.366,127,1.981,140,2.866,142,1.914,144,2.658,161,1.872,164,2.399,165,2.612,169,1.872,183,3.118,184,1.528,191,1.719,205,2.16,272,2.501,287,3.86,348,3.593,350,2.866,391,1.958,401,3.014,457,2.279,459,2.415,475,2.574,480,2.574,489,4.811,490,3.005,491,5.228,492,5.228,493,5.228,494,5.228,495,5.228,496,5.696,497,4.641,498,3.86,499,3.371,500,3.371,501,4.194,502,4.194,503,4.641,504,4.641,505,3.593,506,4.641,507,3.86,508,3.86,509,4.194,510,5.228,511,2.574,512,2.766,513,3.005,514,3.005,515,2.766,516,3.005,517,3.005,518,3.005]],["title/components/NgxEditorJSDemoHomeComponent.html",[229,1.706,519,2.322]],["body/components/NgxEditorJSDemoHomeComponent.html",[3,0.176,4,0.176,5,0.16,6,0.116,7,0.191,12,0.325,23,0.012,24,0.176,27,1.915,63,2.693,65,0.006,66,0.009,67,0.006,71,0.323,73,0.514,101,2.481,104,2.025,116,3.739,118,2.583,123,2.927,124,0.586,142,1.789,170,0.557,175,1.464,190,3.739,209,1.917,217,3.565,229,3.275,241,2.181,245,2.181,250,2.287,252,3.932,256,2.405,262,3.869,263,5.036,264,3.869,266,4.156,336,3.408,340,2.538,350,3.086,353,4.181,443,1.702,464,2.943,519,3.932,520,3.08,521,2.538,522,3.08,523,4.246,524,3.704,525,3.704,526,2.867,527,4.38,528,7.633,529,5.656,530,4.998,531,3.367,532,4.998,533,6.055,534,4.156,535,4.156,536,4.516,537,5.729,538,4.156,539,3.904,540,5.035,541,5.729,542,5.729,543,3.869,544,2.181,545,5.035,546,3.08,547,3.08,548,3.08,549,3.08,550,2.538,551,2.699,552,3.08,553,2.538,554,2.287,555,3.08,556,2.538,557,2.085,558,3.08,559,2.405,560,1.839,561,2.867,562,2.867,563,3.08]],["title/modules/NgxEditorJSDemoMaterialModule.html",[124,0.346,564,2.597]],["body/modules/NgxEditorJSDemoMaterialModule.html",[3,0.219,4,0.219,5,0.2,6,0.145,7,0.238,12,0.273,23,0.013,24,0.219,26,2.122,65,0.008,66,0.01,67,0.008,71,0.631,73,0.641,170,0.695,240,4.173,241,2.72,441,1.398,446,2.204,469,1.867,482,2.72,564,4.189,565,4.173,566,5.295,567,7.21,568,5.295,569,6.29,570,5.295,571,6.29,572,5.295,573,6.29,574,5.295,575,7.21,576,5.295,577,6.29,578,7.21,579,5.295,580,6.29,581,5.295,582,6.29,583,4.619,584,7.21,585,5.295]],["title/directives/NgxEditorJSDirective.html",[245,2.105,544,2.105]],["body/directives/NgxEditorJSDirective.html",[1,0.808,3,0.063,4,0.063,5,0.057,6,0.203,7,0.334,9,0.446,11,0.738,12,0.311,13,0.297,15,0.756,18,1.328,19,2.085,23,0.013,24,0.063,25,1.121,32,2.118,34,0.634,37,1.26,38,0.782,41,1,42,2.056,48,1.975,52,0.685,55,1.81,57,1.778,65,0.002,66,0.004,67,0.002,71,0.397,73,0.184,76,0.491,84,1.965,93,2.156,96,1.556,97,1.641,101,1.466,104,1.403,109,1.121,110,1.888,111,2.932,112,1.093,116,1.395,118,2.393,119,0.685,122,2.056,123,0.964,125,1,127,1.923,139,0.818,140,1.395,141,1.489,142,2.257,144,0.608,145,0.714,146,1.923,149,0.657,150,1.804,151,1.824,154,0.964,157,1.8,162,3.716,163,4.165,165,2.401,170,0.199,171,1.82,173,0.714,174,2.156,175,0.662,183,2.956,184,1.038,188,0.632,194,1.965,195,0.86,196,0.908,226,2.287,228,2.703,229,2.618,233,4.139,234,2.536,242,2.146,243,1.101,244,1.025,245,1.33,248,2.964,249,1.197,262,1.749,263,1.641,271,1.749,272,2.587,274,3.893,276,1.879,280,3.056,281,2.118,283,2.308,287,2.457,288,2.156,293,2.041,312,2.259,320,2.267,322,1.879,326,2.041,336,1.271,341,3.259,345,1,347,2.903,348,1.749,350,3.648,353,2.156,354,2.954,356,2.903,363,1.101,365,2.041,368,1.641,369,2.259,371,1.025,373,2.903,376,2.954,387,1.879,388,2.903,393,1.41,396,2.903,401,1.467,409,2.041,412,1.025,423,1.168,434,5.347,465,1.548,467,0.962,491,4.117,492,3.155,493,3.541,494,3.541,495,3.541,496,4.117,499,1.641,500,3.099,501,2.041,505,1.749,507,1.879,510,3.541,521,1.548,526,1.025,538,1.879,539,0.818,540,1.879,543,1.749,544,3.57,561,1.025,562,1.749,586,7.431,587,1.518,588,2.041,589,3.155,590,2.259,591,2.954,592,4.526,593,2.59,594,3.491,595,4.002,596,2.041,597,2.59,598,2.669,599,3.491,600,3.387,601,3.387,602,2.59,603,1.879,604,3.009,605,5.009,606,1.518,607,4.002,608,2.457,609,1.518,610,3.387,611,4.002,612,1.518,613,2.041,614,1.518,615,2.59,616,2.259,617,2.041,618,2.59,619,2.259,620,2.59,621,2.59,622,2.041,623,2.59,624,1.518,625,2.259,626,2.259,627,4.337,628,1.518,629,1.518,630,2.903,631,2.259,632,1.518,633,2.59,634,1.518,635,1.518,636,2.59,637,2.59,638,2.59,639,1.518,640,2.59,641,1.518,642,1.518,643,5.949,644,2.259,645,1.518,646,2.259,647,1.518,648,1.518,649,1.518,650,1.518,651,2.59,652,1.518,653,1.518,654,1.879,655,3.541,656,2.59,657,2.59,658,4.002,659,1.518,660,2.259,661,2.59,662,3.155,663,1.879,664,2.259,665,2.59,666,2.259,667,2.259,668,2.59,669,2.59,670,3.033,671,1.518,672,2.259,673,1.324,674,1.518,675,2.457,676,1.518,677,1.518,678,1.518,679,1.518,680,1.518,681,1.518,682,1.518,683,2.259,684,1.518,685,1.518,686,1.324,687,1.324,688,1.518,689,1.324,690,1.518,691,1.518,692,1.518,693,1.518,694,2.903,695,1.518,696,4.891,697,1.518,698,1.324,699,1.518,700,2.954,701,1.518,702,1.518,703,1.518,704,1.518,705,1.518,706,1.518,707,1.518,708,1.518,709,1.518,710,3.541,711,1.518,712,1.518,713,1.518,714,1.324,715,1.518,716,1.518,717,1.518,718,2.59,719,1.518,720,1.324,721,1.518,722,1.518,723,3.387,724,1.518,725,1.518,726,1.197,727,1.518,728,1.518,729,1.518,730,1.518,731,1.324,732,1.324,733,1.518,734,1.518,735,1.518,736,1.518,737,1.518,738,1.518,739,1.518,740,1.518,741,1.518,742,1.518]],["title/modules/NgxEditorJSMatFieldModule.html",[124,0.346,743,2.597]],["body/modules/NgxEditorJSMatFieldModule.html",[3,0.174,4,0.174,5,0.159,6,0.155,7,0.256,9,0.634,11,0.429,12,0.174,19,1.185,23,0.013,24,0.174,37,2.115,52,1.539,65,0.006,66,0.009,67,0.006,71,0.578,73,0.509,96,2.393,101,2.991,104,1.311,109,2.991,110,2.667,124,0.609,170,0.551,171,1.562,172,2.92,175,1.452,182,2.92,184,2.278,216,4.481,217,3.708,218,4.124,240,3.309,241,2.156,252,3.22,253,4.676,254,1.311,256,4.667,268,1.552,281,1.818,283,2.156,345,1.62,353,3.062,391,3.549,393,1.748,423,1.893,440,4.315,441,1.109,442,1.682,443,1.682,444,3.03,445,1.973,446,2.684,453,2.672,454,1.818,455,1.818,459,3.601,460,3.309,461,3.309,463,3.839,464,2.92,465,3.398,466,5.445,467,2.659,468,5.081,469,1.82,470,4.481,471,3.398,472,2.378,476,3.045,482,2.156,483,1.682,487,3.309,488,3.309,577,4.959,582,4.959,583,3.662,743,4.971,744,3.662,745,3.662,746,3.662,747,3.662,748,3.662,749,4.959,750,5.685,751,3.601,752,4.198,753,4.198,754,3.662]],["title/modules/NgxEditorJSModule.html",[124,0.346,755,2.768]],["body/modules/NgxEditorJSModule.html",[3,0.172,4,0.172,5,0.157,6,0.155,7,0.254,9,0.63,11,0.425,12,0.265,19,1.175,23,0.013,24,0.172,34,0.896,37,2.104,52,1.585,65,0.006,66,0.009,67,0.006,71,0.564,73,0.504,96,2.385,101,3.346,104,1.301,109,2.981,110,2.866,124,0.608,142,1.766,170,0.547,171,1.549,172,2.904,175,1.444,184,2.759,217,2.904,218,3.021,252,3.203,254,2.005,268,1.544,281,1.803,283,2.139,336,2.776,345,1.607,353,3.045,391,3.814,393,1.734,423,1.877,440,3.837,441,1.1,442,1.669,443,1.669,444,1.957,445,1.957,446,2.672,453,2.658,454,1.803,455,1.803,459,3.582,460,5.06,461,3.282,463,4.649,464,3.537,465,3.38,466,5.427,467,2.638,468,5.06,469,1.812,470,4.456,476,3.021,482,2.904,483,1.669,487,3.282,488,3.282,512,4.101,531,2.549,544,2.904,604,2.776,743,5.103,755,5.29,756,3.632,757,4.164,758,3.632,759,5.654,760,4.164,761,4.101,762,5.654,763,4.164,764,4.164,765,4.164,766,4.164,767,4.164]],["title/interfaces/NgxEditorJSModuleConfig.html",[0,0.184,391,2.105]],["body/interfaces/NgxEditorJSModuleConfig.html",[0,0.266,1,0.804,2,0.994,3,0.184,4,0.184,5,0.168,6,0.122,7,0.2,9,0.495,11,0.454,12,0.331,13,0.869,14,1.509,15,1.724,18,1.254,23,0.013,24,0.304,34,1.051,41,1.716,48,1.595,52,1.195,57,1.909,65,0.007,66,0.009,67,0.007,71,0.449,72,2.182,73,0.538,76,1.436,96,2.621,104,1.388,110,2.28,111,1.924,112,1.214,117,2.816,120,2.089,121,2.777,122,3.034,125,2.561,127,2.144,140,2.394,142,1.845,144,2.367,161,2.9,164,2.004,165,3.471,169,2.182,183,2.089,184,2.367,191,2.004,205,3.346,272,2.089,287,3.224,348,3.001,350,2.394,391,3.034,401,2.518,457,2.657,459,2.816,475,3.001,480,3.001,489,4.813,490,3.503,491,3.503,492,3.503,493,3.503,494,3.503,495,3.503,496,4.656,497,3.877,498,3.224,499,2.816,500,2.816,501,3.503,502,3.503,503,3.877,504,3.877,505,3.001,506,3.877,507,3.224,508,3.224,509,3.503,510,4.656,511,3.989,512,4.285,513,3.503,514,3.503,515,3.224,516,3.503,517,3.503,518,3.503]],["title/injectables/NgxEditorJSPluginService.html",[414,1.848,768,2.45]],["body/injectables/NgxEditorJSPluginService.html",[3,0.123,4,0.123,5,0.113,6,0.188,7,0.31,9,0.66,11,0.647,12,0.309,13,0.584,17,1.672,18,1.447,19,1.876,23,0.013,24,0.123,26,2.836,34,0.846,37,2.203,38,2.41,52,1.393,65,0.005,66,0.007,67,0.005,71,0.339,73,0.362,78,3.346,81,1.691,84,2.189,89,1.492,92,2.452,93,3.579,94,3.19,96,2.302,98,4.21,104,1.978,107,3.353,112,0.815,118,1.659,125,1.152,132,4.85,134,1.346,163,3.234,166,3.234,169,2.906,170,0.585,171,2.693,268,1.217,274,4.197,280,2.741,281,3.19,283,3.254,288,1.608,320,1.691,345,1.152,393,2.637,414,2.01,416,1.785,423,2.01,463,3.604,464,2.29,469,1.259,511,3.997,604,2.189,613,3.514,630,3.234,662,3.514,751,3.75,768,3.538,769,6.007,770,2.985,771,3.889,772,4.655,773,4.459,774,5.919,775,4.459,776,4.459,777,4.459,778,2.985,779,2.985,780,4.459,781,2.985,782,2.985,783,3.889,784,4.459,785,2.985,786,5.919,787,5.163,788,4.459,789,4.459,790,2.985,791,4.459,792,3.889,793,2.985,794,1.293,795,2.985,796,2.353,797,2.985,798,2.985,799,2.604,800,2.985,801,2.985,802,2.985,803,4.459,804,4.459,805,2.985,806,4.459,807,4.459,808,2.985,809,2.604,810,2.985,811,4.459,812,2.985,813,4.459,814,2.985,815,2.985,816,2.985,817,2.985,818,4.459,819,2.985]],["title/modules/NgxEditorJSPluginServiceModule.html",[124,0.346,820,2.768]],["body/modules/NgxEditorJSPluginServiceModule.html",[3,0.223,4,0.223,5,0.204,6,0.148,7,0.243,12,0.223,23,0.013,24,0.223,38,1.629,65,0.008,66,0.01,67,0.008,71,0.578,73,0.654,112,1.827,119,3.016,124,0.455,126,2.706,129,2.706,134,3.016,170,0.708,254,2.271,257,2.681,268,1.985,441,1.425,442,2.162,443,2.162,444,2.536,445,2.536,446,2.246,453,3.145,454,2.336,455,2.336,469,1.889,483,2.681,484,4.706,485,4.706,768,4.761,769,4.706,794,2.336,820,5.378,821,4.706,822,4.706,823,5.395,824,3.79,825,3.225,826,5.395]],["title/injectables/NgxEditorJSService.html",[248,2.208,414,1.848]],["body/injectables/NgxEditorJSService.html",[3,0.046,4,0.046,5,0.042,6,0.157,7,0.258,9,0.622,11,0.57,12,0.324,13,0.217,15,0.776,18,0.772,19,1.575,21,0.889,22,0.462,23,0.013,24,0.046,32,0.853,34,0.421,37,1.52,38,0.595,52,1.191,65,0.009,66,0.003,67,0.002,71,0.378,73,0.134,76,0.359,78,1.915,92,1.278,93,1.735,94,1.178,96,1.116,97,1.249,101,0.853,104,1.793,107,3.968,109,1.151,110,1.576,111,2.338,112,0.538,113,1.331,116,2.2,118,2.586,119,1.452,125,1.576,127,1.946,136,1.178,139,1.987,141,2.076,142,2.113,144,1.478,145,0.522,146,1.607,147,2.679,148,1.589,149,2.042,150,1.452,151,2.383,152,1.178,153,1.178,154,2.24,157,0.79,158,2.539,161,3.804,163,0.805,164,0.5,165,1.305,167,1.925,169,1.581,170,0.349,171,2.285,173,0.927,174,1.062,175,0.504,178,0.629,179,1.012,182,1.012,183,2.83,184,3.098,185,3.801,187,1.249,188,1.536,189,1.249,191,1.994,192,0.663,193,0.663,194,0.968,195,2.314,197,0.663,198,0.663,202,0.629,204,4.3,209,2.392,210,1.925,211,2.337,212,1.178,213,1.589,214,2.337,220,1.43,234,0.703,242,2.337,244,0.749,248,1.062,254,0.347,272,0.927,274,3.919,280,2.098,281,2.416,283,3.4,288,3.308,317,1.43,320,2.945,326,2.539,340,1.178,345,0.761,351,1.43,352,2.337,353,3.006,356,1.929,360,1.719,363,1.43,368,2.337,370,1.719,371,2.987,387,3.208,388,3.771,389,0.875,391,1.654,393,2.323,396,2.963,401,1.506,410,3.185,412,0.749,414,0.889,416,0.663,418,4.114,421,3.563,423,1.994,424,1.554,463,0.749,464,2.098,465,1.589,475,0.749,476,0.805,477,0.968,499,2.041,509,2.539,511,4.222,512,1.43,521,1.178,531,0.5,592,2.539,598,0.875,599,3.858,604,2.552,613,0.875,617,3.717,622,1.554,630,0.805,654,3.771,655,3.219,662,1.554,672,1.719,673,1.719,675,4.856,686,0.968,687,2.319,700,3.858,720,0.968,726,3.92,731,0.968,732,0.968,751,1.249,761,2.337,768,1.925,772,0.968,787,0.968,792,0.968,799,0.968,809,5.455,827,1.11,828,2.319,829,1.971,830,4.084,831,1.554,832,1.971,833,2.81,834,1.554,835,1.971,836,1.971,837,3.486,838,3.689,839,3.689,840,1.971,841,1.971,842,1.971,843,1.11,844,4.084,845,1.11,846,1.971,847,1.971,848,1.11,849,1.971,850,1.719,851,3.221,852,2.81,853,1.971,854,1.719,855,1.719,856,3.221,857,1.971,858,1.11,859,6.02,860,6.02,861,3.599,862,1.971,863,1.11,864,1.971,865,1.11,866,1.971,867,1.971,868,1.11,869,1.971,870,1.971,871,1.11,872,1.971,873,1.11,874,1.971,875,1.11,876,1.971,877,1.11,878,1.971,879,1.11,880,1.554,881,1.971,882,1.11,883,1.971,884,1.554,885,1.719,886,1.971,887,1.971,888,0.968,889,0.968,890,0.875,891,0.805,892,0.968,893,1.11,894,1.11,895,1.11,896,1.11,897,1.971,898,1.11,899,1.11,900,1.11,901,1.11,902,1.11,903,0.968,904,1.11,905,1.11,906,1.11,907,1.971,908,1.554,909,1.971,910,1.11,911,3.221,912,1.11,913,2.659,914,1.11,915,3.221,916,1.11,917,1.971,918,1.11,919,1.11,920,1.971,921,1.11,922,1.971,923,1.11,924,1.11,925,1.11,926,1.971,927,1.11,928,1.11,929,0.968,930,1.11,931,2.81,932,1.11,933,2.659,934,1.11,935,1.11,936,1.11,937,1.11,938,4.084,939,1.11,940,1.11,941,1.971,942,2.659,943,3.221,944,1.554,945,1.11,946,1.11,947,1.11,948,1.971,949,1.971,950,1.971,951,1.971,952,1.971,953,1.11,954,1.11,955,1.971,956,1.971,957,1.11,958,1.11,959,3.221,960,0.875,961,1.11,962,3.221,963,1.11,964,3.221,965,1.11,966,1.11,967,2.659,968,2.659,969,1.971,970,1.11,971,1.971,972,1.11,973,1.11,974,0.875,975,1.11,976,1.11,977,1.11,978,1.11,979,1.11,980,1.11,981,1.11,982,1.719,983,1.11,984,1.11,985,1.11,986,1.11,987,1.11,988,1.11,989,1.971,990,3.689,991,1.11,992,1.11,993,1.11,994,1.11,995,1.11,996,1.11,997,1.719,998,1.11,999,1.11]],["title/modules/NgxEditorjsDemoModule.html",[124,0.346,1000,2.973]],["body/modules/NgxEditorjsDemoModule.html",[3,0.185,4,0.185,5,0.169,6,0.122,7,0.201,12,0.313,23,0.013,24,0.185,65,0.007,66,0.009,67,0.007,71,0.623,73,0.542,78,1.938,123,2.477,124,0.378,170,0.587,239,2.535,268,1.222,440,3.547,441,1.182,442,1.793,443,1.793,444,3.129,445,2.104,446,2.772,453,2.789,454,1.938,455,1.938,469,1.675,471,3.547,472,2.535,482,3.048,519,4.295,524,3.904,531,3.001,551,1.863,554,2.411,559,4.664,564,4.803,565,3.528,755,3.022,861,2.675,1000,6.022,1001,3.904,1002,3.904,1003,3.904,1004,3.904,1005,5.161,1006,4.803,1007,4.475,1008,5.176,1009,5.176,1010,3.904,1011,3.528,1012,4.475,1013,3.904,1014,5.934,1015,3.904,1016,4.475,1017,3.904,1018,5.176,1019,4.475,1020,3.904,1021,4.677,1022,3.246,1023,4.475]],["title/modules/NgxEditorjsPluginsModule.html",[124,0.346,1006,2.597]],["body/modules/NgxEditorjsPluginsModule.html",[1,0.587,3,0.138,4,0.138,5,0.126,6,0.091,7,0.15,9,0.372,12,0.258,21,2.184,23,0.013,24,0.138,65,0.005,66,0.007,67,0.005,71,0.61,73,0.405,81,2.744,93,2.61,124,0.481,166,3.515,170,0.439,175,1.238,182,2.489,190,2.61,254,1.513,268,0.913,441,1.752,442,1.339,443,1.339,444,1.571,445,1.571,446,2.373,453,2.277,454,1.447,455,1.447,469,1.368,471,2.896,472,1.893,482,2.489,538,3.515,820,5.232,834,3.819,1006,5.389,1024,2.915,1025,2.915,1026,2.915,1027,5.232,1028,5.232,1029,5.232,1030,5.232,1031,5.232,1032,5.232,1033,5.232,1034,5.232,1035,5.232,1036,5.232,1037,5.232,1038,5.232,1039,3.342,1040,3.342,1041,4.226,1042,4.845,1043,4.845,1044,4.845,1045,4.226,1046,3.342,1047,3.342,1048,3.342,1049,3.342,1050,3.342,1051,2.915,1052,3.342,1053,3.342,1054,3.342,1055,3.342,1056,3.342,1057,3.342,1058,3.342,1059,2.915,1060,3.342,1061,3.342,1062,3.342,1063,3.342]],["title/modules/NgxTinynodesComponentsModule.html",[124,0.346,1064,2.768]],["body/modules/NgxTinynodesComponentsModule.html",[3,0.221,4,0.221,5,0.202,6,0.146,23,0.013,24,0.221,65,0.008,66,0.01,67,0.008,71,0.55,73,0.647,124,0.451,170,0.701,268,1.458,441,1.41,442,2.139,443,2.139,444,2.51,445,2.51,446,3.013,453,3.124,454,2.312,455,2.312,469,1.876,482,3.414,551,2.767,554,3.58,557,3.263,1064,5.582,1065,4.657,1066,4.657,1067,4.657,1068,5.639,1069,5.639,1070,5.339,1071,5.339,1072,6.646,1073,4.208,1074,5.339,1075,4.208,1076,5.339]],["title/interfaces/NgxTinynodesMatFieldComponent.html",[0,0.184,1077,3.575]],["body/interfaces/NgxTinynodesMatFieldComponent.html",[0,0.272,2,1.351,3,0.25,4,0.25,5,0.228,6,0.165,23,0.013,24,0.25,40,2.238,65,0.009,66,0.011,67,0.009,71,0.58,73,0.732,221,5.647,226,4.838,230,6.25,234,4.539,235,6.25,239,3.422,551,2.515,1077,6.25,1078,6.04,1079,7.638,1080,4.382]],["title/components/NgxTinynodesMatJsonOutputComponent.html",[229,1.706,553,2.45]],["body/components/NgxTinynodesMatJsonOutputComponent.html",[3,0.166,4,0.166,5,0.151,6,0.201,11,0.562,12,0.28,13,0.784,15,1.608,19,2.005,23,0.013,24,0.166,34,0.635,52,0.811,65,0.006,66,0.008,67,0.006,71,0.305,73,0.486,104,2.116,112,1.504,123,2.891,142,1.72,170,0.526,171,2.05,188,2.62,217,3.934,227,2.908,228,4.576,229,2.62,233,4.25,241,2.059,245,2.059,250,2.159,256,2.271,263,4.981,264,3.72,269,3.996,270,3.996,271,3.72,274,3.39,280,2.059,320,2.271,336,2.704,340,2.396,345,1.547,350,2.967,393,1.669,403,3.159,423,2.484,443,1.606,500,4.293,519,2.271,520,2.908,521,2.396,522,2.908,526,2.707,527,2.159,539,2.159,543,3.72,544,2.059,545,4.916,546,2.908,547,2.908,548,2.908,549,2.908,550,2.396,551,3.305,552,2.908,553,4.051,554,4.517,555,2.908,556,2.396,557,1.968,558,2.908,559,2.271,560,1.736,561,2.707,562,2.707,563,2.908,591,5.49,594,5.911,596,4.342,608,3.996,694,2.908,1075,5.785,1081,5.324,1082,4.008,1083,5.508,1084,6.776,1085,7.518,1086,4.008,1087,5.508,1088,4.008,1089,4.008,1090,4.008,1091,5.508,1092,5.508]],["title/modules/NgxTinynodesMatJsonOutputModule.html",[124,0.346,1068,2.768]],["body/modules/NgxTinynodesMatJsonOutputModule.html",[3,0.222,4,0.222,5,0.202,6,0.147,23,0.013,24,0.222,65,0.008,66,0.01,67,0.008,71,0.593,73,0.649,123,1.995,124,0.452,170,0.704,217,2.754,268,1.464,441,1.416,442,2.148,443,2.148,444,3.409,445,2.52,446,3.019,453,3.133,454,2.321,455,2.321,469,1.881,471,3.983,472,3.037,482,2.754,551,2.232,553,4.995,554,4.086,569,5.813,571,5.813,1021,5.253,1022,3.889,1068,5.445,1075,4.226,1080,3.889,1081,3.889,1093,4.676,1094,4.676,1095,4.676,1096,5.361,1097,5.361]],["title/modules/NgxTinynodesMatTagInputModule.html",[124,0.346,1069,2.768]],["body/modules/NgxTinynodesMatTagInputModule.html",[3,0.217,4,0.217,5,0.198,6,0.144,23,0.013,24,0.217,65,0.008,66,0.01,67,0.008,71,0.589,73,0.636,124,0.443,170,0.689,217,2.698,239,2.975,268,1.434,441,1.387,442,2.104,443,2.104,444,3.377,445,2.469,446,2.991,453,3.093,454,2.274,455,2.274,469,1.857,471,3.139,472,2.975,473,4.581,482,2.698,551,2.186,556,5.049,557,3.527,573,5.739,580,5.739,1069,5.421,1073,4.139,1080,3.81,1081,3.81,1098,4.581,1099,4.581,1100,4.581,1101,4.581,1102,5.662,1103,5.662,1104,5.251,1105,5.251,1106,5.251]],["title/modules/NgxTinynodesMaterialFormFieldDemo.html",[124,0.346,1107,2.973]],["body/modules/NgxTinynodesMaterialFormFieldDemo.html",[3,0.188,4,0.188,5,0.172,6,0.125,7,0.205,12,0.295,23,0.013,24,0.188,65,0.007,66,0.009,67,0.007,71,0.621,73,0.552,78,1.972,123,2.234,124,0.384,125,1.758,170,0.598,229,1.896,239,2.58,268,1.244,336,2.236,441,1.203,442,1.825,443,1.825,444,3.157,445,2.141,446,1.896,453,2.822,454,1.972,455,1.972,469,1.695,471,3.588,472,2.58,482,3.084,531,3.218,539,3.845,550,4.768,551,2.499,554,2.453,564,4.826,743,4.826,748,3.973,754,3.973,861,2.722,1005,4.826,1006,4.826,1008,5.237,1009,5.237,1010,3.973,1011,3.59,1017,3.973,1018,5.237,1020,3.973,1021,4.732,1022,3.304,1064,4.054,1107,5.987,1108,3.973,1109,3.973,1110,4.554,1111,3.973,1112,4.732,1113,4.554,1114,6.715,1115,3.973,1116,4.554]],["title/components/NgxTinynodesMaterialFormFieldDemoComponent.html",[229,1.706,550,2.45]],["body/components/NgxTinynodesMaterialFormFieldDemoComponent.html",[1,0.547,3,0.063,4,0.108,5,0.058,6,0.18,7,0.295,9,0.503,11,0.348,12,0.318,13,0.299,14,0.666,15,1.882,19,1.82,21,1.176,23,0.013,24,0.063,26,1.045,27,0.69,34,0.831,38,0.787,41,1.553,44,1.129,46,0.72,48,1.223,50,1.129,51,1.28,52,1.117,65,0.002,66,0.004,67,0.005,71,0.42,73,0.185,76,0.495,89,0.873,104,2.014,111,2.392,112,1.099,118,2.694,122,1.34,123,2.488,127,1.695,139,0.825,141,2.647,142,1.257,144,1.613,145,0.72,146,1.987,151,2.168,154,0.971,157,1.809,162,4.995,164,1.814,170,0.201,171,1.951,175,1.028,176,0.97,183,2.709,184,1.969,185,2.647,188,2.183,191,0.69,194,1.976,207,3.499,217,2.694,219,1.207,220,1.892,226,2.301,227,1.111,228,2.717,229,2.783,233,2.301,234,1.652,239,0.867,241,3.158,242,2.159,243,1.111,244,1.034,245,0.786,248,2.168,250,0.825,252,3.787,256,0.867,263,3.781,264,1.761,265,2.275,266,1.892,267,2.972,269,1.892,270,1.892,271,1.761,272,1.226,274,3.985,280,3.312,281,1.129,283,2.96,288,2.975,320,2.28,322,1.111,336,1.28,340,2.037,341,2.919,345,1.553,347,2.919,348,1.761,350,1.405,351,1.892,352,1.892,353,0.825,356,2.919,368,1.652,371,2.301,373,2.919,393,1.675,401,1.478,405,1.207,410,3.891,412,1.034,423,1.176,443,0.613,454,2.584,457,2.405,464,2.067,465,1.559,500,2.159,502,3.172,505,1.761,507,1.111,508,1.892,519,0.867,520,1.111,521,0.915,522,1.111,526,1.034,527,3.752,531,1.814,535,1.892,539,4.445,543,1.761,544,0.786,545,2.919,546,1.111,547,1.111,548,1.111,549,1.111,550,2.405,551,2.046,552,1.111,553,0.915,554,0.825,555,1.111,556,0.915,557,1.673,558,1.111,559,0.867,560,3.08,561,1.034,562,1.034,563,1.111,588,2.056,596,2.056,598,1.207,603,1.892,604,2.712,608,2.919,616,2.275,619,3.938,622,2.056,625,1.335,627,4.354,663,1.892,667,3.51,670,1.761,694,2.919,698,2.972,710,3.172,726,1.207,831,2.056,837,4.542,861,0.915,880,2.056,888,1.335,889,1.335,890,1.207,891,1.111,944,1.207,960,1.207,974,2.686,1111,5.734,1112,5.181,1117,6.573,1118,2.608,1119,2.608,1120,3.408,1121,4.024,1122,2.608,1123,5.244,1124,3.938,1125,1.335,1126,3.322,1127,3.51,1128,4.024,1129,4.024,1130,1.531,1131,1.652,1132,2.608,1133,1.531,1134,1.531,1135,2.608,1136,1.531,1137,4.024,1138,1.531,1139,2.608,1140,1.531,1141,4.024,1142,4.024,1143,1.531,1144,2.275,1145,2.275,1146,1.531,1147,1.531,1148,2.608,1149,1.531,1150,2.608,1151,4.024,1152,2.717,1153,3.408,1154,1.531,1155,2.608,1156,1.531,1157,1.531,1158,1.335,1159,1.531,1160,1.335,1161,1.335,1162,1.335,1163,1.335,1164,1.531,1165,1.335,1166,1.531,1167,2.608,1168,2.608,1169,1.531,1170,1.335,1171,1.531,1172,1.531,1173,1.335,1174,1.531,1175,1.335,1176,1.531,1177,1.531,1178,1.335,1179,1.335,1180,1.531,1181,1.335,1182,1.335,1183,2.608,1184,2.608,1185,2.608,1186,2.275,1187,2.275,1188,2.608,1189,2.608,1190,2.275,1191,2.608,1192,3.172,1193,2.275,1194,3.51,1195,2.275,1196,1.335,1197,1.761,1198,1.335,1199,1.335,1200,1.335,1201,1.335,1202,1.335,1203,2.275,1204,2.275,1205,2.056,1206,2.275,1207,2.056,1208,2.275,1209,2.275,1210,2.275,1211,1.045,1212,2.608,1213,2.275,1214,2.275,1215,2.275,1216,2.608,1217,2.275,1218,2.608,1219,2.608,1220,2.972,1221,2.972,1222,2.275,1223,1.335,1224,2.972,1225,1.335,1226,1.335,1227,1.531,1228,1.531,1229,1.531,1230,1.531]],["title/interfaces/Page.html",[0,0.184,560,1.775]],["body/interfaces/Page.html",[0,0.33,1,0.822,2,1.235,3,0.228,4,0.228,5,0.209,6,0.151,7,0.248,11,0.783,12,0.281,13,1.08,14,1.734,17,1.195,18,1.448,23,0.013,24,0.304,40,1.725,65,0.008,66,0.01,67,0.008,71,0.516,146,2.477,272,3.906,531,2.49,557,3.763,560,2.939,1152,5.176,1231,4.353,1232,5.56,1233,5.176,1234,3.301]],["title/interfaces/PageBlock.html",[0,0.184,1233,2.768]],["body/interfaces/PageBlock.html",[0,0.336,1,0.907,2,1.288,3,0.238,4,0.238,5,0.217,6,0.157,7,0.259,11,0.588,12,0.288,13,1.126,14,1.779,17,1.246,18,1.315,23,0.013,24,0.309,40,2.174,65,0.009,66,0.011,67,0.009,71,0.529,146,1.861,272,3.93,531,2.595,557,3.417,560,2.493,1152,3.887,1231,4.538,1232,4.176,1233,5.053,1234,3.441]],["title/components/PageContainerComponent.html",[229,1.706,559,2.322]],["body/components/PageContainerComponent.html",[1,0.725,3,0.085,4,0.085,5,0.077,6,0.189,7,0.31,9,0.37,11,0.428,12,0.323,13,0.401,14,0.849,15,1.977,18,0.387,19,1.912,21,1.499,23,0.013,24,0.085,26,1.934,27,0.924,34,0.665,37,1.237,38,1.004,41,1.283,44,1.439,46,0.963,50,1.439,51,1.632,52,0.414,63,1.563,65,0.003,66,0.005,67,0.006,71,0.474,73,0.248,76,0.662,89,1.112,92,0.71,104,1.507,112,0.908,118,2.651,122,1.708,123,2.613,127,1.074,139,1.104,140,1.791,141,2.32,142,1.507,144,0.821,145,0.963,146,2.405,150,1.499,154,1.796,170,0.269,171,1.974,172,1.708,175,0.849,183,3.029,184,1.332,185,1.791,188,2.009,191,0.924,194,1.632,217,2.479,220,2.411,226,2.832,227,1.486,228,3.259,229,2.492,234,2.106,237,1.787,241,1.052,242,2.657,243,1.486,244,1.384,245,1.052,248,2.6,250,3.061,256,1.161,263,4.194,264,2.245,266,2.411,269,2.411,270,2.411,271,2.245,272,1.563,274,3.888,280,1.052,281,2.46,283,2.479,288,3.061,293,2.62,319,2.9,320,3.005,322,1.486,336,1.632,340,3.171,341,2.411,345,1.863,347,3.501,350,1.791,351,2.411,352,2.411,363,1.486,368,2.106,371,1.384,373,3.501,393,0.853,410,4.21,423,1.499,443,0.821,454,2.699,457,2.885,464,1.708,465,1.987,500,3.361,505,2.245,508,2.411,519,1.161,520,1.486,521,1.225,522,1.486,525,1.787,526,1.384,527,4.008,529,3.659,530,2.9,531,2.176,535,3.043,539,1.104,543,2.245,544,1.052,545,3.501,546,1.486,547,1.486,548,1.486,549,1.486,550,1.225,551,2.009,552,1.486,553,1.225,554,2.259,555,1.486,556,1.225,557,2.059,558,1.486,559,2.734,560,3.161,561,1.384,562,3.259,563,1.486,592,5.219,603,2.411,604,3.061,605,2.9,608,3.501,627,2.62,644,2.9,646,2.9,675,3.043,694,1.486,710,3.804,861,1.225,890,1.615,891,1.486,892,2.9,931,1.787,944,1.615,960,1.615,974,2.62,1013,6.024,1124,4.21,1125,1.787,1126,3.791,1127,4.21,1131,3.791,1144,2.9,1145,2.9,1158,1.787,1160,1.787,1161,2.9,1162,1.787,1163,1.787,1165,1.787,1170,1.787,1173,1.787,1175,1.787,1178,1.787,1181,1.787,1182,1.787,1192,3.804,1193,2.9,1194,4.21,1195,2.9,1196,1.787,1197,2.245,1198,1.787,1199,1.787,1200,1.787,1201,1.787,1202,1.787,1203,2.9,1204,2.9,1205,2.62,1206,2.9,1207,2.62,1208,2.9,1209,2.9,1210,2.9,1211,1.332,1220,2.9,1221,2.9,1222,2.9,1223,1.787,1224,1.787,1225,1.787,1226,1.787,1235,6.906,1236,5.305,1237,3.324,1238,2.049,1239,2.049,1240,2.049,1241,2.049,1242,2.049,1243,2.049,1244,3.324,1245,2.049,1246,2.049,1247,2.049,1248,1.787,1249,2.049,1250,2.049,1251,2.049,1252,3.324,1253,2.049,1254,2.049,1255,2.049,1256,2.049,1257,2.049,1258,2.049,1259,2.049,1260,2.049,1261,2.049,1262,2.049,1263,2.049,1264,2.049,1265,3.324,1266,3.324,1267,3.324,1268,3.324,1269,3.324]],["title/modules/PageStoreModule.html",[124,0.346,1005,2.597]],["body/modules/PageStoreModule.html",[3,0.212,4,0.212,5,0.194,6,0.14,7,0.231,9,0.572,12,0.294,23,0.013,24,0.212,65,0.008,66,0.01,67,0.008,71,0.568,73,0.622,80,3.878,114,3.495,123,2.414,124,0.65,170,0.674,191,2.925,268,1.942,441,1.357,442,2.058,443,2.058,444,2.415,445,2.415,446,2.138,453,3.05,454,2.224,455,2.224,469,1.831,498,4.706,527,3.495,560,2.809,1005,5.205,1126,4.984,1131,4.11,1270,4.48,1271,4.48,1272,5.312,1273,4.702,1274,5.136,1275,5.659,1276,5.659,1277,4.706,1278,6.487,1279,6.487,1280,4.48,1281,5.136,1282,4.049]],["title/injectables/PagesQuery.html",[414,1.848,1272,2.768]],["body/injectables/PagesQuery.html",[3,0.238,4,0.238,5,0.217,6,0.19,7,0.313,11,0.588,12,0.288,19,1.625,23,0.013,24,0.238,40,2.174,52,1.164,65,0.009,66,0.011,67,0.009,71,0.591,73,0.697,104,1.798,170,0.756,345,2.222,393,2.397,414,3.138,416,3.441,560,2.493,1234,3.441,1272,4.701,1273,4.647,1277,5.05,1282,4.538,1283,5.757,1284,7.483,1285,5.757,1286,5.757,1287,4.176,1288,4.176,1289,5.757,1290,5.757]],["title/injectables/PagesService.html",[414,1.848,1126,2.597]],["body/injectables/PagesService.html",[1,0.914,3,0.129,4,0.129,5,0.118,6,0.206,7,0.339,9,0.673,11,0.747,12,0.316,13,0.608,14,1.175,19,2.101,23,0.013,24,0.129,25,1.991,32,1.991,52,1.48,65,0.005,66,0.007,67,0.005,71,0.53,73,0.377,84,2.257,104,2.18,125,1.201,127,1.006,141,1.711,145,1.463,146,2.256,170,0.408,171,2.597,174,2.477,175,1.175,188,2.809,272,3.736,274,3.472,281,1.347,283,2.809,288,1.676,320,3.822,345,1.201,393,2.906,401,2.605,414,2.073,416,1.86,423,2.073,467,1.971,531,1.403,538,3.336,560,3.599,603,3.336,604,2.257,654,3.336,663,3.336,675,4.894,997,4.011,1126,2.913,1131,4.539,1152,2.101,1197,4.079,1217,4.011,1232,2.257,1233,4.713,1234,1.86,1248,2.714,1272,4.352,1273,3.853,1277,5.475,1280,2.714,1282,2.453,1287,2.257,1291,3.112,1292,6.041,1293,4.598,1294,4.598,1295,4.598,1296,4.598,1297,3.112,1298,3.112,1299,4.598,1300,3.112,1301,4.598,1302,3.112,1303,6.445,1304,4.598,1305,3.112,1306,4.598,1307,3.624,1308,4.598,1309,3.112,1310,4.598,1311,3.112,1312,4.598,1313,3.112,1314,4.598,1315,3.112,1316,3.112,1317,3.112,1318,6.041,1319,3.112,1320,4.598,1321,3.112,1322,3.112,1323,3.112,1324,4.598,1325,3.112,1326,3.112,1327,5.469,1328,4.598,1329,3.112,1330,3.112,1331,3.112]],["title/interfaces/PagesState.html",[0,0.184,1288,2.973]],["body/interfaces/PagesState.html",[0,0.265,2,1.32,3,0.244,4,0.244,5,0.223,6,0.161,7,0.265,12,0.244,23,0.013,24,0.292,40,2.362,65,0.009,66,0.011,67,0.009,71,0.575,73,0.715,104,1.843,170,0.775,345,2.278,346,4.281,414,3.186,560,2.556,1131,3.739,1234,3.528,1273,3.528,1287,4.281,1288,5.126,1332,5.148,1333,6.598,1334,6.164,1335,6.164]],["title/injectables/PagesStore.html",[414,1.848,1273,2.45]],["body/injectables/PagesStore.html",[0,0.261,3,0.24,4,0.24,5,0.219,6,0.191,7,0.315,12,0.289,19,1.64,23,0.013,24,0.289,40,2.346,65,0.009,66,0.011,67,0.009,71,0.571,73,0.704,104,1.814,170,0.762,345,2.9,346,4.214,414,3.156,416,3.472,560,2.515,1131,3.68,1234,3.472,1273,4.184,1287,4.214,1288,4.214,1332,5.067,1333,6.105,1334,6.553,1335,6.105,1336,5.809]],["title/interfaces/Paragraph.html",[0,0.184,41,1.582]],["body/interfaces/Paragraph.html",[0,0.357,1,1.003,2,0.822,3,0.152,4,0.152,5,0.139,6,0.101,7,0.165,8,1.888,9,0.41,11,0.847,12,0.295,13,0.719,14,1.535,15,2.143,17,0.795,18,1.46,21,1.657,22,2.502,23,0.013,24,0.315,25,1.592,26,3.004,27,1.657,28,1.888,29,2.664,30,2.664,31,1.592,32,1.592,33,2.664,34,1.132,35,2.794,36,2.794,37,1.368,38,1.11,39,2.546,40,2.039,41,2.894,42,3.851,43,2.546,44,3.178,45,2.546,46,1.728,47,1.888,48,1.32,49,2.546,50,2.98,51,2.546,52,1.32,53,2.794,54,1.98,55,2.082,56,1.98,57,1.942,58,1.98,59,1.98,60,1.98,61,1.98,62,2.546,63,1.728,64,1.888,65,0.006,66,0.008,67,0.006]],["title/interfaces/ParagraphBlock.html",[0,0.184,43,2.012]],["body/interfaces/ParagraphBlock.html",[0,0.36,1,1.008,2,0.826,3,0.153,4,0.153,5,0.139,6,0.101,7,0.166,8,1.896,9,0.411,11,0.852,12,0.304,13,0.722,14,1.539,15,2.088,17,0.799,18,1.418,21,1.665,22,2.508,23,0.013,24,0.315,25,1.599,26,3.007,27,1.665,28,1.896,29,2.672,30,2.672,31,1.599,32,1.599,33,2.672,34,1.092,35,2.802,36,2.802,37,1.374,38,1.115,39,2.554,40,2.153,41,2.761,42,3.359,43,2.957,44,3.182,45,2.554,46,1.736,47,1.896,48,1.325,49,2.554,50,2.985,51,2.554,52,1.323,53,2.802,54,1.989,55,2.087,56,1.989,57,1.947,58,1.989,59,1.989,60,1.989,61,1.989,62,2.554,63,1.736,64,1.896,65,0.006,66,0.008,67,0.006]],["title/modules/PluginCodeModule.html",[124,0.346,1027,2.768]],["body/modules/PluginCodeModule.html",[1,0.809,3,0.223,4,0.223,5,0.203,6,0.147,7,0.242,9,0.6,11,0.55,12,0.314,17,1.165,23,0.013,24,0.223,34,1.059,65,0.008,66,0.01,67,0.008,71,0.577,73,0.652,83,2.078,86,2.241,89,2.235,105,2.157,112,1.824,124,0.564,126,2.486,129,2.486,134,2.427,170,0.707,175,1.707,209,2.235,254,2.087,257,2.677,268,1.47,441,1.422,469,1.886,483,2.677,534,5.511,794,2.331,824,3.05,825,3.218,1027,4.511,1211,2.677,1337,5.383,1338,3.141,1339,2.427,1340,3.012,1341,5.383,1342,2.531,1343,5.383]],["title/interfaces/PluginConfig.html",[0,0.184,98,2.597]],["body/interfaces/PluginConfig.html",[0,0.292,1,0.918,2,0.708,3,0.131,4,0.131,5,0.12,6,0.087,7,0.142,9,0.782,11,0.828,12,0.29,13,0.619,14,1.19,15,1.895,17,1.639,18,1.226,19,0.894,23,0.013,24,0.313,31,2.392,34,0.738,38,2.513,52,1.62,55,1.613,57,1.785,65,0.005,66,0.007,67,0.005,68,4.862,69,1.892,71,0.354,72,1.554,73,0.383,74,3.144,75,3.144,76,1.023,77,2.95,78,2.392,79,2.95,80,1.892,81,3.845,82,2.296,83,1.222,84,1.554,85,2.137,86,1.318,87,1.892,88,5.349,89,2.271,90,3.73,91,4.383,92,1.914,93,1.705,94,1.892,95,2.296,96,2.249,97,2.95,98,3.499,99,3.378,100,2.95,101,2.016,102,3.144,103,3.378,104,1.454,105,2.441,106,4.3,107,1.793,108,2.296,109,2.016,110,2.709,111,2.016,112,1.271,113,3.144,114,2.508,115,3.641,116,3.281,117,2.95,118,1.733,119,2.49,120,2.597,121,2.597,122,1.626,123,1.178,124,0.267,125,2.132,126,1.178,127,1.785,128,2.137,129,1.178,130,2.137,131,2.296,132,2.005,133,2.296,134,1.427,135,2.137]],["title/interfaces/PluginConfigMap.html",[0,0.184,132,2.597]],["body/interfaces/PluginConfigMap.html",[0,0.309,1,0.906,2,0.817,3,0.151,4,0.151,5,0.138,6,0.141,7,0.232,9,0.667,11,0.748,12,0.303,15,1.747,16,2.068,17,1.646,18,1.347,19,1.457,23,0.013,24,0.322,31,2.234,34,0.578,38,2.497,52,1.316,55,1.788,57,1.18,65,0.006,66,0.008,67,0.006,68,4.042,69,2.182,71,0.392,72,1.792,73,0.442,74,3.485,75,3.485,76,1.18,77,3.269,78,2.592,79,3.269,80,2.182,81,3.889,82,2.648,83,1.409,84,1.792,85,2.465,86,1.52,87,2.182,88,4.812,89,2.177,90,4.042,91,4.042,92,2.254,93,1.966,94,2.182,95,2.648,96,2.074,97,2.312,98,3.792,99,2.648,100,2.312,101,1.581,102,2.465,103,2.648,104,1.14,105,1.463,106,3.269,107,2.068,108,2.648,109,1.581,110,2.65,111,1.581,112,0.997,113,2.465,114,1.966,115,2.182,116,2.78,117,2.312,118,1.358,119,1.646,120,2.814,121,2.814,122,1.875,123,1.358,124,0.308,125,2.311,126,1.358,127,1.935,128,2.465,129,1.358,130,2.465,131,3.744,132,3.269,133,3.744,134,1.646,135,2.465,1344,3.65]],["title/modules/PluginEmbedModule.html",[124,0.346,1028,2.768]],["body/modules/PluginEmbedModule.html",[1,0.883,3,0.224,4,0.224,5,0.205,6,0.148,7,0.244,9,0.604,11,0.553,12,0.315,17,1.172,23,0.013,24,0.224,34,1.063,65,0.008,66,0.01,67,0.008,71,0.554,73,0.656,83,2.091,86,2.255,89,2.244,105,2.171,112,1.989,115,3.238,124,0.566,126,2.496,129,2.496,170,0.711,175,1.714,209,2.244,254,2.095,257,2.688,268,1.479,441,1.431,469,1.893,483,2.688,794,2.346,1028,4.529,1211,2.688,1338,3.153,1339,2.442,1340,3.024,1342,2.547,1345,5.417,1346,7.613,1347,5.417,1348,3.432]],["title/modules/PluginHeaderModule.html",[124,0.346,1029,2.768]],["body/modules/PluginHeaderModule.html",[1,0.814,3,0.224,4,0.224,5,0.205,6,0.148,7,0.244,9,0.605,11,0.554,12,0.315,17,1.175,23,0.013,24,0.224,34,1.064,44,3.454,65,0.008,66,0.01,67,0.008,71,0.554,73,0.658,83,2.096,86,2.26,89,2.247,105,2.175,112,1.834,124,0.567,126,2.499,129,2.499,170,0.713,175,1.716,209,2.247,254,2.098,257,2.691,268,1.482,441,1.434,469,1.896,483,2.691,794,2.351,1029,4.535,1211,2.691,1338,3.157,1339,2.448,1340,3.028,1342,2.552,1349,5.429,1350,5.429,1351,5.429]],["title/modules/PluginImageModule.html",[124,0.346,1030,2.768]],["body/modules/PluginImageModule.html",[1,0.809,3,0.223,4,0.223,5,0.203,6,0.147,7,0.242,9,0.6,11,0.55,12,0.314,17,1.165,23,0.013,24,0.223,34,1.059,50,3.289,65,0.008,66,0.01,67,0.008,71,0.577,73,0.652,83,2.078,86,2.241,89,2.235,105,2.157,112,1.824,124,0.564,126,2.486,129,2.486,134,2.427,170,0.707,175,1.707,209,2.235,254,2.087,257,2.677,268,1.47,441,1.422,469,1.886,483,2.677,794,2.331,824,3.05,825,3.218,1030,4.511,1211,2.677,1338,3.141,1339,2.427,1340,3.012,1342,2.531,1352,5.383,1353,5.383,1354,3.905]],["title/modules/PluginInlineCodeModule.html",[124,0.346,1031,2.768]],["body/modules/PluginInlineCodeModule.html",[1,0.807,3,0.222,4,0.222,5,0.202,6,0.147,7,0.241,9,0.597,11,0.547,12,0.314,17,1.16,23,0.013,24,0.222,34,1.056,65,0.008,66,0.01,67,0.008,71,0.551,73,0.649,81,3.775,83,2.069,87,3.205,89,2.229,105,2.148,106,3.396,112,1.819,124,0.562,126,2.48,129,2.48,170,0.704,175,1.703,209,2.229,254,2.081,257,2.67,268,1.464,441,1.416,469,1.881,483,2.67,534,5.26,794,2.321,1031,4.5,1051,4.676,1211,2.67,1338,3.133,1339,2.417,1340,3.004,1342,2.52,1348,3.396,1355,5.361,1356,5.361,1357,6.664,1358,5.361,1359,5.361]],["title/modules/PluginLinkModule.html",[124,0.346,1032,2.768]],["body/modules/PluginLinkModule.html",[1,0.809,3,0.223,4,0.223,5,0.203,6,0.147,7,0.242,9,0.6,11,0.55,12,0.314,17,1.165,23,0.013,24,0.223,34,1.059,65,0.008,66,0.01,67,0.008,71,0.577,73,0.652,83,2.078,86,2.241,89,2.235,105,2.157,107,4.303,112,1.824,124,0.564,126,2.486,129,2.486,134,2.427,170,0.707,175,1.707,209,2.235,254,2.087,257,2.677,268,1.47,441,1.422,469,1.886,483,2.677,794,2.331,824,3.05,825,3.218,1032,4.511,1211,2.677,1338,3.141,1339,2.427,1340,3.012,1342,2.531,1354,3.905,1360,5.383,1361,5.383]],["title/modules/PluginListModule.html",[124,0.346,1033,2.768]],["body/modules/PluginListModule.html",[1,0.809,3,0.223,4,0.223,5,0.203,6,0.147,7,0.242,9,0.6,11,0.55,12,0.314,17,1.165,23,0.013,24,0.223,26,3.044,34,1.059,65,0.008,66,0.01,67,0.008,71,0.577,73,0.652,83,2.078,86,2.241,89,2.235,105,2.157,112,1.824,124,0.564,126,2.486,129,2.486,134,2.427,170,0.707,175,1.707,209,2.235,254,2.087,257,2.677,268,1.47,441,1.422,469,1.886,483,2.677,794,2.331,824,3.05,825,3.218,1033,4.511,1211,2.677,1338,3.141,1339,2.427,1340,3.012,1342,2.531,1354,3.905,1362,5.383,1363,5.383]],["title/modules/PluginMarkerModule.html",[124,0.346,1034,2.768]],["body/modules/PluginMarkerModule.html",[1,0.807,3,0.222,4,0.222,5,0.202,6,0.147,7,0.241,9,0.597,11,0.547,12,0.314,17,1.16,23,0.013,24,0.222,34,1.056,41,2.069,65,0.008,66,0.01,67,0.008,71,0.576,73,0.649,83,2.069,87,3.205,89,2.229,105,2.148,106,3.396,112,1.819,124,0.562,126,2.48,129,2.48,134,2.417,170,0.704,175,1.703,209,2.229,254,2.081,257,2.67,268,1.464,441,1.416,469,1.881,483,2.67,794,2.321,824,3.037,825,3.205,1034,4.5,1211,2.67,1338,3.133,1339,2.417,1340,3.004,1342,2.52,1348,3.396,1364,5.361,1365,7.251,1366,4.676,1367,5.361]],["title/modules/PluginParagraphModule.html",[124,0.346,1035,2.768]],["body/modules/PluginParagraphModule.html",[1,0.816,3,0.225,4,0.225,5,0.206,6,0.149,7,0.245,9,0.608,11,0.557,12,0.315,17,1.18,23,0.013,24,0.225,34,1.067,41,2.945,65,0.008,66,0.01,67,0.008,71,0.555,73,0.66,83,2.104,86,2.27,89,2.253,105,2.185,112,1.839,124,0.568,126,2.506,129,2.506,170,0.716,175,1.72,209,2.253,254,2.103,257,2.698,268,1.489,441,1.44,469,1.901,483,2.698,794,2.361,1035,4.547,1211,2.698,1338,3.165,1339,2.458,1340,3.036,1342,2.563,1348,3.454,1366,4.756,1368,5.452]],["title/modules/PluginQuoteModule.html",[124,0.346,1036,2.768]],["body/modules/PluginQuoteModule.html",[1,0.813,3,0.224,4,0.224,5,0.205,6,0.148,7,0.244,9,0.604,11,0.553,12,0.315,17,1.172,23,0.013,24,0.224,34,1.063,65,0.008,66,0.01,67,0.008,71,0.554,73,0.656,83,2.091,86,2.255,89,2.437,105,2.171,112,1.989,115,3.238,124,0.566,126,2.496,129,2.496,170,0.711,175,1.714,209,2.244,254,2.095,257,2.688,268,1.479,441,1.431,469,1.893,483,2.688,794,2.346,1036,4.529,1211,2.688,1338,3.153,1339,2.442,1340,3.024,1342,2.547,1348,3.432,1369,5.417,1370,7.613,1371,5.417]],["title/modules/PluginSimpleImageModule.html",[124,0.346,1037,2.768]],["body/modules/PluginSimpleImageModule.html",[1,0.805,3,0.221,4,0.221,5,0.202,6,0.146,7,0.24,9,0.595,11,0.545,12,0.313,17,1.155,23,0.013,24,0.221,34,1.053,50,2.878,65,0.008,66,0.01,67,0.008,71,0.576,73,0.647,83,2.061,86,2.223,89,2.224,105,2.139,112,1.815,124,0.561,126,2.473,129,2.473,134,2.407,170,0.701,175,1.698,209,2.224,254,2.076,257,2.663,268,1.458,441,1.41,469,1.876,483,2.663,794,2.312,824,3.024,825,3.191,1037,4.488,1059,4.657,1205,5.705,1211,2.663,1338,3.124,1339,2.407,1340,2.997,1342,2.51,1354,3.873,1372,5.339,1373,5.339,1374,5.339,1375,5.339]],["title/modules/PluginWarningModule.html",[124,0.346,1038,2.768]],["body/modules/PluginWarningModule.html",[1,0.883,3,0.224,4,0.224,5,0.205,6,0.148,7,0.244,9,0.604,11,0.553,12,0.315,17,1.172,23,0.013,24,0.224,34,1.063,65,0.008,66,0.01,67,0.008,71,0.554,73,0.656,83,2.091,86,2.255,89,2.244,105,2.171,112,1.989,115,3.238,124,0.566,126,2.496,129,2.496,170,0.711,175,1.714,209,2.244,254,2.095,257,2.688,268,1.479,441,1.431,469,1.893,483,2.688,794,2.346,1038,4.529,1211,2.688,1275,6.641,1338,3.153,1339,2.442,1340,3.024,1342,2.547,1348,3.432,1376,5.417,1377,5.417]],["title/interfaces/ReadyMap.html",[0,0.184,152,2.45]],["body/interfaces/ReadyMap.html",[0,0.336,1,0.738,2,1.043,3,0.193,4,0.193,5,0.176,6,0.167,7,0.274,9,0.52,12,0.317,16,2.641,17,1.749,18,1.412,19,1.316,23,0.013,24,0.309,48,1.673,65,0.007,66,0.009,67,0.007,71,0.516,76,1.507,92,2.801,136,2.787,137,3.148,138,5.459,139,4.493,140,2.511,141,2.268,142,1.456,144,1.868,145,2.191,146,2.195,147,2.511,148,2.787,149,2.941,150,2.748,151,3.659,152,3.644,153,2.787,154,2.527,155,2.641,156,2.953,157,2.443,1378,4.662]],["title/interfaces/SavedMap.html",[0,0.184,153,2.45]],["body/interfaces/SavedMap.html",[0,0.336,1,0.738,2,1.043,3,0.193,4,0.193,5,0.176,6,0.167,7,0.274,9,0.52,12,0.317,16,2.641,17,1.749,18,1.412,19,1.316,23,0.013,24,0.309,48,1.673,65,0.007,66,0.009,67,0.007,71,0.516,76,1.507,92,2.801,136,2.787,137,3.148,138,5.459,139,4.493,140,2.511,141,2.527,142,1.456,144,1.868,145,2.191,146,2.195,147,2.511,148,2.787,149,2.941,150,2.102,151,3.659,152,2.787,153,3.644,154,2.527,155,2.641,156,2.953,157,2.443,1379,4.662]],["title/interfaces/Tag.html",[0,0.184,557,2.012]],["body/interfaces/Tag.html",[0,0.337,1,0.846,2,1.294,3,0.239,4,0.239,5,0.218,6,0.158,7,0.26,11,0.59,12,0.289,13,1.131,14,1.783,17,1.685,18,1.471,23,0.013,24,0.31,40,1.806,65,0.009,66,0.011,67,0.009,71,0.53,146,1.869,272,3.747,531,2.607,557,3.681,560,2.504,1152,3.905,1231,4.558,1232,4.195,1233,4.713,1234,3.457]],["title/interfaces/ToolSettingsMap.html",[0,0.184,94,2.45]],["body/interfaces/ToolSettingsMap.html",[0,0.308,1,0.906,2,0.814,3,0.15,4,0.15,5,0.137,6,0.141,7,0.232,9,0.666,11,0.747,12,0.303,15,1.745,16,2.062,17,1.645,18,1.345,19,1.454,23,0.013,24,0.322,31,2.23,34,0.577,38,2.497,52,1.315,55,1.784,57,1.176,65,0.006,66,0.008,67,0.006,68,4.036,69,2.176,71,0.391,72,1.787,73,0.441,74,3.478,75,3.478,76,1.176,77,3.263,78,2.588,79,3.263,80,2.176,81,3.885,82,2.64,83,1.405,84,1.787,85,2.458,86,1.515,87,2.176,88,4.808,89,2.294,90,4.631,91,4.388,92,2.251,93,2.774,94,3.079,95,3.736,96,2.071,97,2.306,98,3.263,99,2.64,100,2.306,101,1.576,102,2.458,103,2.64,104,1.137,105,1.459,106,3.263,107,2.062,108,2.64,109,1.576,110,2.508,111,1.576,112,0.994,113,2.458,114,1.961,115,2.176,116,2.774,117,2.306,118,1.354,119,1.641,120,2.81,121,2.81,122,1.87,123,1.354,124,0.307,125,2.307,126,1.354,127,1.932,128,2.458,129,1.354,130,2.458,131,2.64,132,2.306,133,2.64,134,1.641,135,2.458,1380,3.64]],["title/changelog.html",[1381,2.169,1382,2.312,1383,2.698]],["body/changelog.html",[0,0.188,1,0.505,12,0.298,23,0.009,32,2.451,34,0.661,37,1.552,38,1.709,45,2.048,65,0.006,66,0.009,67,0.006,78,3.29,80,2.493,89,1.395,92,1.445,96,1.445,124,0.542,127,2.401,142,1.768,147,2.247,154,2.106,161,2.048,173,1.961,175,1.641,201,2.493,209,1.395,229,2.999,241,2.142,252,3.639,254,1.303,257,1.671,262,2.816,268,1.139,276,3.026,317,4.106,336,2.048,353,3.049,368,2.642,385,3.026,423,1.88,446,1.736,457,3.383,464,2.907,469,1.177,498,3.026,499,2.642,515,3.026,527,4.001,531,3.349,536,3.287,539,2.247,540,4.106,551,1.736,588,3.287,604,2.048,617,3.287,654,3.026,663,4.66,664,3.638,670,2.816,714,4.937,749,4.937,751,3.586,768,2.493,771,3.638,834,3.287,861,2.493,880,4.461,884,3.287,903,3.638,929,3.638,1186,6.01,1211,1.671,1213,4.937,1214,3.638,1307,3.287,1381,2.642,1383,4.461,1384,4.171,1385,5.604,1386,3.638,1387,4.171,1388,3.638,1389,4.171,1390,3.287,1391,4.171,1392,6.89,1393,4.171,1394,7.203,1395,4.171,1396,4.171,1397,4.171,1398,4.171,1399,4.171,1400,3.638,1401,4.461,1402,5.66,1403,4.171,1404,5.66,1405,4.171,1406,5.66,1407,5.66,1408,4.171,1409,6.01,1410,4.171,1411,4.171,1412,4.171,1413,5.66,1414,4.171,1415,4.171,1416,4.171,1417,6.424,1418,4.171,1419,4.171,1420,4.171,1421,3.638,1422,4.171,1423,4.171,1424,3.287,1425,4.171,1426,5.66,1427,4.171,1428,4.171,1429,4.171,1430,3.287,1431,4.171,1432,4.171,1433,4.171,1434,4.171,1435,3.638,1436,4.171,1437,4.171,1438,4.171,1439,5.66,1440,5.66,1441,4.171,1442,4.937,1443,3.638,1444,4.171,1445,4.171,1446,4.171,1447,4.171,1448,4.171,1449,4.171,1450,4.171,1451,4.171,1452,4.171,1453,4.171,1454,4.171,1455,4.171,1456,4.171,1457,4.171,1458,3.638,1459,4.171,1460,3.638]],["title/contributing.html",[1381,2.169,1382,2.312,1461,2.986]],["body/contributing.html",[0,0.159,5,0.134,19,1.001,23,0.008,25,1.535,45,1.74,65,0.008,66,0.008,67,0.005,84,2.481,101,2.188,127,1.633,147,2.723,154,1.881,155,2.008,166,4.273,173,2.769,178,2.008,180,2.246,184,1.42,212,3.021,274,2.723,288,2.723,340,2.119,393,1.476,442,1.42,499,2.246,534,5.269,626,4.409,660,3.092,666,3.092,670,2.394,751,3.202,761,2.571,831,2.794,833,3.092,837,2.794,850,3.092,852,3.092,855,3.092,884,2.794,885,3.092,891,2.571,908,2.794,982,5.602,1045,3.092,1179,3.092,1307,2.794,1340,2.279,1401,6.228,1424,2.794,1442,4.409,1443,3.092,1458,4.409,1460,3.092,1461,4.409,1462,4.409,1463,5.89,1464,3.545,1465,3.545,1466,3.545,1467,3.545,1468,3.545,1469,3.545,1470,7.263,1471,5.054,1472,3.545,1473,5.89,1474,3.092,1475,3.545,1476,3.545,1477,5.054,1478,3.545,1479,5.89,1480,2.794,1481,3.545,1482,3.545,1483,3.545,1484,3.545,1485,3.545,1486,6.421,1487,3.092,1488,3.545,1489,3.545,1490,3.545,1491,3.545,1492,4.409,1493,3.545,1494,3.545,1495,4.409,1496,3.545,1497,5.054,1498,3.545,1499,3.545,1500,5.054,1501,3.545,1502,6.789,1503,3.545,1504,6.789,1505,5.054,1506,3.092,1507,5.054,1508,3.545,1509,3.545,1510,3.545,1511,3.545,1512,3.545,1513,3.545,1514,3.545,1515,3.545,1516,5.054,1517,3.545,1518,3.545,1519,5.054,1520,3.545,1521,3.545,1522,3.545,1523,5.054,1524,3.545,1525,5.054,1526,6.789,1527,3.545,1528,3.545,1529,3.545,1530,5.054,1531,3.545,1532,3.545,1533,3.545,1534,3.545,1535,3.545,1536,3.545,1537,3.545,1538,3.545,1539,3.545,1540,3.545,1541,3.545,1542,3.545,1543,3.545,1544,3.545,1545,5.054,1546,5.89,1547,3.545,1548,3.545,1549,3.545,1550,3.545,1551,3.545,1552,3.545,1553,3.545,1554,3.545,1555,5.054,1556,3.545,1557,3.545,1558,3.092,1559,3.545,1560,3.545,1561,3.545,1562,5.054,1563,3.545,1564,3.545,1565,3.545,1566,5.054,1567,3.545,1568,3.092,1569,3.545,1570,3.545,1571,3.545,1572,3.545,1573,3.545,1574,5.054,1575,3.545,1576,3.545,1577,3.092,1578,3.545,1579,3.545,1580,3.545,1581,3.545,1582,3.545,1583,3.545,1584,3.545,1585,3.545,1586,3.545,1587,3.545,1588,3.545,1589,3.545,1590,3.545,1591,5.054,1592,3.545,1593,3.545,1594,3.545,1595,3.545,1596,3.545,1597,3.545,1598,3.545,1599,3.545,1600,5.054,1601,5.054,1602,5.054,1603,3.545,1604,3.545,1605,3.545,1606,3.545,1607,3.545,1608,3.545,1609,3.545,1610,3.545,1611,3.545,1612,3.545,1613,3.545,1614,3.545,1615,5.054,1616,3.545,1617,5.054,1618,3.545,1619,3.545,1620,3.545,1621,3.545,1622,5.054,1623,3.092,1624,3.545,1625,3.545,1626,3.545,1627,3.545,1628,3.545,1629,3.545,1630,3.545,1631,3.545,1632,3.545,1633,3.545,1634,3.545,1635,3.545,1636,3.545,1637,3.545,1638,3.545,1639,3.545,1640,3.545,1641,3.545,1642,3.545,1643,3.545,1644,3.545,1645,3.545,1646,3.545,1647,3.545,1648,3.545,1649,3.545,1650,3.545,1651,3.545,1652,3.545,1653,3.545,1654,3.545]],["title/dependencies.html",[442,1.975,1435,2.986]],["body/dependencies.html",[23,0.013,44,2.438,65,0.009,66,0.01,67,0.009,73,0.682,123,2.556,145,2.647,239,3.19,442,2.256,472,3.19,554,3.033,796,4.438,861,3.366,1011,4.438,1022,4.085,1080,4.085,1474,4.912,1655,5.631,1656,8.224,1657,5.631,1658,6.868,1659,5.631,1660,5.631,1661,5.631,1662,5.631,1663,5.631,1664,6.868,1665,5.991,1666,5.631,1667,4.912,1668,6.868,1669,5.631,1670,5.631,1671,5.631,1672,5.631,1673,5.631,1674,5.631,1675,5.631,1676,5.631,1677,5.631,1678,5.631,1679,5.631]],["title/miscellaneous/enumerations.html",[1680,1.939,1681,4.3]],["body/miscellaneous/enumerations.html",[1,0.94,6,0.172,7,0.282,12,0.259,13,1.227,23,0.012,65,0.01,66,0.011,67,0.01,69,3.752,77,3.976,78,2.718,79,3.976,80,3.752,81,4.397,83,2.829,280,3.764,1680,3.555,1681,5.475,1682,4.947]],["title/miscellaneous/functions.html",[1680,1.939,1683,4.3]],["body/miscellaneous/functions.html",[6,0.205,7,0.336,9,0.794,10,3.741,11,0.526,12,0.319,13,1.008,23,0.012,38,2.151,52,1.593,65,0.008,66,0.01,67,0.008,78,3.085,92,1.787,96,2.468,101,2.233,104,2.336,110,2.75,111,2.816,124,0.549,149,2.233,165,2.532,170,0.677,171,2.42,174,2.778,179,3.341,184,2.066,281,2.816,391,2.649,393,3.114,456,4.498,467,4.12,478,5.673,480,5.051,481,4.498,486,5.673,511,4.392,604,2.532,630,4.718,631,4.498,655,4.065,683,5.673,783,4.498,824,3.684,1680,2.921,1683,4.498,1684,4.498,1685,6.526,1686,5.157,1687,5.157,1688,5.157,1689,4.498,1690,5.157,1691,5.157,1692,5.157,1693,5.157,1694,5.157,1695,5.157,1696,5.157,1697,5.157,1698,5.157]],["title/index.html",[13,0.669,1381,2.169,1382,2.312]],["body/index.html",[0,0.209,1,0.563,12,0.334,14,1.187,23,0.009,34,0.736,38,1.402,65,0.007,66,0.009,67,0.007,78,2.936,84,2.28,101,2.936,111,2.633,114,2.502,116,2.502,123,2.263,124,0.572,127,1.501,142,1.899,147,2.502,169,2.28,175,1.838,178,2.631,182,3.124,209,2.034,229,2.532,241,2.386,245,2.386,248,2.502,250,2.502,252,2.631,254,1.451,259,4.052,260,3.661,262,3.137,288,3.276,316,4.052,317,3.37,336,3.328,350,2.502,353,4.126,365,3.661,366,4.052,367,4.052,424,3.661,442,1.861,446,1.934,455,2.011,464,3.124,521,2.777,527,3.652,531,3.057,532,5.305,533,4.052,535,3.37,536,3.661,539,3.276,540,3.37,544,2.386,551,1.934,589,3.661,590,4.052,604,2.985,751,3.853,761,4.411,768,3.635,828,4.052,1041,4.052,1187,4.052,1192,3.661,1197,3.137,1211,2.717,1276,5.305,1383,5.344,1385,5.305,1386,5.305,1388,5.305,1390,4.793,1401,5.67,1421,5.305,1430,5.885,1462,5.914,1699,4.645,1700,4.645,1701,4.645,1702,4.645,1703,4.645,1704,4.645,1705,4.645,1706,4.645,1707,4.645,1708,4.645,1709,4.645,1710,4.645,1711,6.081,1712,4.645,1713,4.645,1714,4.052,1715,6.081,1716,6.081,1717,4.645,1718,4.645,1719,4.052,1720,4.052,1721,4.645,1722,4.645]],["title/license.html",[1381,2.169,1382,2.312,1723,3.423]],["body/license.html",[23,0.01,37,1.991,65,0.008,66,0.01,67,0.008,101,2.882,155,3.031,242,3.389,455,2.316,551,2.227,908,4.217,1409,4.667,1424,5.71,1430,4.217,1487,4.667,1492,4.667,1495,5.805,1506,4.667,1577,4.667,1623,4.667,1719,4.667,1720,4.667,1724,4.667,1725,5.35,1726,5.35,1727,7.244,1728,5.35,1729,5.35,1730,5.35,1731,5.35,1732,5.35,1733,6.655,1734,8.214,1735,5.35,1736,5.35,1737,5.35,1738,6.655,1739,5.35,1740,5.35,1741,5.35,1742,4.667,1743,5.35,1744,5.35,1745,5.35,1746,5.35,1747,6.655,1748,5.35,1749,5.35,1750,5.35,1751,5.35,1752,5.35,1753,5.35,1754,6.655,1755,6.655,1756,5.35,1757,5.35,1758,5.35,1759,5.35,1760,5.35,1761,5.35,1762,5.35,1763,5.35,1764,5.35,1765,5.35,1766,5.35,1767,5.35,1768,5.35,1769,5.35,1770,5.35,1771,5.35,1772,5.35,1773,5.35,1774,5.35,1775,5.35,1776,5.35,1777,5.35,1778,5.35,1779,5.35,1780,5.35,1781,5.35]],["title/modules.html",[441,1.477]],["body/modules.html",[23,0.01,25,3.638,65,0.008,66,0.01,67,0.008,114,4.452,440,3.064,441,1.354,564,4.105,743,3.247,755,3.461,820,3.461,1000,3.719,1005,3.247,1006,3.247,1027,3.461,1028,4.375,1029,3.461,1030,3.461,1031,3.461,1032,3.461,1033,3.461,1034,3.461,1035,3.461,1036,3.461,1037,3.461,1038,3.461,1064,3.461,1068,3.461,1069,3.461,1107,3.719,1665,7.209,1782,8.264,1783,8.566,1784,8.401]],["title/overview.html",[1785,4.879]],["body/overview.html",[2,0.699,23,0.013,46,1.468,47,1.604,65,0.005,66,0.007,67,0.005,124,0.264,245,3.589,248,2.952,250,3.945,253,3.976,256,4.148,268,0.853,336,1.533,385,2.266,416,1.867,440,4.452,441,0.825,442,1.251,443,1.251,444,1.468,445,1.468,446,1.3,447,2.724,448,2.724,449,2.724,450,2.724,451,2.724,452,4.32,453,2.167,454,1.352,455,1.352,519,3.105,544,1.604,550,3.276,553,4.177,556,4.515,559,3.958,564,3.834,743,4.786,744,2.724,745,2.724,746,2.724,747,2.724,755,4.359,756,2.724,758,2.724,768,3.276,820,4.945,821,2.724,822,2.724,1000,5.652,1001,2.724,1002,2.724,1003,2.724,1004,2.724,1005,4.936,1006,5.351,1024,2.724,1025,2.724,1026,2.724,1027,4.718,1028,4.718,1029,4.718,1030,4.718,1031,4.718,1032,4.718,1033,4.718,1034,4.718,1035,4.718,1036,4.718,1037,4.718,1038,4.718,1064,4.843,1065,2.724,1066,2.724,1067,2.724,1068,5.03,1069,5.03,1093,2.724,1094,2.724,1095,2.724,1098,2.724,1099,2.724,1100,2.724,1101,2.724,1102,4.32,1103,4.32,1107,5.545,1108,2.724,1109,2.724,1126,3.472,1270,2.724,1271,2.724,1272,3.701,1273,3.276,1714,2.724,1785,2.724,1786,3.123,1787,3.123,1788,3.123]],["title/todo.html",[1381,2.169,1382,2.312,1789,2.986]],["body/todo.html",[12,0.32,23,0.011,65,0.009,66,0.011,67,0.009,84,3.394,110,2.875,114,3.725,118,2.118,123,2.771,124,0.48,141,2.118,146,1.84,161,2.795,162,3.844,205,3.225,229,2.37,233,3.844,254,1.778,260,4.487,276,4.13,441,1.504,527,3.067,544,2.924,551,2.37,560,2.465,604,3.394,670,3.844,689,4.966,854,4.966,1190,4.966,1197,5.514,1207,4.487,1215,4.966,1277,4.13,1339,2.567,1390,4.487,1400,4.966,1558,4.966,1568,4.966,1667,4.966,1724,4.966,1742,4.966,1789,4.966,1790,5.693,1791,5.693,1792,5.693,1793,5.693,1794,5.693,1795,5.693,1796,5.693,1797,5.693,1798,5.693,1799,5.693]],["title/miscellaneous/typealiases.html",[1680,1.939,1800,4.929]],["body/miscellaneous/typealiases.html",[1,0.828,6,0.187,7,0.307,8,2.867,11,0.785,12,0.282,13,1.091,18,1.454,23,0.013,25,2.417,26,2.237,27,2.517,28,2.867,29,3.509,30,3.509,31,2.417,32,2.417,33,3.509,38,2.229,39,2.74,43,2.74,49,2.74,55,2.367,62,2.74,63,2.624,64,3.509,65,0.009,66,0.01,67,0.009,69,3.337,74,3.769,75,3.769,77,3.536,78,2.417,79,3.536,84,2.74,85,4.613,86,2.324,87,3.337,88,4.613,89,1.867,90,3.769,91,4.613,1680,3.162,1682,5.819,1801,5.582,1802,6.832]],["title/miscellaneous/variables.html",[1480,3.886,1680,1.939]],["body/miscellaneous/variables.html",[6,0.206,7,0.325,11,0.754,12,0.328,13,0.679,18,0.656,19,0.98,23,0.013,34,1.285,38,1.504,65,0.005,66,0.008,67,0.005,69,2.076,78,1.504,92,1.726,100,4.574,110,2.248,112,1.839,114,1.871,118,1.292,119,1.566,120,3.166,121,3.295,122,1.784,123,2.367,124,0.293,126,1.853,127,2.387,128,2.345,129,1.853,130,2.345,134,2.246,135,2.345,142,1.085,146,1.122,149,1.504,157,1.392,164,2.246,168,2.2,169,1.705,170,0.654,173,1.633,183,1.633,190,1.871,191,2.246,192,2.977,193,2.076,194,1.705,195,1.967,196,2.076,197,2.076,198,2.076,199,2.977,200,2.2,201,2.076,202,2.821,203,2.2,216,2.737,217,2.991,218,2.519,219,3.926,221,3.926,229,2.649,231,5.55,241,2.558,250,1.871,252,2.821,253,3.613,254,1.987,255,5.55,256,1.967,257,2.549,272,1.633,280,4.147,452,3.926,457,2.076,459,3.155,475,3.363,480,2.345,489,3.613,490,2.737,513,2.737,514,2.737,515,2.519,516,2.737,517,3.926,518,2.737,519,1.967,527,1.871,539,3.137,551,2.074,556,2.977,557,3.307,559,1.967,565,2.737,589,2.737,796,2.737,1015,4.345,1073,2.737,1081,2.519,1102,3.926,1103,3.926,1112,2.737,1115,5.08,1480,2.737,1680,1.967,1682,4.59,1684,3.029,1685,4.345,1689,3.029,1803,4.981,1804,4.981,1805,4.981,1806,5.823,1807,3.473,1808,3.473,1809,5.823,1810,3.473,1811,4.981,1812,4.981,1813,4.981,1814,5.823,1815,3.473,1816,3.473,1817,3.473,1818,3.473,1819,5.823,1820,3.473,1821,3.473,1822,4.981,1823,3.473,1824,3.473,1825,3.473,1826,3.473,1827,3.473]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":194,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["0.0.5",{"_index":1675,"title":{},"body":{"dependencies.html":{}}}],["0.10.0",{"_index":1679,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":1673,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":46,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["1.2",{"_index":1440,"title":{},"body":{"changelog.html":{}}}],["1.4",{"_index":1652,"title":{},"body":{"contributing.html":{}}}],["100",{"_index":1221,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["100vh",{"_index":1222,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["12th",{"_index":1437,"title":{},"body":{"changelog.html":{}}}],["13th",{"_index":1433,"title":{},"body":{"changelog.html":{}}}],["15px",{"_index":1230,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["15th",{"_index":1422,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":1787,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":1672,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":1676,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":1409,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["22nd",{"_index":1408,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":1786,"title":{},"body":{"overview.html":{}}}],["3.1.4",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":1788,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1264,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["6",{"_index":47,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"overview.html":{}}}],["6.5.2",{"_index":1677,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1714,"title":{},"body":{"index.html":{},"overview.html":{}}}],["8.0.0",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["8.1.2",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["8.1.3",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["_disabled",{"_index":307,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_empty",{"_index":313,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_focused",{"_index":294,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_placeholder",{"_index":289,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["_required",{"_index":300,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["a.time",{"_index":969,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["above",{"_index":1753,"title":{},"body":{"license.html":{}}}],["abusive",{"_index":1618,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":1572,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":1537,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":316,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{}}}],["accessor",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessors",{"_index":603,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["account",{"_index":1608,"title":{},"body":{"contributing.html":{}}}],["acting",{"_index":1609,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":1577,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["actions",{"_index":886,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["active",{"_index":616,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["actual_component",{"_index":563,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["adapted",{"_index":1650,"title":{},"body":{"contributing.html":{}}}],["add",{"_index":1197,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"index.html":{},"todo.html":{}}}],["add(page",{"_index":1299,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock",{"_index":1293,"title":{},"body":{"injectables/PagesService.html":{}}}],["addblock(pageid",{"_index":1301,"title":{},"body":{"injectables/PagesService.html":{}}}],["added",{"_index":32,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["additional",{"_index":21,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["address",{"_index":1562,"title":{},"body":{"contributing.html":{}}}],["adds",{"_index":864,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["advances",{"_index":1552,"title":{},"body":{"contributing.html":{}}}],["aftercontentinit",{"_index":226,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["against",{"_index":860,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["age",{"_index":1510,"title":{},"body":{"contributing.html":{}}}],["aliases",{"_index":1801,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":1587,"title":{},"body":{"contributing.html":{}}}],["allow",{"_index":1278,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["allows",{"_index":509,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["along",{"_index":749,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"changelog.html":{}}}],["and/or",{"_index":1745,"title":{},"body":{"license.html":{}}}],["angular",{"_index":353,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":223,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/cdk/coercion",{"_index":225,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["angular/common",{"_index":472,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1659,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":73,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":239,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1080,"title":{},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"dependencies.html":{}}}],["angular/material/badge",{"_index":568,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/button",{"_index":570,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/card",{"_index":572,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/chips",{"_index":574,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/expansion",{"_index":576,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/form",{"_index":240,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{}}}],["angular/material/grid",{"_index":579,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/icon",{"_index":581,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/material/input",{"_index":583,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{}}}],["angular/material/list",{"_index":585,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["angular/platform",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1011,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"dependencies.html":{}}}],["any).onready",{"_index":413,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["api",{"_index":209,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"index.html":{}}}],["apicall",{"_index":838,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["apicall(options",{"_index":847,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["app",{"_index":457,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["appear",{"_index":1193,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["appearance",{"_index":1520,"title":{},"body":{"contributing.html":{}}}],["application",{"_index":464,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{}}}],["applicationref",{"_index":844,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["applies",{"_index":1598,"title":{},"body":{"contributing.html":{}}}],["appointed",{"_index":1610,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1574,"title":{},"body":{"contributing.html":{}}}],["appservice",{"_index":1127,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["architecture",{"_index":1396,"title":{},"body":{"changelog.html":{}}}],["area",{"_index":508,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["args",{"_index":214,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["argument",{"_index":851,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["arguments",{"_index":856,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["aria",{"_index":332,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["arising",{"_index":1779,"title":{},"body":{"license.html":{}}}],["array",{"_index":630,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["arrayadd",{"_index":1316,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayadd(entity.blocks",{"_index":1329,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove",{"_index":1317,"title":{},"body":{"injectables/PagesService.html":{}}}],["arrayremove(entity.blocks",{"_index":1330,"title":{},"body":{"injectables/PagesService.html":{}}}],["asjson",{"_index":1236,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["associated",{"_index":1735,"title":{},"body":{"license.html":{}}}],["async",{"_index":592,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["async/await",{"_index":903,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["attach",{"_index":589,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["attached",{"_index":611,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["attacks",{"_index":1557,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1551,"title":{},"body":{"contributing.html":{}}}],["attribution",{"_index":1649,"title":{},"body":{"contributing.html":{}}}],["authors",{"_index":1770,"title":{},"body":{"license.html":{}}}],["autofocus",{"_index":491,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["autofocused",{"_index":497,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["autosave",{"_index":162,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"todo.html":{}}}],["autosaves",{"_index":621,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["autosavetime",{"_index":1142,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["available",{"_index":25,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"contributing.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["await",{"_index":700,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["b",{"_index":967,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["b.time",{"_index":968,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["back",{"_index":689,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"todo.html":{}}}],["background",{"_index":58,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["ban",{"_index":1588,"title":{},"body":{"contributing.html":{}}}],["base",{"_index":10,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{},"miscellaneous/functions.html":{}}}],["based",{"_index":378,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["basic",{"_index":63,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["basis",{"_index":1219,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["before",{"_index":626,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["behavior",{"_index":1526,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":1592,"title":{},"body":{"contributing.html":{}}}],["behaviorsubject",{"_index":139,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["behaviorsubject(0",{"_index":1164,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["behaviorsubject(editor",{"_index":924,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(false",{"_index":687,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["behaviorsubject(undefined",{"_index":960,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["behaviorsubject(value",{"_index":991,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["being",{"_index":1531,"title":{},"body":{"contributing.html":{}}}],["below",{"_index":1192,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{}}}],["best",{"_index":1541,"title":{},"body":{"contributing.html":{}}}],["beta.26",{"_index":1663,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1404,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":907,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["binding",{"_index":323,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["block",{"_index":1,"title":{"interfaces/Block.html":{}},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["block.id",{"_index":1331,"title":{},"body":{"injectables/PagesService.html":{}}}],["blockdata",{"_index":68,"title":{"interfaces/BlockData.html":{}},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["blockplaceholder",{"_index":492,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["blocks",{"_index":146,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["blocktypes",{"_index":64,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["blur",{"_index":620,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["body",{"_index":1511,"title":{},"body":{"contributing.html":{}}}],["boolean",{"_index":57,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["bootstrap",{"_index":445,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}],["border",{"_index":54,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["both",{"_index":1599,"title":{},"body":{"contributing.html":{}}}],["bottom",{"_index":507,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["box",{"_index":1705,"title":{},"body":{"index.html":{}}}],["break",{"_index":1452,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":1414,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1783,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1665,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["bug",{"_index":1444,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1442,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["builder",{"_index":1132,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["bump",{"_index":1412,"title":{},"body":{"changelog.html":{}}}],["buttons",{"_index":1212,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["call",{"_index":185,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["called",{"_index":356,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["calling",{"_index":208,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["calls",{"_index":617,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["caption",{"_index":53,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["card",{"_index":1223,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["caret",{"_index":853,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cd",{"_index":608,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["change",{"_index":154,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"contributing.html":{}}}],["change.time",{"_index":1266,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["changed",{"_index":644,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["changedetection",{"_index":269,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectionstrategy",{"_index":227,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":270,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["changedetectorref",{"_index":228,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["changelog",{"_index":1383,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changelogs",{"_index":1387,"title":{},"body":{"changelog.html":{}}}],["changemap",{"_index":136,"title":{"interfaces/ChangeMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["changes",{"_index":670,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{},"contributing.html":{},"todo.html":{}}}],["changes.blocks",{"_index":704,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.firstchange",{"_index":706,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changes.blocks.previousvalue",{"_index":705,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys",{"_index":711,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["changeskeys.includes(key",{"_index":717,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["charge",{"_index":1730,"title":{},"body":{"license.html":{}}}],["check",{"_index":1209,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ci",{"_index":1791,"title":{},"body":{"todo.html":{}}}],["circumstances",{"_index":1629,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":1773,"title":{},"body":{"license.html":{}}}],["clarified",{"_index":1616,"title":{},"body":{"contributing.html":{}}}],["clarifying",{"_index":1571,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":170,"title":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":385,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"changelog.html":{},"overview.html":{}}}],["clean",{"_index":994,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cleaning",{"_index":993,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["cleanupsubjects(options",{"_index":995,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["clear",{"_index":410,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["clear(options",{"_index":857,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["clear(skipsave",{"_index":1135,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["click",{"_index":341,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["click)=\"disableautosave()\">disable",{"_index":1183,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["cluster_ngxeditorjscomponentmodule",{"_index":447,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjscomponentmodule_declarations",{"_index":448,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjscomponentmodule_exports",{"_index":450,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjscomponentmodule_ngxeditorjscomponent_providers",{"_index":449,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjscomponentmodule_providers",{"_index":451,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule",{"_index":1001,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_declarations",{"_index":1002,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_exports",{"_index":1004,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsdemomodule_imports",{"_index":1003,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmatfieldmodule",{"_index":744,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmatfieldmodule_declarations",{"_index":745,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmatfieldmodule_exports",{"_index":747,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmatfieldmodule_ngxeditorjsmatfieldcomponent_providers",{"_index":746,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule",{"_index":756,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_exports",{"_index":758,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjsmodule_imports",{"_index":757,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["cluster_ngxeditorjspluginservicemodule",{"_index":821,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginservicemodule_providers",{"_index":822,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule",{"_index":1024,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_exports",{"_index":1026,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxeditorjspluginsmodule_imports",{"_index":1025,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescomponentsmodule",{"_index":1065,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescomponentsmodule_exports",{"_index":1067,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodescomponentsmodule_imports",{"_index":1066,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmaterialformfielddemo",{"_index":1108,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmaterialformfielddemo_declarations",{"_index":1109,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmaterialformfielddemo_imports",{"_index":1110,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["cluster_ngxtinynodesmatjsonoutputmodule",{"_index":1093,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmatjsonoutputmodule_declarations",{"_index":1094,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmatjsonoutputmodule_exports",{"_index":1095,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule",{"_index":1098,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule_declarations",{"_index":1099,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule_exports",{"_index":1101,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_ngxtinynodesmattaginputmodule_ngxtinynodesmattaginputcomponent_providers",{"_index":1100,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule",{"_index":1270,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["cluster_pagestoremodule_providers",{"_index":1271,"title":{},"body":{"modules/PageStoreModule.html":{},"overview.html":{}}}],["code",{"_index":534,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginInlineCodeModule.html":{},"contributing.html":{}}}],["code.module",{"_index":1052,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["code.module.ts",{"_index":1356,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["code/inline",{"_index":1051,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginInlineCodeModule.html":{}}}],["coercebooleanproperty",{"_index":224,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(disabled",{"_index":311,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(focused",{"_index":298,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["coercebooleanproperty(required",{"_index":305,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["collapse",{"_index":1092,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["collection",{"_index":532,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"index.html":{}}}],["column",{"_index":1228,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["comments",{"_index":1555,"title":{},"body":{"contributing.html":{}}}],["commits",{"_index":1583,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":1447,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":471,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["community",{"_index":1504,"title":{},"body":{"contributing.html":{}}}],["compatible",{"_index":259,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{}}}],["complaints",{"_index":1624,"title":{},"body":{"contributing.html":{}}}],["completly",{"_index":1431,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":229,"title":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":546,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["components",{"_index":336,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["components.module.ts",{"_index":1071,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["components/mat",{"_index":1072,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["components/src/lib/components/mat",{"_index":1081,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"miscellaneous/variables.html":{}}}],["components/src/lib/ngx",{"_index":1070,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["components/src/lib/types/components.ts",{"_index":1078,"title":{},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["components/src/test.ts",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conditions",{"_index":1752,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1470,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":1632,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":110,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["config.data",{"_index":742,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config.ts",{"_index":1685,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["config/editor",{"_index":684,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["config/module",{"_index":479,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{}}}],["configs",{"_index":131,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["configuration",{"_index":96,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["configurations",{"_index":783,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"miscellaneous/functions.html":{}}}],["configure",{"_index":859,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["connection",{"_index":1780,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1565,"title":{},"body":{"contributing.html":{}}}],["const",{"_index":125,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["constructive",{"_index":1538,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":345,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["constructor(@inject(pluginclasses",{"_index":800,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(cd",{"_index":1086,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["constructor(config",{"_index":390,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["constructor(editorjs",{"_index":843,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["constructor(el",{"_index":606,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["constructor(pagesservice",{"_index":1125,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["constructor(pluginconfigmap",{"_index":778,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["constructor(private",{"_index":403,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["constructor(protected",{"_index":1289,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["constructor(public",{"_index":1319,"title":{},"body":{"injectables/PagesService.html":{}}}],["constructor(query",{"_index":1297,"title":{},"body":{"injectables/PagesService.html":{}}}],["constructor(store",{"_index":1285,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["contacting",{"_index":1621,"title":{},"body":{"contributing.html":{}}}],["container",{"_index":340,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{}}}],["container.component",{"_index":1014,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["container.component.html",{"_index":530,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.scss",{"_index":529,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts",{"_index":525,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/PageContainerComponent.html":{}}}],["container.component.ts:106",{"_index":1251,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:119",{"_index":1239,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:28",{"_index":1242,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:35",{"_index":1237,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:55",{"_index":1246,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:65",{"_index":1247,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:72",{"_index":1249,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:79",{"_index":1241,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:86",{"_index":1238,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container.component.ts:93",{"_index":1240,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["container/home",{"_index":524,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{}}}],["container/page",{"_index":1013,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"components/PageContainerComponent.html":{}}}],["containers/editorjs",{"_index":765,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/editorjs/editorjs.module",{"_index":764,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["containers/home",{"_index":1019,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containers/material",{"_index":1113,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["containers/page",{"_index":1012,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["containing",{"_index":138,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["contains",{"_index":113,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["content",{"_index":627,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["context",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["continue",{"_index":1456,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1777,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1527,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":1461,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1586,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1591,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":1501,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":276,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"todo.html":{}}}],["controls",{"_index":1207,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"todo.html":{}}}],["controltype",{"_index":277,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["controlvalueaccessor",{"_index":1079,"title":{},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["copies",{"_index":1747,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1733,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1727,"title":{},"body":{"license.html":{}}}],["core",{"_index":861,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["coreapi",{"_index":1795,"title":{},"body":{"todo.html":{}}}],["corrective",{"_index":1576,"title":{},"body":{"contributing.html":{}}}],["covenant",{"_index":1651,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":1654,"title":{},"body":{"contributing.html":{}}}],["cover",{"_index":1449,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":655,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["createconfig",{"_index":734,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["created",{"_index":654,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["createeditor",{"_index":593,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["createeditor(config",{"_index":651,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["createeditorjsconfig",{"_index":683,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsconfig(inputconfig",{"_index":1690,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createeditorjsinstance",{"_index":486,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsinstance(editorjs",{"_index":481,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"miscellaneous/functions.html":{}}}],["createeditorjsoptions",{"_index":158,"title":{"interfaces/CreateEditorJSOptions.html":{}},"body":{"interfaces/CreateEditorJSOptions.html":{},"injectables/NgxEditorJSService.html":{}}}],["createinstance",{"_index":841,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createinstance(options",{"_index":862,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createmoduleconfig",{"_index":478,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"miscellaneous/functions.html":{}}}],["createmoduleconfig(config",{"_index":1694,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createonchange",{"_index":910,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createonchange(options",{"_index":983,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createonready",{"_index":914,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createonready(options",{"_index":985,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["createpluginconfig",{"_index":824,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginSimpleImageModule.html":{},"miscellaneous/functions.html":{}}}],["createpluginconfig(pluginconfigs",{"_index":1696,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":174,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":180,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"contributing.html":{}}}],["creation",{"_index":498,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"modules/PageStoreModule.html":{},"changelog.html":{}}}],["criticism",{"_index":1539,"title":{},"body":{"contributing.html":{}}}],["ctrl+shift+c",{"_index":1359,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["ctrl+shift+m",{"_index":1367,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["current",{"_index":880,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["currently",{"_index":80,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["custom",{"_index":31,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["cycle",{"_index":367,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{}}}],["damages",{"_index":1774,"title":{},"body":{"license.html":{}}}],["data",{"_index":15,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["data).pipe",{"_index":958,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["data.blocks",{"_index":1181,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["date.now",{"_index":412,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["datorama/akita",{"_index":1234,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{}}}],["deal",{"_index":1736,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1781,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":444,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}],["decorators",{"_index":1243,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["deem",{"_index":1593,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":1627,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":34,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default_holder_id",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaults",{"_index":466,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["define",{"_index":117,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["defined",{"_index":19,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["delayed",{"_index":1441,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":997,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"injectables/PagesService.html":{}}}],["delete(pageid",{"_index":1304,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo",{"_index":527,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["demo'},{'name",{"_index":552,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["demo.material.module",{"_index":1020,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["demo.material.module.ts",{"_index":566,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["demo.module.ts",{"_index":1007,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes",{"_index":1016,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["demo.routes.ts",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/angular",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo/src/lib/containers/home",{"_index":523,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["demo/src/lib/containers/page",{"_index":1235,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["demo/src/lib/demos/material",{"_index":1111,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["demo/src/lib/ngx",{"_index":565,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"miscellaneous/variables.html":{}}}],["demo/src/lib/store/pages/pages.models.ts",{"_index":1231,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Tag.html":{}}}],["demo/src/lib/store/pages/pages.module.ts",{"_index":1274,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["demo/src/lib/store/pages/pages.query.ts",{"_index":1283,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.query.ts:7",{"_index":1286,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["demo/src/lib/store/pages/pages.service.ts",{"_index":1291,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:15",{"_index":1298,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:17",{"_index":1314,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:24",{"_index":1315,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:32",{"_index":1300,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:47",{"_index":1313,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:56",{"_index":1305,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:60",{"_index":1311,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:64",{"_index":1302,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.service.ts:70",{"_index":1309,"title":{},"body":{"injectables/PagesService.html":{}}}],["demo/src/lib/store/pages/pages.store.ts",{"_index":1332,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["demo/src/lib/store/pages/pages.store.ts:9",{"_index":1336,"title":{},"body":{"injectables/PagesStore.html":{}}}],["demos",{"_index":533,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"index.html":{}}}],["dependencies",{"_index":442,"title":{"dependencies.html":{}},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"contributing.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":1400,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["deps",{"_index":485,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{}}}],["describedby",{"_index":334,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{}}}],["destroy",{"_index":387,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["destroyed",{"_index":686,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["destroyinstance",{"_index":842,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroyinstance(options",{"_index":867,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destroys",{"_index":869,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["destructive",{"_index":665,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["details",{"_index":1340,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"contributing.html":{}}}],["detection",{"_index":351,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["determined",{"_index":1646,"title":{},"body":{"contributing.html":{}}}],["developers",{"_index":1494,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":1276,"title":{},"body":{"modules/PageStoreModule.html":{},"index.html":{}}}],["devlog",{"_index":1438,"title":{},"body":{"changelog.html":{}}}],["diary",{"_index":1699,"title":{},"body":{"index.html":{}}}],["differing",{"_index":1533,"title":{},"body":{"contributing.html":{}}}],["direction",{"_index":1227,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["directive",{"_index":544,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"overview.html":{},"todo.html":{}}}],["directives",{"_index":561,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["directives/ngx",{"_index":246,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{}}}],["disability",{"_index":1513,"title":{},"body":{"contributing.html":{}}}],["disable",{"_index":622,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["disableautosave",{"_index":1121,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["disabled",{"_index":306,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["disabled(disabled",{"_index":310,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["discuss",{"_index":1464,"title":{},"body":{"contributing.html":{}}}],["display",{"_index":625,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["displaying",{"_index":103,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["distinctuntilchanged",{"_index":888,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["distinctuntilchanged((a",{"_index":966,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["distribute",{"_index":1743,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1793,"title":{},"body":{"todo.html":{}}}],["docheck",{"_index":230,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["docs",{"_index":536,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"changelog.html":{},"index.html":{}}}],["document.createelement('div",{"_index":402,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["documentation",{"_index":1430,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["doing",{"_index":885,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["dom",{"_index":521,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{}}}],["don't",{"_index":206,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["due",{"_index":1413,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1666,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1603,"title":{},"body":{"contributing.html":{}}}],["e.g",{"_index":1797,"title":{},"body":{"todo.html":{}}}],["each",{"_index":190,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsPluginsModule.html":{},"miscellaneous/variables.html":{}}}],["easily",{"_index":1041,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"index.html":{}}}],["edit",{"_index":1581,"title":{},"body":{"contributing.html":{}}}],["editior_js_instance",{"_index":517,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["editor",{"_index":118,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["editor's",{"_index":506,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["editor.destroy",{"_index":977,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor.isready",{"_index":919,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor[options.method",{"_index":934,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor[options.namespace][options.method",{"_index":935,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editor_js_tool_injector",{"_index":126,"title":{},"body":{"interfaces/BlockData.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["editorconfig",{"_index":165,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["editorconfig.holder",{"_index":913,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorconfig.onchange",{"_index":911,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorconfig.onready",{"_index":915,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorform",{"_index":1120,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["editorform.value.pagename",{"_index":1191,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["editorinstance",{"_index":321,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjs",{"_index":12,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["editorjs'},{'name",{"_index":547,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["editorjs.component",{"_index":474,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{}}}],["editorjs.directive",{"_index":247,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{}}}],["editorjs.directive.ts",{"_index":587,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:106",{"_index":614,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:112",{"_index":628,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:118",{"_index":645,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:124",{"_index":649,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:130",{"_index":647,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:136",{"_index":642,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:142",{"_index":648,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:148",{"_index":650,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:152",{"_index":609,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:168",{"_index":674,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:175",{"_index":677,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:182",{"_index":679,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:189",{"_index":681,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:198",{"_index":652,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:215",{"_index":659,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:251",{"_index":653,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:284",{"_index":671,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:53",{"_index":612,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:59",{"_index":632,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:65",{"_index":634,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:72",{"_index":635,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:78",{"_index":639,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:84",{"_index":624,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:90",{"_index":641,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.directive.ts:97",{"_index":629,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs.module.ts",{"_index":760,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.module.ts:30",{"_index":763,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs.version",{"_index":196,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"miscellaneous/variables.html":{}}}],["editorjs/code",{"_index":1341,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["editorjs/editorjs",{"_index":76,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["editorjs/editorjs.component",{"_index":251,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjs/editorjs.module",{"_index":753,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{}}}],["editorjs/embed",{"_index":1347,"title":{},"body":{"modules/PluginEmbedModule.html":{}}}],["editorjs/header",{"_index":1350,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["editorjs/image",{"_index":1353,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["editorjs/inline",{"_index":1358,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["editorjs/link",{"_index":1361,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["editorjs/list",{"_index":1363,"title":{},"body":{"modules/PluginListModule.html":{}}}],["editorjs/ngx",{"_index":7,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["editorjs/paragraph",{"_index":1366,"title":{},"body":{"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{}}}],["editorjs/quote",{"_index":1371,"title":{},"body":{"modules/PluginQuoteModule.html":{}}}],["editorjs/simple",{"_index":1374,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["editorjs/src/lib/config/editor",{"_index":1689,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/config/module",{"_index":1693,"title":{},"body":{"miscellaneous/functions.html":{}}}],["editorjs/src/lib/containers/editorjs",{"_index":216,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.component.ts",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.module.ts",{"_index":456,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"miscellaneous/functions.html":{}}}],["editorjs/src/lib/containers/editorjs/editorjs.module.ts:63",{"_index":462,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{}}}],["editorjs/src/lib/directives/ngx",{"_index":586,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["editorjs/src/lib/ngx",{"_index":759,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts",{"_index":827,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:138",{"_index":848,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:177",{"_index":879,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:191",{"_index":858,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:204",{"_index":882,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:220",{"_index":871,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:231",{"_index":875,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:242",{"_index":877,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:260",{"_index":873,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:271",{"_index":868,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:288",{"_index":865,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:61",{"_index":845,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/services/editorjs.service.ts:87",{"_index":863,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["editorjs/src/lib/types/blocks.ts",{"_index":8,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["editorjs/src/lib/types/blocks.ts:13",{"_index":20,"title":{},"body":{"interfaces/Block.html":{}}}],["editorjs/src/lib/types/config.ts",{"_index":490,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/editorjs",{"_index":159,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{}}}],["editorjs/src/lib/types/injector.ts",{"_index":168,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["editorjs/src/lib/types/maps.ts",{"_index":137,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorjs/src/lib/types/maps.ts:18",{"_index":1378,"title":{},"body":{"interfaces/ReadyMap.html":{}}}],["editorjs/src/lib/types/maps.ts:28",{"_index":1379,"title":{},"body":{"interfaces/SavedMap.html":{}}}],["editorjs/src/lib/types/maps.ts:52",{"_index":143,"title":{},"body":{"interfaces/ChangeMap.html":{}}}],["editorjs/src/lib/types/maps.ts:8",{"_index":383,"title":{},"body":{"interfaces/EditorMap.html":{}}}],["editorjs/src/testing/ng",{"_index":417,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["editorjs/src/testing/shared.ts",{"_index":386,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:11",{"_index":394,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:12",{"_index":397,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:13",{"_index":398,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:14",{"_index":395,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:16",{"_index":392,"title":{},"body":{"classes/MockEditorJS.html":{}}}],["editorjs/src/testing/shared.ts:3",{"_index":438,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/src/testing/shared.ts:5",{"_index":439,"title":{},"body":{"classes/MockPlugin.html":{}}}],["editorjs/warning",{"_index":1377,"title":{},"body":{"modules/PluginWarningModule.html":{}}}],["editorjs@1.2.0",{"_index":1434,"title":{},"body":{"changelog.html":{}}}],["editorjs@1.3.2",{"_index":1423,"title":{},"body":{"changelog.html":{}}}],["editorjs@2.0.0",{"_index":1410,"title":{},"body":{"changelog.html":{}}}],["editorjs@3.0.0",{"_index":1393,"title":{},"body":{"changelog.html":{}}}],["editorjs](http://editorjs.io",{"_index":767,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["editorjs_form_value_accessor",{"_index":452,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["editorjs_material_field_control",{"_index":253,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["editorjs_module_import",{"_index":199,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSComponentModule.html":{},"miscellaneous/variables.html":{}}}],["editorjschange",{"_index":156,"title":{"interfaces/EditorJSChange.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorjsclass",{"_index":167,"title":{"interfaces/EditorJSClass.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["editorjsinstance",{"_index":202,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSComponentModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["editorjsinstanceconfig",{"_index":181,"title":{"interfaces/EditorJSInstanceConfig.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["editorjsmaterialform",{"_index":215,"title":{"interfaces/EditorJSMaterialForm.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["editorjsplugin",{"_index":91,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["editormap",{"_index":148,"title":{"interfaces/EditorMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["editorservice",{"_index":347,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["edits",{"_index":1585,"title":{},"body":{"contributing.html":{}}}],["el",{"_index":610,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["electronic",{"_index":1561,"title":{},"body":{"contributing.html":{}}}],["element",{"_index":350,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{}}}],["elementref",{"_index":607,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["email",{"_index":1467,"title":{},"body":{"contributing.html":{}}}],["embed",{"_index":1346,"title":{},"body":{"modules/PluginEmbedModule.html":{}}}],["emits",{"_index":643,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["empathy",{"_index":1543,"title":{},"body":{"contributing.html":{}}}],["empty",{"_index":312,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["empty(empty",{"_index":315,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["enable",{"_index":1141,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["enableautosave",{"_index":1122,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["enableautosave(autosavetime",{"_index":1139,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["enabled",{"_index":1185,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["enablelongstacktrace",{"_index":436,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["enables",{"_index":1216,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["end",{"_index":1475,"title":{},"body":{"contributing.html":{}}}],["enforce",{"_index":1640,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":1617,"title":{},"body":{"contributing.html":{}}}],["ensure",{"_index":831,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"contributing.html":{}}}],["enter",{"_index":1189,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["entire",{"_index":1214,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["entity",{"_index":1328,"title":{},"body":{"injectables/PagesService.html":{}}}],["entitystate",{"_index":1333,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entitystore",{"_index":1334,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["entrycomponents",{"_index":1008,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["enum",{"_index":82,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["enumerations",{"_index":1681,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1479,"title":{},"body":{"contributing.html":{}}}],["error",{"_index":278,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["error('error",{"_index":721,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["error(`no",{"_index":936,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["errorstate",{"_index":279,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["etc",{"_index":854,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"todo.html":{}}}],["ethnicity",{"_index":1514,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":155,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"contributing.html":{},"license.html":{}}}],["eventemitter",{"_index":434,"title":{},"body":{"injectables/MockNgZone.html":{},"directives/NgxEditorJSDirective.html":{}}}],["eventemitter(false",{"_index":435,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["events",{"_index":1707,"title":{},"body":{"index.html":{}}}],["everyone",{"_index":1508,"title":{},"body":{"contributing.html":{}}}],["example",{"_index":262,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"index.html":{}}}],["examples",{"_index":1486,"title":{},"body":{"contributing.html":{}}}],["exclude",{"_index":787,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["excludelist",{"_index":788,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["excludelist.includes(key",{"_index":805,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["excludetools",{"_index":163,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["existing",{"_index":669,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["exiting",{"_index":1418,"title":{},"body":{"changelog.html":{}}}],["expand",{"_index":1085,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["expanded",{"_index":1448,"title":{},"body":{"changelog.html":{}}}],["expected",{"_index":1573,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":1507,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":1535,"title":{},"body":{"contributing.html":{}}}],["explicit",{"_index":1563,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":24,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["exported",{"_index":95,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["exporting",{"_index":750,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{}}}],["exports",{"_index":446,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["expose",{"_index":1794,"title":{},"body":{"todo.html":{}}}],["exposed",{"_index":1481,"title":{},"body":{"contributing.html":{}}}],["express",{"_index":1761,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1517,"title":{},"body":{"contributing.html":{}}}],["extends",{"_index":40,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/Tag.html":{}}}],["face",{"_index":1642,"title":{},"body":{"contributing.html":{}}}],["factory",{"_index":480,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["fair",{"_index":1575,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":1641,"title":{},"body":{"contributing.html":{}}}],["falls",{"_index":688,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["false",{"_index":164,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":1128,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["feature",{"_index":1215,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"todo.html":{}}}],["features",{"_index":1421,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["field",{"_index":241,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["field'},{'name",{"_index":549,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["field.component",{"_index":754,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["field.component.html",{"_index":265,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.scss",{"_index":267,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts",{"_index":219,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"miscellaneous/variables.html":{}}}],["field.component.ts:102",{"_index":1140,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:109",{"_index":1138,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:116",{"_index":1147,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:125",{"_index":1136,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:144",{"_index":1149,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:155",{"_index":1146,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:172",{"_index":1143,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:25",{"_index":1134,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:30",{"_index":1133,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:34",{"_index":1154,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:51",{"_index":1130,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:86",{"_index":1157,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.component.ts:93",{"_index":1159,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field.module",{"_index":766,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["field.module').then(m",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field.module.ts",{"_index":748,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["field.module.ts:30",{"_index":752,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{}}}],["field/containers/material",{"_index":1117,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["field/editorjs",{"_index":218,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"miscellaneous/variables.html":{}}}],["field/material",{"_index":1112,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{}}}],["filed",{"_index":1445,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1487,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["filter",{"_index":889,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["filter(([key",{"_index":804,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["filter(haschanged",{"_index":970,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["filtering",{"_index":786,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["finaltools",{"_index":811,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["find",{"_index":1386,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["find(key",{"_index":716,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["first",{"_index":499,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{}}}],["fitness",{"_index":1766,"title":{},"body":{"license.html":{}}}],["flex",{"_index":1224,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["float",{"_index":327,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["fn",{"_index":430,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["focus",{"_index":348,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["focused",{"_index":293,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["focused(focused",{"_index":297,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["focusing",{"_index":1540,"title":{},"body":{"contributing.html":{}}}],["focusmonitor",{"_index":222,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["folder",{"_index":1716,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1471,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":1751,"title":{},"body":{"license.html":{}}}],["for_root_options_token",{"_index":459,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":539,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formatted",{"_index":1252,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["formbuilder",{"_index":1129,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["formcontrol",{"_index":619,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["forms",{"_index":540,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"changelog.html":{},"index.html":{}}}],["formsmodule",{"_index":473,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{}}}],["formsmodule,commonmodule",{"_index":1106,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{}}}],["forroot",{"_index":460,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["forroot(@optional",{"_index":488,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["forroot(config",{"_index":461,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["forwardref",{"_index":231,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["fostering",{"_index":1499,"title":{},"body":{"contributing.html":{}}}],["free",{"_index":1506,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["full",{"_index":260,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{},"todo.html":{}}}],["fully",{"_index":1701,"title":{},"body":{"index.html":{}}}],["function",{"_index":179,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"modules/NgxEditorJSComponentModule.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":1683,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1750,"title":{},"body":{"license.html":{}}}],["further",{"_index":1615,"title":{},"body":{"contributing.html":{}}}],["gender",{"_index":1515,"title":{},"body":{"contributing.html":{}}}],["general",{"_index":1724,"title":{},"body":{"license.html":{},"todo.html":{}}}],["generated",{"_index":1721,"title":{},"body":{"index.html":{}}}],["getasjson",{"_index":1250,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getautosave",{"_index":1156,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["getblocks",{"_index":1245,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["getdemodata('material",{"_index":1176,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["getdemodata('ngx",{"_index":1258,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["geteditor",{"_index":673,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["geteditor(options",{"_index":870,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["getelement",{"_index":676,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getmenu",{"_index":1158,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["getpages",{"_index":1248,"title":{},"body":{"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["getplugin",{"_index":773,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getplugin(key",{"_index":780,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getplugins",{"_index":774,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithexclude",{"_index":775,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithexclude(excludelist",{"_index":784,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithinclude",{"_index":776,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["getpluginswithinclude(includelist",{"_index":789,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gets",{"_index":326,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["getservice",{"_index":678,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["getting",{"_index":1381,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"changelog.html":{}}}],["gettools",{"_index":777,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["gettools(excludetools",{"_index":792,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["gettouched",{"_index":680,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["github",{"_index":1338,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}}}],["good",{"_index":1460,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":1536,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":1729,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1784,"title":{},"body":{"modules.html":{}}}],["group",{"_index":1155,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["guid",{"_index":1318,"title":{},"body":{"injectables/PagesService.html":{}}}],["hammerjs",{"_index":1671,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":1427,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":828,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"index.html":{}}}],["handling",{"_index":771,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"changelog.html":{}}}],["happens",{"_index":835,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["harassing",{"_index":1619,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":1505,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":1596,"title":{},"body":{"contributing.html":{}}}],["haschanged",{"_index":598,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["haschanged.blocks",{"_index":1167,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["hassaved",{"_index":599,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["hassaved(options",{"_index":872,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["hassavedmap",{"_index":198,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":44,"title":{"interfaces/Header.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginHeaderModule.html":{},"dependencies.html":{}}}],["headerblock",{"_index":49,"title":{"interfaces/HeaderBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["height",{"_index":505,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["helper",{"_index":849,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["helpers",{"_index":1796,"title":{},"body":{"todo.html":{}}}],["here",{"_index":458,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{}}}],["hereby",{"_index":1728,"title":{},"body":{"license.html":{}}}],["hideable",{"_index":1674,"title":{},"body":{"dependencies.html":{}}}],["hidetoolbar",{"_index":493,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["hold",{"_index":504,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["holder",{"_index":183,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["holders",{"_index":1771,"title":{},"body":{"license.html":{}}}],["home",{"_index":528,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["home'},{'name",{"_index":548,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["host",{"_index":322,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["hostbinding",{"_index":232,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('attr.aria",{"_index":333,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostbinding('class.floating",{"_index":328,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["hostlistener",{"_index":682,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlistener('click",{"_index":690,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["hostlisteners",{"_index":602,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["html",{"_index":543,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["http://contributor",{"_index":1653,"title":{},"body":{"contributing.html":{}}}],["https://angular.io/api/core/ngmodule",{"_index":797,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["https://angular.io/api/core/ngzone",{"_index":895,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["https://angular.io/guide/observables",{"_index":896,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["https://editorjs.io/api",{"_index":809,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["https://editorjs.io/provide",{"_index":108,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["https://github.com/editor",{"_index":795,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["i'll",{"_index":1455,"title":{},"body":{"changelog.html":{}}}],["i'm",{"_index":1425,"title":{},"body":{"changelog.html":{}}}],["i've",{"_index":1426,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":272,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["identity",{"_index":1516,"title":{},"body":{"contributing.html":{}}}],["ids",{"_index":335,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ids.join",{"_index":339,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ignore",{"_index":713,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["image",{"_index":50,"title":{"interfaces/Image.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginImageModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["image.module",{"_index":1060,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["image.module.ts",{"_index":1373,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["image/simple",{"_index":1059,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["imageblock",{"_index":62,"title":{"interfaces/ImageBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["imagery",{"_index":1549,"title":{},"body":{"contributing.html":{}}}],["implementation",{"_index":261,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/MockNgZone.html":{}}}],["implements",{"_index":271,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["implied",{"_index":1762,"title":{},"body":{"license.html":{}}}],["import",{"_index":71,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["import('./demos/material",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imported",{"_index":1712,"title":{},"body":{"index.html":{}}}],["importing",{"_index":1043,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["imports",{"_index":482,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["improved",{"_index":1415,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":1406,"title":{},"body":{"changelog.html":{}}}],["inappropriate",{"_index":1566,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":1635,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":166,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["included",{"_index":1756,"title":{},"body":{"license.html":{}}}],["includelist",{"_index":791,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["includelist.includes(key",{"_index":808,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["includes",{"_index":1478,"title":{},"body":{"contributing.html":{}}}],["includetools",{"_index":715,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["including",{"_index":1738,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":1529,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":1484,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"interfaces/Block.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/Tag.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":16,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorMap.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["individual",{"_index":1045,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{},"contributing.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["information",{"_index":178,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{}}}],["init",{"_index":1144,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["initial",{"_index":122,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["initialblock",{"_index":494,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["initialized",{"_index":613,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject",{"_index":772,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["inject(editorjsinstance",{"_index":899,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["inject(ngx_editorjs_config",{"_index":900,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["injectable",{"_index":414,"title":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{}},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["injectables",{"_index":416,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"injectables/PagesStore.html":{},"overview.html":{}}}],["injected",{"_index":169,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["injecting",{"_index":515,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["injection",{"_index":120,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":72,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["injectiontoken('editior_js_instance",{"_index":518,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editor_js_tool_injector",{"_index":128,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjs_module_import",{"_index":200,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('editorjsinstance",{"_index":203,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('for_root_options_token",{"_index":516,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx_editorjs_config",{"_index":514,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('plugin_config",{"_index":130,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('pluginclasses",{"_index":135,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":201,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["injectorapicalloptions",{"_index":210,"title":{"interfaces/InjectorApiCallOptions.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["injectorapicallresponse",{"_index":213,"title":{"interfaces/InjectorApiCallResponse.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["injectormethodoption",{"_index":204,"title":{"interfaces/InjectorMethodOption.html":{}},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["inline",{"_index":81,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginInlineCodeModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{}}}],["inlinecode",{"_index":1357,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["inlinetoolbar",{"_index":115,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["input",{"_index":233,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"todo.html":{}}}],["input'},{'name",{"_index":558,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["input('disabled",{"_index":309,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('focused",{"_index":296,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('placeholder",{"_index":291,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('required",{"_index":303,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input('value",{"_index":284,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["input.component",{"_index":1105,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{}}}],["input.component.ts",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input.module",{"_index":1074,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["input.module.ts",{"_index":1104,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{}}}],["input/mat",{"_index":1073,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"miscellaneous/variables.html":{}}}],["inputconfig",{"_index":1692,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inputs",{"_index":596,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["inside",{"_index":365,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"index.html":{}}}],["install",{"_index":1474,"title":{},"body":{"contributing.html":{},"dependencies.html":{}}}],["instance",{"_index":142,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":147,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["insulting/derogatory",{"_index":1554,"title":{},"body":{"contributing.html":{}}}],["interact",{"_index":1709,"title":{},"body":{"index.html":{}}}],["interactions",{"_index":1472,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":1498,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/PagesState.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"overview.html":{}}}],["interfaces/pluginconfig.html",{"_index":798,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["internal",{"_index":191,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"miscellaneous/variables.html":{}}}],["internally",{"_index":1402,"title":{},"body":{"changelog.html":{}}}],["investigated",{"_index":1626,"title":{},"body":{"contributing.html":{}}}],["isfocused",{"_index":600,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["isready",{"_index":388,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["isready(options",{"_index":874,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["isreadymap",{"_index":197,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":1466,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":1443,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["istouched",{"_index":601,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["it's",{"_index":662,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["items",{"_index":36,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["js",{"_index":796,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["js/code",{"_index":1343,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["js/header",{"_index":1351,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["js/image",{"_index":1354,"title":{},"body":{"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["js/paragraph",{"_index":1348,"title":{},"body":{"modules/PluginEmbedModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginWarningModule.html":{}}}],["json",{"_index":554,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"dependencies.html":{}}}],["json.stringify(blocks",{"_index":1263,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["json.stringify(changes.blocks.currentvalue",{"_index":708,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["json.stringify(changes.blocks.previousvalue",{"_index":707,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["key",{"_index":17,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["keys",{"_index":631,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"miscellaneous/functions.html":{}}}],["kind",{"_index":1760,"title":{},"body":{"license.html":{}}}],["label",{"_index":102,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["language",{"_index":1530,"title":{},"body":{"contributing.html":{}}}],["last",{"_index":140,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["lastchange",{"_index":726,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["lastchange(options",{"_index":876,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["lastchangemap",{"_index":193,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["layer",{"_index":1476,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["leadership",{"_index":1648,"title":{},"body":{"contributing.html":{}}}],["legend",{"_index":443,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}],["level",{"_index":45,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"contributing.html":{}}}],["liability",{"_index":1775,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1772,"title":{},"body":{"license.html":{}}}],["lib/types/config",{"_index":399,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["libraries",{"_index":1388,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":1390,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["libs/.../blocks.ts",{"_index":1802,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../config.ts",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editor",{"_index":1684,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../editorjs",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editorjs.component.ts",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../editorjs.module.ts",{"_index":1686,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../injector.ts",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../mat",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../module",{"_index":1687,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../ngx",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../plugin.ts",{"_index":1688,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../plugins.ts",{"_index":1682,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../test.ts",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ngx",{"_index":6,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["licence",{"_index":1726,"title":{},"body":{"license.html":{}}}],["license",{"_index":1723,"title":{"license.html":{}},"body":{}}],["life",{"_index":366,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"index.html":{}}}],["lifecycle",{"_index":360,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["limitation",{"_index":1739,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1763,"title":{},"body":{"license.html":{}}}],["line:use",{"_index":359,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["link",{"_index":107,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/MockNgZone.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginLinkModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["links",{"_index":535,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{}}}],["list",{"_index":26,"title":{"interfaces/List.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginListModule.html":{},"miscellaneous/typealiases.html":{}}}],["listblock",{"_index":39,"title":{"interfaces/ListBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["listener",{"_index":369,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["listners",{"_index":656,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["liststyle",{"_index":33,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["loadchildren",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loading",{"_index":1119,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["local",{"_index":909,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["locations",{"_index":1483,"title":{},"body":{"contributing.html":{}}}],["lot",{"_index":1429,"title":{},"body":{"changelog.html":{}}}],["lt;code",{"_index":1202,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;h1",{"_index":1198,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;h6",{"_index":1199,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;img",{"_index":1204,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;li",{"_index":1201,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;ol",{"_index":1200,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["lt;p",{"_index":1196,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["m.ngxtinynodesmaterialformfielddemo",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["made",{"_index":839,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["mail",{"_index":1604,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":588,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["maintain",{"_index":1631,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":1502,"title":{},"body":{"contributing.html":{}}}],["major",{"_index":1411,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":850,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["makes",{"_index":186,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["making",{"_index":1458,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["management",{"_index":829,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["managing",{"_index":1428,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":92,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map(blocks",{"_index":1262,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["map_defaults",{"_index":192,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["map_defaults.foreach(([mapkey",{"_index":989,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["margin",{"_index":1229,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["marker",{"_index":1365,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["mat",{"_index":217,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["matbadgemodule",{"_index":567,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["matbuttonmodule",{"_index":569,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["matcardmodule",{"_index":571,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["match",{"_index":637,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["matches",{"_index":840,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["matching",{"_index":66,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":573,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{}}}],["material",{"_index":252,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["material](https://material.angular.io",{"_index":258,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["matexpansionmodule",{"_index":575,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["matformfieldcontrol",{"_index":221,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":577,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{}}}],["matgridlistmodule",{"_index":578,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["maticonmodule",{"_index":580,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{}}}],["matinputmodule",{"_index":582,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{}}}],["matlistmodule",{"_index":584,"title":{},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{}}}],["me@tane.dev",{"_index":1623,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["means",{"_index":664,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{}}}],["meantime",{"_index":1454,"title":{},"body":{"changelog.html":{}}}],["media",{"_index":1607,"title":{},"body":{"contributing.html":{}}}],["members",{"_index":1545,"title":{},"body":{"contributing.html":{}}}],["menu",{"_index":1124,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["menugroup",{"_index":1160,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["merchantability",{"_index":1765,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1492,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["merged",{"_index":1399,"title":{},"body":{"changelog.html":{}}}],["metadata",{"_index":526,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["method",{"_index":184,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["method.call(editor",{"_index":939,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methodcall",{"_index":938,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methodcall.then",{"_index":940,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["methods",{"_index":423,"title":{},"body":{"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["minheight",{"_index":495,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["minimum",{"_index":640,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["miscellaneous",{"_index":1680,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1725,"title":{},"body":{"license.html":{}}}],["mock",{"_index":420,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts",{"_index":419,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:16",{"_index":427,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:22",{"_index":429,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:26",{"_index":432,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mock.ts:30",{"_index":433,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["mockeditorjs",{"_index":384,"title":{"classes/MockEditorJS.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["mockngzone",{"_index":415,"title":{"injectables/MockNgZone.html":{}},"body":{"injectables/MockNgZone.html":{}}}],["mockplugin",{"_index":400,"title":{"classes/MockPlugin.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["modify",{"_index":1741,"title":{},"body":{"license.html":{}}}],["module",{"_index":124,"title":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}},"body":{"interfaces/BlockData.html":{},"modules/NgxEditorJSComponentModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":441,"title":{"modules.html":{}},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"modules.html":{},"overview.html":{},"todo.html":{}}}],["modulewithproviders",{"_index":468,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["monday",{"_index":1432,"title":{},"body":{"changelog.html":{}}}],["monitor",{"_index":349,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["more",{"_index":1459,"title":{},"body":{"changelog.html":{}}}],["mouseevent",{"_index":342,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ms",{"_index":623,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["multi",{"_index":257,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":1279,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["name",{"_index":104,"title":{},"body":{"interfaces/BlockData.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":211,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["nationality",{"_index":1518,"title":{},"body":{"contributing.html":{}}}],["necessary",{"_index":1628,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":667,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["needs",{"_index":636,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["new",{"_index":127,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newpage",{"_index":1322,"title":{},"body":{"injectables/PagesService.html":{}}}],["next",{"_index":358,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["nextid",{"_index":273,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ng_value_accessor",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":373,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ngcontrol",{"_index":238,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngdocheck",{"_index":379,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngmodule",{"_index":469,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{}}}],["ngonchanges",{"_index":594,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["ngonchanges(changes",{"_index":657,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngondestroy",{"_index":595,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngoninit",{"_index":361,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngrx/effects",{"_index":1667,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["ngrx/store",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":123,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["ngx_editorjs_config",{"_index":475,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjs",{"_index":562,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ngxeditorjs.hassaved",{"_index":1269,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjs.isfocused",{"_index":1268,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjs.isready",{"_index":1265,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjs.istouched",{"_index":1267,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["ngxeditorjsbasecomponent",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxeditorjscomponent",{"_index":250,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjscomponentmodule",{"_index":440,"title":{"modules/NgxEditorJSComponentModule.html":{}},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsconfig",{"_index":489,"title":{"interfaces/NgxEditorJSConfig.html":{}},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemo",{"_index":1161,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ngxeditorjsdemohomecomponent",{"_index":519,"title":{"components/NgxEditorJSDemoHomeComponent.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdemomaterialmodule",{"_index":564,"title":{"modules/NgxEditorJSDemoMaterialModule.html":{}},"body":{"modules/NgxEditorJSDemoMaterialModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemomodule",{"_index":1000,"title":{"modules/NgxEditorjsDemoModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsdemoroutes",{"_index":1015,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsdirective",{"_index":245,"title":{"directives/NgxEditorJSDirective.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"overview.html":{}}}],["ngxeditorjsdirective::ngaftercontentinit",{"_index":722,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["ngxeditorjsinstanceservice",{"_index":1711,"title":{},"body":{"index.html":{}}}],["ngxeditorjsmaterialfieldcomponent",{"_index":1706,"title":{},"body":{"index.html":{}}}],["ngxeditorjsmatfieldcomponent",{"_index":256,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxeditorjsmatfieldcomponent.nextid",{"_index":325,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ngxeditorjsmatfieldmodule",{"_index":743,"title":{"modules/NgxEditorJSMatFieldModule.html":{}},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsmodule",{"_index":755,"title":{"modules/NgxEditorJSModule.html":{}},"body":{"modules/NgxEditorJSModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsmodule.forroot",{"_index":512,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{}}}],["ngxeditorjsmoduleconfig",{"_index":391,"title":{"interfaces/NgxEditorJSModuleConfig.html":{}},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["ngxeditorjspluginservice",{"_index":768,"title":{"injectables/NgxEditorJSPluginService.html":{}},"body":{"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["ngxeditorjspluginservicemodule",{"_index":820,"title":{"modules/NgxEditorJSPluginServiceModule.html":{}},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjspluginsmodule",{"_index":1006,"title":{"modules/NgxEditorjsPluginsModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxeditorjsservice",{"_index":248,"title":{"injectables/NgxEditorJSService.html":{}},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"index.html":{},"overview.html":{}}}],["ngxjsonviewermodule",{"_index":1021,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["ngxtinynodescomponentsmodule",{"_index":1064,"title":{"modules/NgxTinynodesComponentsModule.html":{}},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodescoremodule",{"_index":1018,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["ngxtinynodesmaterialformfielddemo",{"_index":1107,"title":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodesmaterialformfielddemocomponent",{"_index":550,"title":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{}}}],["ngxtinynodesmatfieldcomponent",{"_index":1077,"title":{"interfaces/NgxTinynodesMatFieldComponent.html":{}},"body":{"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["ngxtinynodesmatjsonoutputcomponent",{"_index":553,"title":{"components/NgxTinynodesMatJsonOutputComponent.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{}}}],["ngxtinynodesmatjsonoutputmodule",{"_index":1068,"title":{"modules/NgxTinynodesMatJsonOutputModule.html":{}},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxtinynodesmattaginputcomponent",{"_index":556,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["ngxtinynodesmattaginputmodule",{"_index":1069,"title":{"modules/NgxTinynodesMatTagInputModule.html":{}},"body":{"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules.html":{},"overview.html":{}}}],["ngzone",{"_index":421,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSService.html":{}}}],["noninfringement",{"_index":1769,"title":{},"body":{"license.html":{}}}],["note",{"_index":1469,"title":{},"body":{"contributing.html":{}}}],["notice",{"_index":1754,"title":{},"body":{"license.html":{}}}],["now",{"_index":1186,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["npm",{"_index":1704,"title":{},"body":{"index.html":{}}}],["nrwl/nx",{"_index":1446,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":363,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["number",{"_index":48,"title":{},"body":{"interfaces/Block.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["numbers",{"_index":1485,"title":{},"body":{"contributing.html":{}}}],["nx",{"_index":1722,"title":{},"body":{"index.html":{}}}],["object",{"_index":97,"title":{},"body":{"interfaces/BlockData.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["object.entries(this.getpluginswithexclude(excludetools)).reduce",{"_index":810,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.entries(this.pluginconfigmap",{"_index":803,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["object.keys(changes",{"_index":712,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["object.keys(this.editormap).foreach(holder",{"_index":980,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["objects",{"_index":1698,"title":{},"body":{"miscellaneous/functions.html":{}}}],["obligated",{"_index":1630,"title":{},"body":{"contributing.html":{}}}],["observable",{"_index":675,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["obtaining",{"_index":1732,"title":{},"body":{"license.html":{}}}],["of(response",{"_index":950,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["offensive",{"_index":1595,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":1602,"title":{},"body":{"contributing.html":{}}}],["officially",{"_index":1450,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1613,"title":{},"body":{"contributing.html":{}}}],["once",{"_index":833,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["onchange",{"_index":187,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["onchanges",{"_index":591,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["onclick",{"_index":691,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["oncontainerclick(event",{"_index":343,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["ondestroy",{"_index":234,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["ones",{"_index":1718,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":235,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{}}}],["online",{"_index":1612,"title":{},"body":{"contributing.html":{}}}],["onready",{"_index":189,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{}}}],["onstable",{"_index":422,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["open",{"_index":1179,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"contributing.html":{}}}],["option",{"_index":205,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"todo.html":{}}}],["optional",{"_index":52,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":883,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options",{"_index":161,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"todo.html":{}}}],["options.config",{"_index":905,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data",{"_index":952,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data.blocks",{"_index":957,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data.time",{"_index":953,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.data.version",{"_index":954,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.holder",{"_index":943,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.method",{"_index":937,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.namespace",{"_index":933,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["options.skipsave",{"_index":949,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["ordered",{"_index":29,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["orientation",{"_index":1524,"title":{},"body":{"contributing.html":{}}}],["others",{"_index":1559,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":908,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{},"license.html":{}}}],["out",{"_index":455,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":500,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["output'},{'name",{"_index":555,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["output.component",{"_index":1097,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["output.component.html",{"_index":1083,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts",{"_index":1082,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:11",{"_index":1088,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:14",{"_index":1087,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:19",{"_index":1090,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.component.ts:23",{"_index":1089,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["output.module",{"_index":1076,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{}}}],["output.module.ts",{"_index":1096,"title":{},"body":{"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["output/mat",{"_index":1075,"title":{},"body":{"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{}}}],["outputdata",{"_index":144,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["outputs",{"_index":597,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["outside",{"_index":830,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["over",{"_index":1416,"title":{},"body":{"changelog.html":{}}}],["overall",{"_index":1384,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":1225,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["override",{"_index":1145,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["overview",{"_index":1785,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":1468,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1435,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["page",{"_index":560,"title":{"interfaces/Page.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Tag.html":{},"todo.html":{}}}],["page.id",{"_index":1324,"title":{},"body":{"injectables/PagesService.html":{}}}],["pageblock",{"_index":1233,"title":{"interfaces/PageBlock.html":{}},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagecontainercomponent",{"_index":559,"title":{"components/PageContainerComponent.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pageeditor",{"_index":1153,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["pageid",{"_index":1303,"title":{},"body":{"injectables/PagesService.html":{}}}],["pagename",{"_index":1151,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["pages",{"_index":1131,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.models",{"_index":1287,"title":{},"body":{"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pages.query",{"_index":1280,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesService.html":{}}}],["pages.service",{"_index":1281,"title":{},"body":{"modules/PageStoreModule.html":{}}}],["pages.store",{"_index":1282,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{}}}],["pagesquery",{"_index":1272,"title":{"injectables/PagesQuery.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"overview.html":{}}}],["pagesservice",{"_index":1126,"title":{"injectables/PagesService.html":{}},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesService.html":{},"overview.html":{}}}],["pagesstate",{"_index":1288,"title":{"interfaces/PagesState.html":{}},"body":{"injectables/PagesQuery.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["pagesstore",{"_index":1273,"title":{"injectables/PagesStore.html":{}},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"overview.html":{}}}],["pagestoremodule",{"_index":1005,"title":{"modules/PageStoreModule.html":{}},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["pagetags",{"_index":1152,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["pagetitle",{"_index":1232,"title":{},"body":{"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{}}}],["panel",{"_index":1210,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["paragraph",{"_index":41,"title":{"interfaces/Paragraph.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{}}}],["paragraphblock",{"_index":43,"title":{"interfaces/ParagraphBlock.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":283,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["parameter",{"_index":1137,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["parameters",{"_index":393,"title":{},"body":{"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["parentmodule",{"_index":487,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["parse",{"_index":177,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{}}}],["participants",{"_index":1547,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":1503,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":1767,"title":{},"body":{"license.html":{}}}],["pass",{"_index":109,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["passed",{"_index":511,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/functions.html":{}}}],["paste",{"_index":1203,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["patches",{"_index":618,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["path",{"_index":1115,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"miscellaneous/variables.html":{}}}],["paths",{"_index":661,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["peer",{"_index":1799,"title":{},"body":{"todo.html":{}}}],["per",{"_index":133,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["permanent",{"_index":1644,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":1590,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":1495,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["permit",{"_index":1748,"title":{},"body":{"license.html":{}}}],["person",{"_index":1731,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1519,"title":{},"body":{"contributing.html":{}}}],["persons",{"_index":1749,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1560,"title":{},"body":{"contributing.html":{}}}],["pipe",{"_index":944,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["pipe(take(1",{"_index":974,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["pipe(takeuntil(this.ondestroy",{"_index":376,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["pipeline",{"_index":1792,"title":{},"body":{"todo.html":{}}}],["piper",{"_index":1720,"title":{},"body":{"index.html":{},"license.html":{}}}],["placeholder",{"_index":287,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["placeholder(placeholder",{"_index":292,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["please",{"_index":1463,"title":{},"body":{"contributing.html":{}}}],["pledge",{"_index":1497,"title":{},"body":{"contributing.html":{}}}],["pluck",{"_index":1162,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["pluck('blocks",{"_index":1255,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["plug",{"_index":1042,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugin",{"_index":38,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["plugin.config",{"_index":818,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.inlinetoolbar",{"_index":816,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.plugin",{"_index":812,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.shortcut",{"_index":813,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin.type",{"_index":815,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["plugin_config",{"_index":129,"title":{},"body":{"interfaces/BlockData.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["pluginclasses",{"_index":134,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginSimpleImageModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["plugincodemodule",{"_index":1027,"title":{"modules/PluginCodeModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginconfig",{"_index":98,"title":{"interfaces/PluginConfig.html":{}},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["pluginconfigmap",{"_index":132,"title":{"interfaces/PluginConfigMap.html":{}},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["pluginconfigs",{"_index":1697,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pluginembedmodule",{"_index":1028,"title":{"modules/PluginEmbedModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginEmbedModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginheadermodule",{"_index":1029,"title":{"modules/PluginHeaderModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginHeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginimagemodule",{"_index":1030,"title":{"modules/PluginImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginImageModule.html":{},"modules.html":{},"overview.html":{}}}],["plugininlinecodemodule",{"_index":1031,"title":{"modules/PluginInlineCodeModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginlinkmodule",{"_index":1032,"title":{"modules/PluginLinkModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginLinkModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginlistmodule",{"_index":1033,"title":{"modules/PluginListModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginListModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginmap",{"_index":807,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["pluginmarkermodule",{"_index":1034,"title":{"modules/PluginMarkerModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginMarkerModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginname",{"_index":105,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["pluginparagraphmodule",{"_index":1035,"title":{"modules/PluginParagraphModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginParagraphModule.html":{},"modules.html":{},"overview.html":{}}}],["pluginproperty",{"_index":88,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["pluginquotemodule",{"_index":1036,"title":{"modules/PluginQuoteModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginQuoteModule.html":{},"modules.html":{},"overview.html":{}}}],["plugins",{"_index":78,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["plugins.module.ts",{"_index":1040,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/code/code.module",{"_index":1046,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/embed/embed.module",{"_index":1047,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/header/header.module",{"_index":1048,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/image/image.module",{"_index":1049,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/inline",{"_index":1050,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/link/link.module",{"_index":1053,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/list/list.module",{"_index":1054,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/marker/marker.module",{"_index":1055,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/paragraph/paragraph.module",{"_index":1056,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/quote/quote.module",{"_index":1057,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/simple",{"_index":1058,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/ngx",{"_index":1039,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins/src/lib/plugins/code/code.module.ts",{"_index":1337,"title":{},"body":{"modules/PluginCodeModule.html":{}}}],["plugins/src/lib/plugins/embed/embed.module.ts",{"_index":1345,"title":{},"body":{"modules/PluginEmbedModule.html":{}}}],["plugins/src/lib/plugins/header/header.module.ts",{"_index":1349,"title":{},"body":{"modules/PluginHeaderModule.html":{}}}],["plugins/src/lib/plugins/image/image.module.ts",{"_index":1352,"title":{},"body":{"modules/PluginImageModule.html":{}}}],["plugins/src/lib/plugins/inline",{"_index":1355,"title":{},"body":{"modules/PluginInlineCodeModule.html":{}}}],["plugins/src/lib/plugins/link/link.module.ts",{"_index":1360,"title":{},"body":{"modules/PluginLinkModule.html":{}}}],["plugins/src/lib/plugins/list/list.module.ts",{"_index":1362,"title":{},"body":{"modules/PluginListModule.html":{}}}],["plugins/src/lib/plugins/marker/marker.module.ts",{"_index":1364,"title":{},"body":{"modules/PluginMarkerModule.html":{}}}],["plugins/src/lib/plugins/paragraph/paragraph.module.ts",{"_index":1368,"title":{},"body":{"modules/PluginParagraphModule.html":{}}}],["plugins/src/lib/plugins/quote/quote.module.ts",{"_index":1369,"title":{},"body":{"modules/PluginQuoteModule.html":{}}}],["plugins/src/lib/plugins/simple",{"_index":1372,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["plugins/src/lib/plugins/warning/warning.module.ts",{"_index":1376,"title":{},"body":{"modules/PluginWarningModule.html":{}}}],["plugins/src/lib/services/plugin",{"_index":769,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{}}}],["plugins/src/lib/types/plugins.ts",{"_index":69,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["plugins/src/lib/types/plugins.ts:107",{"_index":1344,"title":{},"body":{"interfaces/PluginConfigMap.html":{}}}],["plugins/src/lib/types/plugins.ts:43",{"_index":1380,"title":{},"body":{"interfaces/ToolSettingsMap.html":{}}}],["plugins/src/lib/types/plugins.ts:7",{"_index":70,"title":{},"body":{"interfaces/BlockData.html":{}}}],["plugins/src/lib/util/plugin.ts",{"_index":1695,"title":{},"body":{"miscellaneous/functions.html":{}}}],["plugins/warning/warning.module",{"_index":1061,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["plugins@2.0.0",{"_index":1395,"title":{},"body":{"changelog.html":{}}}],["pluginsimpleimagemodule",{"_index":1037,"title":{"modules/PluginSimpleImageModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules.html":{},"overview.html":{}}}],["plugintype",{"_index":85,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["plugintypes",{"_index":83,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{}}}],["plugintypes.block",{"_index":86,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["plugintypes.inline",{"_index":87,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginMarkerModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["pluginwarningmodule",{"_index":1038,"title":{"modules/PluginWarningModule.html":{}},"body":{"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginWarningModule.html":{},"modules.html":{},"overview.html":{}}}],["pointing",{"_index":1206,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["policies",{"_index":1637,"title":{},"body":{"contributing.html":{}}}],["political",{"_index":1556,"title":{},"body":{"contributing.html":{}}}],["portions",{"_index":1758,"title":{},"body":{"license.html":{}}}],["ports",{"_index":1482,"title":{},"body":{"contributing.html":{}}}],["positive",{"_index":1528,"title":{},"body":{"contributing.html":{}}}],["possible",{"_index":1044,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["posted",{"_index":1638,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":1605,"title":{},"body":{"contributing.html":{}}}],["private",{"_index":288,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"contributing.html":{},"index.html":{}}}],["process",{"_index":666,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["professional",{"_index":1567,"title":{},"body":{"contributing.html":{}}}],["project",{"_index":1401,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["project's",{"_index":1647,"title":{},"body":{"contributing.html":{}}}],["promise",{"_index":396,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["promise.resolve",{"_index":407,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["properties",{"_index":14,"title":{},"body":{"interfaces/Block.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/Tag.html":{},"index.html":{}}}],["property",{"_index":55,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["protected",{"_index":354,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{}}}],["provide",{"_index":254,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":37,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":799,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["provider",{"_index":100,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":268,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"overview.html":{}}}],["provides",{"_index":175,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"index.html":{}}}],["providing",{"_index":542,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["provied",{"_index":513,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":274,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"contributing.html":{}}}],["publish",{"_index":1742,"title":{},"body":{"license.html":{},"todo.html":{}}}],["publishing",{"_index":1558,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["pull",{"_index":1473,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":1768,"title":{},"body":{"license.html":{}}}],["query",{"_index":1292,"title":{},"body":{"injectables/PagesService.html":{}}}],["queryentity",{"_index":1284,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["quote",{"_index":1370,"title":{},"body":{"modules/PluginQuoteModule.html":{}}}],["r",{"_index":941,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["race",{"_index":1521,"title":{},"body":{"contributing.html":{}}}],["re",{"_index":1397,"title":{},"body":{"changelog.html":{}}}],["reactive",{"_index":1187,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"index.html":{}}}],["reactiveformsmodule",{"_index":1009,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["read",{"_index":319,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/PageContainerComponent.html":{}}}],["readme",{"_index":1715,"title":{},"body":{"index.html":{}}}],["readme.md",{"_index":1477,"title":{},"body":{"contributing.html":{}}}],["readonly",{"_index":320,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["ready",{"_index":150,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["readymap",{"_index":152,"title":{"interfaces/ReadyMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["reasonably",{"_index":1564,"title":{},"body":{"contributing.html":{}}}],["reduce((pluginmap",{"_index":806,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["ref",{"_index":352,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["reflect",{"_index":1420,"title":{},"body":{"changelog.html":{}}}],["regard",{"_index":1633,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":1509,"title":{},"body":{"contributing.html":{}}}],["regular",{"_index":1218,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["reject",{"_index":1582,"title":{},"body":{"contributing.html":{}}}],["related",{"_index":714,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"changelog.html":{}}}],["release",{"_index":1417,"title":{},"body":{"changelog.html":{}}}],["released",{"_index":1394,"title":{},"body":{"changelog.html":{}}}],["religion",{"_index":1522,"title":{},"body":{"contributing.html":{}}}],["remark",{"_index":901,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["remarks",{"_index":927,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["remove",{"_index":1580,"title":{},"body":{"contributing.html":{}}}],["removeblock",{"_index":1294,"title":{},"body":{"injectables/PagesService.html":{}}}],["removeblock(pageid",{"_index":1308,"title":{},"body":{"injectables/PagesService.html":{}}}],["removed",{"_index":1307,"title":{},"body":{"injectables/PagesService.html":{},"changelog.html":{},"contributing.html":{}}}],["removes",{"_index":1306,"title":{},"body":{"injectables/PagesService.html":{}}}],["render",{"_index":401,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"injectables/PagesService.html":{}}}],["repercussions",{"_index":1645,"title":{},"body":{"contributing.html":{}}}],["repo",{"_index":1339,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"todo.html":{}}}],["repo](https://github.com/editor",{"_index":1342,"title":{},"body":{"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}}}],["report",{"_index":1439,"title":{},"body":{"changelog.html":{}}}],["reported",{"_index":1620,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":1634,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":1462,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":1488,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":1614,"title":{},"body":{"contributing.html":{}}}],["representative",{"_index":1611,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":1601,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":982,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["requied",{"_index":302,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["require",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require.context",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":182,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"index.html":{}}}],["required(required",{"_index":304,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["reset",{"_index":454,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}],["resetting",{"_index":887,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["resolved",{"_index":929,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{}}}],["respectful",{"_index":1532,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":212,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["responsibilities",{"_index":1569,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":1579,"title":{},"body":{"contributing.html":{}}}],["responsible",{"_index":1570,"title":{},"body":{"contributing.html":{}}}],["restriction",{"_index":1737,"title":{},"body":{"license.html":{}}}],["result",{"_index":65,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":67,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":281,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["returning",{"_index":1691,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":171,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["reviewed",{"_index":1625,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":1496,"title":{},"body":{"contributing.html":{}}}],["right",{"_index":1578,"title":{},"body":{"contributing.html":{}}}],["rights",{"_index":1740,"title":{},"body":{"license.html":{}}}],["root",{"_index":463,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{}}}],["routable",{"_index":1118,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["route",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":1010,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["routermodule.forchild(ngxeditorjsdemoroutes",{"_index":1023,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{}}}],["routermodule.forchild(routes",{"_index":1116,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["routes",{"_index":1114,"title":{},"body":{"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["run",{"_index":424,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSService.html":{},"index.html":{}}}],["run(fn",{"_index":428,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular",{"_index":425,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["runoutsideangular(fn",{"_index":431,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["rxjs",{"_index":145,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":244,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["sanitizer",{"_index":496,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["sanitizerconfig",{"_index":510,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["save",{"_index":141,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"todo.html":{}}}],["save(options",{"_index":878,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["saved",{"_index":646,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["savedmap",{"_index":153,"title":{"interfaces/SavedMap.html":{}},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorMap.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["saver",{"_index":389,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"injectables/NgxEditorJSService.html":{}}}],["saving",{"_index":1208,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["scheme",{"_index":1490,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1597,"title":{},"body":{"contributing.html":{}}}],["scripts",{"_index":1451,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":1226,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["searchable",{"_index":1702,"title":{},"body":{"index.html":{}}}],["second",{"_index":855,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["seconds",{"_index":1184,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["section",{"_index":537,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["see",{"_index":1211,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"changelog.html":{},"index.html":{}}}],["selection",{"_index":1798,"title":{},"body":{"todo.html":{}}}],["selector",{"_index":263,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["self",{"_index":236,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["sell",{"_index":1746,"title":{},"body":{"license.html":{}}}],["semver",{"_index":1491,"title":{},"body":{"contributing.html":{}}}],["separately",{"_index":1639,"title":{},"body":{"contributing.html":{}}}],["service",{"_index":604,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{}}}],["service.module",{"_index":1063,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["service.module.ts",{"_index":823,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{}}}],["service.service",{"_index":826,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{}}}],["service.service.ts",{"_index":770,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:13",{"_index":779,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:23",{"_index":782,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:32",{"_index":781,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:40",{"_index":785,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:54",{"_index":790,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.service.ts:68",{"_index":793,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["service.ts",{"_index":160,"title":{},"body":{"interfaces/CreateEditorJSOptions.html":{}}}],["services",{"_index":590,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"index.html":{}}}],["services/editorjs.service",{"_index":249,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{}}}],["services/plugin",{"_index":1062,"title":{},"body":{"modules/NgxEditorjsPluginsModule.html":{}}}],["set",{"_index":111,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSMaterialForm.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["setblocks",{"_index":1295,"title":{},"body":{"injectables/PagesService.html":{}}}],["setblocks(pageid",{"_index":1310,"title":{},"body":{"injectables/PagesService.html":{}}}],["setdescribedbyids(ids",{"_index":337,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["sets",{"_index":465,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["setting",{"_index":1568,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["settings",{"_index":90,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["setup",{"_index":836,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["setupsubjects(options",{"_index":988,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["several",{"_index":834,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"changelog.html":{}}}],["sexual",{"_index":1523,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1548,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":1755,"title":{},"body":{"license.html":{}}}],["ships",{"_index":1717,"title":{},"body":{"index.html":{}}}],["shortcut",{"_index":106,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginMarkerModule.html":{},"interfaces/ToolSettingsMap.html":{}}}],["shouldlabelfloat",{"_index":329,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["show",{"_index":633,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["showing",{"_index":1542,"title":{},"body":{"contributing.html":{}}}],["shown",{"_index":503,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["shows",{"_index":541,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{}}}],["sign",{"_index":1493,"title":{},"body":{"contributing.html":{}}}],["simple",{"_index":1375,"title":{},"body":{"modules/PluginSimpleImageModule.html":{}}}],["simplechanges",{"_index":658,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["simpleimage",{"_index":1205,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginSimpleImageModule.html":{}}}],["simulatezoneexit",{"_index":426,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["single",{"_index":220,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["site",{"_index":1385,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["size",{"_index":1512,"title":{},"body":{"contributing.html":{}}}],["skipsave",{"_index":207,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["skipself",{"_index":470,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{}}}],["small",{"_index":1457,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":1606,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":1734,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSDemoMaterialModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{}}}],["spaces",{"_index":1600,"title":{},"body":{"contributing.html":{}}}],["spec\\.ts",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":1636,"title":{},"body":{"contributing.html":{}}}],["specifies",{"_index":99,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["standards",{"_index":1525,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":1194,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["started",{"_index":1382,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["state",{"_index":151,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{}}}],["statechanges",{"_index":275,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["states",{"_index":897,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["static",{"_index":172,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"components/PageContainerComponent.html":{}}}],["still",{"_index":1188,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["store",{"_index":1277,"title":{},"body":{"modules/PageStoreModule.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"todo.html":{}}}],["store/pages/pages.models",{"_index":1253,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["store/pages/pages.module",{"_index":1017,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{}}}],["store/pages/pages.service",{"_index":1163,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["storeconfig",{"_index":1335,"title":{},"body":{"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["stretch",{"_index":60,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["stretched",{"_index":61,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/ChangeMap.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/EditorMap.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":35,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["styles",{"_index":27,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":266,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["subject",{"_index":242,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"license.html":{}}}],["subjects",{"_index":672,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["sublicense",{"_index":1744,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":371,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["subscribe(change",{"_index":727,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscribe(data",{"_index":1177,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["subscribe(editor",{"_index":975,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["subscribe(focused",{"_index":377,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["subscribe(haschanged",{"_index":1166,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["subscribe(isready",{"_index":724,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscribe(saved",{"_index":729,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["subscriptions",{"_index":866,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["substantial",{"_index":1757,"title":{},"body":{"license.html":{}}}],["such",{"_index":852,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"contributing.html":{}}}],["sunday",{"_index":1436,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":346,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/MockNgZone.html":{},"interfaces/PagesState.html":{},"injectables/PagesStore.html":{}}}],["super(editorservice",{"_index":355,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["super(store",{"_index":1290,"title":{},"body":{"injectables/PagesQuery.html":{}}}],["support",{"_index":114,"title":{},"body":{"interfaces/BlockData.html":{},"modules/PageStoreModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"index.html":{},"modules.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["supported",{"_index":79,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["supports",{"_index":28,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["svg",{"_index":1782,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":890,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["switchmap((data",{"_index":1259,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["switchmap(async",{"_index":932,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["switchmap(response",{"_index":948,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["t",{"_index":22,"title":{},"body":{"interfaces/Block.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["tag",{"_index":557,"title":{"interfaces/Tag.html":{}},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxTinynodesComponentsModule.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"interfaces/Tag.html":{},"miscellaneous/variables.html":{}}}],["tag_component_field_control",{"_index":1103,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tag_component_value_accessor",{"_index":1102,"title":{},"body":{"modules/NgxTinynodesMatTagInputModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tags",{"_index":1190,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"todo.html":{}}}],["take",{"_index":891,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"contributing.html":{}}}],["take(1",{"_index":931,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["takes",{"_index":762,"title":{},"body":{"modules/NgxEditorJSModule.html":{}}}],["takeuntil",{"_index":243,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["takeuntil(this.ondestroy",{"_index":1165,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["tane",{"_index":1719,"title":{},"body":{"index.html":{},"license.html":{}}}],["tap",{"_index":892,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/PageContainerComponent.html":{}}}],["tap((response",{"_index":945,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["team",{"_index":1622,"title":{},"body":{"contributing.html":{}}}],["template",{"_index":520,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["templateurl",{"_index":264,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["temporarily",{"_index":1589,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":1643,"title":{},"body":{"contributing.html":{}}}],["test",{"_index":405,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["text",{"_index":42,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["this._disabled",{"_index":308,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._empty",{"_index":314,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._focused",{"_index":295,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._placeholder",{"_index":290,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._required",{"_index":301,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this._value",{"_index":282,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.apicall",{"_index":942,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.app",{"_index":1175,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.autofocus",{"_index":735,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.autosave",{"_index":703,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.autosave$.asobservable",{"_index":1169,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.autosave$.next(0",{"_index":1172,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.autosave$.next(autosavetime",{"_index":1171,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.blockplaceholder",{"_index":738,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks",{"_index":409,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{}}}],["this.blocks.length",{"_index":741,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.blocks.pipe",{"_index":1261,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.cd.markforcheck",{"_index":694,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.cleanupsubjects",{"_index":979,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.config.editorjs",{"_index":904,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createeditor(this.createconfig",{"_index":718,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.createonchange.call(this",{"_index":912,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.createonready.call(this",{"_index":916,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.describedby",{"_index":338,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.destroy",{"_index":408,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["this.destroyinstance",{"_index":981,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorform.patchvalue",{"_index":1168,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.editorform.reset",{"_index":1174,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.editorjs",{"_index":955,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorjs(editorconfig",{"_index":918,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorjs.version",{"_index":956,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder",{"_index":922,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[holder].next(editor",{"_index":923,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[options.holder",{"_index":959,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[options.holder].complete",{"_index":998,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editormap[options.holder].pipe(filter(editor",{"_index":961,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.editorservice",{"_index":698,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.editorservice.clear",{"_index":1257,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editorservice.lastchange",{"_index":1254,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.editorservice.save",{"_index":1173,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.editorservice.update",{"_index":1260,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.el.nativeelement",{"_index":697,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.el.nativeelement.id",{"_index":719,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.empty",{"_index":331,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.errorstate",{"_index":380,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.excludetools",{"_index":702,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.expand",{"_index":1091,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["this.fb.group",{"_index":1150,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.focused",{"_index":330,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.geteditor(options",{"_index":973,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.geteditor(options).pipe",{"_index":930,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.getfocusmonitor(this.editorinstance.element",{"_index":375,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.gettools(options.excludetools",{"_index":906,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.haschanged.emit(change",{"_index":728,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.hassaved.next(saved",{"_index":730,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.hassavedmap[options.holder",{"_index":971,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hassavedmap[options.holder].asobservable",{"_index":972,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hassavedmap[options.holder].next(true",{"_index":946,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.hidetoolbar",{"_index":736,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.holder",{"_index":710,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.id",{"_index":696,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.initialblock",{"_index":737,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.isready",{"_index":406,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["this.isready.emit(isready",{"_index":725,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.isreadymap[holder].next(true",{"_index":925,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder",{"_index":962,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].asobservable",{"_index":963,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].next(true",{"_index":987,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.isreadymap[options.holder].value",{"_index":986,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.istouched.emit(true",{"_index":693,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.lastchangemap[options.holder",{"_index":964,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.lastchangemap[options.holder].next(change",{"_index":984,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.lastchangemap[options.holder].next(response.result",{"_index":947,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.lastchangemap[options.holder].pipe",{"_index":965,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.menu",{"_index":1170,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.menu$.next(data.links",{"_index":1178,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.minheight",{"_index":739,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.ngcontrol",{"_index":362,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.invalid",{"_index":381,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.touched",{"_index":382,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ngcontrol.valueaccessor",{"_index":364,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ondestroy$.complete",{"_index":732,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.ondestroy$.next(true",{"_index":731,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["this.onstable.emit(null",{"_index":437,"title":{},"body":{"injectables/MockNgZone.html":{}}}],["this.ontouch",{"_index":299,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.ontouch(event",{"_index":344,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.pages",{"_index":1320,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.pagesservice.pages",{"_index":1256,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["this.pluginconfigmap",{"_index":801,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.pluginconfigmap[key",{"_index":802,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["this.plugins.gettools(excludetools",{"_index":999,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.query.selectall",{"_index":1321,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.ref.tick",{"_index":926,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.reset",{"_index":1182,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["this.sanitizer",{"_index":740,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.save(options",{"_index":951,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.saver",{"_index":411,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["this.service",{"_index":723,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.createinstance",{"_index":701,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.destroyinstance",{"_index":733,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.geteditor",{"_index":695,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.service.update",{"_index":709,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.setupservicesubscriptions",{"_index":374,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.setupsubjects",{"_index":921,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.statechanges.next",{"_index":286,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["this.store.add(newpage",{"_index":1323,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.remove(pageid",{"_index":1326,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.update(pageid",{"_index":1327,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.store.upsert(page.id",{"_index":1325,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.touched$.asobservable",{"_index":699,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.touched$.next(true",{"_index":692,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["this.update",{"_index":1180,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["this.version",{"_index":404,"title":{},"body":{"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{}}}],["this.zone.run",{"_index":978,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.run(async",{"_index":920,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.runoutsideangular",{"_index":976,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this.zone.runoutsideangular(async",{"_index":917,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder",{"_index":990,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder].complete",{"_index":996,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["this[mapkey][options.holder].next(value",{"_index":992,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["threatening",{"_index":1594,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":720,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{}}}],["tick",{"_index":846,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["tidy",{"_index":1403,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":157,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"miscellaneous/variables.html":{}}}],["timer",{"_index":615,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["tinynode",{"_index":1703,"title":{},"body":{"index.html":{}}}],["tinynodes",{"_index":551,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"interfaces/NgxTinynodesMatFieldComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["tinynodes/ngx",{"_index":531,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{},"interfaces/Tag.html":{},"changelog.html":{},"index.html":{}}}],["title",{"_index":1123,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["today",{"_index":1392,"title":{},"body":{"changelog.html":{}}}],["todo",{"_index":1789,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["todos",{"_index":1790,"title":{},"body":{"todo.html":{}}}],["toggleexpand",{"_index":1084,"title":{},"body":{"components/NgxTinynodesMatJsonOutputComponent.html":{}}}],["token",{"_index":121,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":89,"title":{},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["tool.config",{"_index":819,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["tool.inlinetoolbar",{"_index":817,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["tool.shortcut",{"_index":814,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{}}}],["toolbar",{"_index":501,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{}}}],["toolbaropen",{"_index":898,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["toolconstructable",{"_index":75,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["tools",{"_index":93,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"modules/NgxEditorjsPluginsModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["toolsettings",{"_index":74,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/typealiases.html":{}}}],["toolsettingsmap",{"_index":94,"title":{"interfaces/ToolSettingsMap.html":{}},"body":{"interfaces/BlockData.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{}}}],["tort",{"_index":1778,"title":{},"body":{"license.html":{}}}],["touched",{"_index":605,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/PageContainerComponent.html":{}}}],["towards",{"_index":1544,"title":{},"body":{"contributing.html":{}}}],["tree",{"_index":522,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["trigger",{"_index":370,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{}}}],["triggered",{"_index":832,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["trolling",{"_index":1553,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":112,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["tslint:disable",{"_index":357,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["two",{"_index":660,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"contributing.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/Block.html":{},"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"modules/NgxEditorJSComponentModule.html":{},"interfaces/NgxEditorJSConfig.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"interfaces/Page.html":{},"interfaces/PageBlock.html":{},"components/PageContainerComponent.html":{},"injectables/PagesQuery.html":{},"injectables/PagesService.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"modules/PluginCodeModule.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{},"interfaces/Tag.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1800,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":195,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":77,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["types/blocks",{"_index":685,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["types/config",{"_index":476,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/editorjs",{"_index":893,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/injector",{"_index":477,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"injectables/NgxEditorJSService.html":{}}}],["types/maps",{"_index":894,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["types/plugins",{"_index":794,"title":{},"body":{"injectables/NgxEditorJSPluginService.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}}}],["typescript",{"_index":176,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["typing",{"_index":1195,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["unacceptable",{"_index":1546,"title":{},"body":{"contributing.html":{}}}],["undefined",{"_index":119,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1389,"title":{},"body":{"changelog.html":{}}}],["underlying",{"_index":317,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"index.html":{}}}],["underneath",{"_index":1710,"title":{},"body":{"index.html":{}}}],["unique",{"_index":324,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["unlike",{"_index":928,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["unordered",{"_index":30,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{},"miscellaneous/typealiases.html":{}}}],["unreleased",{"_index":1391,"title":{},"body":{"changelog.html":{}}}],["unsubscribe",{"_index":372,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["until",{"_index":1453,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1550,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":368,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"changelog.html":{}}}],["update",{"_index":837,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"contributing.html":{}}}],["update(data",{"_index":1148,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["update(options",{"_index":881,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["updated",{"_index":663,"title":{},"body":{"directives/NgxEditorJSDirective.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"injectables/PagesService.html":{},"changelog.html":{}}}],["updates",{"_index":1217,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"injectables/PagesService.html":{}}}],["upgraded",{"_index":1419,"title":{},"body":{"changelog.html":{}}}],["upsert",{"_index":1296,"title":{},"body":{"injectables/PagesService.html":{}}}],["upsert(page",{"_index":1312,"title":{},"body":{"injectables/PagesService.html":{}}}],["url",{"_index":51,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["usage",{"_index":1708,"title":{},"body":{"index.html":{}}}],["use",{"_index":101,"title":{},"body":{"interfaces/BlockData.html":{},"modules/NgxEditorJSComponentModule.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":116,"title":{},"body":{"interfaces/BlockData.html":{},"interfaces/CreateEditorJSOptions.html":{},"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"index.html":{}}}],["useexisting",{"_index":255,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":484,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{}}}],["useful",{"_index":884,"title":{},"body":{"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{}}}],["userplugins",{"_index":638,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["uses",{"_index":902,"title":{},"body":{"injectables/NgxEditorJSService.html":{}}}],["usevalue",{"_index":483,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginEmbedModule.html":{},"modules/PluginHeaderModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginInlineCodeModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginParagraphModule.html":{},"modules/PluginQuoteModule.html":{},"modules/PluginSimpleImageModule.html":{},"modules/PluginWarningModule.html":{}}}],["using",{"_index":751,"title":{},"body":{"modules/NgxEditorJSMatFieldModule.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{},"index.html":{}}}],["util/plugin",{"_index":825,"title":{},"body":{"modules/NgxEditorJSPluginServiceModule.html":{},"modules/PluginCodeModule.html":{},"modules/PluginImageModule.html":{},"modules/PluginLinkModule.html":{},"modules/PluginListModule.html":{},"modules/PluginMarkerModule.html":{},"modules/PluginSimpleImageModule.html":{}}}],["value",{"_index":280,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"injectables/MockNgZone.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value(value",{"_index":285,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["values",{"_index":149,"title":{},"body":{"interfaces/ChangeMap.html":{},"interfaces/EditorJSChange.html":{},"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorMap.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"interfaces/ReadyMap.html":{},"interfaces/SavedMap.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":545,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["variables",{"_index":1480,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":173,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["versioning",{"_index":1489,"title":{},"body":{"contributing.html":{}}}],["via",{"_index":84,"title":{},"body":{"interfaces/BlockData.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSPluginService.html":{},"injectables/PagesService.html":{},"interfaces/PluginConfig.html":{},"interfaces/PluginConfigMap.html":{},"interfaces/ToolSettingsMap.html":{},"contributing.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["viewchild",{"_index":237,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{},"components/PageContainerComponent.html":{}}}],["viewchild('editorinstance",{"_index":318,"title":{},"body":{"interfaces/EditorJSMaterialForm.html":{}}}],["viewchild('ngxeditorjs",{"_index":1244,"title":{},"body":{"components/PageContainerComponent.html":{}}}],["viewer",{"_index":1022,"title":{},"body":{"modules/NgxEditorjsDemoModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"dependencies.html":{}}}],["viewpoints",{"_index":1534,"title":{},"body":{"contributing.html":{}}}],["visit",{"_index":1700,"title":{},"body":{"index.html":{}}}],["void",{"_index":188,"title":{},"body":{"interfaces/EditorJSClass.html":{},"interfaces/EditorJSInstanceConfig.html":{},"interfaces/EditorJSMaterialForm.html":{},"interfaces/InjectorApiCallOptions.html":{},"interfaces/InjectorApiCallResponse.html":{},"interfaces/InjectorMethodOption.html":{},"classes/MockEditorJS.html":{},"injectables/MockNgZone.html":{},"classes/MockPlugin.html":{},"directives/NgxEditorJSDirective.html":{},"injectables/NgxEditorJSService.html":{},"components/NgxTinynodesMatJsonOutputComponent.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{},"injectables/PagesService.html":{}}}],["wait",{"_index":668,"title":{},"body":{"directives/NgxEditorJSDirective.html":{}}}],["want",{"_index":1713,"title":{},"body":{"index.html":{}}}],["warning",{"_index":1275,"title":{},"body":{"modules/PageStoreModule.html":{},"modules/PluginWarningModule.html":{}}}],["warranties",{"_index":1764,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1759,"title":{},"body":{"license.html":{}}}],["way",{"_index":538,"title":{},"body":{"components/NgxEditorJSDemoHomeComponent.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorjsPluginsModule.html":{},"injectables/PagesService.html":{}}}],["wednesday",{"_index":1407,"title":{},"body":{"changelog.html":{}}}],["welcoming",{"_index":1500,"title":{},"body":{"contributing.html":{}}}],["well",{"_index":1405,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1776,"title":{},"body":{"license.html":{}}}],["width",{"_index":1220,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"components/PageContainerComponent.html":{}}}],["wiki",{"_index":1584,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":1465,"title":{},"body":{"contributing.html":{}}}],["withbackground",{"_index":59,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["withborder",{"_index":56,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Header.html":{},"interfaces/HeaderBlock.html":{},"interfaces/Image.html":{},"interfaces/ImageBlock.html":{},"interfaces/List.html":{},"interfaces/ListBlock.html":{},"interfaces/Paragraph.html":{},"interfaces/ParagraphBlock.html":{}}}],["within",{"_index":761,"title":{},"body":{"modules/NgxEditorJSModule.html":{},"injectables/NgxEditorJSService.html":{},"contributing.html":{},"index.html":{}}}],["without",{"_index":1424,"title":{},"body":{"changelog.html":{},"contributing.html":{},"license.html":{}}}],["won't",{"_index":502,"title":{},"body":{"interfaces/NgxEditorJSConfig.html":{},"interfaces/NgxEditorJSModuleConfig.html":{},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{}}}],["work",{"_index":1213,"title":{},"body":{"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{},"changelog.html":{}}}],["written",{"_index":1398,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":467,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"directives/NgxEditorJSDirective.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"injectables/PagesService.html":{},"miscellaneous/functions.html":{}}}],["zone",{"_index":418,"title":{},"body":{"injectables/MockNgZone.html":{},"injectables/NgxEditorJSService.html":{}}}],["zone.js",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":453,"title":{},"body":{"modules/NgxEditorJSComponentModule.html":{},"modules/NgxEditorJSMatFieldModule.html":{},"modules/NgxEditorJSModule.html":{},"modules/NgxEditorJSPluginServiceModule.html":{},"modules/NgxEditorjsDemoModule.html":{},"modules/NgxEditorjsPluginsModule.html":{},"modules/NgxTinynodesComponentsModule.html":{},"modules/NgxTinynodesMatJsonOutputModule.html":{},"modules/NgxTinynodesMatTagInputModule.html":{},"modules/NgxTinynodesMaterialFormFieldDemo.html":{},"modules/PageStoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Base block type for EditorJS\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts:13\n                            \n                        \n                \n                    \n                        Additional properties on the type\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The data interface for the block type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockData.html":{"url":"interfaces/BlockData.html","title":"interface - BlockData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BlockData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                Block Data interface\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts:7\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n\n  /**\n   * If a block tool, you can also set this to true if it contains inline tool support\n   */\n  inlineToolbar?: boolean;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChangeMap.html":{"url":"interfaces/ChangeMap.html","title":"interface - ChangeMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChangeMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject which is the last save from the EditorJS instance\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts:52\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateEditorJSOptions.html":{"url":"interfaces/CreateEditorJSOptions.html","title":"interface - CreateEditorJSOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateEditorJSOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/editorjs-service.ts\n        \n\n            \n                Description\n            \n            \n                EditorJS options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autoSave\n                                \n                                \n                                        config\n                                \n                                \n                                            Optional\n                                        excludeTools\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autoSave\n                                    \n                                \n                                \n                                    \n                                        autoSave:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Autosave on change, is set to false\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        excludeTools\n                                    \n                                \n                                \n                                    \n                                        excludeTools:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tools to include, Optional - if not set all tools will be used\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EditorConfig } from '@editorjs/editorjs';\n\n/**\n * EditorJS options\n */\nexport interface CreateEditorJSOptions {\n  /**\n   * Configuration\n   */\n  config: EditorConfig;\n  /**\n   * Tools to include, Optional - if not set all tools will be used\n   */\n  excludeTools?: string[];\n  /**\n   * Autosave on change, is set to false\n   */\n  autoSave?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSChange.html":{"url":"interfaces/EditorJSChange.html","title":"interface - EditorJSChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                An EditorJS change event\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        time\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:         Block[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Blocks in the change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time of the change\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSClass.html":{"url":"interfaces/EditorJSClass.html","title":"interface - EditorJSClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the injected EditorJS class, returns the static\nclass of EditorJS with the version and that creates the instance and provides\nthe Typescript parse with type information\n\n            \n\n            \n                Extends\n            \n            \n                        Function\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    EditorJS version\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: typeof EditorJS !== 'undefined' && EditorJS.version || ''}],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSInstanceConfig.html":{"url":"interfaces/EditorJSInstanceConfig.html","title":"interface - EditorJSInstanceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSInstanceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for creating an EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        editorConfig\n                                \n                                \n                                            Optional\n                                        onChange\n                                \n                                \n                                            Optional\n                                        onReady\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorConfig\n                                    \n                                \n                                \n                                    \n                                        editorConfig:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The editor configuration, this is required with at least the holder property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call when the editor makes a change\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onReady\n                                    \n                                \n                                \n                                    \n                                        onReady:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The method to call with an editor is ready\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: typeof EditorJS !== 'undefined' && EditorJS.version || ''}],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorJSMaterialForm.html":{"url":"interfaces/EditorJSMaterialForm.html","title":"interface - EditorJSMaterialForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorJSMaterialForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n        \n\n            \n                Description\n            \n            \n                Single interface for EditorJSMaterialForm\n\n            \n\n            \n                Extends\n            \n            \n                    MatFormFieldControl\n            \n\n\n\n\n    \n\n\n    \n        import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Provider,\n  Self,\n  ViewChild\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { NgxEditorJSComponent } from '../editorjs/editorjs.component';\n\n/**\n * Provider for the EditorJS Material Field Component\n */\nexport const EDITORJS_MATERIAL_FIELD_CONTROL: Provider = {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n};\n\n/**\n * Single interface for EditorJSMaterialForm\n */\nexport interface EditorJSMaterialForm\n  extends MatFormFieldControl,\n    OnInit,\n    AfterContentInit,\n    OnDestroy,\n    DoCheck {}\n\n/**\n * This component provides a [Material](https://material.angular.io) compatible `` component.\n * It provides a full implementation of all the required properties of a Material component\n *\n * @example\n * \n *  \n * \n */\n@Component({\n  selector: 'ngx-editorjs-mat-field',\n  templateUrl: 'editorjs-mat-field.component.html',\n  styleUrls: ['editorjs-mat-field.component.scss'],\n  providers: [EDITORJS_MATERIAL_FIELD_CONTROL],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxEditorJSMatFieldComponent extends NgxEditorJSComponent implements EditorJSMaterialForm {\n  /**\n   * Internal Static ID for Material for each editor instance\n   */\n  static nextId = 0;\n  /**\n   * Material state change subject\n   */\n  public stateChanges = new Subject();\n\n  /**\n   * Material control type\n   */\n  public controlType = 'ngx-editorjs-mat-field';\n\n  /**\n   * Material error state\n   */\n  public errorState = false;\n\n  /**\n   * Get the component value\n   */\n  get value(): any {\n    return this._value;\n  }\n\n  /**\n   * Set the component value\n   * @param value The value to set\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material placeholder value\n   */\n  private _placeholder: string;\n\n  /**\n   * Get the Material placeholder value\n   */\n  get placeholder() {\n    return this._placeholder;\n  }\n\n  /**\n   * Set the material Placeholder value\n   * @input placeholder The placeholder state to set\n   */\n  @Input('placeholder')\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material focused state\n   */\n  private _focused: boolean;\n  /**\n   * Get the Material focused state\n   */\n  get focused() {\n    return this._focused;\n  }\n\n  /**\n   * Set the Material focused state\n   * @param focused The focused state to set\n   */\n  @Input('focused')\n  set focused(focused: boolean) {\n    this._focused = coerceBooleanProperty(focused);\n    if (this._focused) {\n      this.onTouch();\n    }\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material Required Value\n   */\n  private _required = false;\n\n  /**\n   * Get the Material required state\n   */\n  get required() {\n    return this._required;\n  }\n\n  /**\n   * Set the Material requied state\n   * @param required The required state to set\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material disabled state\n   */\n  private _disabled = false;\n\n  /**\n   * Get the Material disabled state\n   */\n  get disabled() {\n    return this._disabled;\n  }\n\n  /**\n   * Set the Material disabled state\n   * @param disabled The disabled state to set\n   */\n  @Input('disabled')\n  set disabled(disabled: boolean) {\n    this._disabled = coerceBooleanProperty(disabled);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Material empty state\n   */\n  private _empty: boolean;\n  /**\n   * Get the Material empty state\n   */\n  public get empty() {\n    return this._empty;\n  }\n\n  /**\n   * Set the Material empty state\n   * @param empty The empty value\n   */\n  public set empty(empty: boolean) {\n    this._empty = empty;\n  }\n\n  /**\n   * Access to the underlying {NgxEditorJSDirective}\n   */\n  @ViewChild('editorInstance', { read: NgxEditorJSDirective, static: true })\n  public readonly editorInstance: NgxEditorJSDirective;\n\n  /**\n   * Host binding to the unique ID for this editor for material\n   */\n  @HostBinding()\n  id = `ngx-editorjs-mat-field-${NgxEditorJSMatFieldComponent.nextId++}`;\n\n  /**\n   * Gets if the Material label should float\n   */\n  @HostBinding('class.floating')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  /**\n   * Host binding for ARIA label\n   */\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  /**\n   *\n   * @param ids The IDs of the Material components\n   */\n  public setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  /**\n   * Material on container click\n   * @param event The {MouseEvent} for the container click\n   */\n  public onContainerClick(event: MouseEvent) {\n    this.onTouch(event);\n    this.stateChanges.next();\n  }\n\n  /**\n   * Constructor for the Material field, as this extends the `NgxEditorJSComponent` component\n   * we call `super()` to get all the properties of that component\n   * @param editorService The NgxEditorJSService instance\n   * @param focusMonitor Focus monitor for the Material element\n   * @param changeDetection The Change detection ref\n   * @param ngControl The Angular control base class\n   */\n  constructor(\n    protected readonly editorService: NgxEditorJSService,\n    protected focusMonitor: FocusMonitor,\n    protected readonly changeDetection: ChangeDetectorRef,\n    @Optional() @Self() public ngControl: NgControl\n  ) {\n    super(editorService, focusMonitor, changeDetection);\n  }\n\n  /**\n   * Called on OnInit\n   */\n  // tslint:disable-next-line:use-lifecycle-interface\n  public ngOnInit(): void {\n    if (this.ngControl !== null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  /**\n   * Inside the AfterContentInit life-cycle we set up a listener for focus\n   * and trigger focus autosave subscribe and unsubscribe\n   */\n  // tslint:disable-next-line:use-lifecycle-interface\n  public ngAfterContentInit(): void {\n    this.setupServiceSubscriptions();\n    this.getFocusMonitor(this.editorInstance.element)\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(focused => {\n        this.onTouch();\n        this.focused = focused;\n        this.stateChanges.next();\n      });\n  }\n\n  /**\n   * Set the error state based on the underlying control state\n   */\n  // tslint:disable-next-line:use-lifecycle-interface\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      this.errorState = this.ngControl.invalid && this.ngControl.touched;\n      this.stateChanges.next();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditorMap.html":{"url":"interfaces/EditorMap.html","title":"interface - EditorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditorMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing instances of BehaviorSubject\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts:8\n                            \n                        \n                \n                    \n                        A map key containing BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Header.html":{"url":"interfaces/Header.html","title":"interface - Header","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Header\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header level from 1-6\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeaderBlock.html":{"url":"interfaces/HeaderBlock.html","title":"interface - HeaderBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeaderBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a header block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a header block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        caption\n                                \n                                \n                                            Optional\n                                        stretched\n                                \n                                \n                                        url\n                                \n                                \n                                            Optional\n                                        withBackground\n                                \n                                \n                                            Optional\n                                        withBorder\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional image caption\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stretched\n                                    \n                                \n                                \n                                    \n                                        stretched:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional stretch property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBackground\n                                    \n                                \n                                \n                                    \n                                        withBackground:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional background property\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withBorder\n                                    \n                                \n                                \n                                    \n                                        withBorder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional border property\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageBlock.html":{"url":"interfaces/ImageBlock.html","title":"interface - ImageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a image block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorApiCallOptions.html":{"url":"interfaces/InjectorApiCallOptions.html","title":"interface - InjectorApiCallOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorApiCallOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Options to pass when calling the EditorJS instance API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        holder\n                                \n                                \n                                        method\n                                \n                                \n                                            Optional\n                                        namespace\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Holder for the EditorJS instance\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The method to call\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The optional namespace for the API call\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: typeof EditorJS !== 'undefined' && EditorJS.version || ''}],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorApiCallResponse.html":{"url":"interfaces/InjectorApiCallResponse.html","title":"interface - InjectorApiCallResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorApiCallResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                A response from the EditorJS api\n\n            \n\n            \n                Extends\n            \n            \n                        InjectorApiCallOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        result\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                    \n                                \n                                \n                                    \n                                        result:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: typeof EditorJS !== 'undefined' && EditorJS.version || ''}],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InjectorMethodOption.html":{"url":"interfaces/InjectorMethodOption.html","title":"interface - InjectorMethodOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InjectorMethodOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n        \n\n            \n                Description\n            \n            \n                Options for a Injector method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        editor\n                                \n                                \n                                        holder\n                                \n                                \n                                            Optional\n                                        skipSave\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional blocks\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editor\n                                    \n                                \n                                \n                                    \n                                        editor:     EditorJS\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorJS\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional editor\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The holder for the option\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipSave\n                                    \n                                \n                                \n                                    \n                                        skipSave:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Don't call save\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { Block } from './blocks';\n\n/**\n * Configuration for creating an EditorJS instance\n */\nexport interface EditorJSInstanceConfig {\n  /**\n   * The editor configuration, this is required with at least the `holder` property\n   */\n  editorConfig: EditorConfig;\n  /**\n   * The method to call when the editor makes a change\n   */\n  onChange?: (holder?: string) => void;\n\n  /**\n   * The method to call with an editor is ready\n   */\n  onReady?: (holder?: string) => void;\n}\n\n/**\n * Default values for each internal map\n */\nexport const MAP_DEFAULTS = [\n  ['lastChangeMap', { time: 0, blocks: [], version: typeof EditorJS !== 'undefined' && EditorJS.version || ''}],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n];\n\n/**\n * Injection token for the EditorJS class\n */\nexport const EDITORJS_MODULE_IMPORT = new InjectionToken('EDITORJS_MODULE_IMPORT');\n\n/**\n * The EditorJS class injector\n */\nexport const EditorJSInstance = new InjectionToken('EditorJSInstance');\n\n/**\n * Options for a Injector method\n */\nexport interface InjectorMethodOption {\n  /**\n   * The holder for the option\n   */\n  holder: string;\n  /**\n   * Optional blocks\n   */\n  data?: OutputData;\n  /**\n   * Optional editor\n   */\n  editor?: EditorJS;\n  /**\n   * Don't call save\n   */\n  skipSave?: boolean;\n}\n\n/**\n * Options to pass when calling the EditorJS instance API\n */\nexport interface InjectorApiCallOptions {\n  /**\n   * Holder for the EditorJS instance\n   */\n  holder: string;\n\n  /**\n   * The method to call\n   */\n  method: string;\n  /**\n   * The optional namespace for the API call\n   */\n  namespace?: string;\n}\n\n/**\n * A response from the EditorJS api\n */\nexport interface InjectorApiCallResponse extends InjectorApiCallOptions {\n  result: T;\n}\n\n/**\n * Interface for the injected EditorJS class, returns the static\n * class of EditorJS with the version and that creates the instance and provides\n * the Typescript parse with type information\n */\nexport interface EditorJSClass extends Function {\n  new (...args: any[]): T;\n  /**\n   * EditorJS version\n   */\n  version: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/List.html":{"url":"interfaces/List.html","title":"interface - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  List\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a list block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List items of type T\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ListStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListStyle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list style\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListBlock.html":{"url":"interfaces/ListBlock.html","title":"interface - ListBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                The default list block is provided by the EditorJS list plugin\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockEditorJS.html":{"url":"classes/MockEditorJS.html","title":"class - MockEditorJS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockEditorJS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                destroy\n                            \n                            \n                                isReady\n                            \n                            \n                                saver\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgxEditorJSModuleConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blocks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NgxEditorJSModuleConfig } from '../lib/types/config';\n\nexport class MockPlugin {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  isReady: Promise;\n\n  constructor(private config: NgxEditorJSModuleConfig) {\n    this.version = 'test';\n\n    this.isReady = Promise.resolve();\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockNgZone.html":{"url":"injectables/MockNgZone.html","title":"injectable - MockNgZone","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockNgZone\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts\n        \n\n            \n                Description\n            \n            \n                A mock implementation of NgZone.\n\n            \n\n            \n                Extends\n            \n            \n                        NgZone\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onStable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                run\n                            \n                            \n                                runOutsideAngular\n                            \n                            \n                                simulateZoneExit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            run\n                        \n                        \n                    \n                \n            \n            \n                \nrun(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runOutsideAngular\n                        \n                        \n                    \n                \n            \n            \n                \nrunOutsideAngular(fn: Function)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            simulateZoneExit\n                        \n                        \n                    \n                \n            \n            \n                \nsimulateZoneExit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onStable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter(false)\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/ng-zone-mock.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable, NgZone } from '@angular/core';\n\n/**\n * A mock implementation of {@link NgZone}.\n */\n@Injectable()\nexport class MockNgZone extends NgZone {\n  onStable: EventEmitter = new EventEmitter(false);\n\n  constructor() {\n    super({ enableLongStackTrace: false });\n  }\n\n  run(fn: Function): any {\n    return fn();\n  }\n\n  runOutsideAngular(fn: Function): any {\n    return fn();\n  }\n\n  simulateZoneExit(): void {\n    this.onStable.emit(null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockPlugin.html":{"url":"classes/MockPlugin.html","title":"class - MockPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:3\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            render\n                        \n                        \n                    \n                \n            \n            \n                \nrender()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/testing/shared.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NgxEditorJSModuleConfig } from '../lib/types/config';\n\nexport class MockPlugin {\n  constructor() {}\n  render() {\n    return document.createElement('div');\n  }\n}\n\nexport class MockEditorJS {\n  blocks: any;\n  saver: any;\n  version: string;\n  destroy: () => void;\n\n  isReady: Promise;\n\n  constructor(private config: NgxEditorJSModuleConfig) {\n    this.version = 'test';\n\n    this.isReady = Promise.resolve();\n\n    this.destroy = () => {};\n\n    this.blocks = {\n      clear: () => {},\n      render: () => {}\n    };\n\n    this.saver = {\n      save: (): Promise => {\n        return Promise.resolve({\n          time: Date.now(),\n          version: 'test',\n          blocks: []\n        });\n      }\n    };\n    (config as any).onReady();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSComponentModule.html":{"url":"modules/NgxEditorJSComponentModule.html","title":"module - NgxEditorJSComponentModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSComponentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSComponentModule\n\n\n\ncluster_NgxEditorJSComponentModule_declarations\n\n\n\ncluster_NgxEditorJSComponentModule_NgxEditorJSComponent_providers\n\n\n\ncluster_NgxEditorJSComponentModule_exports\n\n\n\ncluster_NgxEditorJSComponentModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSComponentModule\n\nNgxEditorJSComponentModule\n\nNgxEditorJSComponentModule -->\n\nNgxEditorJSComponent->NgxEditorJSComponentModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSComponentModule -->\n\nNgxEditorJSDirective->NgxEditorJSComponentModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSComponentModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSComponentModule->NgxEditorJSDirective \n\n\n\n\n\nEDITORJS_FORM_VALUE_ACCESSOR\n\nEDITORJS_FORM_VALUE_ACCESSOR\n\nNgxEditorJSComponent -->\n\nEDITORJS_FORM_VALUE_ACCESSOR->NgxEditorJSComponent\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSComponentModule -->\n\nNgxEditorJSService->NgxEditorJSComponentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs/editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Base module for the NgxEditorJSComponent, NgxEditorJSDirective and NgxEditorJSService.\nAll providers for the app are set here, however FOR_ROOT_OPTIONS_TOKEN can be set in any\n.forRoot\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSComponent\n                        \n                        \n                            NgxEditorJSDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSModuleConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs/editorjs.module.ts:63\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSModuleConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgxEditorJSComponent } from './editorjs.component';\nimport { NgxEditorJSDirective } from '../../directives/ngx-editorjs.directive';\nimport { NGX_EDITORJS_CONFIG, NgxEditorJSModuleConfig } from '../../types/config';\nimport { FOR_ROOT_OPTIONS_TOKEN } from '../../types/config';\nimport { EDITORJS_MODULE_IMPORT, EditorJSInstance } from '../../types/injector';\nimport EditorJS from '@editorjs/editorjs';\nimport { NgxEditorJSService } from '../../services/editorjs.service';\nimport { createModuleConfig } from '../../config/module-config';\n\n/**\n * Factory function to return the EditorJS base class\n */\nexport function createEditorJSInstance(editorjs: any) {\n  return editorjs;\n}\n\n/**\n * Base module for the `NgxEditorJSComponent`, `NgxEditorJSDirective` and `NgxEditorJSService`.\n * All providers for the app are set here, however `FOR_ROOT_OPTIONS_TOKEN` can be set in any\n * `.forRoot`\n */\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [NgxEditorJSComponent, NgxEditorJSDirective],\n  exports: [NgxEditorJSComponent, NgxEditorJSDirective],\n  providers: [\n    NgxEditorJSService,\n    {\n      provide: FOR_ROOT_OPTIONS_TOKEN,\n      useValue: {}\n    },\n    {\n      provide: NGX_EDITORJS_CONFIG,\n      useFactory: createModuleConfig,\n      deps: [FOR_ROOT_OPTIONS_TOKEN]\n    },\n    {\n      provide: EDITORJS_MODULE_IMPORT,\n      useValue: EditorJS\n    },\n    {\n      provide: EditorJSInstance,\n      useFactory: createEditorJSInstance,\n      deps: [EDITORJS_MODULE_IMPORT]\n    }\n  ]\n})\nexport class NgxEditorJSComponentModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSComponentModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSComponentModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSConfig.html":{"url":"interfaces/NgxEditorJSConfig.html","title":"interface - NgxEditorJSConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the EditorJS instance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        autofocus\n                                \n                                \n                                            Optional\n                                        blockPlaceholder\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                            Optional\n                                        hideToolbar\n                                \n                                \n                                            Optional\n                                        holder\n                                \n                                \n                                            Optional\n                                        initialBlock\n                                \n                                \n                                            Optional\n                                        minHeight\n                                \n                                \n                                            Optional\n                                        sanitizer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autofocus\n                                    \n                                \n                                \n                                    \n                                        autofocus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the EditorJS is autofocused on creation (default: false)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockPlaceholder\n                                    \n                                \n                                \n                                    \n                                        blockPlaceholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    First Block placeholder\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     OutputData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutputData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any initial output data to render\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideToolbar\n                                    \n                                \n                                \n                                    \n                                        hideToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, toolbar won't be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        holder\n                                    \n                                \n                                \n                                    \n                                        holder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ID of the element to hold the config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialBlock\n                                    \n                                \n                                \n                                    \n                                        initialBlock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the initial block (default \"paragraph\")\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minHeight\n                                    \n                                \n                                \n                                    \n                                        minHeight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Height of Editor's bottom area that allows to set focus on the last Block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sanitizer\n                                    \n                                \n                                \n                                    \n                                        sanitizer:     SanitizerConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SanitizerConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Define default sanitizer configuration\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSModuleConfig {\n  /**\n   * Configuration options for EditorJS\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxEditorJSDemoHomeComponent.html":{"url":"components/NgxEditorJSDemoHomeComponent.html","title":"component - NgxEditorJSDemoHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxEditorJSDemoHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/home-container/home-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-editorjs-demo-home\n            \n\n            \n                styleUrls\n                home-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                home-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-editorjs-demo-home',\n  templateUrl: 'home-container.component.html',\n  styleUrls: ['home-container.component.scss']\n})\nexport class NgxEditorJSDemoHomeComponent {}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A collection of demos for the @tinynodes/ngx-editor module with example code and links to API docs.\n    \n    \n      \n        The demos in this section are for the\n        @tinynodes/ngx-editorjs module.\n      \n      \n        Each demo provides a way to use the component in an application or form in Angular. It can be used as a basic component, used with\n        Angular forms or Material forms.\n      \n      Each demo shows the components providing a EditorJS instance.\n    \n    \n      Angular Component Demo\n      Angular Material Form Demo\n    \n  \n\n\n    \n\n    \n                \n                    home-container.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A collection of demos for the @tinynodes/ngx-editor module with example code and links to API docs.                      The demos in this section are for the        @tinynodes/ngx-editorjs module.                    Each demo provides a way to use the component in an application or form in Angular. It can be used as a basic component, used with        Angular forms or Material forms.            Each demo shows the components providing a EditorJS instance.              Angular Component Demo      Angular Material Form Demo      '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMaterialFormFieldDemoComponent', 'selector': 'ngx-tinynodes-mat-form-field-demo'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxEditorJSDemoHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSDemoMaterialModule.html":{"url":"modules/NgxEditorJSDemoMaterialModule.html","title":"module - NgxEditorJSDemoMaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSDemoMaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\n\n@NgModule({\n  imports: [\n    MatGridListModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule\n  ],\n  exports: [\n    MatGridListModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatBadgeModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule\n  ]\n})\nexport class NgxEditorJSDemoMaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxEditorJSDirective.html":{"url":"directives/NgxEditorJSDirective.html","title":"directive - NgxEditorJSDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgxEditorJSDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts\n        \n\n            \n                Description\n            \n            \n                The main directive of ngx-editorjs provides a way to attach\nan EditorJS instance to any element and control it via\nAngular services and components\nTo use attach to any element with an id property\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            OnChanges\n                            AfterContentInit\n            \n\n            \n                Example\n            \n            \n                        \n                            \n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxEditorJS]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createEditor\n                            \n                            \n                                    Async\n                                ngAfterContentInit\n                            \n                            \n                                    Async\n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                autosave\n                            \n                            \n                                blockPlaceholder\n                            \n                            \n                                blocks\n                            \n                            \n                                excludeTools\n                            \n                            \n                                hideToolbar\n                            \n                            \n                                holder\n                            \n                            \n                                initialBlock\n                            \n                            \n                                minHeight\n                            \n                            \n                                sanitizer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hasChanged\n                            \n                            \n                                hasSaved\n                            \n                            \n                                isFocused\n                            \n                            \n                                isReady\n                            \n                            \n                                isTouched\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    editor\n                                \n                                \n                                    element\n                                \n                                \n                                    service\n                                \n                                \n                                    touched\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, editorService: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:152\n                            \n                        \n\n                \n                    \n                            Creates the directive instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The element the directive is attached to\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:53\n                            \n                        \n                \n                    \n                        Boolean, If set to true the EditorJS instance gets autofocus when initialized\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:106\n                            \n                        \n                \n                    \n                        Number, Used with Angular Forms this sets an autosave timer active that calls the EditorJS save\nmethod. This patches the FormControl value with every block change and focus and blur, it also autosaves after\na set time\nSet to 0 to disable or pass a value in ms of the autosave time\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blockPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:84\n                            \n                        \n                \n                    \n                        String, The text to display as the placeholder text in the first block before content is added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:112\n                            \n                        \n                \n                    \n                        Blocks, An initial set of block data to render inside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        excludeTools\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:97\n                            \n                        \n                \n                    \n                        String Array, If empty all tools available via the plugin service will be added.  If a string\narray is set only the tools with the provided keys will be added\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideToolbar\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:59\n                            \n                        \n                \n                    \n                        Boolean, If set to true the toolbar will not show in the EditorJS instance\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:65\n                            \n                        \n                \n                    \n                        String, the ID property of the element that the EditorJS instance will be attached to\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        initialBlock\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:72\n                            \n                        \n                \n                    \n                        String, The type of block to set as the initial block type. This needs to match a name in the UserPlugins object.\nThe default value is \"paragraph\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        minHeight\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:78\n                            \n                        \n                \n                    \n                        Number, The minimum height of the EditorJS instance bottom after the last block\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        sanitizer\n                    \n                \n                \n                    \n                        Type :     SanitizerConfig\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:90\n                            \n                        \n                \n                    \n                        SanitizerConfig, The configuration for the HTML sanitizer\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        hasChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:136\n                            \n                        \n                \n                    \n                        Emits if the EditorJS content has changed when save is called\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hasSaved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:118\n                            \n                        \n                \n                    \n                        Emits if the content from the EditorJS instance has been saved to the component value\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isFocused\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:130\n                            \n                        \n                \n                    \n                        Emits if the component is focused\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isReady\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:142\n                            \n                        \n                \n                    \n                        Emits if the EditorJS component is ready\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isTouched\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:124\n                            \n                        \n                \n                    \n                        Emits if the component has been touched\n\n                    \n                \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:148\n                \n            \n\n\n            \n                \n                    Host click listener\n\n\n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEditor(config?: EditorConfig, excludeTools: [])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:198\n                \n            \n\n\n            \n                \n                    Creates an EditorJS instance for this directive\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            EditorConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Configuration for this instance\n\n                                    \n                                \n                                \n                                    excludeTools\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:251\n                \n            \n\n\n            \n                \n                    After content is created, we create the editor instance and set up listners\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:215\n                \n            \n\n\n            \n                \n                    When ngOnChanges are called, there are two paths\nIf it's just blocks, then the service is updated with the blocks\nIf it's any other property it means we create a new editor, as this\nis a destructive process we also need to wait for an existing editor\nto be ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes on the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:284\n                \n            \n\n\n            \n                \n                    Destroy the editor and subjects for this service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        editor\n                    \n                \n\n                \n                    \n                        geteditor()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:168\n                                \n                            \n                    \n                        \n                                Get the EditorJS instance for this directive\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:175\n                                \n                            \n                    \n                        \n                                Get the element for the directive\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        service\n                    \n                \n\n                \n                    \n                        getservice()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:182\n                                \n                            \n                    \n                        \n                                Get the NgxEditorJSService for this directive\n\n\n                                \n                                    Returns :         NgxEditorJSService\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n\n                \n                    \n                        gettouched()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/directives/ngx-editorjs.directive.ts:189\n                                \n                            \n                    \n                        \n                                Get the touched state\n\n\n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  AfterContentInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData, SanitizerConfig } from '@editorjs/editorjs';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { createEditorJSConfig } from '../config/editor-config';\nimport { NgxEditorJSService } from '../services/editorjs.service';\nimport { Block } from '../types/blocks';\n\n/**\n * The main directive of `ngx-editorjs` provides a way to attach\n * an EditorJS instance to any element and control it via\n * Angular services and components\n *\n * To use attach to any element with an `id` property\n *\n * @example\n * \n */\n@Directive({\n  selector: '[ngxEditorJS]',\n})\nexport class NgxEditorJSDirective implements OnDestroy, OnChanges, AfterContentInit {\n  /**\n   * On Destroyed subject\n   */\n  private readonly onDestroy$ = new Subject();\n  /**\n   * Form touched state\n   */\n  private touched$ = new BehaviorSubject(false);\n\n  /**\n   * The DOM element ID, it will use the Directive DOM element ID or falls back to the provided `holder` property\n   */\n  private id: string;\n\n  /**\n   * Boolean, If set to true the EditorJS instance gets autofocus when initialized\n   */\n  @Input()\n  public autofocus: boolean;\n\n  /**\n   * Boolean, If set to true the toolbar will not show in the EditorJS instance\n   */\n  @Input()\n  public hideToolbar: boolean;\n\n  /**\n   * String, the ID property of the element that the EditorJS instance will be attached to\n   */\n  @Input()\n  public holder: string;\n\n  /**\n   * String, The type of block to set as the initial block type. This needs to match a name in the `UserPlugins` object.\n   * The default value is \"paragraph\"\n   */\n  @Input()\n  public initialBlock?: string;\n\n  /**\n   * Number, The minimum height of the EditorJS instance bottom after the last block\n   */\n  @Input()\n  public minHeight: number;\n\n  /**\n   * String, The text to display as the placeholder text in the first block before content is added\n   */\n  @Input()\n  public blockPlaceholder: string;\n\n  /**\n   * SanitizerConfig, The configuration for the HTML sanitizer\n   */\n  @Input()\n  public sanitizer: SanitizerConfig;\n\n  /**\n   * String Array, If empty all tools available via the plugin service will be added.  If a string\n   * array is set only the tools with the provided keys will be added\n   */\n  @Input()\n  public excludeTools: string[] = [];\n\n  /**\n   * Number, Used with Angular Forms this sets an autosave timer active that calls the EditorJS save\n   * method. This patches the `FormControl` value with every block change and focus and blur, it also autosaves after\n   * a set time\n   * Set to 0 to disable or pass a value in `ms` of the autosave time\n   */\n  @Input()\n  public autosave: number;\n\n  /**\n   * Blocks, An initial set of block data to render inside the component\n   */\n  @Input()\n  public blocks: Block[];\n\n  /**\n   * Emits if the content from the EditorJS instance has been saved to the component value\n   */\n  @Output()\n  public hasSaved = new EventEmitter();\n\n  /**\n   * Emits if the component has been touched\n   */\n  @Output()\n  public isTouched = new EventEmitter();\n\n  /**\n   * Emits if the component is focused\n   */\n  @Output()\n  public isFocused = new EventEmitter();\n\n  /**\n   * Emits if the EditorJS content has changed when `save` is called\n   */\n  @Output()\n  public hasChanged = new EventEmitter();\n\n  /**\n   * Emits if the EditorJS component is ready\n   */\n  @Output()\n  public isReady = new EventEmitter();\n\n  /**\n   * Host click listener\n   */\n  @HostListener('click')\n  onclick() {\n    this.touched$.next(true);\n    this.isTouched.emit(true);\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Creates the directive instance\n   * @param el The element the directive is attached to\n   * @param editorService The editor service\n   */\n  constructor(\n    protected readonly el: ElementRef,\n    protected readonly editorService: NgxEditorJSService,\n    protected readonly cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Get the EditorJS instance for this directive\n   */\n  public get editor(): Observable {\n    return this.service.getEditor({ holder: this.id });\n  }\n\n  /**\n   * Get the element for the directive\n   */\n  public get element() {\n    return this.el.nativeElement;\n  }\n\n  /**\n   * Get the `NgxEditorJSService` for this directive\n   */\n  public get service(): NgxEditorJSService {\n    return this.editorService;\n  }\n\n  /**\n   * Get the touched state\n   */\n  public get touched() {\n    return this.touched$.asObservable();\n  }\n\n  /**\n   * Creates an EditorJS instance for this directive\n   * @param config Configuration for this instance\n   * @param excludeTools\n   */\n  public async createEditor(config?: EditorConfig, excludeTools = []): Promise {\n    await this.service.createInstance({\n      config,\n      excludeTools: this.excludeTools || excludeTools,\n      autoSave: this.autosave || 0\n    });\n    this.cd.markForCheck();\n  }\n\n  /**\n   * When ngOnChanges are called, there are two paths\n   * If it's just blocks, then the service is updated with the blocks\n   * If it's any other property it means we create a new editor, as this\n   * is a destructive process we also need to wait for an existing editor\n   * to be ready\n   * @param changes Changes on the component\n   */\n  async ngOnChanges(changes: SimpleChanges): Promise {\n    if (\n      changes.blocks &&\n      changes.blocks.previousValue !== null &&\n      !changes.blocks.firstChange &&\n      JSON.stringify(changes.blocks.previousValue) !== JSON.stringify(changes.blocks.currentValue)\n    ) {\n      this.service.update({ holder: this.holder }).subscribe();\n      this.cd.markForCheck();\n    } else {\n      const changesKeys = Object.keys(changes);\n      if (\n        this.id &&\n        // Ignore changes for values not related to EditorJS\n        [\n          'autofocus',\n          'holder',\n          'hideToolbar',\n          'initialBlock',\n          'minHeight',\n          'blockPlaceholder',\n          'sanitizer',\n          'includeTools'\n        ].find(key => {\n          return changesKeys.includes(key);\n        })\n      ) {\n        await this.createEditor(this.createConfig());\n        this.cd.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * After content is created, we create the editor instance and set up listners\n   */\n  async ngAfterContentInit() {\n    this.id = this.el.nativeElement.id || this.holder;\n\n    if (!this.id) {\n      throw new Error('Error in NgxEditorJSDirective::ngAfterContentInit - Directive element has no ID');\n    }\n    await this.createEditor(this.createConfig());\n\n    this.service\n      .isReady({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(isReady => {\n        this.isReady.emit(isReady);\n      });\n\n    this.service\n      .lastChange({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(change => {\n        this.hasChanged.emit(change);\n      });\n\n    this.service\n      .hasSaved({ holder: this.holder })\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(saved => {\n        this.hasSaved.next(saved);\n      });\n  }\n\n  /**\n   * Destroy the editor and subjects for this service\n   */\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n    this.service.destroyInstance({ holder: this.id });\n  }\n\n  /**\n   * Create a configuration for EditorJS\n   */\n  private createConfig(): EditorConfig {\n    const config: EditorConfig = createEditorJSConfig({\n      holder: this.id,\n      autofocus: this.autofocus,\n      hideToolbar: this.hideToolbar,\n      initialBlock: this.initialBlock,\n      placeholder: this.blockPlaceholder,\n      minHeight: this.minHeight,\n      sanitizer: this.sanitizer\n    });\n    if (this.blocks && this.blocks.length > 0) {\n      config.data = {\n        time: Date.now(),\n        version: typeof EditorJS !== 'undefined' && EditorJS.version || '',\n        blocks: this.blocks\n      };\n    }\n    return config;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSMatFieldModule.html":{"url":"modules/NgxEditorJSMatFieldModule.html","title":"module - NgxEditorJSMatFieldModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSMatFieldModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSMatFieldModule\n\n\n\ncluster_NgxEditorJSMatFieldModule_declarations\n\n\n\ncluster_NgxEditorJSMatFieldModule_NgxEditorJSMatFieldComponent_providers\n\n\n\ncluster_NgxEditorJSMatFieldModule_exports\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\n\n\nNgxEditorJSMatFieldModule\n\nNgxEditorJSMatFieldModule\n\nNgxEditorJSMatFieldModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSMatFieldModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSMatFieldModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nEDITORJS_MATERIAL_FIELD_CONTROL\n\nEDITORJS_MATERIAL_FIELD_CONTROL\n\nNgxEditorJSMatFieldComponent -->\n\nEDITORJS_MATERIAL_FIELD_CONTROL->NgxEditorJSMatFieldComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module provides the NgxEditorJSMatFieldComponent along with exporting the\nNgxEditorJSComponentModule. If using this module, Angular Material is required\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSMatFieldComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSModuleConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.module.ts:30\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSModuleConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { NgxEditorJSComponentModule } from '../editorjs/editorjs.module';\nimport { NgxEditorJSMatFieldComponent } from './editorjs-mat-field.component';\nimport { FOR_ROOT_OPTIONS_TOKEN, NgxEditorJSModuleConfig } from '../../types/config';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { CommonModule } from '@angular/common';\n\n/**\n * This module provides the `NgxEditorJSMatFieldComponent` along with exporting the\n * `NgxEditorJSComponentModule`. If using this module, Angular Material is required\n */\n@NgModule({\n  imports: [CommonModule, NgxEditorJSComponentModule, MatInputModule, MatFormFieldModule],\n  declarations: [NgxEditorJSMatFieldComponent],\n  exports: [NgxEditorJSComponentModule, NgxEditorJSMatFieldComponent]\n})\nexport class NgxEditorJSMatFieldModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSMatFieldModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSMatFieldModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSModule.html":{"url":"modules/NgxEditorJSModule.html","title":"module - NgxEditorJSModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_imports\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\n\nNgxEditorJSMatFieldModule\n\nNgxEditorJSMatFieldModule\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldModule->NgxEditorJSModule\n\n\n\n\n\nNgxEditorJSMatFieldModule \n\nNgxEditorJSMatFieldModule \n\nNgxEditorJSMatFieldModule  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/ngx-editorjs.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The @tinynodes/ngx-editorjs module provides the directive, service and components to use EditorJS\nwithin Angular and Material.\nTo use import the module NgxEditorJSModule.forRoot() into the root of your application.\nThe forRoot method takes an optional NgxEditorJSModuleConfig config, this will provide a\ndefault instance.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSMatFieldModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSMatFieldModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: NgxEditorJSModuleConfig)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/ngx-editorjs.module.ts:30\n                \n            \n\n\n            \n                \n                    Use this method in the root of the application.  You can pass an optional configuration\nwhich sets some defaults, or use the provided defaults.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxEditorJSModuleConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The optional configuration to pass\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { FOR_ROOT_OPTIONS_TOKEN, NgxEditorJSModuleConfig } from './types/config';\nimport { NgxEditorJSComponentModule } from './containers/editorjs/editorjs.module';\nimport { NgxEditorJSMatFieldModule } from './containers/editorjs-mat-field/editorjs-mat-field.module';\n\n/**\n * The `@tinynodes/ngx-editorjs` module provides the directive, service and components to use [EditorJS](http://editorjs.io)\n * within Angular and Material.\n *\n * To use import the module `NgxEditorJSModule.forRoot()` into the root of your application.\n * The `forRoot` method takes an optional `NgxEditorJSModuleConfig` config, this will provide a\n * default instance.\n */\n@NgModule({\n  imports: [NgxEditorJSComponentModule, NgxEditorJSMatFieldModule],\n  exports: [NgxEditorJSComponentModule, NgxEditorJSMatFieldModule]\n})\nexport class NgxEditorJSModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: NgxEditorJSModule\n  ) {}\n\n  /**\n   * Use this method in the root of the application.  You can pass an optional configuration\n   * which sets some defaults, or use the provided defaults.\n   * @param config The optional configuration to pass\n   */\n  static forRoot(@Optional() config?: NgxEditorJSModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEditorJSModule,\n      providers: [\n        {\n          provide: FOR_ROOT_OPTIONS_TOKEN,\n          useValue: config\n        }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxEditorJSModuleConfig.html":{"url":"interfaces/NgxEditorJSModuleConfig.html","title":"interface - NgxEditorJSModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxEditorJSModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/config.ts\n        \n\n            \n                Description\n            \n            \n                The configuration option that can be passed to the NgxEditorJSModule.forRoot method\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        editorjs\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editorjs\n                                    \n                                \n                                \n                                    \n                                        editorjs:     EditorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EditorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuration options for EditorJS\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport EditorJS, { OutputData, SanitizerConfig, EditorConfig } from '@editorjs/editorjs';\n\n/**\n * Configuration for the EditorJS instance\n */\nexport interface NgxEditorJSConfig {\n  /**\n   * If the EditorJS is autofocused on creation (default: false)\n   */\n  autofocus?: boolean;\n\n  /**\n   * Any initial output data to render\n   */\n  data?: OutputData;\n\n  /**\n   * If true, toolbar won't be shown\n   */\n  hideToolbar?: boolean;\n\n  /**\n   * ID of the element to hold the config\n   */\n  holder?: string;\n\n  /**\n   * The name of the initial block (default \"paragraph\")\n   */\n  initialBlock?: string;\n\n  /**\n   * Height of Editor's bottom area that allows to set focus on the last Block\n   */\n  minHeight?: number;\n\n  /**\n   * First Block placeholder\n   */\n  blockPlaceholder?: string;\n\n  /**\n   * Define default sanitizer configuration\n   */\n  sanitizer?: SanitizerConfig;\n}\n\n/**\n * The configuration option that can be passed to the `NgxEditorJSModule.forRoot` method\n */\nexport interface NgxEditorJSModuleConfig {\n  /**\n   * Configuration options for EditorJS\n   */\n  editorjs?: EditorConfig;\n}\n\n/**\n * Injection token provied for `NgxEditorJSConfig`\n */\nexport const NGX_EDITORJS_CONFIG = new InjectionToken('NGX_EDITORJS_CONFIG');\n\n/**\n * Internal token for injecting the `NgxEditorJSConfig` into the config factory\n */\nexport const FOR_ROOT_OPTIONS_TOKEN = new InjectionToken('FOR_ROOT_OPTIONS_TOKEN');\n\n/**\n * Get the EditorJS instance injected into the app\n */\nexport const EDITIOR_JS_INSTANCE = new InjectionToken('EDITIOR_JS_INSTANCE');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSPluginService.html":{"url":"injectables/NgxEditorJSPluginService.html","title":"injectable - NgxEditorJSPluginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSPluginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts\n        \n\n            \n                Description\n            \n            \n                The NgxEditorJSPluginService is provided as a root service for handling  EditorJS plugins.\nPlugins are provided by using  NgModule to inject the plugin with a\n PluginConfig using providers.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPlugin\n                            \n                            \n                                    Public\n                                getPlugins\n                            \n                            \n                                    Public\n                                getPluginsWithExclude\n                            \n                            \n                                    Public\n                                getPluginsWithInclude\n                            \n                            \n                                    Public\n                                getTools\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pluginConfigMap: PluginConfigMap)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pluginConfigMap\n                                                  \n                                                        \n                                                                        PluginConfigMap\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The plugin configuration map injected into the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlugin(key: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:32\n                \n            \n\n\n            \n                \n                    Get a plugin configuration via it's key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key of the plugin to get\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfig\n\n                    \n                    \n                        The plugin configuration for the passed key\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlugins\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlugins()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:23\n                \n            \n\n\n            \n                \n                    Get a map of all plugin configurations\n\n\n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        The map of plugins injected into this plugin\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPluginsWithExclude\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPluginsWithExclude(excludeList: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:40\n                \n            \n\n\n            \n                \n                    Get a list of plugins, filtering with an exclude list of plugins\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    excludeList\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPluginsWithInclude\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPluginsWithInclude(includeList: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:54\n                \n            \n\n\n            \n                \n                    Get a list of plugins, filtering with an include list of plugins\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    includeList\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PluginConfigMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTools(excludeTools: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.service.ts:68\n                \n            \n\n\n            \n                \n                    Returns a map of  EditorJS tools to be initialized by the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    excludeTools\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        Optional array of tools to exclude, if not passed all tools\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ToolSettingsMap\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { PluginClasses, PluginConfig, PluginConfigMap, ToolSettingsMap } from '../types/plugins';\n\n/**\n * The `NgxEditorJSPluginService` is provided as a root service for handling {@link https://github.com/editor-js | EditorJS plugins}.\n *\n * Plugins are provided by using {@link https://angular.io/api/core/NgModule | NgModule} to inject the plugin with a\n * {@link ../interfaces/PluginConfig.html | PluginConfig} using providers.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSPluginService {\n  /**\n   * @param pluginConfigMap The plugin configuration map injected into the application\n   */\n  constructor(@Inject(PluginClasses) private readonly pluginConfigMap: PluginConfigMap) {}\n\n  /**\n   * Get a map of all plugin configurations\n   * @returns The map of plugins injected into this plugin\n   */\n  public getPlugins(): PluginConfigMap {\n    return this.pluginConfigMap;\n  }\n\n  /**\n   * Get a plugin configuration via it's key\n   * @param key The key of the plugin to get\n   * @returns The plugin configuration for the passed key\n   */\n  public getPlugin(key: string): PluginConfig {\n    return this.pluginConfigMap[key];\n  }\n\n  /**\n   * Get a list of plugins, filtering with an exclude list of plugins\n   * @param excludeList\n   */\n  public getPluginsWithExclude(excludeList: string[] = []): PluginConfigMap {\n    return Object.entries(this.pluginConfigMap)\n      .filter(([key]) => {\n        return !excludeList.includes(key);\n      })\n      .reduce((pluginMap, [key, plugin]) => {\n        return { ...pluginMap, [key]: plugin };\n      }, {});\n  }\n\n  /**\n   * Get a list of plugins, filtering with an include list of plugins\n   * @param includeList\n   */\n  public getPluginsWithInclude(includeList: string[] = []): PluginConfigMap {\n    return Object.entries(this.pluginConfigMap)\n      .filter(([key]) => {\n        return includeList.includes(key);\n      })\n      .reduce((pluginMap, [key, plugin]) => {\n        return { ...pluginMap, [key]: plugin };\n      }, {});\n  }\n\n  /**\n   * Returns a map of {@link https://editorjs.io/api | EditorJS} tools to be initialized by the editor\n   * @param excludeTools Optional array of tools to exclude, if not passed all tools\n   */\n  public getTools(excludeTools: string[] = []): ToolSettingsMap {\n    return Object.entries(this.getPluginsWithExclude(excludeTools)).reduce(\n      (finalTools, [key, plugin]: [string, PluginConfig]) => {\n        const tool: any = {\n          class: plugin.plugin\n        };\n        if (plugin.shortcut) tool.shortcut = plugin.shortcut;\n        if (plugin.type === 'inline' || plugin.inlineToolbar) tool.inlineToolbar = true;\n        if (plugin.config) tool.config = plugin.config;\n        return { ...finalTools, [key]: tool };\n      },\n      {}\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorJSPluginServiceModule.html":{"url":"modules/NgxEditorJSPluginServiceModule.html","title":"module - NgxEditorJSPluginServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorJSPluginServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSPluginServiceModule\n\n\n\ncluster_NgxEditorJSPluginServiceModule_providers\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule -->\n\nNgxEditorJSPluginService->NgxEditorJSPluginServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/services/plugin-service.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NgxEditorJSPluginService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PluginClasses, PLUGIN_CONFIG } from '../types/plugins';\nimport { createPluginConfig } from '../util/plugin';\nimport { NgxEditorJSPluginService } from './plugin-service.service';\n\n@NgModule({\n  providers: [\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: undefined,\n      multi: true\n    },\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: undefined,\n      multi: true\n    },\n    {\n      provide: PluginClasses,\n      useFactory: createPluginConfig,\n      deps: [PLUGIN_CONFIG, EDITOR_JS_TOOL_INJECTOR]\n    },\n    NgxEditorJSPluginService\n  ]\n})\nexport class NgxEditorJSPluginServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxEditorJSService.html":{"url":"injectables/NgxEditorJSService.html","title":"injectable - NgxEditorJSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxEditorJSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts\n        \n\n            \n                Description\n            \n            \n                This handles the management of  EditorJS instances and their lifecycle.\nAll EditorJS instances are created outside of Angular using  NgZone  to ensure change detection is not triggered.\nOnce an instance is created, several  Observable values are also set up:\n\n isReady  Set when the editor instance is ready in the DOM\n hasSaved  Set when the editor .save() method has been called.\n lastChange  Set when a change happens, contains the OutputData from the Editor.\n\nAfter setup,  isReady  is set to true and the editor can be used within Angular.  There are some methods provided\nfor  save ,  update  and  clear  - and an  apiCall  method which allows\nfor any call to be made to EditorJS that matches it's API.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiCall\n                            \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                    Async\n                                createInstance\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                destroyInstance\n                            \n                            \n                                    Public\n                                getEditor\n                            \n                            \n                                    Public\n                                hasSaved\n                            \n                            \n                                    Public\n                                isReady\n                            \n                            \n                                    Public\n                                lastChange\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editorJs: EditorJSClass, config: NgxEditorJSModuleConfig, plugins: NgxEditorJSPluginService, zone: NgZone, ref: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        editorJs\n                                                  \n                                                        \n                                                                        EditorJSClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The EditorJS class injected into the application and used to create new editor instances\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        NgxEditorJSModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration provided from the NgxEditorJSModule.forRoot method\n\n                                                        \n                                                \n                                                \n                                                        plugins\n                                                  \n                                                        \n                                                                        NgxEditorJSPluginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The plugin service which provides all plugins injected into the application\n\n                                                        \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Angular Zone service that allows the EditorJS methods to be run outside of Angular\n\n                                                        \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The ApplicationRef provided by Angular, used to trigger an application tick\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            apiCall\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apiCall(options: InjectorApiCallOptions, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:138\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    A helper method to make calls to the  EditorJS API  of any instance.\nThe first argument is an object that you must pass the method name, and the holder ID of the container.\nAn optional namespace can be added for API calls such as blocks, caret, etc.\nThe second argument is any additional arguments as required by the API.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorApiCallOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The options for the API call to be made\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Any arguments to be passed to the API call\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        An Observable of the API response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:191\n                \n            \n\n\n            \n                \n                    Gets the  EditorJS instance for the passed holder and calls the clear method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(options: CreateEditorJSOptions)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:87\n                \n            \n\n\n            \n                \n                    Creates a new  EditorJS instance outside of the Angular zone and then adds it to the editor instances\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                CreateEditorJSOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A configuration passed to create an EditorJS instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A Promise when the editor has been created\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:288\n                \n            \n\n\n            \n                \n                    Call this to destroy all subscriptions within the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroyInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroyInstance(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:271\n                \n            \n\n\n            \n                \n                    Destroys a single instance of  EditorJS and all the subject values created for it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditor(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:220\n                \n            \n\n\n            \n                \n                    Returns the underlying  EditorJS instance\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasSaved\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasSaved(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:260\n                \n            \n\n\n            \n                \n                    Subscribe to the hasSaved state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:231\n                \n            \n\n\n            \n                \n                    Subscribe to the isReady state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            lastChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    lastChange(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:242\n                \n            \n\n\n            \n                \n                    Subscribe to the lastChange state change for the editor passed in the options\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:177\n                \n            \n\n\n            \n                \n                    Call the save method of an  EditorJS instance and sets the current value of the service to the result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options for the method call\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(options: InjectorMethodOption)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/services/editorjs.service.ts:204\n                \n            \n\n\n            \n                \n                    Gets the  EditorJS instance for the passed holder and calls the render method if blocks\nare passed. Optionally can disable the lastChange update - useful if doing actions\nsuch as resetting data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                InjectorMethodOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Options to configure a method call against the EditorJS core API\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApplicationRef, Inject, Injectable, NgZone } from '@angular/core';\nimport EditorJS, { EditorConfig, OutputData } from '@editorjs/editorjs';\nimport { NgxEditorJSPluginService, ToolSettingsMap } from '@tinynodes/ngx-editorjs-plugins';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, switchMap, take, tap } from 'rxjs/operators';\nimport { NgxEditorJSModuleConfig, NGX_EDITORJS_CONFIG } from '../types/config';\nimport { CreateEditorJSOptions } from '../types/editorjs-service';\nimport {\n  EditorJSClass,\n  EditorJSInstance,\n  InjectorApiCallOptions,\n  InjectorApiCallResponse,\n  InjectorMethodOption,\n  MAP_DEFAULTS\n} from '../types/injector';\nimport { ChangeMap, EditorMap, ReadyMap, SavedMap } from '../types/maps';\n\n/**\n * This handles the management of {@link https://editorjs.io/api | EditorJS} instances and their lifecycle.\n *\n * All `EditorJS` instances are created outside of Angular using {@link https://angular.io/api/core/NgZone | NgZone } to ensure change detection is not triggered.\n * Once an instance is created, several {@link https://angular.io/guide/observables | Observable} values are also set up:\n *\n *  - {@link #isReady | isReady } Set when the editor instance is ready in the DOM\n *  - {@link #hasSaved | hasSaved } Set when the editor `.save()` method has been called.\n *  - {@link #lastChange | lastChange } Set when a change happens, contains the `OutputData` from the Editor.\n *\n * After setup, {@link #isReady | isReady } is set to true and the editor can be used within Angular.  There are some methods provided\n * for {@link #save | save }, {@link #update | update } and {@link #clear | clear } - and an {@link #apiCall | apiCall } method which allows\n * for any call to be made to EditorJS that matches it's API.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorJSService {\n  /**\n   * Internal destroy subject for the service\n   */\n  private readonly onDestroy$ = new Subject();\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} instances\n   */\n  private readonly editorMap: EditorMap = {};\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} ready states\n   */\n  private readonly isReadyMap: ReadyMap = {};\n\n  /**\n   * Internal map of when {@link https://editorjs.io/api | EditorJS} save is called\n   */\n  private readonly hasSavedMap: SavedMap = {};\n\n  /**\n   * Internal map of all {@link https://editorjs.io/api | EditorJS} change states\n   */\n  private readonly lastChangeMap: ChangeMap = {};\n\n  private toolbarOpen = false;\n\n  /**\n   * @param editorJs The EditorJS class injected into the application and used to create new editor instances\n   * @param config The configuration provided from the NgxEditorJSModule.forRoot method\n   * @param plugins The plugin service which provides all plugins injected into the application\n   * @param zone The Angular Zone service that allows the EditorJS methods to be run outside of Angular\n   * @param ref The ApplicationRef provided by Angular, used to trigger an application tick\n   */\n  constructor(\n    @Inject(EditorJSInstance) private readonly editorJs: EditorJSClass,\n    @Inject(NGX_EDITORJS_CONFIG) private readonly config: NgxEditorJSModuleConfig,\n    private readonly plugins: NgxEditorJSPluginService,\n    private readonly zone: NgZone,\n    private readonly ref: ApplicationRef\n  ) {}\n\n  /**\n   * Creates a new {@link https://editorjs.io/api | EditorJS} instance outside of the Angular zone and then adds it to the editor instances\n   *\n   * @remark\n   * This method uses `async/await`\n   *\n   * @param options A configuration passed to create an EditorJS instance\n   * @returns A Promise when the editor has been created\n   */\n  public async createInstance(options: CreateEditorJSOptions): Promise {\n    const editorConfig: EditorConfig = {\n      ...this.config.editorjs,\n      ...options.config,\n      tools: this.getTools(options.excludeTools)\n    };\n\n    // Bind the editor onChange method from the config, otherwise use the local createOnChange method\n    editorConfig.onChange =\n      editorConfig.onChange && typeof editorConfig.onChange === 'function'\n        ? editorConfig.onChange\n        : this.createOnChange.call(this, { holder: editorConfig.holder as string });\n\n    // Bind the editor onReady method from the config, otherwise use the local createOnReady method\n    editorConfig.onReady =\n      editorConfig.onReady && typeof editorConfig.onReady === 'function'\n        ? editorConfig.onReady\n        : this.createOnReady.call(this, { holder: editorConfig.holder as string });\n\n    await this.zone.runOutsideAngular(async () => {\n      const editor = new this.editorJs(editorConfig);\n      const holder = editorConfig.holder as string;\n      await editor.isReady;\n      await this.zone.run(async () => {\n        await this.setupSubjects({ holder });\n        if (this.editorMap[holder]) {\n          this.editorMap[holder].next(editor);\n        } else {\n          this.editorMap[holder] = new BehaviorSubject(editor);\n        }\n        this.isReadyMap[holder].next(true);\n        this.ref.tick();\n      });\n    });\n  }\n\n  /**\n   * A helper method to make calls to the {@link https://editorjs.io/api | EditorJS API } of any instance.\n   * The first argument is an object that you must pass the `method` name, and the `holder` ID of the container.\n   * An optional `namespace` can be added for API calls such as `blocks`, `caret`, etc.\n   *\n   * The second argument is any additional arguments as required by the API.\n   *\n   * @remarks\n   * Unlike other methods an API call be made with a `.subscribe`, the result will be an observable value.\n   * If the value is a Promise it will be resolved first\n   *\n   * @param options The options for the API call to be made\n   * @param args Any arguments to be passed to the API call\n   * @returns An Observable of the API response\n   */\n  public apiCall(options: InjectorApiCallOptions, ...args: any[]): Observable> {\n    return this.getEditor(options).pipe(\n      take(1),\n      switchMap(async editor => {\n        let result: InjectorApiCallResponse = { ...options, result: undefined };\n\n        await this.zone.runOutsideAngular(async () => {\n          let method: any;\n          if (!options.namespace) {\n            method = editor[options.method];\n          } else {\n            method = editor[options.namespace][options.method];\n          }\n          if (!method) {\n            throw new Error(`No method ${options.method} ${options.namespace ? 'in ' + options.namespace : ''}`);\n          }\n          const methodCall = method.call(editor, ...args);\n          await this.zone.run(async () => {\n            if (!methodCall || (methodCall && !methodCall.then)) {\n              result = {\n                ...result,\n                result: typeof methodCall === 'undefined' ? {} : methodCall\n              };\n            } else {\n              const r = await methodCall;\n              result = { ...result, result: r };\n            }\n          });\n        });\n\n        return result;\n      })\n    );\n  }\n\n  /**\n   * Call the `save` method of an {@link https://editorjs.io/api | EditorJS} instance and sets the current value of the service to the result\n   * @param options Options for the method call\n   */\n  public save(options: InjectorMethodOption): Observable> {\n    return this.apiCall({ holder: options.holder, namespace: 'saver', method: 'save' }).pipe(\n      take(1),\n      tap((response: InjectorApiCallResponse) => {\n        this.hasSavedMap[options.holder].next(true);\n        this.lastChangeMap[options.holder].next(response.result);\n      })\n    );\n  }\n\n  /**\n   * Gets the {@link https://editorjs.io/api | EditorJS} instance for the passed holder and calls the `clear` method.\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public clear(options: InjectorMethodOption): Observable> {\n    return this.apiCall({ holder: options.holder, namespace: 'blocks', method: 'clear' }).pipe(\n      take(1),\n      switchMap(response => (options.skipSave ? of(response) : this.save(options)))\n    );\n  }\n\n  /**\n   * Gets the {@link https://editorjs.io/api | EditorJS} instance for the passed holder and calls the render method if blocks\n   * are passed. Optionally can disable the `lastChange` update - useful if doing actions\n   * such as resetting data.\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public update(options: InjectorMethodOption): Observable> {\n    const data = {\n      time: (options.data && options.data.time) || Date.now(),\n      version: (options.data && options.data.version) || this.editorJs && this.editorJs.version || '',\n      blocks: [...options.data.blocks]\n    };\n    return this.apiCall({ holder: options.holder, namespace: 'blocks', method: 'render' }, data).pipe(\n      take(1),\n      switchMap(response => (options.skipSave ? of(response) : this.save(options)))\n    );\n  }\n\n  /**\n   * Returns the underlying {@link https://editorjs.io/api | EditorJS} instance\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public getEditor(options: InjectorMethodOption): Observable {\n    if (!this.editorMap[options.holder]) {\n      this.editorMap[options.holder] = new BehaviorSubject(undefined);\n    }\n    return this.editorMap[options.holder].pipe(filter(editor => typeof editor !== 'undefined'));\n  }\n\n  /**\n   * Subscribe to the `isReady` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public isReady(options: InjectorMethodOption): Observable {\n    if (!this.isReadyMap[options.holder]) {\n      this.isReadyMap[options.holder] = new BehaviorSubject(false);\n    }\n    return this.isReadyMap[options.holder].asObservable();\n  }\n\n  /**\n   * Subscribe to the `lastChange` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public lastChange(options: InjectorMethodOption): Observable {\n    if (!this.lastChangeMap[options.holder]) {\n      this.lastChangeMap[options.holder] = new BehaviorSubject({\n        time: 0,\n        blocks: [],\n        version: this.editorJs && this.editorJs.version || ''\n      });\n    }\n    return this.lastChangeMap[options.holder].pipe(\n      distinctUntilChanged((a, b) => (b && b.time && b.time === 0) || (a && b && (a.time && a.time === b.time))),\n      filter(hasChanged => typeof hasChanged !== 'undefined')\n    );\n  }\n\n  /**\n   * Subscribe to the `hasSaved` state change for the editor passed in the options\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public hasSaved(options: InjectorMethodOption): Observable {\n    if (!this.hasSavedMap[options.holder]) {\n      this.hasSavedMap[options.holder] = new BehaviorSubject(false);\n    }\n    return this.hasSavedMap[options.holder].asObservable();\n  }\n\n  /**\n   * Destroys a single instance of {@link https://editorjs.io/api | EditorJS} and all the subject values created for it\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  public destroyInstance(options: InjectorMethodOption): void {\n    this.getEditor(options)\n      .pipe(take(1))\n      .subscribe(editor => {\n        this.zone.runOutsideAngular(() => {\n          editor.destroy();\n          this.zone.run(() => {\n            this.cleanupSubjects({ holder: options.holder });\n            this.ref.tick();\n          });\n        });\n      });\n  }\n\n  /**\n   * Call this to destroy all subscriptions within the service\n   */\n  public destroy() {\n    Object.keys(this.editorMap).forEach(holder => this.destroyInstance({ holder }));\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  /**\n   * Internal method to create an default onChange method for {@link https://editorjs.io/api | EditorJS}\n   * @param options The InjectorMethodOption for this request\n   */\n  private createOnChange(options: InjectorMethodOption): (change: OutputData) => void {\n    if (!this.lastChangeMap[options.holder]) {\n      this.lastChangeMap[options.holder] = new BehaviorSubject({ blocks: [] });\n    }\n    return (change: OutputData) => {\n      if (change) {\n        this.lastChangeMap[options.holder].next(change);\n      }\n    };\n  }\n\n  /**\n   * Internal method to create an default onReady method for {@link https://editorjs.io/api | EditorJS}\n   * @param options The InjectorMethodOption for this request\n   */\n  private createOnReady(options: InjectorMethodOption): () => void {\n    if (!this.isReadyMap[options.holder]) {\n      this.isReadyMap[options.holder] = new BehaviorSubject(false);\n    }\n\n    return () => {\n      if (!this.isReadyMap[options.holder].value) {\n        this.isReadyMap[options.holder].next(true);\n      }\n    };\n  }\n\n  /**\n   * Sets up the `BehaviorSubject` values when an {@link https://editorjs.io/api | EditorJS} instance is created.  All the subjects are first created and set\n   * to default values.\n   * Once an EditorJS instance is ready these values can provide change and save state information\n   * @param options Options to configure a method call against the EditorJS core API\n   */\n  private async setupSubjects(options: InjectorMethodOption): Promise {\n    MAP_DEFAULTS.forEach(([mapKey, value]: [string, typeof value]) => {\n      if (!this[mapKey][options.holder]) {\n        this[mapKey][options.holder] = new BehaviorSubject(value);\n      }\n      this[mapKey][options.holder].next(value);\n    });\n  }\n\n  /**\n   * Handles cleaning up all the `BehaviorSubject` values once an {@link https://editorjs.io/api | EditorJS} instance has been destroyed\n   * @param options The options to pass to clean up the subjects\n   */\n  private cleanupSubjects(options: InjectorMethodOption) {\n    MAP_DEFAULTS.forEach(([mapKey]: [string]) => {\n      if (this[mapKey][options.holder]) {\n        this[mapKey][options.holder].complete();\n        this[mapKey][options.holder] = null;\n        delete this[mapKey][options.holder];\n      }\n    });\n    this.editorMap[options.holder].complete();\n    this.editorMap[options.holder] = null;\n    delete this.editorMap[options.holder];\n  }\n\n  /**\n   * Returns a map of {@link https://editorjs.io/api | EditorJS} tools to be initialized by the editor\n   * @param excludeTools Optional array of tools to exclude, if not passed all tools\n   */\n  private getTools(excludeTools: string[] = []): ToolSettingsMap {\n    return this.plugins.getTools(excludeTools);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsDemoModule.html":{"url":"modules/NgxEditorjsDemoModule.html","title":"module - NgxEditorjsDemoModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsDemoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorJSDemoHomeComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoHomeComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorjsPluginsModule->NgxEditorjsDemoModule\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxEditorJSDemoHomeComponent\n                        \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            PageContainerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSDemoMaterialModule\n                        \n                        \n                            NgxEditorjsPluginsModule\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PageContainerComponent\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\nimport { NgxEditorJSComponentModule, NgxEditorJSModule } from '@tinynodes/ngx-editorjs';\nimport { PageContainerComponent } from './containers/page-container/page-container.component';\nimport { ngxEditorjsDemoRoutes } from './ngx-editorjs-demo.routes';\nimport { PageStoreModule } from './store/pages/pages.module';\nimport { NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core';\nimport { NgxEditorJSDemoHomeComponent } from './containers/home-container/home-container.component';\nimport { NgxEditorJSDemoMaterialModule } from './ngx-editorjs-demo.material.module';\n\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { NgxEditorjsPluginsModule } from '@tinynodes/ngx-editorjs-plugins';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxJsonViewerModule,\n    RouterModule.forChild(ngxEditorjsDemoRoutes),\n    ReactiveFormsModule,\n    PageStoreModule,\n    NgxTinynodesCoreModule,\n    NgxEditorJSComponentModule,\n    NgxEditorjsPluginsModule,\n    NgxEditorJSDemoMaterialModule\n  ],\n  declarations: [PageContainerComponent, NgxEditorJSDemoHomeComponent],\n  exports: [PageStoreModule, PageContainerComponent],\n  entryComponents: [PageContainerComponent]\n})\nexport class NgxEditorjsDemoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxEditorjsPluginsModule.html":{"url":"modules/NgxEditorjsPluginsModule.html","title":"module - NgxEditorjsPluginsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxEditorjsPluginsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule -->\n\nNgxEditorJSPluginServiceModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginEmbedModule\n\nPluginEmbedModule\n\nNgxEditorjsPluginsModule -->\n\nPluginEmbedModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginInlineCodeModule\n\nPluginInlineCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginInlineCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginQuoteModule\n\nPluginQuoteModule\n\nNgxEditorjsPluginsModule -->\n\nPluginQuoteModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginWarningModule\n\nPluginWarningModule\n\nNgxEditorjsPluginsModule -->\n\nPluginWarningModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule  -->\n\nNgxEditorjsPluginsModule->NgxEditorJSPluginServiceModule \n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginEmbedModule \n\nPluginEmbedModule \n\nPluginEmbedModule  -->\n\nNgxEditorjsPluginsModule->PluginEmbedModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginInlineCodeModule \n\nPluginInlineCodeModule \n\nPluginInlineCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginInlineCodeModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginQuoteModule \n\nPluginQuoteModule \n\nPluginQuoteModule  -->\n\nNgxEditorjsPluginsModule->PluginQuoteModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nPluginWarningModule \n\nPluginWarningModule \n\nPluginWarningModule  -->\n\nNgxEditorjsPluginsModule->PluginWarningModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/ngx-editorjs-plugins.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The NgxEditorjsPluginsModule provides several additional modules\nthat provide a way to easily plug in block and inline tools for EditorJS.\nImporting NgxEditorjsPluginsModule will include all modules, while it\nis also possible to import each individual module as required.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSPluginServiceModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginEmbedModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginInlineCodeModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginQuoteModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                        \n                            PluginWarningModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxEditorJSPluginServiceModule\n                        \n                        \n                            PluginCodeModule\n                        \n                        \n                            PluginEmbedModule\n                        \n                        \n                            PluginHeaderModule\n                        \n                        \n                            PluginImageModule\n                        \n                        \n                            PluginInlineCodeModule\n                        \n                        \n                            PluginLinkModule\n                        \n                        \n                            PluginListModule\n                        \n                        \n                            PluginMarkerModule\n                        \n                        \n                            PluginParagraphModule\n                        \n                        \n                            PluginQuoteModule\n                        \n                        \n                            PluginSimpleImageModule\n                        \n                        \n                            PluginWarningModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PluginCodeModule } from './plugins/code/code.module';\nimport { PluginEmbedModule } from './plugins/embed/embed.module';\nimport { PluginHeaderModule } from './plugins/header/header.module';\nimport { PluginImageModule } from './plugins/image/image.module';\nimport { PluginInlineCodeModule } from './plugins/inline-code/inline-code.module';\nimport { PluginLinkModule } from './plugins/link/link.module';\nimport { PluginListModule } from './plugins/list/list.module';\nimport { PluginMarkerModule } from './plugins/marker/marker.module';\nimport { PluginParagraphModule } from './plugins/paragraph/paragraph.module';\nimport { PluginQuoteModule } from './plugins/quote/quote.module';\nimport { PluginSimpleImageModule } from './plugins/simple-image/simple-image.module';\nimport { PluginWarningModule } from './plugins/warning/warning.module';\nimport { NgxEditorJSPluginServiceModule } from './services/plugin-service.module';\n\n/**\n * The `NgxEditorjsPluginsModule` provides several additional modules\n * that provide a way to easily plug in block and inline tools for EditorJS.\n *\n * Importing `NgxEditorjsPluginsModule` will include all modules, while it\n * is also possible to import each individual module as required.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxEditorJSPluginServiceModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule,\n    PluginInlineCodeModule,\n    PluginWarningModule,\n    PluginQuoteModule,\n    PluginEmbedModule\n  ],\n  exports: [\n    NgxEditorJSPluginServiceModule,\n    PluginCodeModule,\n    PluginHeaderModule,\n    PluginImageModule,\n    PluginLinkModule,\n    PluginListModule,\n    PluginMarkerModule,\n    PluginParagraphModule,\n    PluginSimpleImageModule,\n    PluginInlineCodeModule,\n    PluginWarningModule,\n    PluginQuoteModule,\n    PluginEmbedModule\n  ]\n})\nexport class NgxEditorjsPluginsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesComponentsModule.html":{"url":"modules/NgxTinynodesComponentsModule.html","title":"module - NgxTinynodesComponentsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesComponentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesComponentsModule\n\n\n\ncluster_NgxTinynodesComponentsModule_imports\n\n\n\ncluster_NgxTinynodesComponentsModule_exports\n\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\n\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatJsonOutputModule \n\n\n\n\n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatTagInputModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/ngx-tinynodes-components.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            NgxTinynodesMatJsonOutputModule\n                        \n                        \n                            NgxTinynodesMatTagInputModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatJsonOutputModule\n                        \n                        \n                            NgxTinynodesMatTagInputModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatTagInputModule } from './components/mat-tag-input/mat-tag-input.module';\nimport { NgxTinynodesMatJsonOutputModule } from './components/mat-json-output/mat-json-output.module';\n\n@NgModule({\n  imports: [ NgxTinynodesMatTagInputModule, NgxTinynodesMatJsonOutputModule ],\n  exports: [ NgxTinynodesMatTagInputModule, NgxTinynodesMatJsonOutputModule ]\n})\nexport class NgxTinynodesComponentsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxTinynodesMatFieldComponent.html":{"url":"interfaces/NgxTinynodesMatFieldComponent.html","title":"interface - NgxTinynodesMatFieldComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxTinynodesMatFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/types/components.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ControlValueAccessor\n            \n\n\n\n\n    \n\n\n    \n        import { ControlValueAccessor } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material';\nimport { AfterContentInit, DoCheck, OnDestroy, OnInit } from '@angular/core';\n\nexport interface NgxTinynodesMatFieldComponent extends ControlValueAccessor,\n  MatFormFieldControl,\n  OnInit,\n  OnDestroy,\n  DoCheck,\n  AfterContentInit {\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxTinynodesMatJsonOutputComponent.html":{"url":"components/NgxTinynodesMatJsonOutputComponent.html","title":"component - NgxTinynodesMatJsonOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxTinynodesMatJsonOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tinynodes-mat-json-output\n            \n\n\n\n\n            \n                templateUrl\n                mat-json-output.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                toggleExpand\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                expand\n                            \n                            \n                                json\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        expand\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        json\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleExpand\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleExpand()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'ngx-tinynodes-mat-json-output',\n  templateUrl: 'mat-json-output.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxTinynodesMatJsonOutputComponent implements OnChanges {\n\n  @Input()\n  json: any;\n\n  @Input()\n  expand = true;\n\n  constructor(private readonly cd: ChangeDetectorRef) {\n  }\n\n  public toggleExpand() {\n    this.expand = !this.expand;\n  }\n\n  ngOnChanges(): void {\n    this.cd.markForCheck();\n  }\n}\n\n    \n\n    \n        \n  \n    Output\n    Data from the EditorJS instance\n  \n  \n    {{expand ? 'Collapse JSON' : 'Expand JSON'}}\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Output    Data from the EditorJS instance        {{expand ? \\'Collapse JSON\\' : \\'Expand JSON\\'}}          '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMaterialFormFieldDemoComponent', 'selector': 'ngx-tinynodes-mat-form-field-demo'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxTinynodesMatJsonOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesMatJsonOutputModule.html":{"url":"modules/NgxTinynodesMatJsonOutputModule.html","title":"module - NgxTinynodesMatJsonOutputModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesMatJsonOutputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesMatJsonOutputModule\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_declarations\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_exports\n\n\n\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputComponent\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule -->\n\nNgxTinynodesMatJsonOutputComponent->NgxTinynodesMatJsonOutputModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent  -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesMatJsonOutputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/components/mat-json-output/mat-json-output.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxTinynodesMatJsonOutputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatJsonOutputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatJsonOutputComponent } from './mat-json-output.component';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule, MatCardModule } from '@angular/material';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\n\n@NgModule({\n  imports: [CommonModule, MatCardModule, MatButtonModule, NgxJsonViewerModule],\n  declarations: [ NgxTinynodesMatJsonOutputComponent ],\n  exports: [ NgxTinynodesMatJsonOutputComponent ]\n})\nexport class NgxTinynodesMatJsonOutputModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesMatTagInputModule.html":{"url":"modules/NgxTinynodesMatTagInputModule.html","title":"module - NgxTinynodesMatTagInputModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesMatTagInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesMatTagInputModule\n\n\n\ncluster_NgxTinynodesMatTagInputModule_declarations\n\n\n\ncluster_NgxTinynodesMatTagInputModule_NgxTinynodesMatTagInputComponent_providers\n\n\n\ncluster_NgxTinynodesMatTagInputModule_exports\n\n\n\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputComponent\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule -->\n\nNgxTinynodesMatTagInputComponent->NgxTinynodesMatTagInputModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent  -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesMatTagInputComponent \n\n\n\n\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_VALUE_ACCESSOR->NgxTinynodesMatTagInputComponent\n\n\n\n\n\nTAG_COMPONENT_FIELD_CONTROL\n\nTAG_COMPONENT_FIELD_CONTROL\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_FIELD_CONTROL->NgxTinynodesMatTagInputComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-tinynodes-components/src/lib/components/mat-tag-input/mat-tag-input.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxTinynodesMatTagInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxTinynodesMatTagInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMatTagInputComponent } from './mat-tag-input.component';\nimport { MatChipsModule, MatIconModule } from '@angular/material';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [FormsModule,CommonModule, MatChipsModule, MatIconModule],\n  declarations: [ NgxTinynodesMatTagInputComponent ],\n  exports: [ NgxTinynodesMatTagInputComponent ]\n})\nexport class NgxTinynodesMatTagInputModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTinynodesMaterialFormFieldDemo.html":{"url":"modules/NgxTinynodesMaterialFormFieldDemo.html","title":"module - NgxTinynodesMaterialFormFieldDemo","body":"\n                   \n\n\n\n\n    Modules\n    NgxTinynodesMaterialFormFieldDemo\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTinynodesMaterialFormFieldDemo\n\n\n\ncluster_NgxTinynodesMaterialFormFieldDemo_declarations\n\n\n\ncluster_NgxTinynodesMaterialFormFieldDemo_imports\n\n\n\n\nNgxTinynodesMaterialFormFieldDemoComponent\n\nNgxTinynodesMaterialFormFieldDemoComponent\n\n\n\nNgxTinynodesMaterialFormFieldDemo\n\nNgxTinynodesMaterialFormFieldDemo\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxTinynodesMaterialFormFieldDemoComponent->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorJSDemoMaterialModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorJSDemoMaterialModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorJSMatFieldModule\n\nNgxEditorJSMatFieldModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorJSMatFieldModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorjsPluginsModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPageStoreModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/material-form-field.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxTinynodesMaterialFormFieldDemoComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            NgxTinynodesMaterialFormFieldDemoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgxEditorJSDemoMaterialModule\n                        \n                        \n                            NgxEditorJSMatFieldModule\n                        \n                        \n                            NgxEditorjsPluginsModule\n                        \n                        \n                            PageStoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxTinynodesMaterialFormFieldDemoComponent } from './containers/material-form-field/material-form-field.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgxEditorJSDemoMaterialModule } from './ngx-editorjs-demo.material.module';\nimport { CommonModule } from '@angular/common';\nimport { NgxTinynodesCoreModule } from '@tinynodes/ngx-tinynodes-core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PageStoreModule } from '../../store/pages/pages.module';\nimport { NgxEditorJSMatFieldModule } from '@tinynodes/ngx-editorjs';\nimport { NgxEditorjsPluginsModule } from '@tinynodes/ngx-editorjs-plugins';\nimport { NgxJsonViewerModule } from 'ngx-json-viewer';\nimport { NgxTinynodesComponentsModule } from '@tinynodes/ngx-tinynodes-components';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NgxTinynodesMaterialFormFieldDemoComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxTinynodesComponentsModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    NgxJsonViewerModule,\n    PageStoreModule,\n    NgxEditorJSMatFieldModule,\n    NgxEditorjsPluginsModule,\n    NgxTinynodesCoreModule,\n    NgxEditorJSDemoMaterialModule\n  ],\n  declarations: [NgxTinynodesMaterialFormFieldDemoComponent],\n  entryComponents: [NgxTinynodesMaterialFormFieldDemoComponent]\n})\nexport class NgxTinynodesMaterialFormFieldDemo {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxTinynodesMaterialFormFieldDemoComponent.html":{"url":"components/NgxTinynodesMaterialFormFieldDemoComponent.html","title":"component - NgxTinynodesMaterialFormFieldDemoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxTinynodesMaterialFormFieldDemoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container component provides the main routable page for loading\nthe ngx-editorjs-demo\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-tinynodes-mat-form-field-demo\n            \n\n            \n                styleUrls\n                material-form-field.component.scss\n            \n\n\n\n            \n                templateUrl\n                material-form-field.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editorForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                disableAutosave\n                            \n                            \n                                    Public\n                                enableAutosave\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                holder\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    autosave\n                                \n                                \n                                    menu\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editorService: NgxEditorJSService, cd: ChangeDetectorRef, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:51\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The form builder\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        holder\n                    \n                \n                \n                    \n                        Default value : 'ngx-editorjs-demo'\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:30\n                            \n                        \n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : 'ngx-editorjs Material Field'\n                    \n                \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:25\n                            \n                        \n                \n                    \n                        Title of the page\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(skipSave)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:125\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    skipSave\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        Optional parameter, if set to true the save method won't be called\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disableAutosave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disableAutosave()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:109\n                \n            \n\n\n            \n                \n                    Disable autosave\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enableAutosave\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableAutosave(autosaveTime: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:102\n                \n            \n\n\n            \n                \n                    Enable autosave, set the value from the autosaveTime\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    autosaveTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Time to set for autosave\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:172\n                \n            \n\n\n            \n                \n                    After the content has init override the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:155\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:116\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: OutputData, skipSave)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:144\n                \n            \n\n\n            \n                \n                    Update the component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            OutputData\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The data to render in the update\n\n                                    \n                                \n                                \n                                    skipSave\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        Optional parameter, if set to true the save method won't be called\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editorForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    pageName: [ '' ],\n    pageTags: new FormControl([]),\n    pageEditor: new FormControl([])\n  })\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:34\n                            \n                        \n\n                \n                    \n                        Editor form group\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        autosave\n                    \n                \n\n                \n                    \n                        getautosave()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:86\n                                \n                            \n                    \n                        \n                                Get the current autosave state of the application\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/demos/material-form-field/containers/material-form-field/material-form-field.component.ts:93\n                                \n                            \n                    \n                        \n                                Get the page links\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { Block, NgxEditorJSService } from '@tinynodes/ngx-editorjs';\nimport { AppService, MenuGroup, NgxEditorJSDemo } from '@tinynodes/ngx-tinynodes-core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, pluck, switchMap, take, takeUntil } from 'rxjs/operators';\nimport { PagesService } from '../../../../store/pages/pages.service';\nimport { OutputData } from '@editorjs/editorjs';\n\n/**\n * The Page Container component provides the main routable page for loading\n * the `ngx-editorjs-demo`\n */\n@Component({\n  selector: 'ngx-tinynodes-mat-form-field-demo',\n  templateUrl: 'material-form-field.component.html',\n  styleUrls: [ 'material-form-field.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxTinynodesMaterialFormFieldDemoComponent implements AfterContentInit {\n  /**\n   * Title of the page\n   */\n  @Input()\n  public title = 'ngx-editorjs Material Field';\n  /**\n   * The holder ID for this demo\n   */\n  @Input()\n  public holder = 'ngx-editorjs-demo';\n  /**\n   * Editor form group\n   */\n  public editorForm = this.fb.group({\n    pageName: [ '' ],\n    pageTags: new FormControl([]),\n    pageEditor: new FormControl([])\n  });\n  /**\n   * Internal onDestroy$ subject\n   */\n  private onDestroy$ = new Subject();\n\n  /**\n   * Menu state for the component\n   */\n  private menu$ = new BehaviorSubject(undefined);\n  /**\n   * Autosave state\n   */\n  private autoSave$ = new BehaviorSubject(0);\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editorService The Editor service\n   * @param cd The change detection ref\n   * @param fb The form builder\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private app: AppService,\n    private readonly editorService: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef,\n    private readonly fb: FormBuilder\n  ) {\n    this.editorService\n      .lastChange({ holder: this.holder })\n      .pipe(\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe(hasChanged => {\n        if (hasChanged && hasChanged.blocks) {\n          this.editorForm.patchValue({\n            pageEditor: hasChanged.blocks\n          });\n          this.cd.markForCheck();\n        }\n      });\n  }\n\n  /**\n   * Get the current autosave state of the application\n   */\n  public get autosave() {\n    return this.autoSave$.asObservable();\n  }\n\n  /**\n   * Get the page links\n   */\n  public get menu() {\n    return this.menu$;\n  }\n\n\n  /**\n   * Enable autosave, set the value from the autosaveTime\n   * @param autosaveTime Time to set for autosave\n   */\n  public enableAutosave(autosaveTime: number) {\n    this.autoSave$.next(autosaveTime);\n  }\n\n  /**\n   * Disable autosave\n   */\n  public disableAutosave() {\n    this.autoSave$.next(0);\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editorService.save({ holder: this.holder }).subscribe();\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Clear the editor\n   * @param skipSave Optional parameter, if set to true the save method won't be called\n   */\n  public clear(skipSave = false) {\n    this.editorForm.reset({\n      pageName: '',\n      pageTags: [],\n    });\n\n    this.editorService\n      .clear({ holder: this.holder, skipSave })\n      .pipe(take(1))\n      .subscribe();\n\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Update the component\n   * @param data The data to render in the update\n   * @param skipSave Optional parameter, if set to true the save method won't be called\n   */\n  public update(data: OutputData, skipSave = false) {\n    this.editorService\n      .update({ holder: this.holder, data, skipSave })\n      .pipe(take(1))\n      .subscribe();\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app\n      .getDemoData('material-form-field-demo')\n      .pipe(take(1))\n      .subscribe(data => {\n        this.menu$.next(data.links);\n        this.editorForm.patchValue({\n          pageName: 'A test page for the Material EditorJS Component',\n          pageTags: ['Angular', 'Material', 'EditorJS', 'TypeScript', 'Open Source']\n        })\n        this.update({ time: Date.now(), blocks: data.blocks });\n      });\n  }\n\n  /**\n   * After the content has init override the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Material Field Demo\n      A single page demo of the EditorJS Material Field component\n    \n\n    \n      \n    \n\n    \n      Save\n      Clear\n      Reset\n      \n        Enable Editor Autosave\n      \n       0\" (click)=\"disableAutosave()\">Disable\n        Editor Autosave\n      \n\n\n      \n        Autosave Time\n        \n        seconds\n         0\">\n          EditorJS Autosave is enabled, now when you focus on the component the reactive form value will be updated -\n          You still need to call\n          save to save all the form data.\n        \n      \n    \n    \n      \n        \n          Page Name\n          \n          Enter the name for this page\n        \n        \n          Page Tags\n          \n        \n        \n          Content Editor for {{ editorForm.value.pageName || 'Page Name' }}\n          Click on the editor to active it\n          \n        \n      \n    \n    \n      \n    \n  \n\n\n\n  \n    Below is an instance of an {{ title }} EditorJS Material component. Click on the area and the block\n    tool will appear, or you can just start typing a paragraph.\n  \n  \n    The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks,\n    list with &lt;ol> / &lt;li> and &lt;code> blocks.\n  \n\n  \n    You can also paste in an &lt;img> url into the editor and it will start the SimpleImage\n    plugin which provides\n    an &lt;img> tag pointing to the image, and with some additional controls.\n  \n  \n    When saving check the output panel below to see the data results. The save, clear and reset buttons work on\n    the entire form.  The Autosave feature enables the `EditorJS` instance to update the form value on any changes  It also updates\n    on a regular basis to ensure the content is in the form. With autosave off you need to call save on the form to get the value.\n  \n\n\n    \n\n    \n                \n                    material-form-field.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n.form-content form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-content > * {\n  width: 100%;\n}\n\n.mat-form-field {\n  margin-bottom: 15px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Material Field Demo      A single page demo of the EditorJS Material Field component                            Save      Clear      Reset              Enable Editor Autosave             0\" (click)=\"disableAutosave()\">Disable        Editor Autosave                    Autosave Time                seconds         0\">          EditorJS Autosave is enabled, now when you focus on the component the reactive form value will be updated -          You still need to call          save to save all the form data.                                              Page Name                    Enter the name for this page                          Page Tags                                    Content Editor for {{ editorForm.value.pageName || \\'Page Name\\' }}          Click on the editor to active it                                                  Below is an instance of an {{ title }} EditorJS Material component. Click on the area and the block    tool will appear, or you can just start typing a paragraph.        The default block is a  paragraph, you can also add header  -  blocks,    list with  /  and  blocks.        You can also paste in an  url into the editor and it will start the SimpleImage    plugin which provides    an  tag pointing to the image, and with some additional controls.        When saving check the output panel below to see the data results. The save, clear and reset buttons work on    the entire form.  The Autosave feature enables the `EditorJS` instance to update the form value on any changes  It also updates    on a regular basis to ensure the content is in the form. With autosave off you need to call save on the form to get the value.  '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMaterialFormFieldDemoComponent', 'selector': 'ngx-tinynodes-mat-form-field-demo'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxTinynodesMaterialFormFieldDemoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        blocks\n                                \n                                \n                                        id\n                                \n                                \n                                        pageTags\n                                \n                                \n                                        pageTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocks\n                                    \n                                \n                                \n                                    \n                                        blocks:     PageBlock[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PageBlock[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTags\n                                    \n                                \n                                \n                                    \n                                        pageTags:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageTitle\n                                    \n                                \n                                \n                                    \n                                        pageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageBlock.html":{"url":"interfaces/PageBlock.html","title":"interface - PageBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     ID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageContainerComponent.html":{"url":"components/PageContainerComponent.html","title":"component - PageContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts\n\n\n    \n        Description\n    \n    \n        The Page Container provided the basic demo for the ngx-editorjs component\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-page-container\n            \n\n            \n                styleUrls\n                page-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                page-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                holder\n                            \n                            \n                                ngxEditorJS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    blocks\n                                \n                                \n                                    menu\n                                \n                                \n                                    pages\n                                \n                                \n                                    asJSON\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesService: PagesService, app: AppService, editorService: NgxEditorJSService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:35\n                            \n                        \n\n                \n                    \n                            The constructor sets up the blocks to the initial demo data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pagesService\n                                                  \n                                                        \n                                                                        PagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The pages service\n\n                                                        \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application service\n\n                                                        \n                                                \n                                                \n                                                        editorService\n                                                  \n                                                        \n                                                                        NgxEditorJSService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Editor service\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detection ref\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:86\n                \n            \n\n\n            \n                \n                    Clear the editor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:119\n                \n            \n\n\n            \n                \n                    After the content has init override the blocks with blocks from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:93\n                \n            \n\n\n            \n                \n                    Reset the editor with demo data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:79\n                \n            \n\n\n            \n                \n                    Call the editor save method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            holder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ngx-editorjs-demo'\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:28\n                            \n                        \n\n                \n                    \n                        The holder ID for this demo\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorJS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgxEditorJSComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('ngxEditorJS', {read: NgxEditorJSComponent, static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        blocks\n                    \n                \n\n                \n                    \n                        getblocks()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:55\n                                \n                            \n                    \n                        \n                                Get the blocks from the last change\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n\n                \n                    \n                        getmenu()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:65\n                                \n                            \n                    \n                        \n                                Get the page links\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:72\n                                \n                            \n                    \n                        \n                                Get a list of pages\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        asJSON\n                    \n                \n\n                \n                    \n                        getasJSON()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/containers/page-container/page-container.component.ts:106\n                                \n                            \n                    \n                        \n                                Get the blocks data as formatted JSON\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { Block, NgxEditorJSComponent, NgxEditorJSService } from '@tinynodes/ngx-editorjs';\nimport { AppService, MenuGroup, NgxEditorJSDemo } from '@tinynodes/ngx-tinynodes-core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, pluck, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { Page } from '../../store/pages/pages.models';\nimport { PagesService } from '../../store/pages/pages.service';\nimport { OutputData } from '@editorjs/editorjs';\n\n/**\n * The Page Container provided the basic demo for the `ngx-editorjs` component\n */\n@Component({\n  selector: 'ngx-page-container',\n  templateUrl: 'page-container.component.html',\n  styleUrls: [ 'page-container.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PageContainerComponent implements AfterContentInit {\n  /**\n   * Internal onDestroy$ subject\n   */\n  private readonly onDestroy$ = new Subject();\n\n  /**\n   * The holder ID for this demo\n   */\n  public holder = 'ngx-editorjs-demo';\n\n  /**\n   * Links for the page\n   */\n  private menu$ = new BehaviorSubject(undefined);\n\n  @ViewChild('ngxEditorJS', { read: NgxEditorJSComponent, static: true }) ngxEditorJS: NgxEditorJSComponent;\n\n  /**\n   * The constructor sets up the blocks to the initial demo data\n   * @param pagesService The pages service\n   * @param app The application service\n   * @param editorService The Editor service\n   * @param cd The change detection ref\n   */\n  constructor(\n    private readonly pagesService: PagesService,\n    private readonly app: AppService,\n    private readonly editorService: NgxEditorJSService,\n    private readonly cd: ChangeDetectorRef\n  ) {\n  }\n\n  /**\n   * Get the blocks from the last change\n   */\n  public get blocks() {\n    return this.editorService.lastChange({ holder: this.holder }).pipe(\n      pluck('blocks'),\n      takeUntil(this.onDestroy$)\n    );\n  }\n\n  /**\n   * Get the page links\n   */\n  public get menu() {\n    return this.menu$;\n  }\n\n  /**\n   * Get a list of pages\n   */\n  get pages(): Observable {\n    return this.pagesService.pages;\n  }\n\n  /**\n   * Call the editor save method\n   */\n  public save() {\n    this.editorService.save({ holder: this.holder });\n  }\n\n  /**\n   * Clear the editor\n   */\n  public clear() {\n    this.editorService.clear({ holder: this.holder });\n  }\n\n  /**\n   * Reset the editor with demo data\n   */\n  public reset() {\n    this.app\n      .getDemoData('ngx-editorjs-demo')\n      .pipe(take(1), switchMap((data: NgxEditorJSDemo) => {\n        this.menu$.next(data.links);\n        return this.editorService.update({ holder: this.holder, data: { blocks: data.blocks } }).pipe(take(1));\n      }))\n      .subscribe();\n  }\n\n  /**\n   * Get the blocks data as formatted JSON\n   */\n  public get asJSON() {\n    return this.blocks.pipe(\n      take(1),\n      map(blocks => {\n        return JSON.stringify(blocks, null, 4);\n      }),\n      tap(() => this.cd.markForCheck())\n    );\n  }\n\n  /**\n   * After the content has init override the blocks with blocks from the service\n   */\n  ngAfterContentInit() {\n    this.reset();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      @tinynodes/ngx-editor Demo\n      A single page demo of the EditorJS component\n    \n    \n      \n    \n\n    \n      \n        Demo\n        Save\n        Clear\n        Reset\n      \n      \n        \n          Ready: {{ ngxEditorJS.isReady | async }}\n          Has Changed:\n            {{ change.time }}\n            0\n          \n          Touched: {{ ngxEditorJS.isTouched | async }}\n          Focused: {{ ngxEditorJS.isFocused | async }}\n          Saved: {{ ngxEditorJS.hasSaved | async }}\n        \n      \n      \n    \n    \n      \n        \n          Output\n          Data from the EditorJS instance\n        \n        \n          {{ asJSON | async }}\n        \n      \n    \n     \n  \n\n\n\n  \n    Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can just start\n    typing.\n  \n  \n    The default block is a &lt;p> paragraph, you can also add header &lt;h1> - &lt;h6> blocks, list with\n    &lt;ol> / &lt;li> and &lt;code> blocks.\n  \n\n  \n    You can also paste in an &lt;img> url into the editor and it will start the SimpleImage plugin which provides\n    an &lt;img> tag pointing to the image, and with some additional controls.\n  \n  \n    When saving check the output panel below to see the data results.\n  \n\n\n    \n\n    \n                \n                    page-container.component.scss\n                \n                :host {\n  width: 100%;\n  height: 100vh;\n}\n\n.output-card {\n  height: 100vh;\n  flex: 1;\n  width: 100%;\n  overflow: scroll;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @tinynodes/ngx-editor Demo      A single page demo of the EditorJS component                                    Demo        Save        Clear        Reset                              Ready: {{ ngxEditorJS.isReady | async }}          Has Changed:            {{ change.time }}            0                    Touched: {{ ngxEditorJS.isTouched | async }}          Focused: {{ ngxEditorJS.isFocused | async }}          Saved: {{ ngxEditorJS.hasSaved | async }}                                                    Output          Data from the EditorJS instance                          {{ asJSON | async }}                               Below is an instance of an EditorJS block editor. Click on the area and the block tool will appear, or you can just start    typing.        The default block is a  paragraph, you can also add header  -  blocks, list with     /  and  blocks.        You can also paste in an  url into the editor and it will start the SimpleImage plugin which provides    an  tag pointing to the image, and with some additional controls.        When saving check the output panel below to see the data results.  '\n    var COMPONENTS = [{'name': 'NgxEditorJSComponent', 'selector': 'ngx-editorjs'},{'name': 'NgxEditorJSDemoHomeComponent', 'selector': 'ngx-editorjs-demo-home'},{'name': 'NgxEditorJSMatFieldComponent', 'selector': 'ngx-editorjs-mat-field'},{'name': 'NgxTinynodesMaterialFormFieldDemoComponent', 'selector': 'ngx-tinynodes-mat-form-field-demo'},{'name': 'NgxTinynodesMatJsonOutputComponent', 'selector': 'ngx-tinynodes-mat-json-output'},{'name': 'NgxTinynodesMatTagInputComponent', 'selector': 'ngx-tinynodes-mat-tag-input'},{'name': 'PageContainerComponent', 'selector': 'ngx-page-container'}];\n    var DIRECTIVES = [{'name': 'NgxEditorJSDirective', 'selector': '[ngxEditorJS]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PageStoreModule.html":{"url":"modules/PageStoreModule.html","title":"module - PageStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    PageStoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nPagesQuery\n\nPagesQuery\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.module.ts\n        \n\n\n        \n            Description\n        \n        \n            WARNING: This module is currently in development\nInternal page store module, this will allow the ngx-editorjs-demo to support the creation of multiple pages\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PagesQuery\n                        \n                        \n                            PagesService\n                        \n                        \n                            PagesStore\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PagesQuery } from './pages.query';\nimport { PagesService } from './pages.service';\nimport { PagesStore } from './pages.store';\n\n/**\n *\n * **WARNING**: This module is currently in development\n *\n * Internal page store module, this will allow the `ngx-editorjs-demo` to support the creation of multiple pages\n */\n@NgModule({\n  providers: [PagesStore, PagesQuery, PagesService]\n})\nexport class PageStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesQuery.html":{"url":"injectables/PagesQuery.html","title":"injectable - PagesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts\n        \n\n\n            \n                Extends\n            \n            \n                    QueryEntity\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.query.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { Page } from './pages.models';\nimport { PagesState, PagesStore } from './pages.store';\n\n@Injectable()\nexport class PagesQuery extends QueryEntity {\n  constructor(protected store: PagesStore) {\n    super(store);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesService.html":{"url":"injectables/PagesService.html","title":"injectable - PagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts\n        \n\n            \n                Description\n            \n            \n                This page service provides a way to save and render pages\nvia the store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                query\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addBlock\n                            \n                            \n                                delete\n                            \n                            \n                                removeBlock\n                            \n                            \n                                setBlocks\n                            \n                            \n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(query: PagesQuery, store: PagesStore)\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                        PagesQuery\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        PagesStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(page?: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:32\n                \n            \n\n\n            \n                \n                    Add a page to the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional page to be added\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addBlock\n                        \n                        \n                    \n                \n            \n            \n                \naddBlock(pageId: ID, block: Block)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                Block\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(pageId: ID)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:56\n                \n            \n\n\n            \n                \n                    Removes a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ID of the page to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeBlock\n                        \n                        \n                    \n                \n            \n            \n                \nremoveBlock(pageId: ID, block: PageBlock)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    block\n                                    \n                                                PageBlock\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBlocks\n                        \n                        \n                    \n                \n            \n            \n                \nsetBlocks(pageId: ID | any, blocks: PageBlock[])\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                            ID | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    blocks\n                                    \n                                            PageBlock[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upsert\n                        \n                        \n                    \n                \n            \n            \n                \nupsert(page: Page)\n                \n            \n\n\n            \n                \n                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:47\n                \n            \n\n\n            \n                \n                    Updates or creates a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Page\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The page to be updated, if not available it will be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesQuery\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PagesStore\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.service.ts:24\n                                \n                            \n                    \n                        \n                                Get an observable of all the pages in the store\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { arrayAdd, arrayRemove, guid, ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\nimport { Observable } from 'rxjs';\nimport { Page, PageBlock } from './pages.models';\nimport { PagesQuery } from './pages.query';\nimport { PagesStore } from './pages.store';\n\n/**\n * This page service provides a way to save and render pages\n * via the store\n */\n@Injectable()\nexport class PagesService {\n  private pages$: Observable;\n\n  constructor(public readonly query: PagesQuery, public readonly store: PagesStore) {\n    this.pages$ = this.query.selectAll();\n  }\n\n  /**\n   * Get an observable of all the pages in the store\n   */\n  get pages(): Observable {\n    return this.pages$;\n  }\n\n  /**\n   * Add a page to the store\n   * @param page An optional page to be added\n   */\n  add(page?: Page) {\n    const newPage: Page = {\n      id: guid(),\n      pageTitle: 'New Page',\n      pageTags: [],\n      blocks: [],\n      ...page\n    };\n    this.store.add(newPage);\n  }\n\n  /**\n   * Updates or creates a page\n   * @param page The page to be updated, if not available it will be created\n   */\n  upsert(page: Page) {\n    if (!page.id) page.id = guid();\n    this.store.upsert(page.id, page);\n  }\n\n  /**\n   * Removes a page\n   * @param pageId The ID of the page to be removed\n   */\n  delete(pageId: ID) {\n    this.store.remove(pageId);\n  }\n\n  setBlocks(pageId: ID | any, blocks: PageBlock[]) {\n    this.store.update(pageId, { blocks });\n  }\n\n  addBlock(pageId: ID, block: Block) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayAdd(entity.blocks, { id: guid(), ...block })\n    }));\n  }\n\n  removeBlock(pageId: ID, block: PageBlock) {\n    this.store.update(pageId, (entity: Page) => ({\n      blocks: arrayRemove(entity.blocks, block.id)\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagesState.html":{"url":"interfaces/PagesState.html","title":"interface - PagesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesStore.html":{"url":"injectables/PagesStore.html","title":"injectable - PagesStore","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityStore\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.store.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Page } from './pages.models';\n\nexport interface PagesState extends EntityState {}\n\n@Injectable()\n@StoreConfig({ name: 'pages' })\nexport class PagesStore extends EntityStore {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paragraph.html":{"url":"interfaces/Paragraph.html","title":"interface - Paragraph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Paragraph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Default data type for a paragraph block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The paragraph text\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParagraphBlock.html":{"url":"interfaces/ParagraphBlock.html","title":"interface - ParagraphBlock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParagraphBlock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a paragraph block\n\n            \n\n            \n                Extends\n            \n            \n                        Block\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    The EditorJS block type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n  /**\n   * The EditorJS block type\n   */\n  type: string;\n\n  /**\n   * The data interface for the block type\n   */\n  data: T;\n\n  /**\n   * Additional properties on the type\n   */\n  [key: string]: any;\n}\n\n/**\n * Available list styles, supports `ordered` and `unordered`.\n * A custom string can also be added\n */\nexport type ListStyle = 'ordered' | 'unordered' | string;\n\n/**\n * Default data type for a list block\n */\nexport interface List {\n  /**\n   * The list style\n   */\n  style: ListStyle;\n  /**\n   * List items of type T\n   */\n  items: T[];\n}\n\n/**\n * The default list block is provided by the EditorJS list plugin\n */\nexport interface ListBlock extends Block> {\n  /**\n   * The EditorJS block type\n   */\n  type: 'list';\n}\n\n/**\n * Default data type for a paragraph block\n */\ninterface Paragraph {\n  /**\n   * The paragraph text\n   */\n  text: string;\n}\n\n/**\n * Interface for a paragraph block\n */\nexport interface ParagraphBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'paragraph';\n}\n\n/**\n * Default data type for a header block\n */\ninterface Header {\n  /**\n   * The header text\n   */\n  text: string;\n  /**\n   * The header level from 1-6\n   */\n  level: number;\n}\n\n/**\n * Interface for a header block\n */\nexport interface HeaderBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'header';\n}\n\n/**\n * Default data type for a header block\n */\nexport interface Image {\n  /**\n   * The image URL\n   */\n  url: string;\n  /**\n   * Optional image caption\n   */\n  caption?: string;\n  /**\n   * Optional border property\n   */\n  withBorder?: boolean;\n\n  /**\n   * Optional background property\n   */\n  withBackground?: boolean;\n\n  /**\n   * Optional stretch property\n   */\n  stretched?: boolean;\n}\n\n/**\n * Interface for a image block\n */\nexport interface ImageBlock extends Block {\n  /**\n   * The EditorJS block type\n   */\n  type: 'image';\n}\n\n/**\n * Type of all the basic block type\n */\nexport type BlockTypes = ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginCodeModule.html":{"url":"modules/PluginCodeModule.html","title":"module - PluginCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginCodeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/code/code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\nimport Code from '@editorjs/code';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/code) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Code,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'code',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Code'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginCodeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfig.html":{"url":"interfaces/PluginConfig.html","title":"interface - PluginConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A plugin configuration object\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        blockData\n                                \n                                \n                                            Optional\n                                        config\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        inlineToolbar\n                                \n                                \n                                        key\n                                \n                                \n                                        plugin\n                                \n                                \n                                        pluginName\n                                \n                                \n                                            Optional\n                                        shortcut\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockData\n                                    \n                                \n                                \n                                    \n                                        blockData:         BlockData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BlockData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional block data, used to define the block data for this type\nand used as a default\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional  custom configuration to pass to EditorJS\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional description for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inlineToolbar\n                                    \n                                \n                                \n                                    \n                                        inlineToolbar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If a block tool, you can also set this to true if it contains inline tool support\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key to use for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plugin\n                                    \n                                \n                                \n                                    \n                                        plugin:         EditorJSPlugin | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EditorJSPlugin | undefined\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The plugin for the editor\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pluginName\n                                    \n                                \n                                \n                                    \n                                        pluginName:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label for displaying the plugin name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortcut\n                                    \n                                \n                                \n                                    \n                                        shortcut:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional shortcut for the plugin\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         PluginProperty\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginProperty\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Specifies the type of plugin for the plugin provider\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n\n  /**\n   * If a block tool, you can also set this to true if it contains inline tool support\n   */\n  inlineToolbar?: boolean;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginConfigMap.html":{"url":"interfaces/PluginConfigMap.html","title":"interface - PluginConfigMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PluginConfigMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of plugin configs\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        PluginConfig\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts:107\n                            \n                        \n                \n                    \n                        A plugin config per key\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n\n  /**\n   * If a block tool, you can also set this to true if it contains inline tool support\n   */\n  inlineToolbar?: boolean;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginEmbedModule.html":{"url":"modules/PluginEmbedModule.html","title":"module - PluginEmbedModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginEmbedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/embed/embed.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Embed from '@editorjs/embed';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Embed,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'embed',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Embed Block',\n        inlineToolbar: true\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginEmbedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginHeaderModule.html":{"url":"modules/PluginHeaderModule.html","title":"module - PluginHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginHeaderModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/header/header.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS header block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Header from '@editorjs/header';\n\n/**\n * A module that provides the default EditorJS header block tool.\n * See [the GitHub repo](https://github.com/editor-js/header) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Header,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'header',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Header'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginHeaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginImageModule.html":{"url":"modules/PluginImageModule.html","title":"module - PluginImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginImageModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/image/image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport Image from '@editorjs/image';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Image,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'image',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Image'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginInlineCodeModule.html":{"url":"modules/PluginInlineCodeModule.html","title":"module - PluginInlineCodeModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginInlineCodeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/inline-code/inline-code.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport InlineCode from '@editorjs/inline-code';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: InlineCode,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'inline-code',\n        type: PluginTypes.Inline,\n        pluginName: 'EditorJS Inline Code',\n        shortcut: 'CTRL+SHIFT+C'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginInlineCodeModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginLinkModule.html":{"url":"modules/PluginLinkModule.html","title":"module - PluginLinkModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginLinkModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/link/link.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport Link from '@editorjs/link';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Link,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'link',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Link'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginLinkModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginListModule.html":{"url":"modules/PluginListModule.html","title":"module - PluginListModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginListModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/list/list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport List from '@editorjs/list';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: List,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'list',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS List'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginMarkerModule.html":{"url":"modules/PluginMarkerModule.html","title":"module - PluginMarkerModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginMarkerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/marker/marker.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\nimport Marker from '@editorjs/paragraph';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Marker,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'paragraph',\n        type: PluginTypes.Inline,\n        pluginName: 'EditorJS Marker',\n        shortcut: 'CTRL+SHIFT+M'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginMarkerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginParagraphModule.html":{"url":"modules/PluginParagraphModule.html","title":"module - PluginParagraphModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginParagraphModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/paragraph/paragraph.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Paragraph from '@editorjs/paragraph';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Paragraph,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'paragraph',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Paragraph'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginParagraphModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginQuoteModule.html":{"url":"modules/PluginQuoteModule.html","title":"module - PluginQuoteModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginQuoteModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/quote/quote.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Quote from '@editorjs/quote';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Quote,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'quote',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Quote Tool',\n        inlineToolbar: true\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginQuoteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginSimpleImageModule.html":{"url":"modules/PluginSimpleImageModule.html","title":"module - PluginSimpleImageModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginSimpleImageModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/simple-image/simple-image.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginClasses, PluginTypes } from '../../types/plugins';\n\nimport SimpleImage from '@editorjs/simple-image';\nimport { createPluginConfig } from '../../util/plugin';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/image) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: SimpleImage,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'simpleimage',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Simple Image'\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginSimpleImageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PluginWarningModule.html":{"url":"modules/PluginWarningModule.html","title":"module - PluginWarningModule","body":"\n                   \n\n\n\n\n    Modules\n    PluginWarningModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/plugins/warning/warning.module.ts\n        \n\n\n        \n            Description\n        \n        \n            A module that provides the default EditorJS  block tool.\nSee the GitHub repo for API details\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EDITOR_JS_TOOL_INJECTOR, PLUGIN_CONFIG, PluginTypes } from '../../types/plugins';\nimport Warning from '@editorjs/warning';\n\n/**\n * A module that provides the default EditorJS `` block tool.\n * See [the GitHub repo](https://github.com/editor-js/paragraph) for API details\n */\n@NgModule({\n  providers: [\n    {\n      provide: EDITOR_JS_TOOL_INJECTOR,\n      useValue: Warning,\n      multi: true\n    },\n    {\n      provide: PLUGIN_CONFIG,\n      useValue: {\n        key: 'warning',\n        type: PluginTypes.Block,\n        pluginName: 'EditorJS Warning Block',\n        inlineToolbar: true\n      },\n      multi: true\n    }\n  ]\n})\nexport class PluginWarningModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadyMap.html":{"url":"interfaces/ReadyMap.html","title":"interface - ReadyMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadyMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject values of the ready state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts:18\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SavedMap.html":{"url":"interfaces/SavedMap.html","title":"interface - SavedMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SavedMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts\n        \n\n            \n                Description\n            \n            \n                A map containing BehaviorSubject values of the save state of EditorJS\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs/src/lib/types/maps.ts:28\n                            \n                        \n                \n                    \n                        A map key containing a BehaviorSubject\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import EditorJS, { OutputData } from '@editorjs/editorjs';\nimport { BehaviorSubject } from 'rxjs';\nimport { Block } from './blocks';\n\n/**\n * A map containing instances of `BehaviorSubject`\n */\nexport interface EditorMap {\n  /**\n   * A map key containing `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the ready state of EditorJS\n */\nexport interface ReadyMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * A map containing `BehaviorSubject` values of the save state of EditorJS\n */\nexport interface SavedMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n/**\n * An EditorJS change event\n */\nexport interface EditorJSChange {\n  /**\n   * Time of the change\n   */\n  time: number;\n  /**\n   * Blocks in the change\n   */\n  blocks: Block[];\n}\n\n/**\n * A map containing `BehaviorSubject` which is the last save from the EditorJS instance\n */\nexport interface ChangeMap {\n  /**\n   * A map key containing a `BehaviorSubject`\n   */\n  [key: string]: BehaviorSubject;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-demo/src/lib/store/pages/pages.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ID } from '@datorama/akita';\nimport { Block } from '@tinynodes/ngx-editorjs';\n\nexport interface Tag {\n  key: string;\n}\n\nexport interface PageBlock extends Block {\n  id: ID;\n}\n\nexport interface Page {\n  id: ID;\n  pageTitle: string;\n  pageTags: Tag[];\n  blocks: PageBlock[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToolSettingsMap.html":{"url":"interfaces/ToolSettingsMap.html","title":"interface - ToolSettingsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToolSettingsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n        \n\n            \n                Description\n            \n            \n                A map of all the tools settings\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        EditorJSPlugin\n\n                    \n                \n                        \n                            \n                                Defined in libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts:43\n                            \n                        \n                \n                    \n                        The key of the plugin and the plugin exported tool settings\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ToolSettings, ToolConstructable } from '@editorjs/editorjs';\n\n/**\n * Block Data interface\n */\nexport interface BlockData {\n  [key: string]: any;\n}\n\n/**\n * The types of plugins supported, currently block and inline\n */\nexport enum PluginTypes {\n  /**\n   * A EditorJS block plugin\n   */\n  Block = 'block',\n  /**\n   * A EditorJS inline plugin\n   */\n  Inline = 'inline'\n}\n\n/**\n * The types of plugins supported via the plugin `type` property\n */\nexport type PluginType = PluginTypes.Block | PluginTypes.Inline | string;\n\n/**\n * A plugin property\n */\nexport type PluginProperty = string;\n\n/**\n * The EditorJS tool settings for this plugin\n */\nexport type EditorJSPlugin = ToolConstructable | ToolSettings;\n\n/**\n * A map of all the tools settings\n */\nexport interface ToolSettingsMap {\n  /**\n   * The key of the plugin and the plugin exported tool settings\n   */\n  [key: string]: EditorJSPlugin;\n}\n\n/**\n * A plugin configuration object\n */\nexport interface PluginConfig {\n  /**\n   * Specifies the type of plugin for the plugin provider\n   */\n  type: PluginProperty;\n  /**\n   * The key to use for the plugin\n   */\n  key: PluginProperty;\n  /**\n   * Label for displaying the plugin name\n   */\n  pluginName: PluginProperty;\n  /**\n   * Optional description for the plugin\n   */\n  description?: PluginProperty;\n  /**\n   * Optional shortcut for the plugin\n   */\n  shortcut?: PluginProperty;\n  /**\n   * Optional {@link https://editorjs.io/provide-custom-configuration | custom configuration} to pass to EditorJS\n   */\n  config?: any;\n\n  /**\n   * If a block tool, you can also set this to true if it contains inline tool support\n   */\n  inlineToolbar?: boolean;\n  /**\n   * Optional block data, used to define the block data for this type\n   * and used as a default\n   */\n  blockData?: BlockData;\n  /**\n   * The plugin for the editor\n   */\n  plugin: EditorJSPlugin | undefined;\n}\n\n/**\n * The Injection token for initial plugins as defined in the ngx-editorjs module\n */\nexport const EDITOR_JS_TOOL_INJECTOR = new InjectionToken('EDITOR_JS_TOOL_INJECTOR');\n\n/**\n * Injection token for a plugin config\n */\nexport const PLUGIN_CONFIG = new InjectionToken('PLUGIN_CONFIG');\n\n/**\n * A map of plugin configs\n */\nexport interface PluginConfigMap {\n  /**\n   * A plugin config per key\n   */\n  [key: string]: PluginConfig;\n}\n\n/**\n * Injection token for the plugin config map\n */\nexport const PluginClasses = new InjectionToken('PluginClasses');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nTinynodes Changelog\n\nThis changelog is related to the overall site. You can also find changelogs for libraries under the library docs\n\n\nUNRELEASED\nToday @tinynodes/ngx-editorjs@3.0.0 has been released, along with @tinynodes/ngx-editorjs-plugins@2.0.0\nThe plugin architecture of the components has been re-written so that plugins are just NgModule classes\nthat provide multi providers for injecting plugins and their configuration.  These are merged into a map\nthat the NgxEditorJSPluginService now provides, and provides methods to getting tool options for instances.\nThis means the plugin module is now a dependency of the project.\nInternally there is some tidy-up related to this, and better async/await handling of the instance creation\nalong with API calls.  The Material demo \nhas been updated as well with improvements on using the component in an application.\nWednesday, 22nd May 2019\nToday @tinynodes/ngx-editorjs@2.0.0 has been released. The major bump is due to underlying changes that may be breaking - the entire service has been improved with better control over the EditorJS interface. Also in this release the exiting component has been upgraded to work with Angular Forms, and there is a new Material Form Field component provided too.\nThe demo has also been updated to reflect the new features of this, and a new demo added for the Material component.\nWednesday, 15th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.3.2. This will be without a Forms component. In this release the main change is internally I'm using a new EditorJS Injector module I've created to handle managing the underlying instance. There are also a lot of documentation improvements and a completly new updated demo site.\nMonday, 13th May 2019\nToday I have released @tinynodes/ngx-editorjs@1.2.0. For now I've removed any default plugins from core package, now all plugins must be added at the application level - this can be see in the demo app.\nSunday, 12th May 2019\nThe first devlog is to report that currently version 1.2 has been delayed due to current build issues.\nA bug report has been filed on @nrwl/nx project.\nIn 1.2 there is a new @tinynodes/ngx-editorjs-plugins module that provides exports for several common EditorJS plugins and will be expanded to cover all the officially released plugins.\nWith this change the current build scripts break, and until it is resolved this will block the release.\nIn the meantime I'll continue to work on this small demo site, making it more useful as a good example of an Angular app.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue,\nemail, or any other method with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a\nbuild.\nUpdate the README.md with details of changes to the interface, this includes new environment\nvariables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this\nPull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you\ndo not have permission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or\nadvances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic\naddress, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at me@tane.dev. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4,\navailable at http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.1.3\n        \n            @angular/cdk : ~8.1.2\n        \n            @angular/common : ~8.1.3\n        \n            @angular/compiler : ~8.1.3\n        \n            @angular/core : ~8.1.3\n        \n            @angular/flex-layout : ~8.0.0-beta.26\n        \n            @angular/forms : ~8.1.3\n        \n            @angular/material : ~8.1.2\n        \n            @angular/platform-browser : ~8.1.3\n        \n            @angular/platform-browser-dynamic : ~8.1.3\n        \n            @angular/router : ~8.1.3\n        \n            @ngrx/effects : ~8.1.0\n        \n            @ngrx/store : ~8.1.0\n        \n            core-js : ~3.1.4\n        \n            hammerjs : ~2.0.8\n        \n            install : ~0.13.0\n        \n            ngx-hideable-header : 0.0.5\n        \n            ngx-json-viewer : ~2.4.0\n        \n            rxjs : ~6.5.2\n        \n            zone.js : ~0.10.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PluginTypes   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n        \n            \n                \n                    \n                        \n                        PluginTypes\n                    \n                \n                    \n                        \n                            The types of plugins supported, currently block and inline\n\n                        \n                    \n                        \n                            \n                                 Block\n                            \n                        \n                        \n                            \n                                Value : block\n                            \n                        \n                        \n                            \n                                 Inline\n                            \n                        \n                        \n                            \n                                Value : inline\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createEditorJSConfig   (libs/.../editor-config.ts)\n                        \n                        \n                            createEditorJSInstance   (libs/.../editorjs.module.ts)\n                        \n                        \n                            createModuleConfig   (libs/.../module-config.ts)\n                        \n                        \n                            createPluginConfig   (libs/.../plugin.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSConfig(inputConfig?)\n                \n            \n\n\n\n\n            \n                \n                    Creates an EditorJS configuration, only returning keys that are set\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputConfig\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional config to use to set values\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     EditorConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs/editorjs.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createEditorJSInstance\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEditorJSInstance(editorjs: any)\n                \n            \n\n\n\n\n            \n                \n                    Factory function to return the EditorJS base class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editorjs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/ngx-editorjs/src/lib/config/module-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createModuleConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreateModuleConfig(config?)\n                \n            \n\n\n\n\n            \n                \n                    Method to return an module configuration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optional module configurations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NgxEditorJSModuleConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/util/plugin.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createPluginConfig\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePluginConfig(pluginConfigs, plugins)\n                \n            \n\n\n\n\n            \n                \n                    Factory function to create the plugin config map for the plugin service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pluginConfigs\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of plugin configuration objects passed to this factory\n\n                                    \n                                \n                                \n                                    plugins\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of EditorJS plugins that are passed to this factory\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgx-Tinynodes\nThis repository is a collection of Angular components and demos with full documentation.\nSee the Changelog for the\ndevelopment diary of this site, or visit the documentation of libraries.\nYou can also find a fully searchable API documentation for all @tinynode components.\nLinks\n\nRepository\nDocumentation\nDemo Application Site\nNPM Collection\n\nLibraries\nngx-editorjs\nThis library provides Angular support for EditorJS. Inside the module you will find:\n\nNgxEditorJSDirective - An Angular Directive used to attach an EditorJS instance to any block DOM element\nNgxEditorJSComponent - An out-of-the-box Angular component that is Reactive Forms compatible\nNgxEditorJSMaterialFieldComponent An Angular Material Form Field component that provides all the required properties and life-cycle events required. See the Form Demo on an example usage\nNgxEditorJSService - A Service that can be injected into an application to provide a interface to interact with EditorJS instances. Underneath are the private NgxEditorJSPluginService and NgxEditorJSInstanceService services. These are private but can be imported via ɵNgxEditorJSPluginService and ɵNgxEditorJSInstanceService from the library if you want to use them.\n\nWithin these components you will be able to access the underlying EditorJS instance, for use see the EditorJS API Docs\nBelow are the dependencies to use the features.\n@tinynodes/ngx-editorjs\nThis project provides a set of features for using EditorJS within Angular 7+\n\nReadme\nChangelog\nDemo\nProject Folder\n\n@tinynodes/ngx-editorjs-plugins\nThis project provides the plugin service module that exports handles\n plugins for @tinynodes/ngx-editorjs. The module also ships a set of default\n plugins and documentation on how to add new ones easily.\n\nReadme\nChangelog\nProject Folder\n\nDevelopment Information\nThis repository is run by Tane Piper and was generated using Nx.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nTinynodes General MIT Licence\nCopyright 2019 Tane Piper me@tane.dev\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxEditorJSComponentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSDemoMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSDemoMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsDemoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSMatFieldModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorJSPluginServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxEditorjsPluginsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesMaterialFormFieldDemo\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesMatJsonOutputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxTinynodesMatTagInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PageStoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginCodeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginEmbedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginEmbedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginHeaderModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginImageModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginInlineCodeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginLinkModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginListModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginMarkerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginParagraphModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginQuoteModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginSimpleImageModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PluginWarningModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxEditorJSComponentModule\n\n\n\ncluster_NgxEditorJSComponentModule_declarations\n\n\n\ncluster_NgxEditorJSComponentModule_NgxEditorJSComponent_providers\n\n\n\ncluster_NgxEditorJSComponentModule_exports\n\n\n\ncluster_NgxEditorJSComponentModule_providers\n\n\n\ncluster_NgxEditorjsDemoModule\n\n\n\ncluster_NgxEditorjsDemoModule_declarations\n\n\n\ncluster_NgxEditorjsDemoModule_imports\n\n\n\ncluster_NgxEditorjsDemoModule_exports\n\n\n\ncluster_NgxEditorJSMatFieldModule\n\n\n\ncluster_NgxEditorJSMatFieldModule_declarations\n\n\n\ncluster_NgxEditorJSMatFieldModule_NgxEditorJSMatFieldComponent_providers\n\n\n\ncluster_NgxEditorJSMatFieldModule_exports\n\n\n\ncluster_NgxEditorJSModule\n\n\n\ncluster_NgxEditorJSModule_exports\n\n\n\ncluster_NgxEditorJSPluginServiceModule\n\n\n\ncluster_NgxEditorJSPluginServiceModule_providers\n\n\n\ncluster_NgxEditorjsPluginsModule\n\n\n\ncluster_NgxEditorjsPluginsModule_imports\n\n\n\ncluster_NgxEditorjsPluginsModule_exports\n\n\n\ncluster_NgxTinynodesComponentsModule\n\n\n\ncluster_NgxTinynodesComponentsModule_imports\n\n\n\ncluster_NgxTinynodesComponentsModule_exports\n\n\n\ncluster_NgxTinynodesMaterialFormFieldDemo\n\n\n\ncluster_NgxTinynodesMaterialFormFieldDemo_declarations\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_declarations\n\n\n\ncluster_NgxTinynodesMatJsonOutputModule_exports\n\n\n\ncluster_NgxTinynodesMatTagInputModule\n\n\n\ncluster_NgxTinynodesMatTagInputModule_declarations\n\n\n\ncluster_NgxTinynodesMatTagInputModule_NgxTinynodesMatTagInputComponent_providers\n\n\n\ncluster_NgxTinynodesMatTagInputModule_exports\n\n\n\ncluster_PageStoreModule\n\n\n\ncluster_PageStoreModule_providers\n\n\n\n\nNgxEditorJSComponent\n\nNgxEditorJSComponent\n\n\n\nNgxEditorJSComponentModule\n\nNgxEditorJSComponentModule\n\nNgxEditorJSComponentModule -->\n\nNgxEditorJSComponent->NgxEditorJSComponentModule\n\n\n\n\n\nNgxEditorJSDirective\n\nNgxEditorJSDirective\n\nNgxEditorJSComponentModule -->\n\nNgxEditorJSDirective->NgxEditorJSComponentModule\n\n\n\n\n\nNgxEditorJSComponent \n\nNgxEditorJSComponent \n\nNgxEditorJSComponent  -->\n\nNgxEditorJSComponentModule->NgxEditorJSComponent \n\n\n\n\n\nNgxEditorJSDirective \n\nNgxEditorJSDirective \n\nNgxEditorJSDirective  -->\n\nNgxEditorJSComponentModule->NgxEditorJSDirective \n\n\n\n\n\nEDITORJS_FORM_VALUE_ACCESSOR\n\nEDITORJS_FORM_VALUE_ACCESSOR\n\nNgxEditorJSComponent -->\n\nEDITORJS_FORM_VALUE_ACCESSOR->NgxEditorJSComponent\n\n\n\n\n\nNgxEditorJSService\n\nNgxEditorJSService\n\nNgxEditorJSComponentModule -->\n\nNgxEditorJSService->NgxEditorJSComponentModule\n\n\n\n\n\nNgxEditorJSDemoHomeComponent\n\nNgxEditorJSDemoHomeComponent\n\n\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoHomeComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent\n\nPageContainerComponent\n\nNgxEditorjsDemoModule -->\n\nPageContainerComponent->NgxEditorjsDemoModule\n\n\n\n\n\nPageContainerComponent \n\nPageContainerComponent \n\nPageContainerComponent  -->\n\nNgxEditorjsDemoModule->PageContainerComponent \n\n\n\n\n\nPageStoreModule \n\nPageStoreModule \n\nPageStoreModule  -->\n\nNgxEditorjsDemoModule->PageStoreModule \n\n\n\n\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorJSDemoMaterialModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorJSDemoMaterialModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxTinynodesMaterialFormFieldDemo\n\nNgxTinynodesMaterialFormFieldDemo\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorJSDemoMaterialModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsPluginsModule\n\nNgxEditorjsDemoModule -->\n\nNgxEditorjsPluginsModule->NgxEditorjsDemoModule\n\n\n\n\n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule \n\nNgxEditorJSPluginServiceModule  -->\n\nNgxEditorjsPluginsModule->NgxEditorJSPluginServiceModule \n\n\n\n\n\nPluginCodeModule \n\nPluginCodeModule \n\nPluginCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginCodeModule \n\n\n\n\n\nPluginEmbedModule \n\nPluginEmbedModule \n\nPluginEmbedModule  -->\n\nNgxEditorjsPluginsModule->PluginEmbedModule \n\n\n\n\n\nPluginHeaderModule \n\nPluginHeaderModule \n\nPluginHeaderModule  -->\n\nNgxEditorjsPluginsModule->PluginHeaderModule \n\n\n\n\n\nPluginImageModule \n\nPluginImageModule \n\nPluginImageModule  -->\n\nNgxEditorjsPluginsModule->PluginImageModule \n\n\n\n\n\nPluginInlineCodeModule \n\nPluginInlineCodeModule \n\nPluginInlineCodeModule  -->\n\nNgxEditorjsPluginsModule->PluginInlineCodeModule \n\n\n\n\n\nPluginLinkModule \n\nPluginLinkModule \n\nPluginLinkModule  -->\n\nNgxEditorjsPluginsModule->PluginLinkModule \n\n\n\n\n\nPluginListModule \n\nPluginListModule \n\nPluginListModule  -->\n\nNgxEditorjsPluginsModule->PluginListModule \n\n\n\n\n\nPluginMarkerModule \n\nPluginMarkerModule \n\nPluginMarkerModule  -->\n\nNgxEditorjsPluginsModule->PluginMarkerModule \n\n\n\n\n\nPluginParagraphModule \n\nPluginParagraphModule \n\nPluginParagraphModule  -->\n\nNgxEditorjsPluginsModule->PluginParagraphModule \n\n\n\n\n\nPluginQuoteModule \n\nPluginQuoteModule \n\nPluginQuoteModule  -->\n\nNgxEditorjsPluginsModule->PluginQuoteModule \n\n\n\n\n\nPluginSimpleImageModule \n\nPluginSimpleImageModule \n\nPluginSimpleImageModule  -->\n\nNgxEditorjsPluginsModule->PluginSimpleImageModule \n\n\n\n\n\nPluginWarningModule \n\nPluginWarningModule \n\nPluginWarningModule  -->\n\nNgxEditorjsPluginsModule->PluginWarningModule \n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorjsPluginsModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nPageStoreModule\n\nPageStoreModule\n\nNgxEditorjsDemoModule -->\n\nPageStoreModule->NgxEditorjsDemoModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nPageStoreModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxEditorJSMatFieldComponent\n\nNgxEditorJSMatFieldComponent\n\n\n\nNgxEditorJSMatFieldModule\n\nNgxEditorJSMatFieldModule\n\nNgxEditorJSMatFieldModule -->\n\nNgxEditorJSMatFieldComponent->NgxEditorJSMatFieldModule\n\n\n\n\n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent \n\nNgxEditorJSMatFieldComponent  -->\n\nNgxEditorJSMatFieldModule->NgxEditorJSMatFieldComponent \n\n\n\n\n\nNgxEditorJSModule\n\nNgxEditorJSModule\n\nNgxEditorJSModule -->\n\nNgxEditorJSMatFieldModule->NgxEditorJSModule\n\n\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxEditorJSMatFieldModule->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nEDITORJS_MATERIAL_FIELD_CONTROL\n\nEDITORJS_MATERIAL_FIELD_CONTROL\n\nNgxEditorJSMatFieldComponent -->\n\nEDITORJS_MATERIAL_FIELD_CONTROL->NgxEditorJSMatFieldComponent\n\n\n\n\n\nNgxEditorJSMatFieldModule \n\nNgxEditorJSMatFieldModule \n\nNgxEditorJSMatFieldModule  -->\n\nNgxEditorJSModule->NgxEditorJSMatFieldModule \n\n\n\n\n\nNgxEditorJSPluginService\n\nNgxEditorJSPluginService\n\n\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule\n\nNgxEditorJSPluginServiceModule -->\n\nNgxEditorJSPluginService->NgxEditorJSPluginServiceModule\n\n\n\nNgxEditorjsPluginsModule -->\n\nNgxEditorJSPluginServiceModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginCodeModule\n\nPluginCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginEmbedModule\n\nPluginEmbedModule\n\nNgxEditorjsPluginsModule -->\n\nPluginEmbedModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginHeaderModule\n\nPluginHeaderModule\n\nNgxEditorjsPluginsModule -->\n\nPluginHeaderModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginImageModule\n\nPluginImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginInlineCodeModule\n\nPluginInlineCodeModule\n\nNgxEditorjsPluginsModule -->\n\nPluginInlineCodeModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginLinkModule\n\nPluginLinkModule\n\nNgxEditorjsPluginsModule -->\n\nPluginLinkModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginListModule\n\nPluginListModule\n\nNgxEditorjsPluginsModule -->\n\nPluginListModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginMarkerModule\n\nPluginMarkerModule\n\nNgxEditorjsPluginsModule -->\n\nPluginMarkerModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginParagraphModule\n\nPluginParagraphModule\n\nNgxEditorjsPluginsModule -->\n\nPluginParagraphModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginQuoteModule\n\nPluginQuoteModule\n\nNgxEditorjsPluginsModule -->\n\nPluginQuoteModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginSimpleImageModule\n\nPluginSimpleImageModule\n\nNgxEditorjsPluginsModule -->\n\nPluginSimpleImageModule->NgxEditorjsPluginsModule\n\n\n\n\n\nPluginWarningModule\n\nPluginWarningModule\n\nNgxEditorjsPluginsModule -->\n\nPluginWarningModule->NgxEditorjsPluginsModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputModule\n\nNgxTinynodesMatJsonOutputModule\n\n\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent \n\nNgxTinynodesMatJsonOutputComponent  -->\n\nNgxTinynodesMatJsonOutputModule->NgxTinynodesMatJsonOutputComponent \n\n\n\n\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesMatTagInputModule\n\nNgxTinynodesComponentsModule -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesComponentsModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent \n\nNgxTinynodesMatTagInputComponent  -->\n\nNgxTinynodesMatTagInputModule->NgxTinynodesMatTagInputComponent \n\n\n\n\n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule \n\nNgxTinynodesMatJsonOutputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatJsonOutputModule \n\n\n\n\n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule \n\nNgxTinynodesMatTagInputModule  -->\n\nNgxTinynodesComponentsModule->NgxTinynodesMatTagInputModule \n\n\n\n\n\nNgxTinynodesMaterialFormFieldDemoComponent\n\nNgxTinynodesMaterialFormFieldDemoComponent\n\nNgxTinynodesMaterialFormFieldDemo -->\n\nNgxTinynodesMaterialFormFieldDemoComponent->NgxTinynodesMaterialFormFieldDemo\n\n\n\n\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputComponent\n\nNgxTinynodesMatJsonOutputModule -->\n\nNgxTinynodesMatJsonOutputComponent->NgxTinynodesMatJsonOutputModule\n\n\n\n\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputComponent\n\nNgxTinynodesMatTagInputModule -->\n\nNgxTinynodesMatTagInputComponent->NgxTinynodesMatTagInputModule\n\n\n\n\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nTAG_COMPONENT_VALUE_ACCESSOR\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_VALUE_ACCESSOR->NgxTinynodesMatTagInputComponent\n\n\n\n\n\nTAG_COMPONENT_FIELD_CONTROL\n\nTAG_COMPONENT_FIELD_CONTROL\n\nNgxTinynodesMatTagInputComponent -->\n\nTAG_COMPONENT_FIELD_CONTROL->NgxTinynodesMatTagInputComponent\n\n\n\n\n\nPagesQuery\n\nPagesQuery\n\nPageStoreModule -->\n\nPagesQuery->PageStoreModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPageStoreModule -->\n\nPagesService->PageStoreModule\n\n\n\n\n\nPagesStore\n\nPagesStore\n\nPageStoreModule -->\n\nPagesStore->PageStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        26 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    32 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nngx-tinynodes Todo\nGeneral Todos\n\n Add CI pipeline for publishing modules\n Publish doc changes and tags back to repo\n\nngx-editorjs\n\n Add full EditorJS config support\n Add config options as @Input on component and directive\n Add autosave option support to module config\n Expose EditorJS CoreAPI via service helpers (e.g. blocks, selection, etc)\n Provide peer-dependency ngrx/effects via library to control service\n\nngx-editorjs-demo\n\n Add store for page\n Add controls for setting editor\n Add Save feature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BlockTypes   (libs/.../blocks.ts)\n                        \n                        \n                            EditorJSPlugin   (libs/.../plugins.ts)\n                        \n                        \n                            ListStyle   (libs/.../blocks.ts)\n                        \n                        \n                            PluginProperty   (libs/.../plugins.ts)\n                        \n                        \n                            PluginType   (libs/.../plugins.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/types/blocks.ts\n    \n    \n        \n            \n                \n                    \n                    BlockTypes\n                \n            \n            \n                \n                    Type of all the basic block type\n\n                \n            \n            \n                \n                        ParagraphBlock | HeaderBlock | ImageBlock | ListBlock | Block\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListStyle\n                \n            \n            \n                \n                    Available list styles, supports ordered and unordered.\nA custom string can also be added\n\n                \n            \n            \n                \n                        \"ordered\" | \"unordered\" | string\n\n                \n            \n        \n    \n    libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n    \n        \n            \n                \n                    \n                    EditorJSPlugin\n                \n            \n            \n                \n                    The EditorJS tool settings for this plugin\n\n                \n            \n            \n                \n                        ToolConstructable | ToolSettings\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PluginProperty\n                \n            \n            \n                \n                    A plugin property\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PluginType\n                \n            \n            \n                \n                    The types of plugins supported via the plugin type property\n\n                \n            \n            \n                \n                            PluginTypes.Block | PluginTypes.Inline | string\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (libs/.../test.ts)\n                        \n                        \n                            DEFAULT_HOLDER_ID   (libs/.../editor-config.ts)\n                        \n                        \n                            EDITIOR_JS_INSTANCE   (libs/.../config.ts)\n                        \n                        \n                            EDITOR_JS_TOOL_INJECTOR   (libs/.../plugins.ts)\n                        \n                        \n                            EDITORJS_FORM_VALUE_ACCESSOR   (libs/.../editorjs.component.ts)\n                        \n                        \n                            EDITORJS_MATERIAL_FIELD_CONTROL   (libs/.../editorjs-mat-field.component.ts)\n                        \n                        \n                            EDITORJS_MODULE_IMPORT   (libs/.../injector.ts)\n                        \n                        \n                            EditorJSInstance   (libs/.../injector.ts)\n                        \n                        \n                            FOR_ROOT_OPTIONS_TOKEN   (libs/.../config.ts)\n                        \n                        \n                            MAP_DEFAULTS   (libs/.../injector.ts)\n                        \n                        \n                            NGX_EDITORJS_CONFIG   (libs/.../config.ts)\n                        \n                        \n                            ngxEditorjsDemoRoutes   (libs/.../ngx-editorjs-demo.routes.ts)\n                        \n                        \n                            PLUGIN_CONFIG   (libs/.../plugins.ts)\n                        \n                        \n                            PluginClasses   (libs/.../plugins.ts)\n                        \n                        \n                            require   (libs/.../test.ts)\n                        \n                        \n                            TAG_COMPONENT_FIELD_CONTROL   (libs/.../mat-tag-input.component.ts)\n                        \n                        \n                            TAG_COMPONENT_VALUE_ACCESSOR   (libs/.../mat-tag-input.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ngx-tinynodes-components/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/config/editor-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HOLDER_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'editor-js'\n                        \n                    \n\n                \n                    \n                        The default holder ID to attach EditorJS to\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/types/config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITIOR_JS_INSTANCE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITIOR_JS_INSTANCE')\n                        \n                    \n\n                \n                    \n                        Get the EditorJS instance injected into the app\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOR_ROOT_OPTIONS_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('FOR_ROOT_OPTIONS_TOKEN')\n                        \n                    \n\n                \n                    \n                        Internal token for injecting the NgxEditorJSConfig into the config factory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NGX_EDITORJS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NGX_EDITORJS_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token provied for NgxEditorJSConfig\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs-plugins/src/lib/types/plugins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITOR_JS_TOOL_INJECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITOR_JS_TOOL_INJECTOR')\n                        \n                    \n\n                \n                    \n                        The Injection token for initial plugins as defined in the ngx-editorjs module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PLUGIN_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('PLUGIN_CONFIG')\n                        \n                    \n\n                \n                    \n                        Injection token for a plugin config\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PluginClasses\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('PluginClasses')\n                        \n                    \n\n                \n                    \n                        Injection token for the plugin config map\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs/editorjs.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_FORM_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxEditorJSComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        The NgxEditorJSBaseComponent Provider for NG_VALUE_ACCESSOR\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/containers/editorjs-mat-field/editorjs-mat-field.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MATERIAL_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxEditorJSMatFieldComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for the EditorJS Material Field Component\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs/src/lib/types/injector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EDITORJS_MODULE_IMPORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EDITORJS_MODULE_IMPORT')\n                        \n                    \n\n                \n                    \n                        Injection token for the EditorJS class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EditorJSInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('EditorJSInstance')\n                        \n                    \n\n                \n                    \n                        The EditorJS class injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAP_DEFAULTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ['lastChangeMap', { time: 0, blocks: [], version: typeof EditorJS !== 'undefined' && EditorJS.version || ''}],\n  ['isReadyMap', false],\n  ['hasSavedMap', false]\n]\n                        \n                    \n\n                \n                    \n                        Default values for each internal map\n\n                    \n                \n\n            \n        \n\n    libs/ngx-editorjs/ngx-editorjs-demo/src/lib/ngx-editorjs-demo.routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxEditorjsDemoRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Route[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: 'ngx-editorjs-demo',\n    component: NgxEditorJSDemoHomeComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/angular-component',\n    component: PageContainerComponent\n  },\n  {\n    path: 'ngx-editorjs-demo/angular-form',\n    loadChildren: () =>\n      import('./demos/material-form-field/material-form-field.module').then(m => m.NgxTinynodesMaterialFormFieldDemo)\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    libs/ngx-tinynodes-components/src/lib/components/mat-tag-input/mat-tag-input.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_FIELD_CONTROL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: MatFormFieldControl,\n  useExisting: forwardRef(() => NgxTinynodesMatTagInputComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Provider for Material field support\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TAG_COMPONENT_VALUE_ACCESSOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Provider\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgxTinynodesMatTagInputComponent),\n  multi: true\n}\n                        \n                    \n\n                \n                    \n                        Tag Value Accessor\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
